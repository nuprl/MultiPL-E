language: sh
name: HumanEval_141_file_name_check
results:
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_string=${file_name:${dot_index}}\n\
    \    local dot_length=${#dot_string}\n    local dot_first_letter=${dot_string:0:1}\n\
    \    local dot_second_letter=${dot_string:1:1}\n    local dot_third_letter=${dot_string:2:1}\n\
    \    local dot_fourth_letter=${dot_string:3:1}\n    local dot_fifth_letter=${dot_string:4:1}\n\
    \    local dot_sixth_letter=${dot_string:5:1}\n    local dot_seventh_letter=${dot_string:6:1}\n\
    \    local dot_eighth_letter=${dot_string:7:1}\n    local dot_ninth_letter=${dot_string:8:1}\n\
    \    local dot_tenth_letter=${dot_string:9:1}\n    local dot_first_letter_check=$(expr\
    \ match \"${dot_first_letter}\" '^[[:alpha:]]')\n    local dot_second_letter_check=$(expr\
    \ match \"${dot_second_letter}\" '^[[:alpha:]]')\n    local dot_third_letter_check=$(expr\
    \ match \"${dot_third_letter}\" '^[[:alpha:]]')\n    local dot_fourth_letter_check=$(expr\
    \ match \"${dot_fourth_letter}\" '^[[:alpha:]]')\n    local dot_fifth_letter_check=$(expr\
    \ match \"${dot_fifth_letter}\" '^[[:alpha:]]')\n    local dot_sixth_letter_check=$(expr\
    \ match \"${dot_sixth_letter}\" '^[[:alpha:]]')\n    local dot_seventh_letter_check=$(expr\
    \ match \"${dot_seventh_letter}\" '^[[:alpha:]]')\n    local dot_eighth_letter_check=$(expr\
    \ match \"${dot_eighth_letter}\" '^[[:alpha:]]')\n    local dot_ninth_letter_check=$(expr\
    \ match \"${dot_ninth_letter}\" '^[[:alpha:]]')\n    local dot_tenth_letter_check=$(expr\
    \ match \"${dot_tenth_letter}\" '^[[:alpha:]]')\n    local dot_first_letter_check=$(expr\
    \ \"$dot_first_letter_check\" == 0)\n    local dot_second_letter_check=$(expr\
    \ \"$dot_second_letter_check\" == 0)\n    local dot_third_letter_check=$(expr\
    \ \"$dot_third_letter_check\" == 0)\n    local dot_fourth_letter_check=$(expr\
    \ \"$dot_fourth_letter_check\" == 0)\n    local dot_fifth_letter_check=$(expr\
    \ \"$dot_fifth_letter_check\" \n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppvotior4.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmppvotior4.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=1\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_first=a\n\
    \    local file_name_check_dot_first_letter_first_length=2\n    local file_name_check_dot_first_letter_last=z\n\
    \    local file_name_check_dot_first_letter_last_length=2\n    local file_name_check_dot_last_letter_first=a\n\
    \    local file_name_check_dot_last_letter_first_length=2\n    local file_name_check_dot_last_letter_last=z\n\
    \    local file_name_check_dot_last_letter_last_length=2\n    local file_name_check_dot_first_letter_first_letter=1\n\
    \    local file_name_check_dot_first_letter_first_letter_length=2\n    local file_name_check_dot_first_letter_last_letter=z\n\
    \    local file_name_check_dot_first_letter_last_letter_length=2\n    local file_name_check_dot_last_letter_first_letter=1\n\
    \    local file_name_check_dot_last_letter_first_letter_length=2\n    local file_name_check_dot_last_letter_last_letter=z\n\
    \    local file_name_check_dot_last_letter_last_letter_length=2\n    local file_name_check_dot_first_letter_first_letter_first=a\n\
    \    local file_name_check_dot_first_letter_first_letter_first_length=2\n    local\
    \ file_name_check_dot_first_letter_first_letter_last=z\n    local file_name_check_dot_first_letter_first_letter_last_length=2\n\
    \    local file_name_check_dot_first_letter_last_letter_first=a\n    local file_name_check_dot_first_letter_last_letter_first_length=2\n\
    \    local file_name_check_dot_first_letter_last_letter_last=z\n    local file_name_check_dot_first_letter_last_letter_last_length=2\n\
    \    local file_name_check_dot_last_letter_first_letter_first=a\n    local file_name_check_dot_last_letter_first_letter_first_length=2\n\
    \    local file_name_check_dot_last_letter_first_letter_last=z\n    local file_name_check_dot_last_letter_first_letter_last_length=2\n\
    \    local file_name_check_dot_last_letter_last_letter_first=a\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_character=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_a_letter=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dash}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon_or_space=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon_or_space_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_colon_or_space}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_dash_or_underscore_or_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    if [[ $file_name =~ ^[0-9]([0-9][0-9])?\\.[a-z][a-z]$ ]];\
    \ then\n        local file_name_parts=${BASH_REMATCH[1]}\n        if [[ ${#file_name_parts}\
    \ -eq 0 ]]; then\n            echo \"No\"\n        else\n            local file_name_part_count=0\n\
    \            local file_name_part_count2=0\n            local file_name_part_count3=0\n\
    \            local file_name_part_count4=0\n            local file_name_part_count5=0\n\
    \            local file_name_part_count6=0\n            local file_name_part_count7=0\n\
    \            local file_name_part_count8=0\n            local file_name_part_count9=0\n\
    \            for file_name_part in ${file_name_parts}; do\n                if\
    \ [[ ${file_name_part} =~ ^[0-9]([0-9][0-9])?$ ]]; then\n                    file_name_part_count=$((file_name_part_count+1))\n\
    \                elif [[ ${file_name_part} =~ ^[a-z][a-z]$ ]]; then\n        \
    \            file_name_part_count2=$((file_name_part_count2+1))\n            \
    \    elif [[ ${file_name_part} =~ ^[a-z][a-z][a-z]$ ]]; then\n               \
    \     file_name_part_count3=$((file_name_part_count3+1))\n                elif\
    \ [[ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z]$ ]]; then\n                  \
    \  file_name_part_count4=$((file_name_part_count4+1))\n                elif [[\
    \ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z][a-z]$ ]]; then\n                \
    \    file_name_part_count5=$((file_name_part_count5+1))\n                elif\
    \ [[ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z][a-z][a-z]$ ]]; then\n        \
    \            file_name_part_count6=$((file_name_part_count6+1))\n            \
    \    elif [[ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z]$ ]]; then\n\
    \                    file_name_part_count7=$((file_name_part_count7+1))\n    \
    \            elif [[ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]$\
    \ ]]; then\n                    file_name_part_count8=$((file_name_part_count8+1))\n\
    \                elif [[ ${file_name_part} =~ ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]$\
    \ ]]; then\n                    file_name_part_count9=$((file_name_part_count9\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuctc9atw.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuctc9atw.sh: line 90: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=\"\
    ${#file_extension}\"\n  if [[ ${file_extension_length} -eq 0 ]]; then\n    echo\
    \ \"No\"\n  else\n    if [[ ${file_extension} != \"txt\" ]]; then\n      if [[\
    \ ${file_extension} != \"exe\" ]]; then\n        if [[ ${file_extension} != \"\
    dll\" ]]; then\n          echo \"No\"\n        else\n          echo \"Yes\"\n\
    \        fi\n      else\n        echo \"Yes\"\n      fi\n    else\n      echo\
    \ \"Yes\"\n    fi\n  fi\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=${#file_extension}\n\
    \  if [[ ${file_extension_length} -gt 3 ]]; then\n    echo \"No\"\n  else\n  \
    \  if [[ \"${file_extension}\" != \"txt\" &&\n          \"${file_extension}\"\
    \ != \"exe\" &&\n          \"${file_extension}\" != \"dll\" ]]; then\n      echo\
    \ \"No\"\n    else\n      if [[ \"${file_name:0:1}\" != \"a\" &&\n           \
    \ \"${file_name:0:1}\" != \"A\" &&\n            \"${file_name:0:1}\" != \"0\"\
    \ &&\n            \"${file_name:0:1}\" != \"9\" ]]; then\n        echo \"No\"\n\
    \      else\n        if [[ \"${file_name:1}\" != \".\" ]]; then\n          echo\
    \ \"No\"\n        else\n          if [[ ! \"${file_name:2}\" = *\".\"* ]]; then\n\
    \            echo \"No\"\n          else\n            if [[ \"${file_name:3}\"\
    \ != *\".\"* ]]; then\n              echo \"No\"\n            else\n         \
    \     if [[ ! \"${file_name:2}\" = *\".\"* ]]; then\n                echo \"No\"\
    \n              else\n                if [[ \"${file_name:2}\" = *\".\"* ]]; then\n\
    \                  if [[ ! \"${file_name:3}\" = *\".\"* ]]; then\n           \
    \         echo \"No\"\n                  else\n                    echo \"Yes\"\
    \n                  fi\n                fi\n              fi\n            fi\n\
    \          fi\n        fi\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_character=${file_name_no_extension_length}\n\
    \  local file_name_no_extension_first_character_is_letter=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty_or_empty_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty_or_empty_or_empty_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty_or_empty_or_empty_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_or_dash_or_underscore_or_number_or_empty_or_empty_or_empty_or_empty_or_empty=${file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter_or_digit_or_dot_or_space_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check_result=\"\
    No\"\n    local file_name_check_result_message=\"Invalid file name\"\n    local\
    \ file_name_check_result_message_length=0\n    local file_name_check_result_message_length_count=0\n\
    \    local file_name_check_result_message_length_count_max=0\n    local file_name_check_result_message_length_count_max_count=0\n\
    \    local file_name_check_result_message_length_count_min=0\n    local file_name_check_result_message_length_count_min_count=0\n\
    \    local file_name_check_result_message_length_count_min_index=0\n    local\
    \ file_name_check_result_message_length_count_min_index_count=0\n    local file_name_check_result_message_length_count_max_index=0\n\
    \    local file_name_check_result_message_length_count_max_index_count=0\n   \
    \ local file_name_check_result_message_length_count_min_index=0\n    local file_name_check_result_message_length_count_min_index_count=0\n\
    \    local file_name_check_result_message_length_count_max_index=0\n    local\
    \ file_name_check_result_message_length_count_max_index_count=0\n    local file_name_check_result_message_length_count_min_index=0\n\
    \    local file_name_check_result_message_length_count_min_index_count=0\n   \
    \ local file_name_check_result_message_length_count_max_index=0\n    local file_name_check_result_message_length_count_max_index_count=0\n\
    \    local file_name_check_result_message_length_count_min_index=0\n    local\
    \ file_name_check_result_message_length_count_min_index_count=0\n    local file_name_check_result_message_length_count_max_index=0\n\
    \    local file_name_check_result_message_length_count_max_index_count=0\n   \
    \ local file_name_check_result_message_length_count_min_index=0\n    local file_name_check_result_message_length_count_min_index_count=0\n\
    \    local file_name_check_result_message_length_count_max_index=0\n    local\
    \ file_name_check_result_message_length_count_max_index_count=0\n    local file_name_check_result_message_length_count_min_index=0\n\
    \    local file_name_check_result_message_length_count_min_index_count=0\n   \
    \ local file_name_check_result_message_length_count_max_index=0\n    local file_name_check_result_message_length_count_max_index_count=0\n\
    \    local file_name_check_result_message_length_count_min_index=0\n    local\
    \ file_name_check_result_message_length_count_min_index_count=0\n    local file_name_check_result_message_length_count_max_index=0\n\
    \    local file_name_check_result_message_length_count_max_index_count=0\n   \
    \ local file_name_check_result_message_length_count_min_index=0\n    local file_name_check_result_message_length_count_min_index_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_count2=0\n    local dot_index2=0\n\
    \    local dot_count3=0\n    local dot_index3=0\n    local dot_count4=0\n    local\
    \ dot_index4=0\n    local dot_count5=0\n    local dot_index5=0\n    local dot_count6=0\n\
    \    local dot_index6=0\n    local dot_count7=0\n    local dot_index7=0\n    local\
    \ dot_count8=0\n    local dot_index8=0\n    local dot_count9=0\n    local dot_index9=0\n\
    \    local dot_count10=0\n    local dot_index10=0\n    local dot_count11=0\n \
    \   local dot_index11=0\n    local dot_count12=0\n    local dot_index12=0\n  \
    \  local dot_count13=0\n    local dot_index13=0\n    local dot_count14=0\n   \
    \ local dot_index14=0\n    local dot_count15=0\n    local dot_index15=0\n    local\
    \ dot_count16=0\n    local dot_index16=0\n    local dot_count17=0\n    local dot_index17=0\n\
    \    local dot_count18=0\n    local dot_index18=0\n    local dot_count19=0\n \
    \   local dot_index19=0\n    local dot_count20=0\n    local dot_index20=0\n  \
    \  local dot_count21=0\n    local dot_index21=0\n    local dot_count22=0\n   \
    \ local dot_index22=0\n    local dot_count23=0\n    local dot_index23=0\n    local\
    \ dot_count24=0\n    local dot_index24=0\n    local dot_count25=0\n    local dot_index25=0\n\
    \    local dot_count26=0\n    local dot_index26=0\n    local dot_count27=0\n \
    \   local dot_index27=0\n    local dot_count28=0\n    local dot_index28=0\n  \
    \  local dot_count29=0\n    local dot_index29=0\n    local dot_count30=0\n   \
    \ local dot_index30=0\n    local dot_count31=0\n    local dot_index31=0\n    local\
    \ dot_count32=0\n    local dot_index32=0\n    local dot_count33=0\n    local dot_index33=0\n\
    \    local dot_count34=0\n    local dot_index34=0\n    local dot_count35=0\n \
    \   local dot_index35=0\n    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_index=()\n    local file_name_parts_count_index_length=()\n\
    \    local file_name_parts_count_index_count=()\n    local file_name_parts_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_count_length=()\n    local file_name_parts_count_index_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_length=()\n   \
    \ local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_position=${file_name_length}\n\
    \  local dot_position_count=0\n  local dot_position_string=\"\"\n  local dot_position_string_count=0\n\
    \  local dot_position_string_index=0\n  local dot_position_string_count2=0\n \
    \ local dot_position_string_index2=0\n  local dot_position_string_count3=0\n \
    \ local dot_position_string_index3=0\n  local dot_position_string_count4=0\n \
    \ local dot_position_string_index4=0\n  local dot_position_string_count5=0\n \
    \ local dot_position_string_index5=0\n  local dot_position_string_count6=0\n \
    \ local dot_position_string_index6=0\n  local dot_position_string_count7=0\n \
    \ local dot_position_string_index7=0\n  local dot_position_string_count8=0\n \
    \ local dot_position_string_index8=0\n  local dot_position_string_count9=0\n \
    \ local dot_position_string_index9=0\n  local dot_position_string_count10=0\n\
    \  local dot_position_string_index10=0\n  local dot_position_string_count11=0\n\
    \  local dot_position_string_index11=0\n  local dot_position_string_count12=0\n\
    \  local dot_position_string_index12=0\n  local dot_position_string_count13=0\n\
    \  local dot_position_string_index13=0\n  local dot_position_string_count14=0\n\
    \  local dot_position_string_index14=0\n  local dot_position_string_count15=0\n\
    \  local dot_position_string_index15=0\n  local dot_position_string_count16=0\n\
    \  local dot_position_string_index16=0\n  local dot_position_string_count17=0\n\
    \  local dot_position_string_index17=0\n  local dot_position_string_count18=0\n\
    \  local dot_position_string_index18=0\n  local dot_position_string_count19=0\n\
    \  local dot_position_string_index19=0\n  local dot_position_string_count20=0\n\
    \  local dot_position_string_index20=0\n  local dot_position_string_count21=0\n\
    \  local dot_position_string_index21=0\n  local dot_position_string_count22=0\n\
    \  local dot_position_string_index22=0\n  local dot_position_string_count23=0\n\
    \  local dot_position_string_index23=0\n  local dot_position_string_count24=0\n\
    \  local dot_position_string_index24=0\n  local dot_position_string_count25=0\n\
    \  local dot_position_string_index25=0\n  local dot_position_string_count26=0\n\
    \  local dot_position_string_index26=0\n  local dot_position_string_count\n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_ext=${file_name%.*}\n\
    \  local file_name_no_ext_length=${#file_name_no_ext}\n  local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpslb3mg1n.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_first=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_first_length=${#file_name_check_chars_first}\n\
    \    local file_name_check_chars_last=${file_name_check_chars:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_last_length=${#file_name_check_chars_last}\n\
    \    local file_name_check_chars_middle=${file_name_check_chars:${file_name_check_chars_length-2}}\n\
    \    local file_name_check_chars_middle_length=${#file_name_check_chars_middle}\n\
    \    local file_name_check_chars_middle2=${file_name_check_chars:${file_name_check_chars_length-3}}\n\
    \    local file_name_check_chars_middle2_length=${#file_name_check_chars_middle2}\n\
    \    local file_name_check_chars_middle3=${file_name_check_chars:${file_name_check_chars_length-4}}\n\
    \    local file_name_check_chars_middle3_length=${#file_name_check_chars_middle3}\n\
    \    local file_name_check_chars_middle4=${file_name_check_chars:${file_name_check_chars_length-5}}\n\
    \    local file_name_check_chars_middle4_length=${#file_name_check_chars_middle4}\n\
    \    local file_name_check_chars_middle5=${file_name_check_chars:${file_name_check_chars_length-6}}\n\
    \    local file_name_check_chars_middle5_length=${#file_name_check_chars_middle5}\n\
    \    local file_name_check_chars_middle6=${file_name_check_chars:${file_name_check_chars_length-7}}\n\
    \    local file_name_check_chars_middle6_length=${#file_name_check_chars_middle6}\n\
    \    local file_name_check_chars_middle7=${file_name_check_chars:${file_name_check_chars_length-8}}\n\
    \    local file_name_check_chars_middle7_length=${#file_name_check_chars_middle7}\n\
    \    local file_name_check_chars_middle8=${file_name_check_chars:${file_name_check_chars_length-9}}\n\
    \    local file_name_check_chars_middle8_length=${#file_name_check_chars_middle8}\n\
    \    local file_name_check_chars_middle9=${file_name_check_chars:${file_name_check_chars_length-10}}\n\
    \    local file_name_check_chars_middle9_length=${#file_name_check_chars_middle9}\n\
    \    local \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_index=()\n    local file_name_parts_count_index_length=()\n\
    \    local file_name_parts_count_index_count=()\n    local file_name_parts_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_count_length=()\n    local file_name_parts_count_index_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_length=()\n   \
    \ local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter=${file_name_no_dot_length}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_start_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_end_letter}\n    local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_start_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_end_letter}\n    local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n    local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n    local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n    local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_end_letter=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_start_letter=${file_name_no_dot_end_letter}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfhf9uyk0.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//./\
    \ }\n    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_first_length=${#file_name_parts_first}\n    local file_name_parts_first_letter=${file_name_parts_first:0:1}\n\
    \    local file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n\
    \    local file_name_parts_first_letter_capital=${file_name_parts_first_letter:0:1}\n\
    \    local file_name_parts_first_letter_capital_length=${#file_name_parts_first_letter_capital}\n\
    \    local file_name_parts_first_letter_capital_capital=${file_name_parts_first_letter_capital:0:1}\n\
    \    local file_name_parts_first_letter_capital_capital_length=${#file_name_parts_first_letter_capital_capital}\n\
    \    local file_name_parts_first_letter_capital_capital_capital=${file_name_parts_first_letter_capital_capital:0:1}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_length=${#file_name_parts_first_letter_capital_capital_capital}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital=${file_name_parts_first_letter_capital_capital_capital:0:1}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital_length=${#file_name_parts_first_letter_capital_capital_capital_capital}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital_capital=${file_name_parts_first_letter_capital_capital_capital_capital:0:1}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital_capital_length=${#file_name_parts_first_letter_capital_capital_capital_capital_capital}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital_capital_capital=${file_name_parts_first_letter_capital_capital_capital_capital_capital_capital:0:1}\n\
    \    local file_name_parts_first_letter_capital_capital_capital_capital_capital_capital_length=${#file_name_parts_first_letter_capital_capital_capital_capital_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk9zht_e7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=\"\
    ${#file_extension}\"\n    local file_extension_length_check\n    file_extension_length_check=$((file_extension_length>3\
    \ && file_extension_length<4))\n    local file_extension_check\n    file_extension_check=$((file_extension_length==3\
    \ && file_extension_check=false))\n    local file_extension_check_1\n    file_extension_check_1=$((file_extension_length==2\
    \ && file_extension_check_1=false))\n    local file_extension_check_2\n    file_extension_check_2=$((file_extension_length==1\
    \ && file_extension_check_2=false))\n    local file_extension_check_3\n    file_extension_check_3=$((file_extension_length==0\
    \ && file_extension_check_3=false))\n    local file_extension_check_4\n    file_extension_check_4=$((file_extension_length>1\
    \ && file_extension_check_4=false))\n    local file_extension_check_5\n    file_extension_check_5=$((file_extension_length>2\
    \ && file_extension_check_5=false))\n    local file_extension_check_6\n    file_extension_check_6=$((file_extension_length>3\
    \ && file_extension_check_6=false))\n    local file_extension_check_7\n    file_extension_check_7=$((file_extension_length>4\
    \ && file_extension_check_7=false))\n    local file_extension_check_8\n    file_extension_check_8=$((file_extension_length>5\
    \ && file_extension_check_8=false))\n    local file_extension_check_9\n    file_extension_check_9=$((file_extension_length>6\
    \ && file_extension_check_9=false))\n    local file_extension_check_10\n    file_extension_check_10=$((file_extension_length>7\
    \ && file_extension_check_10=false))\n    local file_extension_check_11\n    file_extension_check_11=$((file_extension_length>8\
    \ && file_extension_check_11=false))\n    local file_extension_check_12\n    file_extension_check_12=$((file_extension_length>9\
    \ && file_extension_check_12=false))\n    local file_extension_check_13\n    file_extension_check_13=$((file_extension_length>10\
    \ && file_extension_check_13=false))\n    local file_extension_check_14\n    file_extension_check_14=$((file_extension_length>11\
    \ && file_extension_check_14=false))\n    \n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5v4ue55k.sh: line 25: file_extension_length==3 && file_extension_check=false:
    attempted assignment to non-variable (error token is "=false")

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//./\
    \ }\n    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_first_length=${#file_name_parts_first}\n    local file_name_parts_first_letter=${file_name_parts_first:0:1}\n\
    \    local file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n\
    \    local file_name_parts_first_number=${file_name_parts_first:1}\n    local\
    \ file_name_parts_first_number_length=${#file_name_parts_first_number}\n    local\
    \ file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_parts_first_number_length=${#file_name_parts_first_number_length}\n\
    \    local file_name_part\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_dot=${file_name%.*}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot}\n  local file_name_no_dot_start_with_letter=${file_name_no_dot:0:1}\n\
    \  local file_name_no_dot_end_with_letter=${file_name_no_dot:1}\n  local file_name_no_dot_contains_txt=${file_name_no_dot_contains_txt}\n\
    \  local file_name_no_dot_contains_exe=${file_name_no_dot_contains_exe}\n  local\
    \ file_name_no_dot_contains_dll=${file_name_no_dot_contains_dll}\n  local file_name_contains_txt=${file_name_contains_txt}\n\
    \  local file_name_contains_exe=${file_name_contains_exe}\n  local file_name_contains_dll=${file_name_contains_dll}\n\
    \  local file_name_contains_exe_and_dll=${file_name_contains_exe_and_dll}\n  local\
    \ file_name_contains_exe_and_txt_and_dll=${file_name_contains_exe_and_txt_and_dll}\n\
    \  local file_name_contains_exe_and_txt_and_exe=${file_name_contains_exe_and_txt_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe=${file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe}\n\
    \  local file_name_contains_exe_and_txt_and_dll_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe_and_exe\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_character=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \    local file_name_no_extension_first_character_is_a_letter=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_space}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter=${file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter_or_digit=${file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_space_or_dot_is_a_letter_or_digit}\n\
    \    local file_name_no_extension\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_parts=()\n  local\
    \ file_name_parts_length=()\n  local file_name_parts_check=()\n  local file_name_parts_check_length=()\n\
    \  local file_name_parts_check_count=()\n  local file_name_parts_check_count_length=()\n\
    \  local file_name_parts_check_count_index=()\n  local file_name_parts_check_count_index_length=()\n\
    \  local file_name_parts_check_count_index_count=()\n  local file_name_parts_check_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index=()\n  local file_name_parts_check_count_index_count_index_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count=()\n  local file_name_parts_check_count_index_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index=()\n  local\
    \ file_name_parts_check_count_index_count_index_count_index_length=()\n  local\
    \ file_name_parts_check_count_index_count_index_count_index_count=()\n  local\
    \ file_name_parts_check_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    \n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_ext=\"${file_name##*.}\"\n    local file_base=\"\
    ${file_name%.*}\"\n    local file_base=\"${file_base##[!0-9]}\"\n    local file_base=\"\
    ${file_base##*[!a-z]}\"\n    local file_base=\"${file_base##*[!A-Z]}\"\n    local\
    \ file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base##*[!0-9]}\"\
    \n    local file_base=\"${file_base##*[!0-9]}\"\n    local file_base=\"${file_base\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc3znyx_m.sh: line 88: unexpected EOF while looking for matching
    `"''

    /tmp/tmpc3znyx_m.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"a\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"b\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"c\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"d\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"e\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"f\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"g\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"h\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"i\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"j\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"k\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"l\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"m\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"n\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"o\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"p\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"q\" ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ ${file_name:0:1} != \"r\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppz_pbo77.sh: line 137: unexpected EOF while looking for matching
    `"''

    /tmp/tmppz_pbo77.sh: line 141: unexpected argument to conditional binary operator

    /tmp/tmppz_pbo77.sh: line 141: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_index=${file_name_length}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:1:1}\n\
    \    local dot_index=${file_name_index:2:1}\n    local dot_index=${file_name_index:3:1}\n\
    \    local dot_index=${file_name_index:4:1}\n    local dot_index=${file_name_index:5:1}\n\
    \    local dot_index=${file_name_index:6:1}\n    local dot_index=${file_name_index:7:1}\n\
    \    local dot_index=${file_name_index:8:1}\n    local dot_index=${file_name_index:9:1}\n\
    \    local dot_index=${file_name_index:10:1}\n    local dot_index=${file_name_index:11:1}\n\
    \    local dot_index=${file_name_index:12:1}\n    local dot_index=${file_name_index:13:1}\n\
    \    local dot_index=${file_name_index:14:1}\n    local dot_index=${file_name_index:15:1}\n\
    \    local dot_index=${file_name_index:16:1}\n    local dot_index=${file_name_index:17:1}\n\
    \    local dot_index=${file_name_index:18:1}\n    local dot_index=${file_name_index:19:1}\n\
    \    local dot_index=${file_name_index:20:1}\n    local dot_index=${file_name_index:21:1}\n\
    \    local dot_index=${file_name_index:22:1}\n    local dot_index=${file_name_index:23:1}\n\
    \    local dot_index=${file_name_index:24:1}\n    local dot_index=${file_name_index:25:1}\n\
    \    local dot_index=${file_name_index:26:1}\n    local dot_index=${file_name_index:27:1}\n\
    \    local dot_index=${file_name_index:28:1}\n    local dot_index=${file_name_index:29:1}\n\
    \    local dot_index=${file_name_index:30:1}\n    local dot_index=${file_name_index:31:1}\n\
    \    local dot_index=${file_name_index:32:1}\n    local dot_index=${file_name_index:33:1}\n\
    \    local dot_index=${file_name_index:34:1}\n    local dot_index=${file_name_index:35:1}\n\
    \    local dot_index=${file_name_index:36:1}\n    local dot_index=${file_name_index:37:1}\n\
    \    local dot_index=${file_name_index:38:1}\n    local dot_index=${file_name_index:39:1}\n\
    \    local dot_index=${file_name_index:40:1}\n    local dot_index=${file_name_index:41:1}\n\
    \    local dot_index=${file_name_index:42:1}\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_char=\"[0-9]\"\
    \n    local file_name_check_chars=\"${file_name_check_char}*\"\n    local file_name_check_chars_length=${#file_name_check_chars}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_char=\"\
    [a-zA-Z]\"\n    local file_name_check_chars_chars=\"${file_name_check_chars_char}*\"\
    \n    local file_name_check_chars_chars_length=${#file_name_check_chars_chars}\n\
    \    local file_name_check_chars_chars_length=${#file_name_check_chars_chars}\n\
    \    local file_name_check_chars_chars_char=\".\"\n    local file_name_check_chars_chars_chars=\"\
    ${file_name_check_chars_chars_char}*\"\n    local file_name_check_chars_chars_chars_length=${#file_name_check_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_length=${#file_name_check_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_char=\"*\"\n    local file_name_check_chars_chars_chars_chars=\"\
    ${file_name_check_chars_chars_chars_char}*\"\n    local file_name_check_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_char=\"*\"\n    local file_name_check_chars_chars_chars_chars_chars=\"\
    ${file_name_check_chars_chars_chars_chars_char}*\"\n    local file_name_check_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_char=\"*\"\n    local\
    \ file_name_check_chars_chars_chars_chars_chars_chars=\"${file_name_check_chars_chars_chars_chars_chars_char}*\"\
    \n    local file_name\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_letter=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_letter_length=${#file_name_no_extension_first_letter}\n\
    \  local file_name_no_extension_second_letter=${file_name_no_extension:1:1}\n\
    \  local file_name_no_extension_second_letter_length=${#file_name_no_extension_second_letter}\n\
    \  local file_name_no_extension_third_letter=${file_name_no_extension:2:1}\n \
    \ local file_name_no_extension_third_letter_length=${#file_name_no_extension_third_letter}\n\
    \  local file_name_no_extension_fourth_letter=${file_name_no_extension:3:1}\n\
    \  local file_name_no_extension_fourth_letter_length=${#file_name_no_extension_fourth_letter}\n\
    \  local file_name_no_extension_fifth_letter=${file_name_no_extension:4:1}\n \
    \ local file_name_no_extension_fifth_letter_length=${#file_name_no_extension_fifth_letter}\n\
    \  local file_name_no_extension_sixth_letter=${file_name_no_extension:5:1}\n \
    \ local file_name_no_extension_sixth_letter_length=${#file_name_no_extension_sixth_letter}\n\
    \  local file_name_no_extension_seventh_letter=${file_name_no_extension:6:1}\n\
    \  local file_name_no_extension_seventh_letter_length=${#file_name_no_extension_seventh_letter}\n\
    \  local file_name_no_extension_eighth_letter=${file_name_no_extension:7:1}\n\
    \  local file_name_no_extension_eighth_letter_length=${#file_name_no_extension_eighth_letter}\n\
    \  local file_name_no_extension_ninth_letter=${file_name_no_extension:8:1}\n \
    \ local file_name_no_extension_ninth_letter_length=${#file_name_no_extension_ninth_letter}\n\
    \  local file_name_no_extension_tenth_letter=${file_name_no_extension:9:1}\n \
    \ local file_name_no_extension_tenth_letter_length=${#file_name_no_extension_tenth_letter}\n\
    \  local file_name_no_extension_eleventh_letter=${file_name_no_extension:10:1}\n\
    \  local file_name_no_extension_eleventh_letter_length=${#file_name_no_extension_eleventh_letter}\n\
    \  local file_name_no_extension_twelf\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_lower=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_lower_length=${#file_name_check_chars_lower}\n\
    \    local file_name_check_chars_upper=${file_name_check_chars:1:1}\n    local\
    \ file_name_check_chars_upper_length=${#file_name_check_chars_upper}\n    local\
    \ file_name_check_chars_digit=${file_name_check_chars:2:1}\n    local file_name_check_chars_digit_length=${#file_name_check_chars_digit}\n\
    \    local file_name_check_chars_dot=${file_name_check_chars:3:1}\n    local file_name_check_chars_dot_length=${#file_name_check_chars_dot}\n\
    \    local file_name_check_chars_non_empty=${file_name_check_chars:4:1}\n    local\
    \ file_name_check_chars_non_empty_length=${#file_name_check_chars_non_empty}\n\
    \    local file_name_check_chars_non_empty1=${file_name_check_chars:5:1}\n   \
    \ local file_name_check_chars_non_empty1_length=${#file_name_check_chars_non_empty1}\n\
    \    local file_name_check_chars_non_empty2=${file_name_check_chars:6:1}\n   \
    \ local file_name_check_chars_non_empty2_length=${#file_name_check_chars_non_empty2}\n\
    \    local file_name_check_chars_non_empty3=${file_name_check_chars:7:1}\n   \
    \ local file_name_check_chars_non_empty3_length=${#file_name_check_chars_non_empty3}\n\
    \    local file_name_check_chars_non_empty4=${file_name_check_chars:8:1}\n   \
    \ local file_name_check_chars_non_empty4_length=${#file_name_check_chars_non_empty4}\n\
    \    local file_name_check_chars_non_empty5=${file_name_check_chars:9:1}\n   \
    \ local file_name_check_chars_non_empty5_length=${#file_name_check_chars_non_empty5}\n\
    \    local file_name_check_chars_non_empty6=${file_name_check_chars:10:1}\n  \
    \  local file_name_check_chars_non_empty6_length=${#file_name_check_chars_non_empty6}\n\
    \    local file_name_check_chars_non_empty7=${file_name_check_char\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx4st7w_m.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_no_space=a\n\
    \    local file_name_check_dot_first_letter_no_space_length=2\n    local file_name_check_dot_last_letter_no_space=z\n\
    \    local file_name_check_dot_last_letter_no_space_length=2\n    local file_name_check_dot_first_letter_no_space_no_dot=a\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_length=2\n    local\
    \ file_name_check_dot_last_letter_no_space_no_dot=z\n    local file_name_check_dot_last_letter_no_space_no_dot_length=2\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot=a\n    local\
    \ file_name_check_dot_first_letter_no_space_no_dot_no_dot_length=2\n    local\
    \ file_name_check_dot_last_letter_no_space_no_dot_no_dot=z\n    local file_name_check_dot_last_letter_no_space_no_dot_no_dot_length=2\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot=a\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot_length=2\n\
    \    local file_name_check_dot_last_letter_no_space_no_dot_no_dot_no_dot=z\n \
    \   local file_name_check_dot_last_letter_no_space_no_dot_no_dot_no_dot_length=2\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot_no_dot=a\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot_no_dot_length=2\n\
    \    local file_name_check_dot_last_letter_no_space_no_dot_no_dot_no_dot_no_dot=z\n\
    \    local file_name_check_dot_last_letter_no_space_no_dot_no_dot_no_dot_no_dot_length=2\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot_no_dot_no_dot=a\n\
    \    local file_name_check_dot_first_letter_no_space_no_dot_no_dot_no_dot_\n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name_length}\n\
    \    local dot_position_count=0\n    local dot_position_index=1\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=1\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=1\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string\n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=\"\
    ${file_name%.*}\"\n    local file_name_no_extension_length=${#file_name_no_extension}\n\
    \    local file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n\
    \    local file_name_no_dot_starts_with_letter=${#file_name_no_extension_no_dot_starts_with_letter}\n\
    \    local file_name_no_dot_ends_with_letter=${#file_name_no_extension_no_dot_ends_with_letter}\n\
    \    local file_name_no_dot_contains_txt=${#file_name_no_extension_no_dot_contains_txt}\n\
    \    local file_name_no_dot_contains_exe=${#file_name_no_extension_no_dot_contains_exe}\n\
    \    local file_name_no_dot_contains_dll=${#file_name_no_extension_no_dot_contains_dll}\n\
    \    local file_name_no_dot_contains_exe_and_dll=${#file_name_no_extension_no_dot_contains_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe=${#file_name_no_extension_no_dot_contains_txt_and_exe}\n\
    \    local file_name_no_dot_contains_txt_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_no_dot_contains_txt_and_exe_and_dll=${#file_name_no_extension_no_dot_contains_txt_and_exe_and_dll}\n\
    \    local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_position=${#file_name}\n    local dot_position_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check_result=\"\
    No\"\n    local file_name_check_result_message=\"Invalid file name\"\n    \n \
    \   if [[ $file_name_length -gt 3 ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains more than three\
    \ digits\"\n    elif [[ $file_name_length -eq 0 ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains no digits\"\
    \n    elif [[ $file_name =~ ^[0-9]+\\.$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains dot (.)\"\n\
    \    elif [[ $file_name =~ ^[a-z]$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name starts with a letter\"\
    \n    elif [[ $file_name =~ ^[a-z][a-z]$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains two letters\"\
    \n    elif [[ $file_name =~ ^[a-z][a-z][a-z]$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains three letters\"\
    \n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z]$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains four letters\"\
    \n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z][a-z]$ ]]; then\n        file_name_check_result=\"\
    Yes\"\n        file_name_check_result_message=\"File name contains five letters\"\
    \n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z][a-z][a-z]$ ]]; then\n      \
    \  file_name_check_result=\"Yes\"\n        file_name_check_result_message=\"File\
    \ name contains six letters\"\n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z]$\
    \ ]]; then\n        file_name_check_result=\"Yes\"\n        file_name_check_result_message=\"\
    File name contains seven letters\"\n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]$\
    \ ]]; then\n        file_name_check_result=\"Yes\"\n        file_name_check_result_message=\"\
    File name contains eight letters\"\n    elif [[ $file_name =~ ^[a-z][a-z][a-z][a-z][a-z\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv9xqu26k.sh: line 57: syntax error in conditional expression

    /tmp/tmpv9xqu26k.sh: line 58: syntax error near `}''

    /tmp/tmpv9xqu26k.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_index=${file_name_length}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:0:1}\n\
    \    local \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=1\n    local file_name_check_dot_first=\"\
    No\"\n    local file_name_check_dot_first_length=1\n    local file_name_check_dot_second=\"\
    No\"\n    local file_name_check_dot_second_length=1\n    local file_name_check_dot_third=\"\
    No\"\n    local file_name_check_dot_third_length=1\n    local file_name_check_dot_fourth=\"\
    No\"\n    local file_name_check_dot_fourth_length=1\n    local file_name_check_dot_fifth=\"\
    No\"\n    local file_name_check_dot_fifth_length=1\n    local file_name_check_dot_sixth=\"\
    No\"\n    local file_name_check_dot_sixth_length=1\n    local file_name_check_dot_seventh=\"\
    No\"\n    local file_name_check_dot_seventh_length=1\n    local file_name_check_dot_eighth=\"\
    No\"\n    local file_name_check_dot_eighth_length=1\n    local file_name_check_dot_ninth=\"\
    No\"\n    local file_name_check_dot_ninth_length=1\n    local file_name_check_dot_tenth=\"\
    No\"\n    local file_name_check_dot_tenth_length=1\n    local file_name_check_dot_eleventh=\"\
    No\"\n    local file_name_check_dot_eleventh_length=1\n    local file_name_check_dot_twelfth=\"\
    No\"\n    local file_name_check_dot_twelfth_length=1\n    local file_name_check_dot_thirteenth=\"\
    No\"\n    local file_name_check_dot_thirteenth_length=1\n    local file_name_check_dot_fourteenth=\"\
    No\"\n    local file_name_check_dot_fourteenth_length=1\n    local file_name_check_dot_fifteenth=\"\
    No\"\n    local file_name_check_dot_fifteenth_length=1\n    local file_name_check_dot_sixteenth=\"\
    No\"\n    local file_name_check_dot_sixteenth_length=1\n    local file_name_check_dot_seventeenth=\"\
    No\"\n    local file_name_check_dot_seventeenth_length=1\n    local file_name_check_dot_eighteenth=\"\
    No\"\n    local file_name_check_dot_eighteenth_length=1\n    local file_name_check_dot_nineteenth=\"\
    No\"\n    local file_name_check_dot_nineteen\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file=\"\
    $1\"\n  local valid=No\n  local dot=No\n  local letter=No\n  local extensions=()\n\
    \  local i=0 \n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local A=0\n  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local F=0\n\
    \  local G=0\n  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local L=0\n\
    \  local M=0\n  local N=0\n  local O=0\n  local P=0\n  local Q=0\n  local R=0\n\
    \  local S=0\n  local T=0\n  local U=0\n  local V=0\n  local W=0\n  local X=0\n\
    \  local Y=0\n  local Z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local A=0\n  local B=0\n\
    \  local C=0\n  local D=0\n  local E=0\n  local F=0\n  local G=0\n  local H=0\n\
    \  local I=0\n  local J=0\n  local K=0\n  local L=0\n  local M=0\n  local N=0\n\
    \  local O=0\n  local P=0\n  local Q=0\n  local R=0\n  local S=0\n  local T=0\n\
    \  local U=0\n  local V=0\n  local W=0\n  local X=0\n  local Y=0\n  local Z=0\n\
    \  local a\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 2 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 3 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 4 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 5 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 6 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 7 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 8 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 9 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_check == \"Yes\" ]]; then\n        file_name_check=$(echo\
    \ $file_name | sed 's/^[0-9]*\\.//')\n        if [[ $file_name_check == \"\" ]];\
    \ then\n            file_name_check=$(echo $file_name | sed 's/^[0-9]*\\.//')\n\
    \        fi\n        if [[ $file_name_check == \"exe\" ]]; then\n            file_name_check=$(echo\
    \ $file_name | sed 's/^[0-9]*\\.//')\n        fi\n        if [[ $file_name_check\
    \ == \"dll\" ]]; then\n            file_name_check=$(echo $file_name | sed 's/^[0-9]*\\\
    .//')\n        fi\n        if [[ $file_name_check == \"txt\" ]]; then\n      \
    \      file_name_check=$(echo $file_name | sed 's/^[0-9]*\\.//')\n        fi\n\
    \    fi\n    \n    if [[ $file_name_check == \"No\" ]]; then\n        file_name_check=$(echo\
    \ $file_name | sed 's/^[0-9]*\\.//')\n        if [[ $file_name_check == \"\" ]];\
    \ then\n            file_name_check=$(echo $file_name | sed 's/^[0-9]*\\.//')\n\
    \        fi\n        if [[ $file_name_check == \"\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcu4rckd4.sh: line 122: unexpected EOF while looking for matching
    `"''

    /tmp/tmpcu4rckd4.sh: line 126: unexpected argument to conditional binary operator

    /tmp/tmpcu4rckd4.sh: line 126: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n  local dot_pos=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=0\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_second=z\n\
    \    local file_name_check_dot_second_length=2\n    local file_name_check_dot_third=A\n\
    \    local file_name_check_dot_third_length=2\n    local file_name_check_dot_fourth=Z\n\
    \    local file_name_check_dot_fourth_length=2\n    local file_name_check_dot_fifth=a\n\
    \    local file_name_check_dot_fifth_length=2\n    local file_name_check_dot_sixth=z\n\
    \    local file_name_check_dot_sixth_length=2\n    local file_name_check_dot_seventh=A\n\
    \    local file_name_check_dot_seventh_length=2\n    local file_name_check_dot_eighth=Z\n\
    \    local file_name_check_dot_eighth_length=2\n    local file_name_check_dot_ninth=a\n\
    \    local file_name_check_dot_ninth_length=2\n    local file_name_check_dot_tenth=z\n\
    \    local file_name_check_dot_tenth_length=2\n    local file_name_check_dot_eleventh=A\n\
    \    local file_name_check_dot_eleventh_length=2\n    local file_name_check_dot_twelfth=Z\n\
    \    local file_name_check_dot_twelfth_length=2\n    local file_name_check_dot_thirteenth=a\n\
    \    local file_name_check_dot_thirteenth_length=2\n    local file_name_check_dot_fourteenth=z\n\
    \    local file_name_check_dot_fourteenth_length=2\n    local file_name_check_dot_fifteenth=A\n\
    \    local file_name_check_dot_fifteenth_length=2\n    local file_name_check_dot_sixteenth=z\n\
    \    local file_name_check_dot_sixteenth_length=2\n    local file_name_check_dot_seventeenth=A\n\
    \    local file_name_check_dot_seventeenth_length=2\n    local file_name_check_dot_eighteenth=Z\n\
    \    local file_name_check_dot_eighteenth_length=2\n    local file_name_check_dot_nineteenth=a\n\
    \    local file_name_check_dot_nineteenth_length=2\n    local file_name_check_dot_twentieth=z\n\
    \    local file_name_check_dot_tw\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=${#file_extension}\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n\
    \  local file_name_no_dot_starts_with_letter_length=${#file_name_no_dot_length}\n\
    \  local file_name_no_dot_ends_with_letter_length=${#file_name_no_dot_starts_with_letter_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_length=${#file_name_no_dot_ends_with_letter_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_length=${#file_name_no_dot_starts_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_length=${#file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_or_dot_length=${#file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_length=${#file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_or_dot_ends_with_letter_length=${#file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_length}\n\
    \  local file_name_no_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_length=${#file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_ends_with_letter_or_dot_ends_with_letter_or_dot_length=${#file_name_no_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_length=${#file_name_no_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_starts_with_letter_or_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_length=${#file_name_no_dot_starts_with_letter_or_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_ends_with_letter_or_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_length=${#file_name_no_dot_ends_with_letter_or_dot_ends_with_letter_or_dot_starts_with_letter_or_dot_length}\n\
    \  local file_name_no_dot_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ $file_name_length -eq 1 ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"-\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"_\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"+\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"-\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"+\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \".\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"/\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"~\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"*\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"?\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"[\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"{\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"(\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"<\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"%\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"$\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"@\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"!\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"^\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"&\" ]]; then\n        file_name_check=\"Yes\"\
    \n    elif [[ ${file_name:0:1} == \"*\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzx93r1wz.sh: line 102: unexpected EOF while looking for matching
    `"''

    /tmp/tmpzx93r1wz.sh: line 106: unexpected argument to conditional binary operator

    /tmp/tmpzx93r1wz.sh: line 106: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_check_result=\"\
    No\"\n  local file_name_check_result_message=\"Invalid file name\"\n  \n  if [[\
    \ $file_name_length -gt 3 ]]; then\n    file_name_check_result=\"Yes\"\n  else\n\
    \    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name_length -eq 0\
    \ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 1 ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name\
    \ =~ ^[0-9]$ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name\
    \ =~ ^[0-9]\\.$ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[\
    \ $file_name =~ ^[0-9]\\.[0-9]$ ]]; then\n    file_name_check_result=\"No\"\n\
    \  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\.$ ]]; then\n    file_name_check_result=\"\
    No\"\n  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\.[0-9]$ ]]; then\n    file_name_check_result=\"\
    No\"\n  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n  \
    \  file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\\
    .[0-9]\\.[0-9]$ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[\
    \ $file_name =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n    file_name_check_result=\"\
    No\"\n  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$\
    \ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name =~\
    \ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n    file_name_check_result=\"\
    No\"\n  fi\n  \n  if [[ $file_name =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\\
    .[0-9]$ ]]; then\n    file_name_check_result=\"No\"\n  fi\n  \n  if [[ $file_name\
    \ \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_024_mfr.sh: line 82: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmp_024_mfr.sh: line 82: syntax error near `$file_name''

    /tmp/tmp_024_mfr.sh: line 82: `  if [[ $file_name ''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_lower=\"\
    ${file_extension,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprxl51icc.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmprxl51icc.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_check=()\n   \
    \ local file_name_parts_check_length=()\n    local file_name_parts_check_index=()\n\
    \    local file_name_parts_check_index_length=()\n    local file_name_parts_check_count=()\n\
    \    local file_name_parts_check_count_length=()\n    local file_name_parts_check_count_index=()\n\
    \    local file_name_parts_check_count_index_length=()\n    local file_name_parts_check_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_length=()\n    local file_name_parts_check_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_length=()\n    local\
    \ file_name_parts_check_count_index_count_index_count=()\n    local file_name_parts_check_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_length=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_count=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_letter=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_letter_length=${#file_name_no_extension_first_letter}\n\
    \  local file_name_no_extension_second_letter=${file_name_no_extension:1:1}\n\
    \  local file_name_no_extension_second_letter_length=${#file_name_no_extension_second_letter}\n\
    \  local file_name_no_extension_third_letter=${file_name_no_extension:2:1}\n \
    \ local file_name_no_extension_third_letter_length=${#file_name_no_extension_third_letter}\n\
    \  local file_name_no_extension_fourth_letter=${file_name_no_extension:3:1}\n\
    \  local file_name_no_extension_fourth_letter_length=${#file_name_no_extension_fourth_letter}\n\
    \  local file_name_no_extension_fifth_letter=${file_name_no_extension:4:1}\n \
    \ local file_name_no_extension_fifth_letter_length=${#file_name_no_extension_fifth_letter}\n\
    \  local file_name_no_extension_sixth_letter=${file_name_no_extension:5:1}\n \
    \ local file_name_no_extension_sixth_letter_length=${#file_name_no_extension_sixth_letter}\n\
    \  local file_name_no_extension_seventh_letter=${file_name_no_extension:6:1}\n\
    \  local file_name_no_extension_seventh_letter_length=${#file_name_no_extension_seventh_letter}\n\
    \  local file_name_no_extension_eighth_letter=${file_name_no_extension:7:1}\n\
    \  local file_name_no_extension_eighth_letter_length=${#file_name_no_extension_eighth_letter}\n\
    \  local file_name_no_extension_ninth_letter=${file_name_no_extension:8:1}\n \
    \ local file_name_no_extension_ninth_letter_length=${#file_name_no_extension_ninth_letter}\n\
    \  local file_name_no_extension_tenth_letter=${file_name_no_extension:9:1}\n \
    \ local file_name_no_extension_tenth_letter_length=${#file_name_no_extension_tenth_letter}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet=${file_name_no_extension_first_letter:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_length=${#file_name_no_extension_first_letter_is_latin_alphabet}\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_parts=()\n  local\
    \ file_name_parts_length=()\n  local file_name_parts_count=()\n  local file_name_parts_count_index=()\n\
    \  local file_name_parts_count_index_length=()\n  local file_name_parts_count_index_count=()\n\
    \  local file_name_parts_count_index_count_length=()\n  local file_name_parts_count_index_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_length=()\n  local file_name_parts_count_index_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//./\
    \ }\n    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_first_length=${#file_name_parts_first}\n    local file_name_parts_last=${file_name_parts:(${#file_name_parts}\
    \ - 1)}\n    local file_name_parts_last_length=${#file_name_parts_last}\n    local\
    \ file_name_parts_first_letter=${file_name_parts_first:0:1}\n    local file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n\
    \    local file_name_parts_last_letter=${file_name_parts_last:0:1}\n    local\
    \ file_name_parts_last_letter_length=${#file_name_parts_last_letter}\n    local\
    \ file_name_parts_first_number=${file_name_parts_first:1:1}\n    local file_name_parts_first_number_length=${#file_name_parts_first_number}\n\
    \    local file_name_parts_last_number=${file_name_parts_last:1:1}\n    local\
    \ file_name_parts_last_number_length=${#file_name_parts_last_number}\n    local\
    \ file_name_parts_first_special=${file_name_parts_first:2:1}\n    local file_name_parts_first_special_length=${#file_name_parts_first_special}\n\
    \    local file_name_parts_last_special=${file_name_parts_last:2:1}\n    local\
    \ file_name_parts_last_special_length=${#file_name_parts_last_special}\n    local\
    \ file_name_parts_first_non_letter=${file_name_parts_first:3:1}\n    local file_name_parts_first_non_letter_length=${#file_name_parts_first_non_letter}\n\
    \    local file_name_parts_last_non_letter=${file_name_parts_last:3:1}\n    local\
    \ file_name_parts_last_non_letter_length=${#file_name_parts_last_non_letter}\n\
    \    local file_name_parts_first_non_number=${file_name_parts_first:4:1}\n   \
    \ local file_name_parts_first_non_number_length=${#file_name_parts_first_non_number}\n\
    \    local file_name_parts_last_non_number=${file_name_parts_last:4:1}\n    local\
    \ file_name_parts_last_non_number_length=${#file_name_parts_last_non_number}\n\
    \    local file_name_parts_first_non_special=${file_name_parts_first:5:1}\n  \
    \  \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=\"\
    ${file_name%.*}\"\n    local file_name_no_ext_length=${#file_name_no_ext}\n  \
    \  local file_name_no_dot_length=${#file_name_no_ext%.*}\n    local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n\
    \    local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_start_letter_valid=false\n    local file_name_no_dot_end_letter_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_start_letter_valid=false\n\
    \    local file_name_no_dot_end_letter_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid=false\n    local file_name_no_dot_valid=false\n\
    \    local file_name_no_dot_valid\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwj5zm6wr.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=No\n\
    \    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        if [[ \"$file_name\"\
    \ == *\".\"* ]]; then\n            file_name_check=No\n        fi\n    fi\n  \
    \  \n    if [[ $file_name_length -eq 2 ]]; then\n        if [[ \"$file_name\"\
    \ == *\".\"* ]]; then\n            file_name_check=No\n        fi\n    fi\n  \
    \  \n    if [[ $file_name_length -eq 3 ]]; then\n        if [[ \"$file_name\"\
    \ == *\".\"* ]]; then\n            file_name_check=No\n        fi\n    fi\n  \
    \  \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=Yes\n\
    \    fi\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local dot_position=\"${file_name:0:1}\"\n    local dot_position2=\"\
    ${file_name:1:1}\"\n    local dot_position3=\"${file_name:2:1}\"\n    local dot_position4=\"\
    ${file_name:3:1}\"\n    local dot_position5=\"${file_name:4:1}\"\n    local dot_position6=\"\
    ${file_name:5:1}\"\n    local dot_position7=\"${file_name:6:1}\"\n    local dot_position8=\"\
    ${file_name:7:1}\"\n    local dot_position9=\"${file_name:8:1}\"\n    local dot_position10=\"\
    ${file_name:9:1}\"\n    local dot_position11=\"${file_name:10:1}\"\n    local\
    \ dot_position12=\"${file_name:11:1}\"\n    local dot_position13=\"${file_name:12:1}\"\
    \n    local dot_position14=\"${file_name:13:1}\"\n    local dot_position15=\"\
    ${file_name:14:1}\"\n    local dot_position16=\"${file_name:15:1}\"\n    local\
    \ dot_position17=\"${file_name:16:1}\"\n    local dot_position18=\"${file_name:17:1}\"\
    \n    local dot_position19=\"${file_name:18:1}\"\n    local dot_position20=\"\
    ${file_name:19:1}\"\n    local dot_position21=\"${file_name:20:1}\"\n    local\
    \ dot_position22=\"${file_name:21:1}\"\n    local dot_position23=\"${file_name:22:1}\"\
    \n    local dot_position24=\"${file_name:23:1}\"\n    local dot_position25=\"\
    ${file_name:24:1}\"\n    local dot_position26=\"${file_name:25:1}\"\n    local\
    \ dot_position27=\"${file_name:26:1}\"\n    local dot_position28=\"${file_name:27:1}\"\
    \n    local dot_position29=\"${file_name:28:1}\"\n    local dot_position30=\"\
    ${file_name:29:1}\"\n    local dot_position31=\"${file_name:30:1}\"\n    local\
    \ dot_position32=\"${file_name:31:1}\"\n    local dot_position33=\"${file_name:32:1}\"\
    \n    local dot_position34=\"${file_name:33:1}\"\n    local dot_position35=\"\
    ${file_name:34:1}\"\n    local dot_position36=\"${file_name:35:1}\"\n    local\
    \ dot_position37=\"${file_name:36:1}\"\n    local dot_position38=\"${file_name:37:1}\"\
    \n    local dot_position39=\"${file_name:38:1}\"\n    local dot_position40=\"\
    ${file_name:39:1}\"\n    local dot_position41=\"${file_name:40:1}\"\n    \n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_string=${file_name:${dot_index}}\n\
    \  local dot_length=${#dot_string}\n  local dot_first_letter=${dot_string:0:1}\n\
    \  local dot_second_letter=${dot_string:1:1}\n  local dot_third_letter=${dot_string:2:1}\n\
    \  local dot_fourth_letter=${dot_string:3:1}\n  local dot_fifth_letter=${dot_string:4:1}\n\
    \  local dot_sixth_letter=${dot_string:5:1}\n  local dot_seventh_letter=${dot_string:6:1}\n\
    \  local dot_eighth_letter=${dot_string:7:1}\n  local dot_ninth_letter=${dot_string:8:1}\n\
    \  local dot_tenth_letter=${dot_string:9:1}\n  local dot_first_letter_to_check=${dot_first_letter}\n\
    \  local dot_second_letter_to_check=${dot_second_letter}\n  local dot_third_letter_to_check=${dot_third_letter}\n\
    \  local dot_fourth_letter_to_check=${dot_fourth_letter}\n  local dot_fifth_letter_to_check=${dot_fifth_letter}\n\
    \  local dot_sixth_letter_to_check=${dot_sixth_letter}\n  local dot_seventh_letter_to_check=${dot_seventh_letter}\n\
    \  local dot_eighth_letter_to_check=${dot_eighth_letter}\n  local dot_ninth_letter_to_check=${dot_ninth_letter}\n\
    \  local dot_tenth_letter_to_check=${dot_tenth_letter}\n  local dot_first_letter_to_check_length=${#dot_first_letter_to_check}\n\
    \  local dot_second_letter_to_check_length=${#dot_second_letter_to_check}\n  local\
    \ dot_third_letter_to_check_length=${#dot_third_letter_to_check}\n  local dot_fourth_letter_to_check_length=${#dot_fourth_letter_to_check}\n\
    \  local dot_fifth_letter_to_check_length=${#dot_fifth_letter_to_check}\n  local\
    \ dot_sixth_letter_to_check_length=${#dot_sixth_letter_to_check}\n  local dot_seventh_letter_to_check_length=${#dot_seventh_letter_to_check}\n\
    \  local dot_eighth_letter_to_check_length=${#dot_eighth_letter_to_check}\n  local\
    \ dot_ninth_letter_to_check_length=${#dot_ninth_letter_to_check}\n  local dot_tenth_letter_to_check_length=${#dot_tenth_letter\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ubg7hkg.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=\"\
    ${file_name%.*}\"\n    local file_name_no_ext_length=${#file_name_no_ext}\n  \
    \  local file_name_no_dot_length=${#file_name_no_ext%.*}\n    local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n\
    \    local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx85unjrq.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid=No\n    local dot_pos=${#file_name}\n    local\
    \ dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos%%.*}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos%%.*}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n    local dot_pos=${dot_pos#0}\n\
    \    local dot_pos=${dot_pos\n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc3mwurow.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_character=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \    local file_name_no_extension_first_character_is_a_letter=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dot}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter=${file_name_no_extension_first_character_is_a_letter_or_digit_or_dot:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit=${file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit_or_dot=${file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit:0:1}\n\
    \    local file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_digit_or_dot_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_dot_is_a_letter_or_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbd6ghda7.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_string=${file_name:${dot_index}}\n\
    \  local dot_string_length=${#dot_string}\n  local dot_string_first_letter=${dot_string:0:1}\n\
    \  local dot_string_first_letter_upper=${dot_string_first_letter:0:1}\n  local\
    \ dot_string_second_letter=${dot_string:1}\n  local dot_string_second_letter_upper=${dot_string_second_letter:0:1}\n\
    \  local dot_string_third_letter=${dot_string:2}\n  local dot_string_third_letter_upper=${dot_string_third_letter:0:1}\n\
    \  local dot_string_fourth_letter=${dot_string:3}\n  local dot_string_fourth_letter_upper=${dot_string_fourth_letter:0:1}\n\
    \  local dot_string_fifth_letter=${dot_string:4}\n  local dot_string_fifth_letter_upper=${dot_string_fifth_letter:0:1}\n\
    \  local dot_string_sixth_letter=${dot_string:5}\n  local dot_string_sixth_letter_upper=${dot_string_sixth_letter:0:1}\n\
    \  local dot_string_seventh_letter=${dot_string:6}\n  local dot_string_seventh_letter_upper=${dot_string_seventh_letter:0:1}\n\
    \  local dot_string_eighth_letter=${dot_string:7}\n  local dot_string_eighth_letter_upper=${dot_string_eighth_letter:0:1}\n\
    \  local dot_string_ninth_letter=${dot_string:8}\n  local dot_string_ninth_letter_upper=${dot_string_ninth_letter:0:1}\n\
    \  local dot_string_tenth_letter=${dot_string:9}\n  local dot_string_tenth_letter_upper=${dot_string_tenth_letter:0:1}\n\
    \  local dot_string_first_letter_lower=${dot_string_first_letter:1}\n  local dot_string_second_letter_lower=${dot_string_second_letter:1}\n\
    \  local dot_string_third_letter_lower=${dot_string_third_letter:1}\n  local dot_string_fourth_letter_lower=${dot_string_fourth_letter:1}\n\
    \  local dot_string_fifth_letter_lower=${dot_string_fifth_letter:1}\n  local dot_string_sixth_letter_lower=${dot_string_sixth_letter:1}\n\
    \  local dot_string_seventh_letter_lower=${dot_string_seventh_letter:1}\n  local\
    \ dot_string_eighth_letter_lower=${dot_string_eighth_letter:1}\n  local dot_string_ninth_letter_lower=${dot_string_n\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpageiolun.sh: line 91: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_character=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_letter=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_length=${#file_name_no_extension_first_character_is_letter}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower=${file_name_no_extension_first_character_is_letter:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_length=${#file_name_no_extension_first_character_is_letter_is_lower}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper=${file_name_no_extension_first_character_is_letter_is_lower:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_length=${#file_name_no_extension_first_character_is_letter_is_lower_is_upper}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit=${file_name_no_extension_first_character_is_letter_is_lower_is_upper:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_length=${#file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit=${file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit_length=${#file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit_is_digit=${file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit:0:1}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit_is_digit_length=${#file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit_is_digit}\n\
    \  local file_name_no_extension_first_character_is_letter_is_lower_is_upper_is_digit_is_digit_is_digit_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_ext=${file_name%.*}\n\
    \  local file_name_no_ext_length=${#file_name_no_ext}\n  local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpslb3mg1n.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension%.*}\n    local file_name_no_dot_start_letter=${file_name_no_extension%.*}\n\
    \    local file_name_no_dot_end_letter=${file_name_no_extension#*.}\n    local\
    \ file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n \
    \   local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvk9ouuqv.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid_file_names=(\"${!valid_file_names[@]}\")\n   \
    \ local valid_file_names_count=${#valid_file_names[@]}\n    local dot_count=$(echo\
    \ $file_name | awk -F. '{print NF}')\n    local dot_index=$(echo $file_name |\
    \ awk -F. '{print NR}')\n    local dot_index=$(echo $dot_index - 1)\n    local\
    \ dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n\
    \    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo $dot_index\
    \ - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_index - 1)\n    local dot_index=$(echo\
    \ $dot_index - 1)\n    local dot_index=$(echo $dot_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpifp87hnr.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpifp87hnr.sh: line 105: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=\"\
    ${#file_extension}\"\n  local file_extension_length2=\"${#file_extension}\"\n\
    \  local file_extension_length3=\"${#file_extension}\"\n  local file_extension_length4=\"\
    ${#file_extension}\"\n  local file_extension_length5=\"${#file_extension}\"\n\
    \  local file_extension_length6=\"${#file_extension}\"\n  local file_extension_length7=\"\
    ${#file_extension}\"\n  local file_extension_length8=\"${#file_extension}\"\n\
    \  local file_extension_length9=\"${#file_extension}\"\n  local file_extension_length10=\"\
    ${#file_extension}\"\n  local file_extension_length11=\"${#file_extension}\"\n\
    \  local file_extension_length12=\"${#file_extension}\"\n  local file_extension_length13=\"\
    ${#file_extension}\"\n  local file_extension_length14=\"${#file_extension}\"\n\
    \  local file_extension_length15=\"${#file_extension}\"\n  local file_extension_length16=\"\
    ${#file_extension}\"\n  local file_extension_length17=\"${#file_extension}\"\n\
    \  local file_extension_length18=\"${#file_extension}\"\n  local file_extension_length19=\"\
    ${#file_extension}\"\n  local file_extension_length20=\"${#file_extension}\"\n\
    \  local file_extension_length21=\"${#file_extension}\"\n  local file_extension_length22=\"\
    ${#file_extension}\"\n  local file_extension_length23=\"${#file_extension}\"\n\
    \  local file_extension_length24=\"${#file_extension}\"\n  local file_extension_length25=\"\
    ${#file_extension}\"\n  local file_extension_length26=\"${#file_extension}\"\n\
    \  local file_extension_length27=\"${#file_extension}\"\n  local file_extension_length28=\"\
    ${#file_extension}\"\n  local file_extension_length29=\"${#file_extension}\"\n\
    \  local file_extension_length30=\"${#file_extension}\"\n  local file_extension_length31=\"\
    ${#file_extension}\"\n  local file_extension_length32=\"${#file_extension}\"\n\
    \  local file_extension_length33=\"${#file_extension}\"\n  local file_extension_length34=\"\
    ${#file_extension}\"\n  local file_extension_length35=\"${#file_extension}\"\n\
    \  local file_extension_length36=\"${#file_extension}\"\n  local file_extension_length37=\"\
    ${#file_extension}\"\n  local file_extension_length38=\"${#file_extension}\"\n\
    \  local file_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=\"\
    ${file_name%.*}\"\n    local file_name_no_extension_length=${#file_name_no_extension}\n\
    \    local file_name_no_extension_first_char=${file_name_no_extension:0:1}\n \
    \   local file_name_no_extension_first_char_length=${#file_name_no_extension_first_char}\n\
    \    local file_name_no_extension_first_char_valid_chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \    local file_name_no_extension_first_char_valid_chars_length=${#file_name_no_extension_first_char_valid_chars}\n\
    \    local file_name_no_extension_first_char_valid_chars_count=$(expr ${#file_name_no_extension_first_char_valid_chars}\
    \ - 1)\n    local file_name_no_extension_first_char_valid_chars_count_length=${#file_name_no_extension_first_char_valid_chars_count}\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars='0123456789'\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_length=${#file_name_no_extension_first_char_valid_chars_count_valid_chars}\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count=$(expr\
    \ ${#file_name_no_extension_first_char_valid_chars_count_valid_chars} - 1)\n \
    \   local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_length=${#file_name_no_extension_first_char_valid_chars_count_valid_chars_count}\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars_length=${#file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars}\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars_count=$(expr\
    \ ${#file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars}\
    \ - 1)\n    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars_count_length=${#file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars_count}\n\
    \    local file_name_no_extension_first_char_valid_chars_count_valid_chars_count_valid_chars_count_valid_chars='0123456789'\n\
    \    local file_name_no_extension_first_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=2\n    local file_name_check_dot_starts_with_letter=\"\
    No\"\n    local file_name_check_dot_starts_with_letter_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt_exe_dll=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_length=6\n    local file_name_check_dot_contains_txt_exe_dll_starts_with_letter=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_starts_with_letter_length=2\n\
    \    local file_name_check_dot_contains_txt_exe_dll_contains_txt=\"No\"\n    local\
    \ file_name_check_dot_contains_txt_exe_dll_contains_txt_length=2\n    local file_name_check_dot_contains_txt_exe_dll_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_contains_exe_length=2\n\
    \    local file_name_check_dot_contains_txt_exe_dll_contains_dll=\"No\"\n    local\
    \ file_name_check_dot_contains_txt_exe_dll_contains_dll_length=2\n    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_length=6\n\
    \    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_starts_with_letter=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_starts_with_letter_length=2\n\
    \    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_contains_txt_length=2\n\
    \    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_txt_exe_dll_contains_txt_exe_dll_contains_exe_length=2\n\
    \    local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_string=${file_name:${dot_index}}\n\
    \    local dot_string_length=${#dot_string}\n    local dot_string_first_char=${dot_string:0:1}\n\
    \    local dot_string_second_char=${dot_string:1}\n    local dot_string_third_char=${dot_string:2}\n\
    \    local dot_string_fourth_char=${dot_string:3}\n    local dot_string_fifth_char=${dot_string:4}\n\
    \    local dot_string_sixth_char=${dot_string:5}\n    local dot_string_seventh_char=${dot_string:6}\n\
    \    local dot_string_eighth_char=${dot_string:7}\n    local dot_string_ninth_char=${dot_string:8}\n\
    \    local dot_string_tenth_char=${dot_string:9}\n    local dot_string_first_char_valid=false\n\
    \    local dot_string_second_char_valid=false\n    local dot_string_third_char_valid=false\n\
    \    local dot_string_fourth_char_valid=false\n    local dot_string_fifth_char_valid=false\n\
    \    local dot_string_sixth_char_valid=false\n    local dot_string_seventh_char_valid=false\n\
    \    local dot_string_eighth_char_valid=false\n    local dot_string_ninth_char_valid=false\n\
    \    local dot_string_tenth_char_valid=false\n    local dot_string_first_char_invalid=false\n\
    \    local dot_string_second_char_invalid=false\n    local dot_string_third_char_invalid=false\n\
    \    local dot_string_fourth_char_invalid=false\n    local dot_string_fifth_char_invalid=false\n\
    \    local dot_string_sixth_char_invalid=false\n    local dot_string_seventh_char_invalid=false\n\
    \    local dot_string_eighth_char_invalid=false\n    local dot_string_ninth_char_invalid=false\n\
    \    local dot_string_tenth_char_invalid=false\n    local dot_string_first_char_valid=false\n\
    \    local dot_string_second_char_valid=false\n    local dot_string_third_char_valid=false\n\
    \    local dot_string_fourth_char_valid=false\n    local dot_string_fifth_char_valid=false\n\
    \    local dot_string_sixth_char_valid=false\n    local dot_string_seventh_char_valid=false\n\
    \    local dot_string_eighth_char_valid=false\n    local dot_string_ninth_char_valid=false\n\
    \    local dot_string_tenth_char_valid=\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local valid_file_names=(\"txt\" \"exe\" \"dll\")\n  local valid_file_names_length=${#valid_file_names[@]}\n\
    \  local valid_file_names_length=${valid_file_names_length}-1\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file_names_length}\n\
    \  local valid_file_names_length=${valid_file_names_length}\n  local valid_file_names_length=${valid_file\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp421o1yz2.sh: line 91: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_check_result=\"\
    No\"\n  \n  if [[ $file_name_length -gt 3 ]]; then\n    echo \"ERROR: File name\
    \ '$file_name' contains more than three digits.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' starts with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' ends with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' starts with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' ends with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' starts with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' ends with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' starts with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' ends with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' starts with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"ERROR:\
    \ File name '$file_name' ends with a dash '-'.\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} == \"-\" ]]; then\n    echo \"ERROR:\
    \ \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp71kzreyo.sh: line 113: unexpected EOF while looking for matching
    `"''

    /tmp/tmp71kzreyo.sh: line 117: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=${file_name%.*}\n\
    \    local file_name_no_ext_length=${#file_name_no_ext}\n    local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \    local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n    local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_ext}\n    local file_name_no_dot_start_letter_check=false\n\
    \    local file_name_no_dot_end_letter_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_check=false\n    local file_name_no_dot_check=false\n\
    \    local file_name_no_dot_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8xq8tkqk.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local dot_count=0\n    local dot_index=0\n    local dot_length=$((${#file_name}\
    \ - 1))\n    local dot_length2=$((${#file_name} - 2))\n    local dot_length3=$((${#file_name}\
    \ - 3))\n    local dot_length4=$((${#file_name} - 4))\n    local dot_length5=$((${#file_name}\
    \ - 5))\n    local dot_length6=$((${#file_name} - 6))\n    local dot_length7=$((${#file_name}\
    \ - 7))\n    local dot_length8=$((${#file_name} - 8))\n    local dot_length9=$((${#file_name}\
    \ - 9))\n    local dot_length10=$((${#file_name} - 10))\n    local dot_length11=$((${#file_name}\
    \ - 11))\n    local dot_length12=$((${#file_name} - 12))\n    local dot_length13=$((${#file_name}\
    \ - 13))\n    local dot_length14=$((${#file_name} - 14))\n    local dot_length15=$((${#file_name}\
    \ - 15))\n    local dot_length16=$((${#file_name} - 16))\n    local dot_length17=$((${#file_name}\
    \ - 17))\n    local dot_length18=$((${#file_name} - 18))\n    local dot_length19=$((${#file_name}\
    \ - 19))\n    local dot_length20=$((${#file_name} - 20))\n    local dot_length21=$((${#file_name}\
    \ - 21))\n    local dot_length22=$((${#file_name} - 22))\n    local dot_length23=$((${#file_name}\
    \ - 23))\n    local dot_length24=$((${#file_name} - 24))\n    local dot_length25=$((${#file_name}\
    \ - 25))\n    local dot_length26=$((${#file_name} - 26))\n    local dot_length27=$((${#file_name}\
    \ - 27))\n    local dot_length28=$((${#file_name} - 28))\n    local dot_length29=$((${#file_name}\
    \ - 29))\n    local dot_length30=$((${#file_name} - 30))\n    local dot_length31=$((${#file_name}\
    \ - 31))\n    local dot_length32=$((${#file_name} - 32))\n    local dot_length33=$((${#file_name}\
    \ - 33))\n    local dot_length34=$((${#file_name} - 34))\n    local dot_length35=$((${#file_name}\
    \ - 35))\n    local dot_length36=$((${#file_name} - 36))\n    local \n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_first=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_first_length=${#file_name_check_chars_first}\n\
    \    local file_name_check_chars_last=${file_name_check_chars:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_last_length=${#file_name_check_chars_last}\n\
    \    local file_name_check_chars_first_letter=${file_name_check_chars_first:0:1}\n\
    \    local file_name_check_chars_first_letter_length=${#file_name_check_chars_first_letter}\n\
    \    local file_name_check_chars_last_letter=${file_name_check_chars_last:0:1}\n\
    \    local file_name_check_chars_last_letter_length=${#file_name_check_chars_last_letter}\n\
    \    local file_name_check_chars_first_digit=${file_name_check_chars_first:1:1}\n\
    \    local file_name_check_chars_first_digit_length=${#file_name_check_chars_first_digit}\n\
    \    local file_name_check_chars_last_digit=${file_name_check_chars_last:1:1}\n\
    \    local file_name_check_chars_last_digit_length=${#file_name_check_chars_last_digit}\n\
    \    local file_name_check_chars_first_dot_length=${#file_name_check_chars_first_dot}\n\
    \    local file_name_check_chars_last_dot_length=${#file_name_check_chars_last_dot}\n\
    \    local file_name_check_chars_first_dot_letter=${file_name_check_chars_first_dot:0:1}\n\
    \    local file_name_check_chars_first_dot_letter_length=${#file_name_check_chars_first_dot_letter}\n\
    \    local file_name_check_chars_last_dot_letter=${file_name_check_chars_last_dot:0:1}\n\
    \    local file_name_check_chars_last_dot_letter_length=${#file_name_check_chars_last_dot_letter}\n\
    \    local file_name_check_chars_first_dot_digit=${file_name_check_chars_first_dot:1:1}\n\
    \    local file_name_check_chars_first_dot_digit_length=${#file_name_check_chars_first_dot_digit}\n\
    \    local file_name_check_chars_last_dot_digit=${file_name_check_chars_last_dot:1:1}\n\
    \    local file_name_check_chars_last_dot_digit_length=${#file_name_check_chars_last_dot_digit}\n\
    \    local file_name_check_chars_first_dot_dot_length=${#file_name_check_chars_first_dot_dot}\n\
    \    local file_name\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_index=()\n    local file_name_parts_count_index_length=()\n\
    \    local file_name_parts_count_index_count=()\n    local file_name_parts_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_count_length=()\n    local file_name_parts_count_index_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_length=()\n   \
    \ local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_lower=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_lower_length=${#file_name_check_chars_lower}\n\
    \    local file_name_check_chars_upper=${file_name_check_chars:1:1}\n    local\
    \ file_name_check_chars_upper_length=${#file_name_check_chars_upper}\n    local\
    \ file_name_check_chars_digit=${file_name_check_chars:2:1}\n    local file_name_check_chars_digit_length=${#file_name_check_chars_digit}\n\
    \    local file_name_check_chars_dot=${file_name_check_chars:3:1}\n    local file_name_check_chars_dot_length=${#file_name_check_chars_dot}\n\
    \    local file_name_check_chars_letter=${file_name_check_chars:4:1}\n    local\
    \ file_name_check_chars_letter_length=${#file_name_check_chars_letter}\n    local\
    \ file_name_check_chars_latin_alpha=${file_name_check_chars:5:1}\n    local file_name_check_chars_latin_alpha_length=${#file_name_check_chars_latin_alpha}\n\
    \    local file_name_check_chars_latin_alpha_upper=${file_name_check_chars:6:1}\n\
    \    local file_name_check_chars_latin_alpha_upper_length=${#file_name_check_chars_latin_alpha_upper}\n\
    \    local file_name_check_chars_latin_alpha_lower=${file_name_check_chars:7:1}\n\
    \    local file_name_check_chars_latin_alpha_lower_length=${#file_name_check_chars_latin_alpha_lower}\n\
    \    local file_name_check_chars_latin_alpha_digit=${file_name_check_chars:8:1}\n\
    \    local file_name_check_chars_latin_alpha_digit_length=${#file_name_check_chars_latin_alpha_digit}\n\
    \    local file_name_check_chars_latin_alpha_dot=${file_name_check_chars:9:1}\n\
    \    local file_name_check_chars_latin_alpha_dot_length=${#file_name_check_chars_latin_alpha_dot}\n\
    \    local file_name_check_chars_latin_alpha_letter=${file_name_check_chars:10:1}\n\
    \    local file_name_check_chars_latin_alpha_letter_length=${#file_name_check_chars_latin_alpha_letter}\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_character=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \  local file_name_no_extension_first_character_is_a_letter=${file_name_no_extension_first_character:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit=${file_name_no_extension_first_character:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty=${file_name_no_extension_first_character_is_a_letter_or_digit:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_empty}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter=${file_name_no_extension_first_character_is_a_letter_or_digit_or_empty:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit=${file_name_no_extension_first_character_is_a_letter_or_digit_or_empty:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit_or_empty=${file_name_no_extension_first_character_is_a_letter_or_digit_or_empty:0:1}\n\
    \  local file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit_or_empty_length=${#file_name_no_extension_first_character_is_a_letter_or_digit_or_empty_is_a_letter_or_digit_or_empty}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=2\n    local file_name_check_dot_first=\"\
    No\"\n    local file_name_check_dot_first_length=2\n    local file_name_check_dot_last=\"\
    No\"\n    local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=\"\
    No\"\n    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=\"\
    No\"\n    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_first=\"\
    No\"\n    local file_name_check_dot_first_letter_first_length=2\n    local file_name_check_dot_first_letter_last=\"\
    No\"\n    local file_name_check_dot_first_letter_last_length=2\n    local file_name_check_dot_last_letter_first=\"\
    No\"\n    local file_name_check_dot_last_letter_first_length=2\n    local file_name_check_dot_last_letter_last=\"\
    No\"\n    local file_name_check_dot_last_letter_last_length=2\n    local file_name_check_dot_first_letter_first_letter=\"\
    No\"\n    local file_name_check_dot_first_letter_first_letter_length=2\n    local\
    \ file_name_check_dot_first_letter_last_letter=\"No\"\n    local file_name_check_dot_first_letter_last_letter_length=2\n\
    \    local file_name_check_dot_last_letter_first_letter=\"No\"\n    local file_name_check_dot_last_letter_first_letter_length=2\n\
    \    local file_name_check_dot_last_letter_last_letter=\"No\"\n    local file_name_check_dot_last_letter_last_letter_length=2\n\
    \    local file_name_check_dot_first_letter_first_letter_first=\"No\"\n    local\
    \ file_name_check_dot_first_letter_first_letter_first_length=2\n    local file_name_check_dot_first_letter_first_letter_last=\"\
    No\"\n    local file_name_check_dot_first_letter_first_letter_last_length=2\n\
    \    local file_name_check_dot_first_letter_last_letter_first=\"No\"\n    local\
    \ file_name_check_dot_first_letter_last_letter_first_length=2\n    local file_name_check_dot_first_letter_last_letter_last=\"\
    No\"\n    local file_name_check_dot_first_letter_last_letter_last_length=2\n \
    \   local file_name_check_dot_last_letter_first_letter_first=\"No\"\n    local\
    \ file_name_check_dot_last_letter_first_letter_first_length=2\n    local file_name_check_dot_last_letter_first_letter_last=\"\
    No\"\n    local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid_file_names=(\"txt\" \"exe\" \"dll\")\n    local\
    \ valid_file_names_length=${#valid_file_names[@]}\n    local valid_file_names_length=${valid_file_names_length}-1\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file_names_length}\n    local valid_file_names_length=${valid_file_names_length}\n\
    \    local valid_file_names_length=${valid_file\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdpexa1lf.sh: line 91: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=\"\
    ${#file_extension}\"\n  local file_extension_length2=\"${#file_extension//./}\"\
    \n  local file_extension_length3=\"${#file_extension//./}\"\n  local file_extension_length4=\"\
    ${#file_extension//./}\"\n  local file_extension_length5=\"${#file_extension//./}\"\
    \n  local file_extension_length6=\"${#file_extension//./}\"\n  local file_extension_length7=\"\
    ${#file_extension//./}\"\n  local file_extension_length8=\"${#file_extension//./}\"\
    \n  local file_extension_length9=\"${#file_extension//./}\"\n  local file_extension_length10=\"\
    ${#file_extension//./}\"\n  local file_extension_length11=\"${#file_extension//./}\"\
    \n  local file_extension_length12=\"${#file_extension//./}\"\n  local file_extension_length13=\"\
    ${#file_extension//./}\"\n  local file_extension_length14=\"${#file_extension//./}\"\
    \n  local file_extension_length15=\"${#file_extension//./}\"\n  local file_extension_length16=\"\
    ${#file_extension//./}\"\n  local file_extension_length17=\"${#file_extension//./}\"\
    \n  local file_extension_length18=\"${#file_extension//./}\"\n  local file_extension_length19=\"\
    ${#file_extension//./}\"\n  local file_extension_length20=\"${#file_extension//./}\"\
    \n  local file_extension_length21=\"${#file_extension//./}\"\n  local file_extension_length22=\"\
    ${#file_extension//./}\"\n  local file_extension_length23=\"${#file_extension//./}\"\
    \n  local file_extension_length24=\"${#file_extension//./}\"\n  local file_extension_length25=\"\
    ${#file_extension//./}\"\n  local file_extension_length26=\"${#file_extension//./}\"\
    \n  local file_extension_length27=\"${#file_extension//./}\"\n  local file_extension_length28=\"\
    ${#file_extension//./}\"\n  local file_extension_length29=\"${#file_extension//./}\"\
    \n  local file_extension_length30=\"${#file_extension//./}\"\n  local file_extension_length31=\"\
    ${#file_extension//./}\"\n  local file_extension_length32=\"${#file_extension//./}\"\
    \n  local file_extension_length33=\"${#file_extension//./}\"\n  local file_extension\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4azzql8a.sh: line 22: ${#file_extension//./}: bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_lower=${file_extension,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_lower,,}\n    local file_extension_lower=${file_extension_lower,,}\n\
    \    local file_extension_lower=${file_extension_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprz0ekqi7.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index_temp\n  local dot_index_temp2\n\
    \  local dot_index_temp3\n  local dot_index_temp4\n  local dot_index_temp5\n \
    \ local dot_index_temp6\n  local dot_index_temp7\n  local dot_index_temp8\n  local\
    \ dot_index_temp9\n  local dot_index_temp10\n  local dot_index_temp11\n  local\
    \ dot_index_temp12\n  local dot_index_temp13\n  local dot_index_temp14\n  local\
    \ dot_index_temp15\n  local dot_index_temp16\n  local dot_index_temp17\n  local\
    \ dot_index_temp18\n  local dot_index_temp19\n  local dot_index_temp20\n  local\
    \ dot_index_temp21\n  local dot_index_temp22\n  local dot_index_temp23\n  local\
    \ dot_index_temp24\n  local dot_index_temp25\n  local dot_index_temp26\n  local\
    \ dot_index_temp27\n  local dot_index_temp28\n  local dot_index_temp29\n  local\
    \ dot_index_temp30\n  local dot_index_temp31\n  local dot_index_temp32\n  local\
    \ dot_index_temp33\n  local dot_index_temp34\n  local dot_index_temp35\n  local\
    \ dot_index_temp36\n  local dot_index_temp37\n  local dot_index_temp38\n  local\
    \ dot_index_temp39\n  local dot_index_temp40\n  local dot_index_temp41\n  local\
    \ dot_index_temp42\n  local dot_index_temp43\n  local dot_index_temp44\n  local\
    \ dot_index_temp45\n  local dot_index_temp46\n  local dot_index_temp47\n  local\
    \ dot_index_temp48\n  local dot_index_temp49\n  local dot_index_temp50\n  local\
    \ dot_index_temp51\n  local dot_index_temp52\n  local dot_index_temp53\n  local\
    \ dot_index_temp54\n  local dot_index_temp55\n  local dot_index_temp56\n  local\
    \ dot_index_temp57\n  local dot_index_temp58\n  local dot_index_temp59\n  local\
    \ dot_index_temp60\n  local dot_index_temp61\n  local dot_index_temp62\n  local\
    \ dot_index_temp63\n  local dot_index_temp64\n  local dot_index_temp65\n  local\
    \ dot_index_temp66\n  local dot_index_temp67\n  local dot_index_temp68\n  local\
    \ \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_string=${file_name:${dot_index}}\n\
    \  local dot_string_length=${#dot_string}\n  local dot_string_first_letter=${dot_string:0:1}\n\
    \  local dot_string_second_letter=${dot_string:1:1}\n  local dot_string_third_letter=${dot_string:2:1}\n\
    \  local dot_string_fourth_letter=${dot_string:3:1}\n  local dot_string_fifth_letter=${dot_string:4:1}\n\
    \  local dot_string_sixth_letter=${dot_string:5:1}\n  local dot_string_seventh_letter=${dot_string:6:1}\n\
    \  local dot_string_eighth_letter=${dot_string:7:1}\n  local dot_string_ninth_letter=${dot_string:8:1}\n\
    \  local dot_string_tenth_letter=${dot_string:9:1}\n  local dot_string_first_letter_to_check=${dot_string_first_letter}\n\
    \  local dot_string_second_letter_to_check=${dot_string_second_letter}\n  local\
    \ dot_string_third_letter_to_check=${dot_string_third_letter}\n  local dot_string_fourth_letter_to_check=${dot_string_fourth_letter}\n\
    \  local dot_string_fifth_letter_to_check=${dot_string_fifth_letter}\n  local\
    \ dot_string_sixth_letter_to_check=${dot_string_sixth_letter}\n  local dot_string_seventh_letter_to_check=${dot_string_seventh_letter}\n\
    \  local dot_string_eighth_letter_to_check=${dot_string_eighth_letter}\n  local\
    \ dot_string_ninth_letter_to_check=${dot_string_ninth_letter}\n  local dot_string_tenth_letter_to_check=${dot_string_tenth_letter}\n\
    \  local dot_string_first_letter_to_check_length=${#dot_string_first_letter_to_check}\n\
    \  local dot_string_second_letter_to_check_length=${#dot_string_second_letter_to_check}\n\
    \  local dot_string_third_letter_to_check_length=${#dot_string_third_letter_to_check}\n\
    \  local dot_string_fourth_letter_to_check_length=${#dot_string_fourth_letter_to_check}\n\
    \  local dot_string_fifth_letter_to_check_length=${#dot_string_fifth_letter_to_check}\n\
    \  local dot_string_sixth_letter_to_check_length=${#dot_string_sixth_letter_to_check}\n\
    \  local dot_string_seventh_letter_to_check_length=${#dot_string_seventh_letter_to_check}\n\
    \  local dot_string_eighth_letter_to_check_length=\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_base=\"${file_name%.*}\"\
    \n  local file_base=\"${file_base##*/}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[!0-9]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n  local file_base=\"${file_base##[^a-zA-Z0-9.]*}\"\n  local file_base=\"${file_base%.*}\"\
    \n\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  if [[ $file_name_length -gt 3\
    \ ]]; then\n    echo \"No\"\n  else\n    local file_name_parts=$(echo $file_name\
    \ | sed 's/\\.//g' | sed 's/^[^a-zA-Z]*//g' | sed 's/[^a-zA-Z]*$//g')\n    if\
    \ [[ $file_name_parts == \"\" ]]; then\n      echo \"No\"\n    else\n      local\
    \ file_name_parts_length=${#file_name_parts}\n      if [[ $file_name_parts_length\
    \ -gt 1 ]]; then\n        local file_name_parts_first=$(echo $file_name_parts\
    \ | sed 's/^[^a-zA-Z]*//g')\n        if [[ $file_name_parts_first == \"\" ]];\
    \ then\n          echo \"No\"\n        else\n          local file_name_parts_first_length=${#file_name_parts_first}\n\
    \          if [[ $file_name_parts_first_length -gt 1 ]]; then\n            local\
    \ file_name_parts_first_first=$(echo $file_name_parts_first | sed 's/^[^a-zA-Z]*//g')\n\
    \            if [[ $file_name_parts_first_first == \"\" ]]; then\n           \
    \   echo \"No\"\n            else\n              local file_name_parts_first_first_length=${#file_name_parts_first_first}\n\
    \              if [[ $file_name_parts_first_first_length -gt 1 ]]; then\n    \
    \            local file_name_parts_first_first_first=$(echo $file_name_parts_first_first\
    \ | sed 's/^[^a-zA-Z]*//g')\n                if [[ $file_name_parts_first_first_first\
    \ == \"\" ]]; then\n                  echo \"No\"\n                else\n    \
    \              local file_name_parts_first_first_first_length=${#file_name_parts_first_first_first}\n\
    \                  if [[ $file_name_parts_first_first_first_length -gt 1 ]]; then\n\
    \                    local file_name_parts_first_first_first_first=$(echo $file_name_parts_first_first_first\
    \ | sed 's/^[^a-zA-Z]*//g')\n                    if [[ $file_name_parts_first_first_first_first\
    \ == \"\" ]]; then\n                      echo \"No\"\n                    else\n\
    \                      local file_name_parts_first_first_first_first_length=${#file_name_parts_first_first_first_first}\n\
    \                      if [[ $file_name_parts_first_first_first_first_length -gt\
    \ 1 ]]; then\n                        local file_name_parts_first_first_first_first_first=$(echo\
    \ $file_name_parts_first_first_first_first | sed 's/^[^a-zA-Z]*//g')\n       \
    \                 if [[ $file_name_parts_first_first_first_first_length -gt 1\
    \ ]]; then\n                          echo \"No\"\n                        else\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvx2x74t2.sh: line 58: syntax error near unexpected token `}''

    /tmp/tmpvx2x74t2.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_extension_first_letter=${file_name_no_extension:0:1}\n\
    \  local file_name_no_extension_first_letter_length=${#file_name_no_extension_first_letter}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet=${file_name_no_extension_first_letter:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_length=${#file_name_no_extension_first_letter_is_latin_alphabet}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z:0:1}\n\
    \  local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnegae02j.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name:0:1}\n\
    \    local dot_position_count=${#dot_position}\n    local dot_position_is_letter=${#dot_position}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    \    local dot_position_is_letter=${dot_position_is_letter:0:1}\n    local dot_position_is_letter=${dot_position_is_letter:1}\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_chars=\"${!file_name_check_length}\"\
    \n    local file_name_check_chars_length=${#file_name_check_chars}\n    local\
    \ file_name_check_chars_chars=\"${!file_name_check_chars_length}\"\n    local\
    \ file_name_check_chars_chars_length=${#file_name_check_chars_chars}\n    local\
    \ file_name_check_chars_chars_chars=\"${!file_name_check_chars_chars_length}\"\
    \n    local file_name_check_chars_chars_chars_length=${#file_name_check_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars=\"${!file_name_check_chars_chars_chars_length}\"\
    \n    local file_name_check_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars=\"${!file_name_check_chars_chars_chars_chars_length}\"\
    \n    local file_name_check_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_chars=\"${!file_name_check_chars_chars_chars_chars_chars_length}\"\
    \n    local file_name_check_chars_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_chars_chars=\"${!file_name_check_chars_chars_chars_chars_chars_chars_length}\"\
    \n    local file_name_check_chars_chars_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_chars_chars_chars_chars_chars_chars_chars_chars_length=${#file_name_check_chars_chars_chars_chars_chars_chars_chars_chars_chars}\n\
    \    local file_name_check_char\n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension%.*}\n    local file_name_no_dot_start_letter=${file_name_no_extension%.*}\n\
    \    local file_name_no_dot_end_letter=${file_name_no_extension#*.}\n    local\
    \ file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n   \
    \ local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n \
    \   local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot_length}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmbe289xz.sh: line 23: file_name_no_dot_length=${#file_name_no_extension%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local file_name_check=No\n  \n  if\
    \ [[ $file_name_length -gt 3 ]]; then\n    file_name_check=Yes\n  fi\n  \n  if\
    \ [[ $file_name_length -ne 3 ]]; then\n    file_name_check=No\n  fi\n  \n  if\
    \ [[ $file_name_length -eq 3 ]]; then\n    file_name_check=$(echo $file_name |\
    \ sed -e 's/^[0-9]\\{3\\}//g')\n  fi\n  \n  if [[ $file_name_check =~ ^[0-9a-zA-Z\\\
    .]+ ]]; then\n    file_name_check=Yes\n  fi\n  \n  if [[ $file_name_check =~ ^[0-9a-zA-Z\\\
    .]+$ ]]; then\n    file_name_check=Yes\n  fi\n  \n  if [[ $file_name_check =~\
    \ ^[0-9a-zA-Z\\.]+\\.(txt|exe|dll)$ ]]; then\n    file_name_check=Yes\n  fi\n\
    \  \n  if [[ $file_name_check == \"Yes\" ]]; then\n    echo \"$file_name_check\"\
    \n  else\n    echo \"$file_name_check\"\n  fi\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_lower=\"\
    ${file_extension,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprxl51icc.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmprxl51icc.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_check=\"No\"\n\
    \  \n  if [[ $file_name_length -gt 3 ]]; then\n    echo \"$file_name has more\
    \ than three digits.\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 0 ]]; then\n    echo \"$file_name has zero length.\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 1 ]]; then\n    echo \"$file_name\
    \ has one dot.\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ! $file_name\
    \ =~ ^[0-9]*\\.?[0-9]*$ ]]; then\n    echo \"$file_name does not contain one dot\
    \ and starts with a digit.\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ !\
    \ $file_name =~ ^[a-z]*\\.?[txt|exe|dll]$ ]]; then\n    echo \"$file_name does\
    \ not contain one dot and starts with a letter.\"\n    file_name_check=\"Yes\"\
    \n  fi\n  \n  echo \"$file_name_check\"\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_length_max=3\n\
    \    local file_name_length_min=2\n    local file_name_length_dot=2\n    local\
    \ file_name_length_dot_min=1\n    local file_name_length_dot_max=3\n    local\
    \ file_name_length_dot_dot_min=1\n    local file_name_length_dot_dot_max=3\n \
    \   local file_name_length_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n    local\
    \ file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n  \
    \  local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_max=3\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_min=1\n\
    \    local file_name_length_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_parts=()\n  local\
    \ file_name_parts_length=()\n  local file_name_parts_count=()\n  local file_name_parts_count_length=()\n\
    \  local file_name_parts_count_index=()\n  local file_name_parts_count_index_length=()\n\
    \  local file_name_parts_count_index_count=()\n  local file_name_parts_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index=()\n  local file_name_parts_count_index_count_index_length=()\n\
    \  local file_name_parts_count_index_count_index_count=()\n  local file_name_parts_count_index_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index=()\n  local file_name_parts_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count=()\n  local\
    \ file_name_parts_count_index_count_index_count_index_count_length=()\n  local\
    \ file_name_parts_count_index_count_index_count_index_count_index=()\n  local\
    \ file_name_parts_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=A\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=Z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_ext=${file_name%.*}\n\
    \  local file_name_no_ext_length=${#file_name_no_ext}\n  local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  local file_name_no_dot_start_letter_valid=false\n\
    \  local file_name_no_dot_end_letter_valid=false\n  local file_name_no_dot_valid=false\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  local file_name_no_dot_start_letter_valid=false\n\
    \  local file_name_no_dot_end_letter_valid=false\n  local file_name_no_dot_valid=false\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  local file_name_no_dot_start_letter_valid=false\n\
    \  local file_name_no_dot_end_letter_valid=false\n  local file_name_no_dot_valid=false\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  local file_name_no_dot_start_letter_valid=false\n\
    \  local file_name_no_dot_end_letter_valid=false\n  local file_name_no_dot_valid=false\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  local file_name_no_dot_start_letter_valid=false\n\
    \  local file_name_no_dot_end_letter_valid=false\n  local file_name_no_dot_valid=false\n\
    \  local file_name_no_dot_start_letter_valid=false\n  local file_name_no_dot_end_letter_valid=false\n\
    \  local file_name_no_dot_valid=false\n  \n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7i6fs7m1.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=${#file_extension}\n\
    \    local file_extension_length=$((${file_extension_length} + 1))\n    local\
    \ file_extension_length=$((${file_extension_length} % 3))\n    local file_extension_length=$((${file_extension_length}\
    \ + 1))\n    local file_extension_length=$((${file_extension_length} % 3))\n \
    \   local file_extension_length=$((${file_extension_length} + 1))\n    local file_extension_length=$((${file_extension_length}\
    \ % 3))\n    local file_extension_length=$((${file_extension_length} + 1))\n \
    \   local file_extension_length=$((${file_extension_length} % 3))\n    local file_extension_length=$((${file_extension_length}\
    \ + 1))\n    local file_extension_length=$((${file_extension_length} % 3))\n \
    \   local file_extension_length=$((${file_extension_length} + 1))\n    local file_extension_length=$((${file_extension_length}\
    \ % 3))\n    local file_extension_length=$((${file_extension_length} + 1))\n \
    \   local file_extension_length=$((${file_extension_length} % 3))\n    local file_extension_length=$((${file_extension_length}\
    \ + 1))\n    local file_extension_length=$((${file_extension_length} % 3))\n \
    \   local file_extension_length=$((${file_extension_length} + 1))\n    local file_extension_length=$((${file_extension_length}\
    \ % 3))\n    local file_extension_length=$((${file_extension_length} + 1))\n \
    \   local file_extension_length=$((${file_extension_length} % 3))\n    local file_extension_length=$((${file_extension_length}\
    \ + 1))\n    local file_extension_length=$((${file_extension_length} % 3))\n \
    \   local file_extension_length=$((${file_extension_length} + 1))\n    local file_extension_length=$((${file_extension_length}\
    \ % 3))\n    local file_extension_length=$((${file_extension_length} + 1))\n \
    \   local file_extension_length=$((${file_extension_length} % 3))\n    local file_extension_length=$((${file_extension_length}\
    \ + 1))\n    local file_extension_length=$((${file_extension_length} % 3))\n \
    \   local file_extension_length=$((\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj9aliarv.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpj9aliarv.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local file_name_check_result=\"No\"\
    \n  \n  if [[ $file_name_length -gt 3 ]]; then\n    echo \"ERROR: File name too\
    \ long ($file_name_length)\"\n    file_name_check_result=\"Yes\"\n  fi\n  \n \
    \ if [[ $file_name_length -eq 0 ]]; then\n    echo \"ERROR: File name empty\"\n\
    \    file_name_check_result=\"Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 1\
    \ ]]; then\n    echo \"ERROR: File name contains only one dot\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"a\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"b\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"c\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"d\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"e\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"f\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"g\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"h\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:0:1)\"\n    file_name_check_result=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:0:1} != \"i\" ]]; then\n    echo \"ERROR:\
    \ File name starts with an invalid character ($file_name:\n}\n\ncandidate() {\n\
    \    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n\
    \    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1q5ulq33.sh: line 113: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1q5ulq33.sh: line 117: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_parts=()\n  local\
    \ file_name_parts_length=()\n  local file_name_parts_count=()\n  local file_name_parts_count_index=()\n\
    \  local file_name_parts_count_index_length=()\n  local file_name_parts_count_index_count=()\n\
    \  local file_name_parts_count_index_count_length=()\n  local file_name_parts_count_index_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_length=()\n  local file_name_parts_count_index_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \  local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_length=()\n    local file_name_parts_count_index=()\n\
    \    local file_name_parts_count_index_length=()\n    local file_name_parts_count_index_count=()\n\
    \    local file_name_parts_count_index_count_length=()\n    local file_name_parts_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_length=()\n    local file_name_parts_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index=()\n    local file_name_parts_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_length=()\n    local file_name_parts_count_index=()\n\
    \    local file_name_parts_count_index_length=()\n    local file_name_parts_count_index_count=()\n\
    \    local file_name_parts_count_index_count_length=()\n    local file_name_parts_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_length=()\n    local file_name_parts_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index=()\n    local file_name_parts_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 2 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 4 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 5 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 6 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 7 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 8 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 9 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_check == \"Yes\" ]]; then\n        if\
    \ [[ \"$file_name\" =~ ^[0-9]\\.$ ]]; then\n            if [[ \"$file_name\" =~\
    \ ^[0-9]\\.[0-9]\\.$ ]]; then\n                if [[ \"$file_name\" =~ ^[0-9]\\\
    .[0-9]\\.[0-9]\\.$ ]]; then\n                    if [[ \"$file_name\" =~ ^[0-9]\\\
    .[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n                        if [[ \"$file_name\"\
    \ =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n                   \
    \         if [[ \"$file_name\" =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\\
    .$ ]]; then\n                                if [[ \"$file_name\" =~ ^[0-9]\\\
    .[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n                \
    \                    if [[ \"$file_name\" =~ ^[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\\
    .[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.$ ]]; then\n                        \
    \                file_name_check=\"Yes\"\n                                   \
    \ fi\n\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppzh1t2zr.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmppzh1t2zr.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_ext=\"${file_name%.*}\"\
    \n  local file_name_no_ext_length=${#file_name_no_ext}\n  local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n  local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_ext}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpyke7rd01.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_letter=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_letter_length=${#file_name_no_extension_first_letter}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet=${file_name_no_extension_first_letter:0:1}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_length=${#file_name_no_extension_first_letter_is_latin_alphabet}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet:0:1}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z:0:1}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z:0:1}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_length=${#file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z=${file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z:0:1}\n\
    \    local file_name_no_extension_first_letter_is_latin_alphabet_is_a_or_z_is_a_or_z_is_a_or_z_is_a_or_z_length=${#file_name_no_extension_first_letter_is_lat\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv1sw16he.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_second=z\n\
    \    local file_name_check_dot_second_length=2\n    local file_name_check_dot_third=A\n\
    \    local file_name_check_dot_third_length=2\n    local file_name_check_dot_fourth=Z\n\
    \    local file_name_check_dot_fourth_length=2\n    local file_name_check_dot_fifth=a\n\
    \    local file_name_check_dot_fifth_length=2\n    local file_name_check_dot_sixth=z\n\
    \    local file_name_check_dot_sixth_length=2\n    local file_name_check_dot_seventh=A\n\
    \    local file_name_check_dot_seventh_length=2\n    local file_name_check_dot_eighth=Z\n\
    \    local file_name_check_dot_eighth_length=2\n    local file_name_check_dot_ninth=a\n\
    \    local file_name_check_dot_ninth_length=2\n    local file_name_check_dot_tenth=z\n\
    \    local file_name_check_dot_tenth_length=2\n    local file_name_check_dot_eleventh=A\n\
    \    local file_name_check_dot_eleventh_length=2\n    local file_name_check_dot_twelfth=Z\n\
    \    local file_name_check_dot_twelfth_length=2\n    local file_name_check_dot_thirteenth=a\n\
    \    local file_name_check_dot_thirteenth_length=2\n    local file_name_check_dot_fourteenth=z\n\
    \    local file_name_check_dot_fourteenth_length=2\n    local file_name_check_dot_fifteenth=A\n\
    \    local file_name_check_dot_fifteenth_length=2\n    local file_name_check_dot_sixteenth=z\n\
    \    local file_name_check_dot_sixteenth_length=2\n    local file_name_check_dot_seventeenth=A\n\
    \    local file_name_check_dot_seventeenth_length=2\n    local file_name_check_dot_eighteenth=Z\n\
    \    local file_name_check_dot_eighteenth_length=2\n    local file_name_check_dot_nineteenth=a\n\
    \    local file_name_check_dot_nineteenth_length=2\n    local file_name_check_dot_twentieth=z\n\
    \    local file_name_check_dot_tw\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local dot_position=\"$(echo $file_name | sed 's/\\.//g'\
    \ | sed 's/^[^0-9]*//g' | sed 's/[^0-9]*$//g')\"\n    local dot_position_count=\"\
    $(echo $dot_position | wc -c)\"\n    if [[ $dot_position_count -gt 3 ]]; then\n\
    \        echo \"No\"\n    else\n        local dot_position_index=\"$(echo $dot_position\
    \ | sed 's/^[^0-9]*//g' | sed 's/[^0-9]*$//g')\"\n        local dot_position_index_count=\"\
    $(echo $dot_position_index | wc -c)\"\n        if [[ $dot_position_index_count\
    \ -eq 1 ]]; then\n            local dot_position_index_letter=\"$(echo $dot_position_index\
    \ | sed 's/^[^a-z]*//g' | sed 's/[^a-z]*$//g')\"\n            if [[ $dot_position_index_letter\
    \ =~ ^[a-Z]$ ]]; then\n                if [[ $dot_position_index_letter =~ ^[0-9]$\
    \ ]]; then\n                    if [[ $dot_position_index_letter =~ ^[0-9][0-9]$\
    \ ]]; then\n                        echo \"Yes\"\n                    else\n \
    \                       echo \"No\"\n                    fi\n                else\n\
    \                    echo \"No\"\n                fi\n            else\n     \
    \           echo \"No\"\n            fi\n        else\n            echo \"No\"\
    \n        fi\n    fi\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_position=${#file_name}\n  local dot_position_count=0\n  local dot_position_string=\"\
    \"\n  local dot_position_string_count=0\n  local dot_position_string=\"\"\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n  local dot_position_string_count=0\n  local dot_position_string_count=0\n\
    \  local dot_position_string_count=0\n  local dot_position_string_count=0\n  local\
    \ dot_position_string_count=0\n\n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name_length}\n\
    \    local dot_position_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local dot_position=\"${file_name%.*}\"\n    local dot_position=\"\
    ${dot_position#*.}\"\n    local dot_position=\"${dot_position%%}\"\n    local\
    \ dot_position=\"${dot_position//./}\"\n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\
    \n    local dot_position=\"${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//[^a-zA-Z0-9]}\"\n    local dot_position=\"\
    ${dot_position//^}\"\n    local dot_position=\"${dot_position//$dot_position}\"\
    \n    local dot_position=\"${dot_position//\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp01zf063i.sh: line 94: unexpected EOF while looking for matching
    `"''

    /tmp/tmp01zf063i.sh: line 98: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid_file_names=(\"txt\" \"exe\" \"dll\")\n    local\
    \ valid_file_name_length=3\n    local valid_file_name_dot=1\n    local valid_file_name_first_letter=true\n\
    \    local valid_file_name_after_dot=(\"txt\" \"exe\" \"dll\")\n    local valid_file_name_after_dot_length=3\n\
    \    local valid_file_name_after_dot_dot=1\n    local valid_file_name_after_dot_first_letter=true\n\
    \    local valid_file_name_after_dot_second_letter=true\n    local valid_file_name_after_dot_third_letter=true\n\
    \    local valid_file_name_after_dot_fourth_letter=true\n    local valid_file_name_after_dot_fifth_letter=true\n\
    \    local valid_file_name_after_dot_sixth_letter=true\n    local valid_file_name_after_dot_seventh_letter=true\n\
    \    local valid_file_name_after_dot_eighth_letter=true\n    local valid_file_name_after_dot_ninth_letter=true\n\
    \    local valid_file_name_after_dot_tenth_letter=true\n    local valid_file_name_after_dot_eleventh_letter=true\n\
    \    local valid_file_name_after_dot_twelfth_letter=true\n    local valid_file_name_after_dot_thirteenth_letter=true\n\
    \    local valid_file_name_after_dot_fourteenth_letter=true\n    local valid_file_name_after_dot_fifteenth_letter=true\n\
    \    local valid_file_name_after_dot_sixteenth_letter=true\n    local valid_file_name_after_dot_seventeenth_letter=true\n\
    \    local valid_file_name_after_dot_eighteenth_letter=true\n    local valid_file_name_after_dot_nineteenth_letter=true\n\
    \    local valid_file_name_after_dot_twentieth=true\n    local valid_file_name_after_dot_twenty_first=true\n\
    \    local valid_file_name_after_dot_twenty_second=true\n    local valid_file_name_after_dot_twenty_third=true\n\
    \    local valid_file_name_after_dot_twenty_fourth=true\n    local valid_file_name_after_dot_twenty_fifth=true\n\
    \    local valid_file_name_after_dot_twenty_sixth=true\n    local valid_file_name_after_dot_twenty_seventh=true\n\
    \    local valid_file_name_after_dot_twenty_eighth=true\n    local valid_file_name_after_dot_twenty_ninth=true\n\
    \    local valid_file_name_after_dot_twenty_tenth=true\n    local valid_file_name_after_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=A\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=Z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_not_empty=1\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=1\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty_file_name=1\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_length=2\n   \
    \ local file_name_check_dot_last_letter_not_empty_file_name=1\n    local file_name_check_dot_last_letter_not_empty_file_name_length=2\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty=1\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty=1\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty_length=2\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_file_name=1\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_file_name_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty_file_name=1\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty_file_name_length=2\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_file_name_dot_not_empty=1\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_file_name_dot_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty_file_name_dot_not_empty=1\n\
    \    local file_name_check_dot_last_letter_not_empty_file_name_dot_not_empty_file_name_dot_not_empty_length=2\n\
    \    local file_name_check_dot_first_letter_not_empty_file_name_dot_not_empty_file_name_dot_not_empty_file_name=1\n\
    \    local file_name_check_dot_first_letter_not_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid=No\n    local dot=No\n    local first_letter=No\n\
    \    local extensions=()\n    local ext\n    local extlen\n    local extlen2\n\
    \    local extlen3\n    local extlen4\n    local extlen5\n    local extlen6\n\
    \    local extlen7\n    local extlen8\n    local extlen9\n    local extlen10\n\
    \    local extlen11\n    local extlen12\n    local extlen13\n    local extlen14\n\
    \    local extlen15\n    local extlen16\n    local extlen17\n    local extlen18\n\
    \    local extlen19\n    local extlen20\n    local extlen21\n    local extlen22\n\
    \    local extlen23\n    local extlen24\n    local extlen25\n    local extlen26\n\
    \    local extlen27\n    local extlen28\n    local extlen29\n    local extlen30\n\
    \    local extlen31\n    local extlen32\n    local extlen33\n    local extlen34\n\
    \    local extlen35\n    local extlen36\n    local extlen37\n    local extlen38\n\
    \    local extlen39\n    local extlen40\n    local extlen41\n    local extlen42\n\
    \    local extlen43\n    local extlen44\n    local extlen45\n    local extlen46\n\
    \    local extlen47\n    local extlen48\n    local extlen49\n    local extlen50\n\
    \    local extlen51\n    local extlen52\n    local extlen53\n    local extlen54\n\
    \    local extlen55\n    local extlen56\n    local extlen57\n    local extlen58\n\
    \    local extlen59\n    local extlen60\n    local extlen61\n    local extlen62\n\
    \    local extlen63\n    local extlen64\n    local extlen65\n    local extlen66\n\
    \    local extlen67\n    local extlen68\n    local extlen69\n    local extlen70\n\
    \    local extlen71\n    local extlen72\n    local extlen73\n    local extlen74\n\
    \    local extlen75\n    local extlen76\n    local extlen77\n    local extlen78\n\
    \    local extlen79\n    local extlen\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check_result=\"\
    No\"\n    local file_name_check_result_message=\"The file's name contains invalid\
    \ characters\"\n    local file_name_check_result_message_length=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length2=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length3=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length4=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length5=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length6=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length7=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length8=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length9=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length10=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length11=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length12=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length13=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length14=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length15=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length16=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length17=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length18=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length19=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length20=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length21=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length22=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length23=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length24=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length25=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length26=\"${#file_name_check_result_message}\"\
    \n    local \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid=No\n    local dot_pos=${#file_name}\n    local\
    \ dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n    local dot_pos=${#file_name}\n\
    \    local dot_pos=${\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvckf4prr.sh: line 114: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=${file_name%.*}\n\
    \    local file_name_no_ext_length=${#file_name_no_ext}\n    local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \    local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n    local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range=${file_name_no_dot_start_letter:0:1}\n\
    \    local file_name_no_dot_end_letter_in_range=${file_name_no_dot_end_letter:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range_in_list:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range_in_list:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range_in_list:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range_in_list:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_letter_in_range_in_list=${file_name_no_dot_end_letter_in_range_in_list:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_in_range_in_list=${file_name_no_dot_start_letter_in_range_in_list:1}\n\
    \    local file_name_no_dot_end_\n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4iu8kwbs.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local file_name_check=\"No\"\n  \n\
    \  if [[ $file_name_length -gt 3 ]]; then\n    echo \"$file_name has more than\
    \ three digits\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with '-'\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ ${file_name:(-1)} == \"-\" ]]; then\n    echo \"$file_name\
    \ ends with '-'\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"-\" ]]; then\n    echo \"$file_name starts with \n}\n\ncandidate() {\n\
    \    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n\
    \    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0fxuuh4v.sh: line 123: unexpected EOF while looking for matching
    `"''

    /tmp/tmp0fxuuh4v.sh: line 127: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check_result=\"\
    No\"\n    local file_name_check_result_message=\"Invalid file name\"\n    local\
    \ file_name_check_result_message_length=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length2=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length3=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length4=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length5=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length6=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length7=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length8=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length9=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length10=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length11=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length12=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length13=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length14=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length15=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length16=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length17=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length18=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length19=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length20=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length21=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length22=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length23=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length24=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length25=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_message_length26=\"${#file_name_check_result_message}\"\
    \n    local file_name_check_result_\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_lower=\"\
    ${file_extension,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_extension_lower,,}\"\n    local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n    local file_extension_lower=\"${file_extension_lower,,}\"\
    \n    local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprxl51icc.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmprxl51icc.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_lower=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_lower_length=${#file_name_check_chars_lower}\n\
    \    local file_name_check_chars_upper=${file_name_check_chars:1:1}\n    local\
    \ file_name_check_chars_upper_length=${#file_name_check_chars_upper}\n    local\
    \ file_name_check_chars_digit=${file_name_check_chars:2:1}\n    local file_name_check_chars_digit_length=${#file_name_check_chars_digit}\n\
    \    local file_name_check_chars_dot=${file_name_check_chars:3:1}\n    local file_name_check_chars_dot_length=${#file_name_check_chars_dot}\n\
    \    local file_name_check_chars_non_empty=${file_name_check_chars:4:1}\n    local\
    \ file_name_check_chars_non_empty_length=${#file_name_check_chars_non_empty}\n\
    \    local file_name_check_chars_non_empty_file_name=${file_name_check_chars:5:1}\n\
    \    local file_name_check_chars_non_empty_file_name_length=${#file_name_check_chars_non_empty_file_name}\n\
    \    local file_name_check_chars_non_empty_file_name_starts_with_letter=${file_name_check_chars_non_empty_file_name:0:1}\n\
    \    local file_name_check_chars_non_empty_file_name_starts_with_letter_length=${#file_name_check_chars_non_empty_file_name_starts_with_letter}\n\
    \    local file_name_check_chars_non_empty_file_name_contains_one_dot=${file_name_check_chars_non_empty_file_name:1:1}\n\
    \    local file_name_check_chars_non_empty_file_name_contains_one_dot_length=${#file_name_check_chars_non_empty_file_name_contains_one_dot}\n\
    \    local file_name_check_chars_non_empty_file_name_contains_one_dot_dot_dot_dot_length=${#file_name_check_chars_non_empty_file_name_contains_one_dot_dot_dot_dot}\n\
    \    local file_name_check_chars_non_empty_file_name_contains_one_dot_dot_dot_dot_dot_length=${#file_name_check_chars_non_empty_file_name_contains_one_dot_dot_dot_dot_dot}\n\
    \    local file_name_check_chars_non_empty_file_name_contains_one_dot_dot_dot_dot_dot_dot_length=${#file_name_check_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_4aswn98.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=\"\
    ${#file_extension}\"\n  local file_extension_length2=\"${#file_extension//./}\"\
    \n  local file_extension_length3=\"${#file_extension//./}\"\n  local file_extension_length4=\"\
    ${#file_extension//./}\"\n  local file_extension_length5=\"${#file_extension//./}\"\
    \n  local file_extension_length6=\"${#file_extension//./}\"\n  local file_extension_length7=\"\
    ${#file_extension//./}\"\n  local file_extension_length8=\"${#file_extension//./}\"\
    \n  local file_extension_length9=\"${#file_extension//./}\"\n  local file_extension_length10=\"\
    ${#file_extension//./}\"\n  local file_extension_length11=\"${#file_extension//./}\"\
    \n  local file_extension_length12=\"${#file_extension//./}\"\n  local file_extension_length13=\"\
    ${#file_extension//./}\"\n  local file_extension_length14=\"${#file_extension//./}\"\
    \n  local file_extension_length15=\"${#file_extension//./}\"\n  local file_extension_length16=\"\
    ${#file_extension//./}\"\n  local file_extension_length17=\"${#file_extension//./}\"\
    \n  local file_extension_length18=\"${#file_extension//./}\"\n  local file_extension_length19=\"\
    ${#file_extension//./}\"\n  local file_extension_length20=\"${#file_extension//./}\"\
    \n  local file_extension_length21=\"${#file_extension//./}\"\n  local file_extension_length22=\"\
    ${#file_extension//./}\"\n  local file_extension_length23=\"${#file_extension//./}\"\
    \n  local file_extension_length24=\"${#file_extension//./}\"\n  local file_extension_length25=\"\
    ${#file_extension//./}\"\n  local file_extension_length26=\"${#file_extension//./}\"\
    \n  local file_extension_length27=\"${#file_extension//./}\"\n  local file_extension_length28=\"\
    ${#file_extension//./}\"\n  local file_extension_length29=\"${#file_extension//./}\"\
    \n  local file_extension_length30=\"${#file_extension//./}\"\n  local file_extension_length31=\"\
    ${#file_extension//./}\"\n  local file_extension_length32=\"${#file_extension//./}\"\
    \n  local file_extension_length33=\"${#file_extension//./}\"\n  local file_extension\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpztpvjyu1.sh: line 22: ${#file_extension//./}: bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    if [[ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*$ ]]; then\n   \
    \     if [[ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*\\.?[0-9]*$ ]]; then\n       \
    \     if [[ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*$ ]]; then\n\
    \                if [[ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\\
    .?[0-9]*$ ]]; then\n                    if [[ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*\\\
    .?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*$ ]]; then\n                        if [[\
    \ $file_name =~ ^[0-9][0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\\
    .?[0-9]*$ ]]; then\n                            if [[ $file_name =~ ^[0-9][0-9]*\\\
    .?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*\\.?[0-9]*$ ]]; then\n\
    \                                echo \"Yes\"\n                            else\n\
    \                                echo \"No\"\n                            fi\n\
    \                        else\n                            echo \"No\"\n     \
    \                   fi\n                    else\n                        echo\
    \ \"No\"\n                    fi\n                else\n                    echo\
    \ \"No\"\n                fi\n            else\n                echo \"No\"\n\
    \            fi\n        else\n            echo \"No\"\n        fi\n    else\n\
    \        echo \"No\"\n    fi\n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_no_dot_length=${#file_name_no_extension_no_dot}\n   \
    \ local file_name_no_extension_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoarsq3w9.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"a\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"b\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"c\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"d\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"e\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"f\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"g\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"h\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"i\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"j\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"k\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"l\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"m\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"n\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"o\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"p\" ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ ${file_name:0:1} != \"q\" ]]; then\n        \n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeiz268x2.sh: line 101: syntax error near unexpected token `}''

    /tmp/tmpeiz268x2.sh: line 101: `}''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_index=${file_name_length}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\
    \  local dot_index=${file_name_index}\n  local dot_index=${file_name_index}\n\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_length=\"\
    ${#file_extension}\"\n  local file_extension_substring=\"${file_extension:0:1}\"\
    \n  local file_extension_substring_length=\"${#file_extension_substring}\"\n \
    \ local file_extension_substring_letters=\"${file_extension_substring:0:1}\"\n\
    \  local file_extension_substring_letters_length=\"${#file_extension_substring_letters}\"\
    \n  local file_extension_substring_letters_not_empty=\"${file_extension_substring_letters:1}\"\
    \n  local file_extension_substring_letters_not_empty_length=\"${#file_extension_substring_letters_not_empty}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter=\"\
    ${file_extension_substring_letters_not_empty:1}\"\n  local file_extension_substring_letters_not_empty_not_starts_with_letter_length=\"\
    ${#file_extension_substring_letters_not_empty_not_starts_with_letter}\"\n  local\
    \ file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter=\"\
    ${file_extension_substring_letters_not_empty_not_starts_with_letter:1}\"\n  local\
    \ file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_length=\"\
    ${#file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot=\"\
    ${file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot:1}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_length=\"\
    ${#file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_not_contains_dot_length=\"\
    ${#file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_not_contains_dot}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_not_contains_dot_not_contains_dot_length=\"\
    ${#file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_not_contains_dot_not_contains_dot}\"\
    \n  local file_extension_substring_letters_not_empty_not_starts_with_letter_not_ends_with_letter_not_contains_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_check=\"No\"\n\
    \  \n  if [[ $file_name_length -gt 3 ]]; then\n    echo \"$file_name has more\
    \ than three digits\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 0 ]]; then\n    echo \"$file_name has zero length\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 1 ]]; then\n    echo \"$file_name\
    \ has one character\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 2 ]]; then\n    echo \"$file_name has two characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 3 ]]; then\n    echo \"$file_name\
    \ has three characters\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 4 ]]; then\n    echo \"$file_name has four characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 5 ]]; then\n    echo \"$file_name\
    \ has five characters\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 6 ]]; then\n    echo \"$file_name has six characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 7 ]]; then\n    echo \"$file_name\
    \ has seven characters\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 8 ]]; then\n    echo \"$file_name has eight characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 9 ]]; then\n    echo \"$file_name\
    \ has nine characters\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 10 ]]; then\n    echo \"$file_name has ten characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n  if [[ $file_name_length -eq 11 ]]; then\n    echo \"$file_name\
    \ has eleven characters\"\n    file_name_check=\"Yes\"\n  fi\n  \n  if [[ $file_name_length\
    \ -eq 12 ]]; then\n    echo \"$file_name has twelve characters\"\n    file_name_check=\"\
    Yes\"\n  fi\n  \n\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_dot=${file_name%.*}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_with_letter=${file_name_no_dot:0:1}\n\
    \    local file_name_no_dot_start_with_letter_length=${#file_name_no_dot_start_with_letter}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet=${file_name_no_dot_start_with_letter:0:1}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_length=${#file_name_no_dot_start_with_letter_is_latin_alphabet}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter=${file_name_no_dot_start_with_letter_is_latin_alphabet:0:1}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_length=${#file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet=${file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter:0:1}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_length=${#file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet=${file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet:0:1}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet_length=${#file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet_is_valid_latin_alphabet=${file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet_is_valid_latin_alphabet:0:1}\n\
    \    local file_name_no_dot_start_with_letter_is_latin_alphabet_is_valid_letter_is_valid_latin_alphabet_is_valid_latin_alphabet_is_valid_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        if [[\
    \ \"$file_name\" =~ ^[0-9]$ ]]; then\n            file_name_check=\"Yes\"\n  \
    \      fi\n    fi\n    \n    if [[ $file_name_length -eq 2 ]]; then\n        if\
    \ [[ \"$file_name\" =~ ^[0-9]$ ]]; then\n            if [[ \"$file_name\" =~ ^[0-9]\\\
    .$ ]]; then\n                file_name_check=\"Yes\"\n            fi\n       \
    \ fi\n    fi\n    \n    if [[ $file_name_length -eq 3 ]]; then\n        if [[\
    \ \"$file_name\" =~ ^[0-9]$ ]]; then\n            if [[ \"$file_name\" =~ ^[0-9]\\\
    .$ ]]; then\n                if [[ \"$file_name\" =~ ^[0-9]\\.[0-9]$ ]]; then\n\
    \                    file_name_check=\"Yes\"\n                fi\n           \
    \ fi\n        fi\n    fi\n    \n    if [[ $file_name_length -eq 4 ]]; then\n \
    \       if [[ \"$file_name\" =~ ^[0-9]$ ]]; then\n            if [[ \"$file_name\"\
    \ =~ ^[0-9]\\.$ ]]; then\n                if [[ \"$file_name\" =~ ^[0-9]\\.[0-9]$\
    \ ]]; then\n                    if [[ \"$file_name\" =~ ^[0-9]\\.[0-9]\\.$ ]];\
    \ then\n                        file_name_check=\"Yes\"\n                    fi\n\
    \                fi\n            fi\n        fi\n    fi\n    \n    if [[ $file_name_length\
    \ -eq 5 ]]; then\n        if [[ \"$file_name\" =~ ^[0-9]$ ]]; then\n         \
    \   if [[ \"$file_name\" =~ ^[0-9]\\.$ ]]; then\n                if [[ \"$file_name\"\
    \ =~ ^[0-9]\\.[0-9]$ ]]; then\n                    if [[ \"$file_name\" =~ ^[0-9]\\\
    .[0-9]\\.$ ]]; then\n                        if [[ \"$file_name\" =~ ^[0-9]\\\
    .[0-9]\\.[0-9]$ ]]; then\n                            file_name_check=\"Yes\"\n\
    \                        fi\n                    fi\n                fi\n    \
    \        fi\n        fi\n    fi\n    \n    if [[ $file_name_length -eq 6 ]]; then\n\
    \        if [[ \"$file_name\" =~ ^[0-9]$ ]]; then\n            if [[ \"$file_name\"\
    \ =~ ^[0-9]\\.$ ]]; then\n                if [[ \"$file_name\" =~ ^[0-9]\\.[0-9\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8lf2npjk.sh: line 84: syntax error in conditional expression

    /tmp/tmp8lf2npjk.sh: line 85: syntax error near `}''

    /tmp/tmp8lf2npjk.sh: line 85: `}''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=\"\
    ${#file_extension}\"\n    local file_extension_length2=\"${#file_extension//./}\"\
    \n    local file_extension_length3=\"${#file_extension//./}\"\n    local file_extension_length4=\"\
    ${#file_extension//./}\"\n    local file_extension_length5=\"${#file_extension//./}\"\
    \n    local file_extension_length6=\"${#file_extension//./}\"\n    local file_extension_length7=\"\
    ${#file_extension//./}\"\n    local file_extension_length8=\"${#file_extension//./}\"\
    \n    local file_extension_length9=\"${#file_extension//./}\"\n    local file_extension_length10=\"\
    ${#file_extension//./}\"\n    local file_extension_length11=\"${#file_extension//./}\"\
    \n    local file_extension_length12=\"${#file_extension//./}\"\n    local file_extension_length13=\"\
    ${#file_extension//./}\"\n    local file_extension_length14=\"${#file_extension//./}\"\
    \n    local file_extension_length15=\"${#file_extension//./}\"\n    local file_extension_length16=\"\
    ${#file_extension//./}\"\n    local file_extension_length17=\"${#file_extension//./}\"\
    \n    local file_extension_length18=\"${#file_extension//./}\"\n    local file_extension_length19=\"\
    ${#file_extension//./}\"\n    local file_extension_length20=\"${#file_extension//./}\"\
    \n    local file_extension_length21=\"${#file_extension//./}\"\n    local file_extension_length22=\"\
    ${#file_extension//./}\"\n    local file_extension_length23=\"${#file_extension//./}\"\
    \n    local file_extension_length24=\"${#file_extension//./}\"\n    local file_extension_length25=\"\
    ${#file_extension//./}\"\n    local file_extension_length26=\"${#file_extension//./}\"\
    \n    local file_extension_length27=\"${#file_extension//./}\"\n    local file_extension_length28=\"\
    ${#file_extension//./}\"\n    local file_extension_length29=\"${#file_extension//./}\"\
    \n    local file_extension_length30=\"${#file_extension//./}\"\n    local file_extension_length31=\"\
    ${#file_extension//./}\"\n    local file_extension_length32=\"${#file_extension//./}\"\
    \n    local file_extension_length33=\"${#file_extension//./}\"\n    local file_extension\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpknov7zei.sh: line 22: ${#file_extension//./}: bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_character=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \    local file_name_no_extension_first_character_is_letter=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_length=${#file_name_no_extension_first_character_is_letter}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet=${file_name_no_extension_first_character_is_letter:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z=${file_name_no_extension_first_character_is_letter_is_latin_alphabet:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z_is_a_to_z=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z_is_a_to_z_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z_is_a_to_z}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_a_to_z_is_a_to_z_is_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_dot=${file_name%.*}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot}\n  local file_name_no_dot_start_with_letter=${file_name_no_dot:0:1}\n\
    \  local file_name_no_dot_end_with_letter=${file_name_no_dot:1}\n  local file_name_no_dot_contains_txt=${file_name_no_dot_contains_txt:0:1}\n\
    \  local file_name_no_dot_contains_exe=${file_name_no_dot_contains_exe:0:1}\n\
    \  local file_name_no_dot_contains_dll=${file_name_no_dot_contains_dll:0:1}\n\
    \  local file_name_contains_txt=${file_name_contains_txt:0:1}\n  local file_name_contains_exe=${file_name_contains_exe:0:1}\n\
    \  local file_name_contains_dll=${file_name_contains_dll:0:1}\n  local file_name_contains_txt_exe=${file_name_contains_txt_exe:0:1}\n\
    \  local file_name_contains_txt_dll=${file_name_contains_txt_dll:0:1}\n  local\
    \ file_name_contains_exe_dll=${file_name_contains_exe_dll:0:1}\n  local file_name_contains_exe_dll_contains_txt=${file_name_contains_exe_dll_contains_txt:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe=${file_name_contains_exe_dll_contains_exe:0:1}\n\
    \  local file_name_contains_exe_dll_contains_dll=${file_name_contains_exe_dll_contains_dll:0:1}\n\
    \  local file_name_contains_exe_dll_contains_txt_exe=${file_name_contains_exe_dll_contains_txt_exe:0:1}\n\
    \  local file_name_contains_exe_dll_contains_txt_dll=${file_name_contains_exe_dll_contains_txt_dll:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe_dll=${file_name_contains_exe_dll_contains_exe_dll:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe_dll_contains_txt=${file_name_contains_exe_dll_contains_exe_dll_contains_txt:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe_dll_contains_exe=${file_name_contains_exe_dll_contains_exe_dll_contains_exe:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe_dll_contains_dll=${file_name_contains_exe_dll_contains_exe_dll_contains_dll:0:1}\n\
    \  local file_name_contains_exe_dll_contains_exe_dll_contains_txt_\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local dot_position=\"${file_name#*.}\"\n  local dot_position=\"${dot_position%%[^0-9]}\"\
    ;\n  local dot_position=\"${dot_position##*\\.}\";\n  local dot_position=\"${dot_position%%[^a-z]}\"\
    ;\n  local dot_position=\"${dot_position##*[a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^A-Z]}\";\n  local dot_position=\"${dot_position##*[A-Z]}\";\n\
    \  local dot_position=\"${dot_position%%[^0-9A-Z]}\";\n  local dot_position=\"\
    ${dot_position##*[0-9A-Z]}\";\n  local dot_position=\"${dot_position%%[^-]}\"\
    ;\n  local dot_position=\"${dot_position##*-}\";\n  local dot_position=\"${dot_position%%[^0-9]}\"\
    ;\n  local dot_position=\"${dot_position##*[0-9]}\";\n  local dot_position=\"\
    ${dot_position%%[^a-z]}\";\n  local dot_position=\"${dot_position##*[a-z]}\";\n\
    \  local dot_position=\"${dot_position%%[^A-Z]}\";\n  local dot_position=\"${dot_position##*[A-Z]}\"\
    ;\n  local dot_position=\"${dot_position%%[^0-9A-Z]}\";\n  local dot_position=\"\
    ${dot_position##*[0-9A-Z]}\";\n  local dot_position=\"${dot_position%%[^-]}\"\
    ;\n  local dot_position=\"${dot_position##*-}\";\n  local dot_position=\"${dot_position%%[^0-9]}\"\
    ;\n  local dot_position=\"${dot_position##*[0-9]}\";\n  local dot_position=\"\
    ${dot_position%%[^a-z]}\";\n  local dot_position=\"${dot_position##*[a-z]}\";\n\
    \  local dot_position=\"${dot_position%%[^A-Z]}\";\n  local dot_position=\"${dot_position##*[A-Z]}\"\
    ;\n  local dot_position=\"${dot_position%%[^0-9A-Z]}\";\n  local dot_position=\"\
    ${dot_position##*[0-9A-Z]}\";\n  local dot_position=\"${dot_position%%[^-]}\"\
    ;\n  local dot_position=\"${dot_position##*-}\";\n  local dot_position=\"${dot_position%%[^0-9]}\"\
    ;\n  local dot_position=\"${dot_position##*[0-9]}\";\n  local dot_position=\"\
    ${dot_position%%[^a-z]}\";\n  local dot_position=\"${dot_position##*[a-z]}\";\n\
    \  local dot_position=\"${dot_position%%[^A-Z]}\";\n  local dot_position=\"${dot_position##*[A-Z]}\"\
    ;\n  local dot_position=\"${dot_position%%[^0-9A-Z]}\";\n  local dot_position=\"\
    ${dot_position##*[0-9A-Z\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz4deugs1.sh: line 92: unexpected EOF while looking for matching
    `"''

    /tmp/tmpz4deugs1.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_string=${file_name:${dot_index}}\n\
    \    local dot_string_length=${#dot_string}\n    local dot_string_first_letter=${dot_string:0:1}\n\
    \    local dot_string_second_letter=${dot_string:1:1}\n    local dot_string_third_letter=${dot_string:2:1}\n\
    \    local dot_string_fourth_letter=${dot_string:3:1}\n    local dot_string_fifth_letter=${dot_string:4:1}\n\
    \    local dot_string_sixth_letter=${dot_string:5:1}\n    local dot_string_seventh_letter=${dot_string:6:1}\n\
    \    local dot_string_eighth_letter=${dot_string:7:1}\n    local dot_string_ninth_letter=${dot_string:8:1}\n\
    \    local dot_string_tenth_letter=${dot_string:9:1}\n    local dot_string_first_letter_to_upper=${dot_string_first_letter,,}\n\
    \    local dot_string_second_letter_to_upper=${dot_string_second_letter,,}\n \
    \   local dot_string_third_letter_to_upper=${dot_string_third_letter,,}\n    local\
    \ dot_string_fourth_letter_to_upper=${dot_string_fourth_letter,,}\n    local dot_string_fifth_letter_to_upper=${dot_string_fifth_letter,,}\n\
    \    local dot_string_sixth_letter_to_upper=${dot_string_sixth_letter,,}\n   \
    \ local dot_string_seventh_letter_to_upper=${dot_string_seventh_letter,,}\n  \
    \  local dot_string_eighth_letter_to_upper=${dot_string_eighth_letter,,}\n   \
    \ local dot_string_ninth_letter_to_upper=${dot_string_ninth_letter,,}\n    local\
    \ dot_string_tenth_letter_to_upper=${dot_string_tenth_letter,,}\n    local dot_string_first_letter_to_lower=${dot_string_first_letter,,}\n\
    \    local dot_string_second_letter_to_lower=${dot_string_second_letter,,}\n \
    \   local dot_string_third_letter_to_lower=${dot_string_third_letter,,}\n    local\
    \ dot_string_fourth_letter_to_lower=${dot_string_fourth_letter,,}\n    local dot_string_fifth_letter_to_lower=${dot_string_fifth_letter,,}\n\
    \    local dot_string_sixth_letter_to_lower=${dot_string_sixth_letter,,}\n   \
    \ local dot_string_seventh_letter_to_lower=${dot_string_seventh_letter,,}\n  \
    \  local dot_string_eighth_letter_to_lower=${dot_string_eighth_letter,,}\n   \
    \ local dot_\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_first=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_first_length=${#file_name_check_chars_first}\n\
    \    local file_name_check_chars_last=${file_name_check_chars:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_last_length=${#file_name_check_chars_last}\n\
    \    local file_name_check_chars_middle=${file_name:${file_name_length-2}:${file_name_length-1}}\n\
    \    local file_name_check_chars_middle_length=${#file_name_check_chars_middle}\n\
    \    local file_name_check_chars_first_letter=${file_name_check_chars_first:0:1}\n\
    \    local file_name_check_chars_first_letter_length=${#file_name_check_chars_first_letter}\n\
    \    local file_name_check_chars_last_letter=${file_name_check_chars_last:0:1}\n\
    \    local file_name_check_chars_last_letter_length=${#file_name_check_chars_last_letter}\n\
    \    local file_name_check_chars_middle_letter=${file_name_check_chars_middle:0:1}\n\
    \    local file_name_check_chars_middle_letter_length=${#file_name_check_chars_middle_letter}\n\
    \    local file_name_check_chars_first_digit=${file_name_check_chars_first:${file_name_check_chars_length-2}:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_first_digit_length=${#file_name_check_chars_first_digit}\n\
    \    local file_name_check_chars_last_digit=${file_name_check_chars_last:${file_name_check_chars_length-2}:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_last_digit_length=${#file_name_check_chars_last_digit}\n\
    \    local file_name_check_chars_middle_digit=${file_name_check_chars_middle:${file_name_check_chars_length-2}:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_middle_digit_length=${#file_name_check_chars_middle_digit}\n\
    \    local file_name_check_chars_first_dot=${file_name_check_chars_first:${file_name_check_chars_length-2}:${file_name_check_chars_length-1}}\n\
    \    local file_name_check_chars_first_dot_length=${#file_name_check_chars_first_dot}\n\
    \    local file_name_check_chars_last_dot=${file_name_check_chars_last:${file_name_check_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbuvkhq85.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_extension_length=\"\
    ${#file_extension}\"\n    local file_extension_first_character=\"${file_extension:0:1}\"\
    \n    local file_extension_first_character_is_letter=\"${[[ ${file_extension_first_character}\
    \ =~ ^[[:alpha:]]$ ]]}\"\n    local file_extension_first_character_is_number=\"\
    ${[[ ${file_extension_first_character} =~ ^[[:digit:]]$ ]]}\"\n    local file_extension_first_character_is_dot=\"\
    ${[[ ${file_extension_first_character} =~ ^.$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty=\"\
    ${[[ ${file_extension_first_character} =~ ^.[^[:space:]]$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_letter=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:alpha:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_number=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:digit:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_letter=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:alpha:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_number=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:digit:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_letter=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:alpha:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_number=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:digit:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_letter=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:alpha:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_number=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:digit:]].$ ]]}\"\n    local file_extension_first_character_is_dot_and_not_empty_and_not_starts_with_letter=\"\
    ${[[ ${file_extension_first_character} =~ ^[^[:alpha\n}\n\ncandidate() {\n   \
    \ file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvmceol43.sh: line 69: unexpected EOF while looking for matching
    `"''

    /tmp/tmpvmceol43.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_index=${file_name_length}\n\
    \    local dot_index=${file_name_index:0:1}\n    local dot_index=${file_name_index:1:1}\n\
    \    local dot_index=${file_name_index:2:1}\n    local dot_index=${file_name_index:3:1}\n\
    \    local dot_index=${file_name_index:4:1}\n    local dot_index=${file_name_index:5:1}\n\
    \    local dot_index=${file_name_index:6:1}\n    local dot_index=${file_name_index:7:1}\n\
    \    local dot_index=${file_name_index:8:1}\n    local dot_index=${file_name_index:9:1}\n\
    \    local dot_index=${file_name_index:10:1}\n    local dot_index=${file_name_index:11:1}\n\
    \    local dot_index=${file_name_index:12:1}\n    local dot_index=${file_name_index:13:1}\n\
    \    local dot_index=${file_name_index:14:1}\n    local dot_index=${file_name_index:15:1}\n\
    \    local dot_index=${file_name_index:16:1}\n    local dot_index=${file_name_index:17:1}\n\
    \    local dot_index=${file_name_index:18:1}\n    local dot_index=${file_name_index:19:1}\n\
    \    local dot_index=${file_name_index:20:1}\n    local dot_index=${file_name_index:21:1}\n\
    \    local dot_index=${file_name_index:22:1}\n    local dot_index=${file_name_index:23:1}\n\
    \    local dot_index=${file_name_index:24:1}\n    local dot_index=${file_name_index:25:1}\n\
    \    local dot_index=${file_name_index:26:1}\n    local dot_index=${file_name_index:27:1}\n\
    \    local dot_index=${file_name_index:28:1}\n    local dot_index=${file_name_index:29:1}\n\
    \    local dot_index=${file_name_index:30:1}\n    local dot_index=${file_name_index:31:1}\n\
    \    local dot_index=${file_name_index:32:1}\n    local dot_index=${file_name_index:33:1}\n\
    \    local dot_index=${file_name_index:34:1}\n    local dot_index=${file_name_index:35:1}\n\
    \    local dot_index=${file_name_index:36:1}\n    local dot_index=${file_name_index:37:1}\n\
    \    local dot_index=${file_name_index:38:1}\n    local dot_index=${file_name_index:39:1}\n\
    \    local dot_index=${file_name_index:40:1}\n    local dot_index=${file_name_index:41:1}\n\
    \    local dot_index=${file_name_index:42:1}\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_lower=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_lower_length=${#file_name_check_chars_lower}\n\
    \    local file_name_check_chars_upper=${file_name_check_chars:1}\n    local file_name_check_chars_upper_length=${#file_name_check_chars_upper}\n\
    \    local file_name_check_chars_special=${file_name_check_chars:2}\n    local\
    \ file_name_check_chars_special_length=${#file_name_check_chars_special}\n   \
    \ local file_name_check_chars_number=${file_name_check_chars:3}\n    local file_name_check_chars_number_length=${#file_name_check_chars_number}\n\
    \    local file_name_check_chars_number_lower=${file_name_check_chars_number:0:1}\n\
    \    local file_name_check_chars_number_lower_length=${#file_name_check_chars_number_lower}\n\
    \    local file_name_check_chars_number_upper=${file_name_check_chars_number:1}\n\
    \    local file_name_check_chars_number_upper_length=${#file_name_check_chars_number_upper}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special_length=${#file_name_check_chars_number_special}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_chars_number:2}\n\
    \    local file_name_check_chars_number_special=${file_name_check_\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyfdpjzh7.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name_length}\n\
    \    local dot_position_count=0\n    local dot_position_index=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string_index=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string_index=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string\n}\n\ncandidate() {\n    file_name_check \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_character=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \    local file_name_no_extension_first_character_is_letter=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_length=${#file_name_no_extension_first_character_is_letter}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet=${file_name_no_extension_first_character_is_letter:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character=${file_name_no_extension_first_character_is_letter_is_latin_alphabet:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension_is_valid_extension=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension_is_valid_extension_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension_is_valid_extension}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_valid_character_is_valid_extension_is_valid_extension_is_valid_extension=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfdtrcwg.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=1\n    local file_name_check_dot_firstletter=\"\
    No\"\n    local file_name_check_dot_firstletter_length=1\n    local file_name_check_dot_lastletter=\"\
    No\"\n    local file_name_check_dot_lastletter_length=1\n    local file_name_check_dot_firstletter_firstletter=\"\
    No\"\n    local file_name_check_dot_firstletter_firstletter_length=1\n    local\
    \ file_name_check_dot_firstletter_lastletter=\"No\"\n    local file_name_check_dot_firstletter_lastletter_length=1\n\
    \    local file_name_check_dot_lastletter_firstletter=\"No\"\n    local file_name_check_dot_lastletter_firstletter_length=1\n\
    \    local file_name_check_dot_lastletter_lastletter=\"No\"\n    local file_name_check_dot_lastletter_lastletter_length=1\n\
    \    local file_name_check_dot_firstletter_firstletter_firstletter=\"No\"\n  \
    \  local file_name_check_dot_firstletter_firstletter_firstletter_length=1\n  \
    \  local file_name_check_dot_firstletter_firstletter_lastletter=\"No\"\n    local\
    \ file_name_check_dot_firstletter_firstletter_lastletter_length=1\n    local file_name_check_dot_firstletter_lastletter_firstletter=\"\
    No\"\n    local file_name_check_dot_firstletter_lastletter_firstletter_length=1\n\
    \    local file_name_check_dot_firstletter_lastletter_lastletter=\"No\"\n    local\
    \ file_name_check_dot_firstletter_lastletter_lastletter_length=1\n    local file_name_check_dot_lastletter_firstletter_firstletter=\"\
    No\"\n    local file_name_check_dot_lastletter_firstletter_firstletter_length=1\n\
    \    local file_name_check_dot_lastletter_firstletter_lastletter=\"No\"\n    local\
    \ file_name_check_dot_lastletter_firstletter_lastletter_length=1\n    local file_name_check_dot_lastletter_lastletter_firstletter=\"\
    No\"\n    local file_name_check_dot_lastletter_lastletter_firstletter_length=1\n\
    \    local file_name_check_dot_lastletter_lastletter_lastletter=\"No\"\n    local\
    \ file_name_check_dot_lastletter_lastletter_lastletter_length=1\n    local file_name_check_dot_firstletter_firstletter_firstletter_firstletter=\"\
    No\"\n    local file_name_check_dot_firstletter_firstletter_firstletter_firstletter_length=1\n\
    \    local file_name_check_dot_firstletter_firstletter_firstletter_lastletter=\"\
    No\"\n    local file_name_check_\n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//./\
    \ }\n    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_first_length=${#file_name_parts_first}\n    local file_name_parts_first_letter=${file_name_parts_first:0:1}\n\
    \    local file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet=${file_name_parts_first_letter:0:1}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_length=${#file_name_parts_first_letter_is_latin_alphabet}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter=${file_name_parts_first_letter:1:1}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_length=${#file_name_parts_first_letter_is_latin_alphabet_is_valid_letter}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter=${file_name_parts_first_letter_is_latin_alphabet_is_valid_letter:0:1}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_length=${#file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter=${file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter:0:1}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter_length=${#file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter=${file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter:0:1}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter=${file_name_parts_first_letter_is_latin_alphabet_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter_is_valid_letter:0:1}\n\
    \    local file_name_part\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n   \
    \ [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index_check=false\n    local\
    \ dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#file_name}\n    local dot_index_check=false\n\
    \    local dot_check=false\n    local dot_index=${#\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplyvlzw49.sh: line 120: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_count1=$((dot_count-1))\n  \
    \  local dot_index1=$((dot_index-1))\n    local dot_count2=$((dot_count-dot_count1))\n\
    \    local dot_index2=$((dot_index-dot_index1))\n    local dot_count3=$((dot_count-dot_count2))\n\
    \    local dot_index3=$((dot_index-dot_index2))\n    local dot_count4=$((dot_count-dot_count3))\n\
    \    local dot_index4=$((dot_index-dot_index3))\n    local dot_count5=$((dot_count-dot_count4))\n\
    \    local dot_index5=$((dot_index-dot_index4))\n    local dot_count6=$((dot_count-dot_count5))\n\
    \    local dot_index6=$((dot_index-dot_index5))\n    local dot_count7=$((dot_count-dot_count6))\n\
    \    local dot_index7=$((dot_index-dot_index6))\n    local dot_count8=$((dot_count-dot_count7))\n\
    \    local dot_index8=$((dot_index-dot_index7))\n    local dot_count9=$((dot_count-dot_count8))\n\
    \    local dot_index9=$((dot_index-dot_index8))\n    local dot_count10=$((dot_count-dot_count9))\n\
    \    local dot_index10=$((dot_index-dot_index9))\n    local dot_count11=$((dot_count-dot_count10))\n\
    \    local dot_index11=$((dot_index-dot_index10))\n    local dot_count12=$((dot_count-dot_count11))\n\
    \    local dot_index12=$((dot_index-dot_index11))\n    local dot_count13=$((dot_count-dot_count12))\n\
    \    local dot_index13=$((dot_index-dot_index12))\n    local dot_count14=$((dot_count-dot_count13))\n\
    \    local dot_index14=$((dot_index-dot_index13))\n    local dot_count15=$((dot_count-dot_count14))\n\
    \    local dot_index15=$((dot_index-dot_index14))\n    local dot_count16=$((dot_count-dot_count15))\n\
    \    local dot_index16=$((dot_index-dot_index15))\n    local dot_count17=$((dot_count-dot_count16))\n\
    \    local dot_index17=$((dot_index-\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzpl6drw6.sh: line 56: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzpl6drw6.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=false\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=false\n\
    \    local file_name_check_dot_first_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty=true\n    local file_name_check_dot_first_letter_not_empty_length=2\n\
    \    local \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_first_character=${file_name_no_extension:0:1}\n    local\
    \ file_name_no_extension_first_character_length=${#file_name_no_extension_first_character}\n\
    \    local file_name_no_extension_first_character_is_letter=${file_name_no_extension_first_character:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_length=${#file_name_no_extension_first_character_is_letter}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet=${file_name_no_extension_first_character_is_letter:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot=${file_name_no_extension_first_character_is_letter_is_latin_alphabet:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits_is_one_dot=${file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits:0:1}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits_is_one_dot_length=${#file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits_is_one_dot}\n\
    \    local file_name_no_extension_first_character_is_letter_is_latin_alphabet_is_one_dot_is_three_digits_is_one_dot_is_three_digits=${file_name_no_extension_first_character_is_letter_is_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplt4p1cwi.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=2\n    local file_name_check_dot_starts_with_letter=\"\
    No\"\n    local file_name_check_dot_starts_with_letter_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_dot_after_dot=\"\
    No\"\n    local file_name_check_dot_contains_dot_after_dot_length=2\n    local\
    \ file_name_check_dot_contains_dot_before_dot=\"No\"\n    local file_name_check_dot_contains_dot_before_dot_length=2\n\
    \    local file_name_check_dot_contains_dot_after_dot_starts_with_letter=\"No\"\
    \n    local file_name_check_dot_contains_dot_after_dot_starts_with_letter_length=2\n\
    \    local file_name_check_dot_contains_dot_before_dot_starts_with_letter=\"No\"\
    \n    local file_name_check_dot_contains_dot_before_dot_starts_with_letter_length=2\n\
    \    local file_name_check_dot_contains_dot_after_dot_contains_txt=\"No\"\n  \
    \  local file_name_check_dot_contains_dot_after_dot_contains_txt_length=2\n  \
    \  local file_name_check_dot_contains_dot_before_dot_contains_txt=\"No\"\n   \
    \ local file_name_check_dot_contains_dot_before_dot_contains_txt_length=2\n  \
    \  local file_name_check_dot_contains_dot_after_dot_contains_exe=\"No\"\n    local\
    \ file_name_check_dot_contains_dot_after_dot_contains_exe_length=2\n    local\
    \ file_name_check_dot_contains_dot_before_dot_contains_exe=\"No\"\n    local file_name_check_dot_contains_dot_before_dot_contains_exe_length=2\n\
    \    local file_name_check_dot_contains_dot_after_dot_contains_dll=\"No\"\n  \
    \  local file_name_check_dot_contains_dot_after_dot_contains_dll_length=2\n  \
    \  local file_name_check_dot_contains_dot_before_dot_contains_dll=\"No\"\n   \
    \ local file_name_check_dot_contains_dot_before_dot_contains_dll_length=2\n  \
    \  local file_name_check_dot_contains_dot_after_dot_contains_dot_after_dot=\"\
    No\"\n    local file_name_check_dot_contains_dot_after_dot_contains_dot_after_dot_length=2\n\
    \    local file_name_check_dot_contains_dot_before_dot_contains_dot_after_dot=\"\
    No\"\n    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_length=${#file_name_no_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqfv_xakv.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_string=${file_name:${dot_index}}\n\
    \    local dot_length=${#dot_string}\n    local dot_first=${dot_string:0:1}\n\
    \    local dot_last=${dot_string:${dot_length-1}}\n    local dot_first_length=${#dot_first}\n\
    \    local dot_last_length=${#dot_last}\n    local dot_first_letter=${dot_first:0:1}\n\
    \    local dot_last_letter=${dot_last:0:1}\n    local dot_first_letter_length=${#dot_first_letter}\n\
    \    local dot_last_letter_length=${#dot_last_letter}\n    local dot_first_letter_is_latin_alphabet=${dot_first_letter:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet=${dot_last_letter:0:1}\n    local\
    \ dot_first_letter_is_latin_alphabet_or_empty=${dot_first_letter_is_latin_alphabet:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet_or_empty=${dot_last_letter_is_latin_alphabet:0:1}\n\
    \    local dot_first_letter_is_latin_alphabet_or_empty_or_empty=${dot_first_letter_is_latin_alphabet_or_empty:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet_or_empty_or_empty=${dot_last_letter_is_latin_alphabet_or_empty:0:1}\n\
    \    local dot_first_letter_is_latin_alphabet_or_empty_or_empty_or_empty=${dot_first_letter_is_latin_alphabet_or_empty_or_empty:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet_or_empty_or_empty_or_empty=${dot_last_letter_is_latin_alphabet_or_empty_or_empty:0:1}\n\
    \    local dot_first_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty=${dot_first_letter_is_latin_alphabet_or_empty_or_empty_or_empty:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty=${dot_last_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty:0:1}\n\
    \    local dot_first_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty_or_empty=${dot_first_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty_or_empty:0:1}\n\
    \    local dot_last_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_empty_or_empty=${dot_last_letter_is_latin_alphabet_or_empty_or_empty_or_empty_or_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxtug1iq0.sh: line 82: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local valid=No\n    local dot_pos=${file_name:0:1}\n    local\
    \ dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n\
    \    local dot_pos=${dot_pos:0:1}\n    local dot_len=${#dot_pos}\n    local dot_pos=${dot_pos:0:1}\n\
    \    local dot_len=${#dot_pos}\n\n}\n\ncandidate() {\n    file_name_check \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"Yes\"\
    \n    fi\n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    if [[ $file_name_length -eq 2 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    if [[ $file_name_length -eq 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 4 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 5 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 6 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 7 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 8 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 9 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 10 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 11 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 12 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 13 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 14 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 15 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 16 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 17 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 18 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 19 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name_length -eq 20 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    if [[ $file_name\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfmjfm0ih.sh: line 88: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpfmjfm0ih.sh: line 88: syntax error near `$file_name''

    /tmp/tmpfmjfm0ih.sh: line 88: `    if [[ $file_name''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    \n    if [[ $file_name_length -gt 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 0 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 1 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 2 ]]; then\n        file_name_check=\"\
    No\"\n    fi\n    \n    if [[ $file_name_length -eq 3 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 4 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 5 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 6 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 7 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 8 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 9 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 10 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 11 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 12 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 13 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 14 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 15 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 16 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 17 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length -eq 18 ]]; then\n        file_name_check=\"\
    Yes\"\n    fi\n    \n    if [[ $file_name_length\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwnpkvtcx.sh: line 103: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpwnpkvtcx.sh: line 103: syntax error near `$file_name_length''

    /tmp/tmpwnpkvtcx.sh: line 103: `    if [[ $file_name_length''

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local file_name_check=No\n  \n  if\
    \ [[ $file_name_length -gt 3 ]]; then\n    echo \"$file_name has more than three\
    \ digits\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1} == \"\
    /\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n  \n  if [[ ${file_name:(-1)} == \"/\" ]]; then\n    echo \"$file_name\
    \ ends with '/'\"\n    file_name_check=Yes\n  fi\n  \n  if [[ ${file_name:0:1}\
    \ == \"/\" ]]; then\n    echo \"$file_name starts with '/'\"\n    file_name_check=Yes\n\
    \  fi\n\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_lower=\"\
    ${file_extension,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwcfy416g.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmpwcfy416g.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_check=()\n   \
    \ local file_name_parts_check_length=()\n    local file_name_parts_check_index=()\n\
    \    local file_name_parts_check_index_length=()\n    local file_name_parts_check_count=()\n\
    \    local file_name_parts_check_count_length=()\n    local file_name_parts_check_count_index=()\n\
    \    local file_name_parts_check_count_index_length=()\n    local file_name_parts_check_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_length=()\n    local file_name_parts_check_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_length=()\n    local\
    \ file_name_parts_check_count_index_count_index_count=()\n    local file_name_parts_check_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_length=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_count=()\n    local\
    \ file_name_parts_check_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_check_count_index_count_index_count_index_count_index_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name_length}\n\
    \    local dot_position_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    local dot_position_string_count=0\n    local dot_position_string_count=0\n\
    \    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=3\n    local file_name_check_dot=\"No\"\
    \n    local file_name_check_dot_length=2\n    local file_name_check_dot_starts_with_letter=\"\
    No\"\n    local file_name_check_dot_starts_with_letter_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    No\"\n    local file_name_check_dot_contains_txt_length=2\n    local file_name_check_dot_contains_exe=\"\
    No\"\n    local file_name_check_dot_contains_exe_length=2\n    local file_name_check_dot_contains_dll=\"\
    No\"\n    local file_name_check_dot_contains_dll_length=2\n    local file_name_check_dot_contains_txt=\"\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkr1f2w2k.sh: line 97: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkr1f2w2k.sh: line 101: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=\"\
    aA\"\n    local file_name_check_chars_length=${#file_name_check_chars}\n    local\
    \ file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_array=(${file_name_check_chars})\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array[@]}\n\
    \    local file_name_check_chars_array_length=${#file_name_check_chars_array\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ln0om6y.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_index=()\n    local file_name_parts_count_index_length=()\n\
    \    local file_name_parts_count_index_count=()\n    local file_name_parts_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_count_length=()\n    local file_name_parts_count_index_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_length=()\n   \
    \ local file_name_parts_count_index_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=()\n\
    \    local file_name_parts_count_index_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local dot_position=\"$(echo \"$file_name\" | grep -o \"\
    \\.\" | wc -l)\"\n    local dot_position_count=\"$(echo \"$file_name\" | grep\
    \ -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"$(echo\
    \ \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"\
    $(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local\
    \ dot_position_count=\"$(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d\
    \ '[:space:]')\"\n    local dot_position_count=\"$(echo \"$file_name\" | grep\
    \ -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"$(echo\
    \ \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"\
    $(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local\
    \ dot_position_count=\"$(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d\
    \ '[:space:]')\"\n    local dot_position_count=\"$(echo \"$file_name\" | grep\
    \ -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"$(echo\
    \ \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"\
    $(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local\
    \ dot_position_count=\"$(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d\
    \ '[:space:]')\"\n    local dot_position_count=\"$(echo \"$file_name\" | grep\
    \ -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"$(echo\
    \ \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local dot_position_count=\"\
    $(echo \"$file_name\" | grep -o \"\\.\" | wc -l | tr -d '[:space:]')\"\n    local\
    \ dot_position_count=\"$(echo \"$file_name\" | grep -o \"\\.\" | wc -l | \n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpca6_olbo.sh: line 36: unexpected EOF while looking for matching
    `)''

    /tmp/tmpca6_olbo.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local dot_position=\"${file_name%.*}\"\n  local dot_position=\"${dot_position##*.}\"\
    \n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^0-9]}\";\n  local dot_position=\"${dot_position##*[!0-9]}\"\
    ;\n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^0-9]}\";\n  local dot_position=\"${dot_position##*[!0-9]}\"\
    ;\n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^0-9]}\";\n  local dot_position=\"${dot_position##*[!0-9]}\"\
    ;\n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^0-9]}\";\n  local dot_position=\"${dot_position##*[!0-9]}\"\
    ;\n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_position=\"\
    ${dot_position%%[^0-9]}\";\n  local dot_position=\"${dot_position##*[!0-9]}\"\
    ;\n  local dot_position=\"${dot_position%%[^a-zA-Z0-9]}\";\n  local dot_position=\"\
    ${dot_position##*[!0-9]}\";\n  local dot_position=\"${dot_position%%[^a-zA-Z]}\"\
    ;\n  local dot_position=\"${dot_position##*[!a-z]}\";\n  local dot_\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_lower=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_lower_length=${#file_name_check_chars_lower}\n\
    \    local file_name_check_chars_upper=${file_name_check_chars:1}\n    local file_name_check_chars_upper_length=${#file_name_check_chars_upper}\n\
    \    local file_name_check_chars_number=${file_name_check_chars:2:1}\n    local\
    \ file_name_check_chars_number_length=${#file_name_check_chars_number}\n    local\
    \ file_name_check_chars_special=${file_name_check_chars:3:1}\n    local file_name_check_chars_special_length=${#file_name_check_chars_special}\n\
    \    local file_name_check_chars_special_lower=${file_name_check_chars_special:0:1}\n\
    \    local file_name_check_chars_special_lower_length=${#file_name_check_chars_special_lower}\n\
    \    local file_name_check_chars_special_upper=${file_name_check_chars_special:1}\n\
    \    local file_name_check_chars_special_upper_length=${#file_name_check_chars_special_upper}\n\
    \    local file_name_check_chars_special_number=${file_name_check_chars_special:2:1}\n\
    \    local file_name_check_chars_special_number_length=${#file_name_check_chars_special_number}\n\
    \    local file_name_check_chars_special_special_length=${#file_name_check_chars_special_special_number}\n\
    \    local file_name_check_chars_special_special_lower=${file_name_check_chars_special_special_number:0:1}\n\
    \    local file_name_check_chars_special_special_lower_length=${#file_name_check_chars_special_special_lower}\n\
    \    local file_name_check_chars_special_special_upper=${file_name_check_chars_special_special_number:1}\n\
    \    local file_name_check_chars_special_special_upper_length=${#file_name_check_chars_special_special_upper}\n\
    \    local file_name_check_chars_special_special_number=${file_name_check_chars_special_special_number:2:1}\n\
    \    local file_name_check_chars_special_special_number_length=${#file_name_check_chars_special_special_number}\n\
    \    local file_name_check_chars_special_special_special_length=${#file_name_check_chars_special_special_special_number}\n\
    \    local file_name_check_chars_special_special_special_lower=${file_name_check_chars_special_special_special_number:0:1}\n\
    \    local file_name_check_chars_special_special_special_lower_length=${#file_name_check_chars_special_special_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk2oa0_ya.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_extension_no_dot_length=${#file_name_no_extension_no_dot}\n   \
    \ local file_name_no_extension_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_length=${#file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot}\n\
    \    local file_name_no_extension_no_dot_no_dot_no_dot_no_dot_no_dot_no_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file=\"\
    $1\"\n  local file_length=${#file}\n  local dot_count=${#file%.*}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n  local dot_index=${#file#*.}\n\
    \  local dot_index=${#file#*.}\n  local \n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc9kkp865.sh: line 21: dot_count=${#file%.*}: bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_position=${file_name_length}\n\
    \    local dot_position_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n    local dot_position_string=\"\"\n\
    \    local dot_position_string_count=0\n    local dot_position_string=\"\"\n \
    \   local dot_position_string_count=0\n    local dot_position_string=\"\"\n  \
    \  local dot_position_string_count=0\n    local dot_position_string=\"\"\n   \
    \ local dot_position_string_count=0\n    local dot_position_string=\"\"\n    local\
    \ dot_position_string_count=0\n    local dot_position_string=\"\"\n    local dot_position_string_count=0\n\
    \    local dot_position_string=\"\"\n    local dot_position_string_count=0\n \
    \   local dot_position_string=\"\"\n    local dot_position_string_count=0\n  \
    \  local dot_position_string=\"\"\n    local dot_position_string_count=0\n   \
    \ local dot_position_string=\"\"\n    local dot_position_string_count=0\n    local\
    \ dot_position_string=\"\"\n    local dot_position_string_count=0\n    local dot_position_string=\"\
    \"\n    local dot_position_string_count=0\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=${file_name%.*}\n\
    \    local file_name_no_ext_length=${#file_name_no_ext}\n    local file_name_no_dot_length=${#file_name_no_ext%.*}\n\
    \    local file_name_no_dot_start_letter=${file_name_no_ext:0:1}\n    local file_name_no_dot_end_letter=${file_name_no_ext:${file_name_no_dot_length}}\n\
    \    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_start_letter_valid_letters=${file_name_no_dot_start_letter:0:1}\n\
    \    local file_name_no_dot_end_letter_valid_letters=${file_name_no_dot_end_letter:0:1}\n\
    \    local file_name_no_dot_start_letter_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters=${file_name_no_dot_start_letter_valid_letters:0:1}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters=${file_name_no_dot_end_letter_valid_letters:0:1}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letter\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu6yrexp3.sh: line 23: file_name_no_dot_length=${#file_name_no_ext%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_dot=${file_name%.*}\n\
    \    local file_name_no_dot_length=${#file_name_no_dot}\n    local file_name_no_dot_start_letter=${file_name_no_dot:0:1}\n\
    \    local file_name_no_dot_end_letter=${file_name_no_dot:1}\n    local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \    local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \    local file_name_no_dot_start_letter_valid_letters=${file_name_no_dot_start_letter:0:1}\n\
    \    local file_name_no_dot_end_letter_valid_letters=${file_name_no_dot_end_letter:0:1}\n\
    \    local file_name_no_dot_start_letter_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters=${file_name_no_dot_start_letter_valid_letters:0:1}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters=${file_name_no_dot_end_letter_valid_letters:0:1}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_end_letter_valid_letters_valid_letters_valid_letters_valid_letters}\n\
    \    local file_name_no_dot_start_letter_valid_letters_valid_letters_valid_letters_valid_letters_valid_letters_length=${#file_name_no_dot_start_letter_valid_letters_valid_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1y8ct55l.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_second=z\n\
    \    local file_name_check_dot_second_length=2\n    local file_name_check_dot_third=A\n\
    \    local file_name_check_dot_third_length=2\n    local file_name_check_dot_fourth=Z\n\
    \    local file_name_check_dot_fourth_length=2\n    local file_name_check_dot_fifth=a\n\
    \    local file_name_check_dot_fifth_length=2\n    local file_name_check_dot_sixth=z\n\
    \    local file_name_check_dot_sixth_length=2\n    local file_name_check_dot_seventh=A\n\
    \    local file_name_check_dot_seventh_length=2\n    local file_name_check_dot_eighth=Z\n\
    \    local file_name_check_dot_eighth_length=2\n    local file_name_check_dot_ninth=a\n\
    \    local file_name_check_dot_ninth_length=2\n    local file_name_check_dot_tenth=z\n\
    \    local file_name_check_dot_tenth_length=2\n    local file_name_check_dot_eleventh=A\n\
    \    local file_name_check_dot_eleventh_length=2\n    local file_name_check_dot_twelfth=Z\n\
    \    local file_name_check_dot_twelfth_length=2\n    local file_name_check_dot_thirteenth=a\n\
    \    local file_name_check_dot_thirteenth_length=2\n    local file_name_check_dot_fourteenth=z\n\
    \    local file_name_check_dot_fourteenth_length=2\n    local file_name_check_dot_fifteenth=A\n\
    \    local file_name_check_dot_fifteenth_length=2\n    local file_name_check_dot_sixteenth=z\n\
    \    local file_name_check_dot_sixteenth_length=2\n    local file_name_check_dot_seventeenth=A\n\
    \    local file_name_check_dot_seventeenth_length=2\n    local file_name_check_dot_eighteenth=Z\n\
    \    local file_name_check_dot_eighteenth_length=2\n    local file_name_check_dot_nineteenth=a\n\
    \    local file_name_check_dot_nineteenth_length=2\n    local file_name_check_dot_twentieth=z\n\
    \    local file_name_check_dot_tw\n}\n\ncandidate() {\n    file_name_check \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\"\
    \ ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"\
    s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  if [[ $file_name_length -gt 3\
    \ ]]; then\n    echo \"No\"\n  else\n    local file_name_parts=$(echo \"$file_name\"\
    \ | sed 's/\\./\\\\./g')\n    local file_name_parts_length=${#file_name_parts}\n\
    \    if [[ $file_name_parts_length -ne 1 ]]; then\n      echo \"No\"\n    else\n\
    \      local file_name_part_first=$(echo \"$file_name_parts\" | cut -d \".\" -f1)\n\
    \      local file_name_part_first_length=${#file_name_part_first}\n      if [[\
    \ $file_name_part_first_length -ne 1 ]]; then\n        echo \"No\"\n      else\n\
    \        local file_name_part_first_letter=$(echo \"$file_name_part_first\" |\
    \ awk '{print tolower($0)}')\n        if [[ \"$file_name_part_first_letter\" =~\
    \ ^[[:alpha:]]$ ]]; then\n          local file_name_part_first_letter_length=${#file_name_part_first_letter}\n\
    \          if [[ $file_name_part_first_letter_length -ne 1 ]]; then\n        \
    \    echo \"No\"\n          else\n            local file_name_part_first_letter_lower=$(echo\
    \ \"$file_name_part_first_letter\" | awk '{print tolower($0)}')\n            if\
    \ [[ \"$file_name_part_first_letter_lower\" =~ ^[[:alpha:]]$ ]]; then\n      \
    \        local file_name_part_first_letter_lower_length=${#file_name_part_first_letter_lower}\n\
    \              if [[ $file_name_part_first_letter_lower_length -ne 1 ]]; then\n\
    \                echo \"No\"\n              else\n                local file_name_part_first_letter_lower_upper=$(echo\
    \ \"$file_name_part_first_letter_lower\" | awk '{print toupper($0)}')\n      \
    \          if [[ \"$file_name_part_first_letter_lower_upper\" =~ ^[[:alpha:]]$\
    \ ]]; then\n                  local file_name_part_first_letter_lower_upper_length=${#file_name_part_first_letter_lower_upper}\n\
    \                  if [[ $file_name_part_first_letter_lower_upper_length -ne 1\
    \ ]]; then\n                    echo \"No\"\n                  else\n        \
    \            local file_name_part_first_letter_lower_upper_upper_lower=$(echo\
    \ \"$file_name_part_first_letter_lower_upper\" | awk '{print tolower($0)}')\n\
    \                    if [[ \"$file_name_part_first_letter_lower_upper_lower\"\
    \ =~ ^[[:alpha:]]$ ]]; then\n                      local file_name_part_first_letter_lower_upper_lower_length=${#file_name_part_first_letter_lower_upper_lower}\n\
    \                      if [[ $file_name_part_first_letter_lower_upper_lower_length\
    \ -ne 1 ]]; then\n                        echo \"No\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz2oz8yi9.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmpz2oz8yi9.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_extension=\"${file_name##*.}\"\n    local file_base_name=\"\
    ${file_name%.*}\"\n    local file_base_name_no_extension=\"${file_base_name%.*}\"\
    \n    local file_base_name_no_extension_no_extension=\"${file_base_name_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension=\"${file_base_name_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension%.*}\"\n \
    \   local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension=\"\
    ${file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension%.*}\"\
    \n    local file_base_name_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_no_extension_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_extension=${file_name%.*}\n\
    \    local file_name_no_extension_length=${#file_name_no_extension}\n    local\
    \ file_name_no_dot_length=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter=${file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_end_letter=${#file_name_no_extension_no_dot_length}\n    local\
    \ file_name_no_dot_start_letter_no_dot_length=${#file_name_no_dot_length}\n  \
    \  local file_name_no_dot_end_letter_no_dot_length=${#file_name_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length}\n\
    \    local file_name_no_dot_start_letter_no_dot_end_letter_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length_no_dot_length=${#file_name_no_dot_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8em9b3n4.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_no_ext=${file_name%.*}\n\
    \    local file_name_no_ext_length=${#file_name_no_ext}\n    local file_name_first_char=${file_name_no_ext:0:1}\n\
    \    local file_name_first_char_length=${#file_name_first_char}\n    local file_name_first_char_not_empty=true\n\
    \    if [[ $file_name_length -gt 3 ]]; then\n        echo \"No\"\n        return\n\
    \    fi\n    if [[ $file_name_no_ext_length -eq 0 ]]; then\n        echo \"No\"\
    \n        return\n    fi\n    if [[ $file_name_first_char_length -eq 0 ]]; then\n\
    \        echo \"No\"\n        return\n    fi\n    if [[ $file_name_first_char_not_empty\
    \ -eq false ]]; then\n        echo \"No\"\n        return\n    fi\n    if [[ !\
    \ $file_name_first_char =~ ^[[:alpha:]]$ ]]; then\n        echo \"No\"\n     \
    \   return\n    fi\n    if [[ ! $file_name_first_char =~ ^[[:alpha:]]\\.$ ]];\
    \ then\n        echo \"No\"\n        return\n    fi\n    if [[ ! $file_name_no_ext\
    \ =~ ^[[:alpha:]]\\.[[:alpha:]]\\.[[:alpha:]]$ ]]; then\n        echo \"No\"\n\
    \        return\n    fi\n    if [[ ! $file_name_no_ext =~ ^[[:alpha:]]\\.[[:alpha:]]\\\
    .[[:alpha:]]\\.[[:alpha:]]$ ]]; then\n        echo \"No\"\n        return\n  \
    \  fi\n    echo \"Yes\"\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local file_name_no_extension=${file_name%.*}\n\
    \  local file_name_no_extension_length=${#file_name_no_extension}\n  local file_name_no_dot_length=${#file_name_no_extension%.*}\n\
    \  local file_name_no_dot_start_letter=${file_name_no_extension%.*}\n  local file_name_no_dot_end_letter=${file_name_no_extension#*.}\n\
    \  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  local file_name_no_dot_length=${#file_name_no_dot_length}\n  local file_name_no_dot_start_letter_length=${#file_name_no_dot_start_letter}\n\
    \  local file_name_no_dot_end_letter_length=${#file_name_no_dot_end_letter}\n\
    \  \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg8q8rn1y.sh: line 23: file_name_no_dot_length=${#file_name_no_extension%.*}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_lower=\"\
    ${file_extension,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwcfy416g.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmpwcfy416g.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=0\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_not_empty=true\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=true\n\
    \    local file_name_check_dot_last_letter_not_empty_length=2\n    local file_name_check_dot_first_letter_not_empty=false\n\
    \    local file_name_check_dot_first_letter_not_empty_length=2\n    local file_name_check_dot_last_letter_not_empty=false\n\
    \    local file_name_check_dot_first_letter_not_empty_not_a_letter=false\n   \
    \ local file_name_check_dot_first_letter_not_empty_not_a_letter_length=2\n   \
    \ local file_name_check_dot_last_letter_not_empty_not_a_letter=false\n    local\
    \ file_name_check_dot_last_letter_not_empty_not_a_letter_length=2\n    local file_name_check_dot_first_letter_not_empty_not_a_letter=true\n\
    \    local file_name_check_dot_first_letter_not_empty_not_a_letter_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_not_a_letter=true\n    local\
    \ file_name_check_dot_last_letter_not_empty_not_a_letter_length=2\n    local file_name_check_dot_first_letter_not_empty_not_a_letter=false\n\
    \    local file_name_check_dot_first_letter_not_empty_not_a_letter_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_not_a_letter=false\n    local\
    \ file_name_check_dot_last_letter_not_empty_not_a_letter_length=2\n    local file_name_check_dot_first_letter_not_empty_not_a_letter=true\n\
    \    local file_name_check_dot_first_letter_not_empty_not_a_letter_length=2\n\
    \    local file_name_check_dot_last_letter_not_empty_not_a_letter=true\n    local\
    \ file_name_check_dot_last_letter_not_empty_not_a_letter_length=2\n    local file_name_check_dot_first_letter_not_empty_not_a_letter=false\n\
    \    local file_name_check_dot_first_letter_not_empty_not_a_letter_length=2\n\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_not_empty=true\n\
    \    local file_name_check_dot_first_not_empty_length=2\n    local file_name_check_dot_last_not_empty=true\n\
    \    local file_name_check_dot_last_not_empty_length=2\n    local file_name_check_dot_first_not_empty_letter=a\n\
    \    local file_name_check_dot_first_not_empty_letter_length=2\n    local file_name_check_dot_last_not_empty_letter=z\n\
    \    local file_name_check_dot_last_not_empty_letter_length=2\n    local file_name_check_dot_first_not_empty_not_dot_letter=true\n\
    \    local file_name_check_dot_first_not_empty_not_dot_letter_length=2\n    local\
    \ file_name_check_dot_last_not_empty_not_dot_letter=true\n    local file_name_check_dot_last_not_empty_not_dot_letter_length=2\n\
    \    local file_name_check_dot_first_not_empty_not_dot_not_dot_letter=true\n \
    \   local file_name_check_dot_first_not_empty_not_dot_not_dot_letter_length=2\n\
    \    local file_name_check_dot_last_not_empty_not_dot_not_dot_letter=true\n  \
    \  local file_name_check_dot_last_not_empty_not_dot_not_dot_letter_length=2\n\
    \    local file_name_check_dot_first_not_empty_not_dot_not_dot_not_dot_letter=true\n\
    \    local file_name_check_dot_first_not_empty_not_dot_not_dot_not_dot_letter_length=2\n\
    \    local file_name_check_dot_last_not_empty_not_dot_not_dot_not_dot_letter=true\n\
    \    local file_name_check_dot_last_not_empty_not_dot_not_dot_not_dot_letter_length=2\n\
    \    local file_name_check_dot_first_not_empty_not_dot_not_dot_not_dot_not_dot_letter=true\n\
    \    local file_name_check_dot_first_not_empty_not_dot_not_dot_not_dot_not_dot_letter_length=2\n\
    \    local file_name_check_dot_last_not_empty_not_dot_not_dot_not_dot_not_dot_letter=true\n\
    \    local file_name_check_dot_last_not_empty_not_dot_not_\n}\n\ncandidate() {\n\
    \    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n\
    \    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_check=\"\
    No\"\n    local file_name_check_length=${#file_name_check}\n    local file_name_check_chars=${file_name:0:1}\n\
    \    local file_name_check_chars_length=${#file_name_check_chars}\n    local file_name_check_chars_first=${file_name_check_chars:0:1}\n\
    \    local file_name_check_chars_first_length=${#file_name_check_chars_first}\n\
    \    local file_name_check_chars_last=${file_name_check_chars:1}\n    local file_name_check_chars_last_length=${#file_name_check_chars_last}\n\
    \    local file_name_check_chars_first_letter=${file_name_check_chars_first:0:1}\n\
    \    local file_name_check_chars_first_letter_length=${#file_name_check_chars_first_letter}\n\
    \    local file_name_check_chars_last_letter=${file_name_check_chars_last:0:1}\n\
    \    local file_name_check_chars_last_letter_length=${#file_name_check_chars_last_letter}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet=${file_name_check_chars_first_letter:0:1}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet_length=${#file_name_check_chars_first_letter_is_latin_alphabet}\n\
    \    local file_name_check_chars_last_letter_is_latin_alphabet=${file_name_check_chars_last_letter:0:1}\n\
    \    local file_name_check_chars_last_letter_is_latin_alphabet_length=${#file_name_check_chars_last_letter_is_latin_alphabet}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet_or_empty=${file_name_check_chars_first_letter_is_latin_alphabet}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet_or_empty_length=${#file_name_check_chars_first_letter_is_latin_alphabet_or_empty}\n\
    \    local file_name_check_chars_last_letter_is_latin_alphabet_or_empty=${file_name_check_chars_last_letter_is_latin_alphabet}\n\
    \    local file_name_check_chars_last_letter_is_latin_alphabet_or_empty_length=${#file_name_check_chars_last_letter_is_latin_alphabet_or_empty}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet_or_empty_or_dot=${file_name_check_chars_first_letter_is_latin_alphabet_or_empty}\n\
    \    local file_name_check_chars_first_letter_is_latin_alphabet_or_empty_or_dot_length=${#file_name_check_chars_first_letter_is_latin_alphabet_or_empty_or_dot}\n\
    \    local file_name_check_chars_last_letter_is_latin_alphabet_\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=()\n\
    \    local file_name_parts_length=()\n    local file_name_parts_count=()\n   \
    \ local file_name_parts_count_length=()\n    local file_name_parts_count_index=()\n\
    \    local file_name_parts_count_index_length=()\n    local file_name_parts_count_index_count=()\n\
    \    local file_name_parts_count_index_count_length=()\n    local file_name_parts_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_length=()\n    local file_name_parts_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index=()\n    local file_name_parts_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_length=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index=()\n    local\
    \ file_name_parts_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \    local file_name_parts_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local file_name_parts_count_index_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_extension=\"${file_name##*.}\"\n  local file_extension_lower=\"\
    ${file_extension,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_extension_lower,,}\"\n  local file_extension_lower=\"\
    ${file_extension_lower,,}\"\n  local file_extension_lower=\"${file_extension_lower,,}\"\
    \n  local file_extension_lower=\"${file_\n}\n\ncandidate() {\n    file_name_check\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwcfy416g.sh: line 90: unexpected EOF while looking for matching
    `"''

    /tmp/tmpwcfy416g.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=$1\n\
    \  local file_name_length=${#file_name}\n  local file_name_check=No\n  local file_name_check_length=${#file_name_check}\n\
    \  local file_name_check_chars=${file_name_check_length}\n  local file_name_check_chars_count=${#file_name_check_chars}\n\
    \  local file_name_check_chars_count_minus_1=${file_name_check_chars_count}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_1=${file_name_check_chars_count_minus_1}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2=${file_name_check_chars_count_minus_1_minus_1}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_1=${file_name_check_chars_count_minus_1_minus_2_minus_1}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_2=${file_name_check_chars_count_minus_1_minus_2_minus_2}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_3=${file_name_check_chars_count_minus_1_minus_2_minus_3}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_4=${file_name_check_chars_count_minus_1_minus_2_minus_4}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_5=${file_name_check_chars_count_minus_1_minus_2_minus_5}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_6=${file_name_check_chars_count_minus_1_minus_2_minus_6}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_7=${file_name_check_chars_count_minus_1_minus_2_minus_7}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_8=${file_name_check_chars_count_minus_1_minus_2_minus_8}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_9=${file_name_check_chars_count_minus_1_minus_2_minus_9}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_minus_10=${file_name_check_chars_count_minus_1_minus_2_minus_10}-1\n\
    \  local file_name_check_chars_count_minus_1_minus_2_\n}\n\ncandidate() {\n  \
    \  file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"example.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate\
    \ \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n  \
    \  [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"\
    No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_last=z\n \
    \   local file_name_check_dot_last_length=2\n    local file_name_check_dot_first_letter=a\n\
    \    local file_name_check_dot_first_letter_length=2\n    local file_name_check_dot_last_letter=z\n\
    \    local file_name_check_dot_last_letter_length=2\n    local file_name_check_dot_first_letter_index=0\n\
    \    local file_name_check_dot_first_letter_index_length=2\n    local file_name_check_dot_last_letter_index=0\n\
    \    local file_name_check_dot_last_letter_index_length=2\n    local file_name_check_dot_first_letter_index=${#file_name_check_dot_first}\n\
    \    local file_name_check_dot_first_letter_index_length=${#file_name_check_dot_first_length}\n\
    \    local file_name_check_dot_last_letter_index=${#file_name_check_dot_last}\n\
    \    local file_name_check_dot_last_letter_index_length=${#file_name_check_dot_last_length}\n\
    \    local file_name_check_dot_first_letter=${file_name:${file_name_check_dot_first_letter_index}:${file_name_check_dot_first_letter_index_length}}\n\
    \    local file_name_check_dot_last_letter=${file_name:${file_name_check_dot_last_letter_index}:${file_name_check_dot_last_letter_index_length}}\n\
    \    local file_name_check_dot_first_length=${#file_name_check_dot_first}\n  \
    \  local file_name_check_dot_last_length=${#file_name_check_dot_last}\n    local\
    \ file_name_check_dot_first_letter_index=${#file_name_check_dot_first_letter}\n\
    \    local file_name_check_dot_last_letter_index=${#file_name_check_dot_last_letter}\n\
    \    local file_name_check_dot_first_letter_index_length=${#file_name_check_dot_first_letter_length}\n\
    \    local file_name_check_dot_last_letter_index_length=${#file_name_check_dot_last_letter_length}\n\
    \    local file_name_check_dot_first_letter_length=${#file_name_check_dot_first_letter}\n\
    \    local file_name_check_dot_last_letter_length=${#file_name_check_dot_last_letter}\n\
    \    local file_name_check_dot_first_letter_length=${#file_name_check_dot_first_letter_length}\n\
    \    local file_name_check_dot_last_letter_length=${#file_name_check_dot_last_letter_length}\n\
    \    local file_name\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local dot_count=${file_name_length}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n\
    \    local dot_index=${#file_name}\n    local dot_index=${#file_name}\n    local\
    \ dot_index=${#file_name}\n    local dot_index=${#file_name}\n\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check_result=\"\
    No\"\n    \n    if [[ ${file_name_length} -gt 3 ]]; then\n        file_name_check_result=\"\
    Yes\"\n    fi\n    \n    if [[ ${file_name_length} -eq 0 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 1 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 2 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 3 ]]; then\n        file_name_check_result=\"\
    Yes\"\n    fi\n    \n    if [[ ${file_name_length} -eq 4 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 5 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 6 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 7 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 8 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 9 ]]; then\n        file_name_check_result=\"\
    Yes\"\n    fi\n    \n    if [[ ${file_name_length} -eq 10 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 11 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 12 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 13 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 14 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 15 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n    if [[ ${file_name_length} -eq 16 ]]; then\n        file_name_check_result=\"\
    No\"\n    fi\n    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local file_name_length=${#file_name}\n  local dot_count=${file_name_length}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n  local dot_index=${#file_name}\n\
    \n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local dot_count=\"$(echo \"${file_name}\" | sed 's/\\..*$//g' | wc -c)\"\
    \n  if [ \"${dot_count}\" -gt \"3\" ]; then\n    echo \"No\"\n  else\n    local\
    \ dot_count=\"$(echo \"${file_name}\" | sed 's/\\..*$//g' | grep -E '^[a-z]' |\
    \ wc -c)\"\n    if [ \"${dot_count}\" -eq \"0\" ]; then\n      echo \"No\"\n \
    \   else\n      local dot_count=\"$(echo \"${file_name}\" | sed 's/\\..*$//g'\
    \ | grep -E '^[a-z]' | grep -E '^[A-Z]' | wc -c)\"\n      if [ \"${dot_count}\"\
    \ -eq \"0\" ]; then\n        echo \"No\"\n      else\n        echo \"Yes\"\n \
    \     fi\n    fi\n  fi\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\"\
    ) = \"No\" ]]\n    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"\
    No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n   \
    \ [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n    [[ $(candidate \"\
    @this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"this_is_12valid.6exe4.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate \"Is3youfault.txt\") = \"\
    Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate \"I563_Yes3.txtt\") = \"\
    No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\" ]]\n    [[ $(candidate \"\
    final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\") = \"No\" ]]\n\
    \    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"s.\") = \"No\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=$1\n    local file_name_length=${#file_name}\n    local file_name_check=No\n\
    \    local file_name_check_length=3\n    local file_name_check_dot=1\n    local\
    \ file_name_check_dot_length=2\n    local file_name_check_dot_first=a\n    local\
    \ file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=Z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=a\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=z\n\
    \    local file_name_check_dot_first_length=2\n    local file_name_check_dot_first=A\n\
    \    local file_name_check_dot_first_length=2\n    local file_name\n}\n\ncandidate()\
    \ {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\") = \"No\"\
    \ ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate \"K.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\") = \"No\" ]]\n\
    \    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate \"/this_is_valid.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\") = \"No\" ]]\n    [[ $(candidate\
    \ \"this_is_valid.txt\") = \"Yes\" ]]\n    [[ $(candidate \"this_is_valid.txtexe\"\
    ) = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\") = \"No\" ]]\n   \
    \ [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[ $(candidate \"\
    this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"all.exe.txt\")\
    \ = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\")\
    \ = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 2
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//./\
    \ }\n    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_last=${file_name_parts:(-1)}\n    local file_name_parts_first_length=${#file_name_parts_first}\n\
    \    local file_name_parts_last_length=${#file_name_parts_last}\n    local file_name_parts_first_letter=${file_name_parts_first:0:1}\n\
    \    local file_name_parts_last_letter=${file_name_parts_last:(-1)}\n    local\
    \ file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n    local\
    \ file_name_parts_last_letter_length=${#file_name_parts_last_letter}\n    local\
    \ file_name_parts_first_letter_is_latin_alphabet=${file_name_parts_first_letter:0:1}\n\
    \    local file_name_parts_last_letter_is_latin_alphabet=${file_name_parts_last_letter:(-1)}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_length=${#file_name_parts_first_letter_is_latin_alphabet}\n\
    \    local file_name_parts_last_letter_is_latin_alphabet_length=${#file_name_parts_last_letter_is_latin_alphabet}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_empty=${file_name_parts_first_letter_is_latin_alphabet:(-1)}\n\
    \    local file_name_parts_last_letter_is_latin_alphabet_is_empty=${file_name_parts_last_letter_is_latin_alphabet:(-1)}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_empty_length=${#file_name_parts_first_letter_is_latin_alphabet_is_empty}\n\
    \    local file_name_parts_last_letter_is_latin_alphabet_is_empty_length=${#file_name_parts_last_letter_is_latin_alphabet_is_empty}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_empty_is_three_digits=${file_name_parts_first_letter_is_latin_alphabet_is_empty:0:1}\n\
    \    local file_name_parts_last_letter_is_latin_alphabet_is_empty_is_three_digits=${file_name_parts_last_letter_is_latin_alphabet_is_empty:(-1)}\n\
    \    local file_name_parts_first_letter_is_latin_alphabet_is_empty_is_three_digits_length=${#file_name_parts_first_letter_is_\n\
    }\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi2glr0h5.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n  local file_name=\"\
    $1\"\n  local dot_count=0\n  local dot_position=0\n  local dot_position2=0\n \
    \ local dot_position3=0\n  local dot_position4=0\n  local dot_position5=0\n  local\
    \ dot_position6=0\n  local dot_position7=0\n  local dot_position8=0\n  local dot_position9=0\n\
    \  local dot_position10=0\n  local dot_position11=0\n  local dot_position12=0\n\
    \  local dot_position13=0\n  local dot_position14=0\n  local dot_position15=0\n\
    \  local dot_position16=0\n  local dot_position17=0\n  local dot_position18=0\n\
    \  local dot_position19=0\n  local dot_position20=0\n  local dot_position21=0\n\
    \  local dot_position22=0\n  local dot_position23=0\n  local dot_position24=0\n\
    \  local dot_position25=0\n  local dot_position26=0\n  local dot_position27=0\n\
    \  local dot_position28=0\n  local dot_position29=0\n  local dot_position30=0\n\
    \  local dot_position31=0\n  local dot_position32=0\n  local dot_position33=0\n\
    \  local dot_position34=0\n  local dot_position35=0\n  local dot_position36=0\n\
    \  local dot_position37=0\n  local dot_position38=0\n  local dot_position39=0\n\
    \  local dot_position40=0\n  local dot_position41=0\n  local dot_position42=0\n\
    \  local dot_position43=0\n  local dot_position44=0\n  local dot_position45=0\n\
    \  local dot_position46=0\n  local dot_position47=0\n  local dot_position48=0\n\
    \  local dot_position49=0\n  local dot_position50=0\n  local dot_position51=0\n\
    \  local dot_position52=0\n  local dot_position53=0\n  local dot_position54=0\n\
    \  local dot_position55=0\n  local dot_position56=0\n  local dot_position57=0\n\
    \  local dot_position58=0\n  local dot_position59=0\n  local dot_position60=0\n\
    \  local dot_position61=0\n  local dot_position62=0\n  local dot_position63=0\n\
    \  local dot_position64=0\n  local dot_position65=0\n  local dot_position66=0\n\
    \  local dot_position67=0\n  local dot_position68=0\n  local dot_position69=0\n\
    \  local dot_position70=0\n  local dot_position71=0\n  local dot_position\n}\n\
    \ncandidate() {\n    file_name_check \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate \"1example.dll\"\
    ) = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n    [[ $(candidate\
    \ \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate \"_Y.txt\"\
    ) = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040404
- exit_code: 1
  program: "#!/bin/bash\n# Create a function which takes a string representing a file's\
    \ name, and returns\n# 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n# A file's name is considered to be valid if and only if all the\
    \ following conditions \n# are met:\n# - There should not be more than three digits\
    \ ('0'-'9') in the file's name.\n# - The file's name contains exactly one dot\
    \ '.'\n# - The substring before the dot should not be empty, and it starts with\
    \ a letter from \n# the latin alphapet ('a'-'z' and 'A'-'Z').\n# - The substring\
    \ after the dot should be one of these: ['txt', 'exe', 'dll']\n# Examples:\n#\
    \ >>> $(file_name_check \"example.txt\")\n# \"Yes\"\n# >>> $(file_name_check \"\
    1example.dll\")\n# \"No\"\n#\n# $1 is a string\nfile_name_check() {\n    local\
    \ file_name=\"$1\"\n    local file_name_length=${#file_name}\n    local file_name_parts=${file_name//.}\n\
    \    local file_name_parts_length=${#file_name_parts}\n    local file_name_parts_first=${file_name_parts:0:1}\n\
    \    local file_name_parts_first_length=${#file_name_parts_first}\n    local file_name_parts_first_letter=${file_name_parts_first:0:1}\n\
    \    local file_name_parts_first_letter_length=${#file_name_parts_first_letter}\n\
    \    local file_name_parts_first_letter_is_latin_alpha=${file_name_parts_first_letter:0:1}\n\
    \    local file_name_parts_first_letter_is_latin_alpha_length=${#file_name_parts_first_letter_is_latin_alpha}\n\
    \    local file_name_parts_first_letter_is_latin_alpha_is_one_of=(\"a\" \"b\"\
    \ \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\"\
    \ \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\")\n    local\
    \ file_name_parts_first_letter_is_latin_alpha_is_one_of_length=${#file_name_parts_first_letter_is_latin_alpha_is_one_of[@]}\n\
    \    local file_name_parts_first_letter_is_latin_alpha_is_one_of_is_one_of=(\"\
    a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"\
    n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" \"\
    A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"\
    N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\")\n\
    \    local file_name_parts_first_letter_is_latin_alpha_is_one_of_is_one_of_length=${#file_name_parts_first_letter_is_latin_alpha_is_one_of_is_one_of[@]}\n\
    \    local file_name_parts_first_letter_is_latin_alpha_is_one_of_is_one_of_is_one_of=(\"\
    a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"\
    n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" \"\
    A\" \"B\" \"C\" \"D\n}\n\ncandidate() {\n    file_name_check \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"example.txt\") = \"Yes\" ]]\n    [[ $(candidate\
    \ \"1example.dll\") = \"No\" ]]\n    [[ $(candidate \"s1sdf3.asd\") = \"No\" ]]\n\
    \    [[ $(candidate \"K.dll\") = \"Yes\" ]]\n    [[ $(candidate \"MY16FILE3.exe\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"His12FILE94.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"_Y.txt\") = \"No\" ]]\n    [[ $(candidate \"?aREYA.exe\") = \"No\" ]]\n  \
    \  [[ $(candidate \"/this_is_valid.dll\") = \"No\" ]]\n    [[ $(candidate \"this_is_valid.wow\"\
    ) = \"No\" ]]\n    [[ $(candidate \"this_is_valid.txt\") = \"Yes\" ]]\n    [[\
    \ $(candidate \"this_is_valid.txtexe\") = \"No\" ]]\n    [[ $(candidate \"#this2_i4s_5valid.ten\"\
    ) = \"No\" ]]\n    [[ $(candidate \"@this1_is6_valid.exe\") = \"No\" ]]\n    [[\
    \ $(candidate \"this_is_12valid.6exe4.txt\") = \"No\" ]]\n    [[ $(candidate \"\
    all.exe.txt\") = \"No\" ]]\n    [[ $(candidate \"I563_No.exe\") = \"Yes\" ]]\n\
    \    [[ $(candidate \"Is3youfault.txt\") = \"Yes\" ]]\n    [[ $(candidate \"no_one#knows.dll\"\
    ) = \"Yes\" ]]\n    [[ $(candidate \"1I563_Yes3.exe\") = \"No\" ]]\n    [[ $(candidate\
    \ \"I563_Yes3.txtt\") = \"No\" ]]\n    [[ $(candidate \"final..txt\") = \"No\"\
    \ ]]\n    [[ $(candidate \"final132\") = \"No\" ]]\n    [[ $(candidate \"_f4indsartal132.\"\
    ) = \"No\" ]]\n    [[ $(candidate \".txt\") = \"No\" ]]\n    [[ $(candidate \"\
    s.\") = \"No\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnwfnx4yi.sh: line 67: unexpected EOF while looking for matching
    `"''

    /tmp/tmpnwfnx4yi.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040404

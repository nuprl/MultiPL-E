language: sh
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n  local j\n  local bored_string\n\n  for ((i=0; i<${#words}; i++));\
    \ do\n    word=${words[i]}\n    bored_string=${word:0:1}\n    for ((j=0; j<${#delimiter};\
    \ j++)); do\n      if [[ ${bored_string:0:1} == ${delimiter:$j} ]]; then\n   \
    \     bored=$((bored+1))\n      fi\n    done\n  done\n\n  echo $bored\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=.?!\n  local delimiters_len=${#delimiters}\n\
    \  local delimiter\n  local word\n  local bored_word\n  local bored_delimiter\n\
    \  local bored_delimiters\n  local bored_delimiters_len\n  local bored_delimiters_index\n\
    \  local bored_delimiters_index\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local\
    \ bored_delimiters_index_len\n  local bored_delimiters_index_len\n  local bored_delimiters_index_len\n\
    \  local bored_delimiters_index_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences_words=()\n  local boredom_sentences_words_count=()\n\
    \  local boredom_sentences_words_count_boredoms=()\n  local boredom_sentences_words_count_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms=()\n  local\
    \ boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms=()\n  local\
    \ boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=()\n\
    \  local boredom_sentences_words_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_bore\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiter=$2\n    local delimiters=\"\
    .?!\"\n    for (( i=0; i<${#word}; i++ )); do\n        if [[ \"${word:$i:1}\"\
    \ == \"$delimiter\" ]]; then\n            bored=$((bored+1))\n        fi\n   \
    \ done\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(grep -E '^I' $1)\n  echo $boredoms | wc -l\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_count=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_count=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_count=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_count=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_value=${delimiters[$delimiters_index]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpljubqgdi.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local output=0\n  local boredom_words=(\"I\" \"a\"\
    \ \"the\" \"an\" \"the\" \"a\")\n  local boredom_count=0\n  local boredom_sentence=\"\
    \"\n  local boredom_sentence_count=0\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_word_count=0\n  local boredom_sentence_word_index=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_length=0\n  local boredom_sentence_word_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length=0\n  local boredom_sentence_word_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length=0\n  local boredom_sentence_word_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length=0\n  local boredom_sentence_word_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length=0\n \
    \ local boredom_sentence_word_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length_length_length=0\n\
    \  local boredom_sentence_word_length_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \  local boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$@\n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\".?!\")\n  for word in $words; do\n    if [[ \"$word\"\
    \ == *\"I\"* ]]; then\n      boredoms=$((boredoms+1))\n    fi\n  done\n  echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$*\n  local delimiters=(\".\")\n  local delimiters_len=${#delimiters[@]}\n\
    \  local delimiters_chars=${delimiters[*]}\n  local delimiters_chars_len=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_chars=${delimiters_chars[*]}\n  local delimiters_chars_chars_len=${#delimiters_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars=${delimiters_chars_chars[*]}\n  local delimiters_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_char\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv_5yb2tz.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local word\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_array=(${delimiters[@]})\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_elements=${delimiters_array[@]}\n\
    \  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n \
    \ local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=${delimiters[*]}\n\
    \    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_chars=${delimiters_chars[*]}\n\
    \    local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars=${delimiters_chars_chars[*]}\n    local delimiters_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[*]}\n\
    \    local delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[*]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[*]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_sentence_index=0\n    local\
    \ boredom_word_index=0\n    local boredom_word_count=0\n    local boredom_sentence_count=0\n\
    \    local boredom_sentence_words=\"\"\n    local boredom_sentence_word=\"\"\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_index=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiter=$2 \n  local delimiters=($delimiter)\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((delimiters_length-1))\n  local delimiters_length=$((delimiters_length-1))\n\
    \  local delimiters_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps8fd9umw.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmps8fd9umw.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\".\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\".\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\".\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\".\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\".\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    .\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\".\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\".\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\".\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\".\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    .\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\".\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\".\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\".\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\".\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${#delimiters[@]}\n  local delimiters_value=${delimiters[$delimiters_index]}\n\
    \  local delimiters_value_count=${#delimiters_value[@]}\n  local delimiters_value_count=${#delimiters_value[@]}\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$((delimiters_value_count-1))\n  local delimiters_value_count=$((delimiters_value_count-1))\n\
    \  local delimiters_value_count=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(${delimiters[@]})\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_length}\n  local delimiters_array_elements_length=${#delimiters_array_elements}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements}\n  local\
    \ delimiters_array_elements_elements_length=${#delimiters_array_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5ri3sm7.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string}\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiters_string_length} - 1))\n    local\
    \ delimiters_string_length=$((${delimiters_string_length} - 1))\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiters_string_length} - 1))\n    local\
    \ delimiters_string_length=$((${delimiters_string_length} - 1))\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiters_string_length} - 1))\n    local\
    \ delimiters_string_length=$((${delimiters_string_length} - 1))\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiters_string_length} - 1))\n    local\
    \ delimiters_string_length=$((${delimiters_string_length} - 1))\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiters_string_length} - 1))\n    local\
    \ delimiters_string_length=$((${delimiters_string_length} - 1))\n    local delimiters_string_length=$((${delimiters_string_length}\
    \ - 1))\n    local delimiters_string_length=$((${delimiters_string_length} - 1))\n\
    \    local delimiters_string_length=$((${delimiters_string_length} - 1))\n   \
    \ local delimiters_string_length=$((${delimiter\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnbh8fqkf.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpnbh8fqkf.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed -e 's/\\./ /g' -e 's/\\?/ /g' -e 's/!/ /g')\n    local\
    \ boredom_word=$(echo $boredom_string | sed -e 's/\\./ /g' -e 's/\\?/ /g' -e 's/!/\
    \ /g' | head -1)\n    local boredom_word_count=$(echo $boredom_string | sed -e\
    \ 's/\\./ /g' -e 's/\\?/ /g' -e 's/!/ /g' | grep -c \"$boredom_word\")\n    local\
    \ boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    local boredom_word_count=$((boredom_word_count+1))\n    local boredom_word_count=$((boredom_word_count+1))\n\
    \    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local word\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word_count\n  local boredom_sentence_count\n  local boredom_sentence_word\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=(\".\")\n  \
    \  local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[@]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_word=\"\"\n  local delimiters_word_count=0\n\
    \  local delimiters_word_index=0\n  local delimiters_word_count2=0\n  local delimiters_word_index2=0\n\
    \  local delimiters_word_count3=0\n  local delimiters_word_index3=0\n  local delimiters_word_count4=0\n\
    \  local delimiters_word_index4=0\n  local delimiters_word_count5=0\n  local delimiters_word_index5=0\n\
    \  local delimiters_word_count6=0\n  local delimiters_word_index6=0\n  local delimiters_word_count7=0\n\
    \  local delimiters_word_index7=0\n  local delimiters_word_count8=0\n  local delimiters_word_index8=0\n\
    \  local delimiters_word_count9=0\n  local delimiters_word_index9=0\n  local delimiters_word_count10=0\n\
    \  local delimiters_word_index10=0\n  local delimiters_word_count11=0\n  local\
    \ delimiters_word_index11=0\n  local delimiters_word_count12=0\n  local delimiters_word_index12=0\n\
    \  local delimiters_word_count13=0\n  local delimiters_word_index13=0\n  local\
    \ delimiters_word_count14=0\n  local delimiters_word_index14=0\n  local delimiters_word_count15=0\n\
    \  local delimiters_word_index15=0\n  local delimiters_word_count16=0\n  local\
    \ delimiters_word_index16=0\n  local delimiters_word_count17=0\n  local delimiters_word_index17=0\n\
    \  local delimiters_word_count18=0\n  local delimiters_word_index18=0\n  local\
    \ delimiters_word_count19=0\n  local delimiters_word_index19=0\n  local delimiters_word_count20=0\n\
    \  local delimiters_word_index20=0\n  local delimiters_word_count21=0\n  local\
    \ delimiters_word_index21=0\n  local delimiters_word_count22=0\n  local delimiters_word_index22=0\n\
    \  local delimiters_word_count23=0\n  local delimiters_word_index23=0\n  local\
    \ delimiters_word_count24=0\n  local delimiters_word_index24=0\n  local delimiters_word_count25=0\n\
    \  local delimiters_word_index25=0\n  local delimiters_word_count26=0\n  local\
    \ delimiters_word_index26=0\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' \"$1\")\n    echo \"$boredoms\" | wc -l\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$*\n    local delimiters=(\".\")\n   \
    \ local delimiter=\"?\"\n    local delimiter2=\"!\"\n    local delimiter3=\".\"\
    \n    local delimiter4=\",\"\n    local delimiter5=\";\"\n    local delimiter6=\"\
    :\"\n    local delimiter7=\";\"\n    local delimiter8=\".\"\n    local delimiter9=\"\
    ?\"\n    local delimiter10=\"!\"\n    local delimiter11=\".\"\n    local delimiter12=\"\
    ,\"\n    local delimiter13=\";\"\n    local delimiter14=\":\"\n    local delimiter15=\"\
    ;\"\n    local delimiter16=\".\"\n    local delimiter17=\"?\"\n    local delimiter18=\"\
    !\"\n    local delimiter19=\".\"\n    local delimiter20=\",\"\n    local delimiter21=\"\
    ;\"\n    local delimiter22=\":\"\n    local delimiter23=\";\"\n    local delimiter24=\"\
    .\"\n    local delimiter25=\"?\"\n    local delimiter26=\"!\"\n    local delimiter27=\"\
    .\"\n    local delimiter28=\",\"\n    local delimiter29=\";\"\n    local delimiter30=\"\
    :\"\n    local delimiter31=\";\"\n    local delimiter32=\".\"\n    local delimiter33=\"\
    ?\"\n    local delimiter34=\"!\"\n    local delimiter35=\".\"\n    local delimiter36=\"\
    ,\"\n    local delimiter37=\";\"\n    local delimiter38=\":\"\n    local delimiter39=\"\
    ;\"\n    local delimiter40=\".\"\n    local delimiter41=\"?\"\n    local delimiter42=\"\
    !\"\n    local delimiter43=\".\"\n    local delimiter44=\",\"\n    local delimiter45=\"\
    ;\"\n    local delimiter46=\":\"\n    local delimiter47=\";\"\n    local delimiter48=\"\
    .\"\n    local delimiter49=\"?\"\n    local delimiter50=\"!\"\n    local delimiter51=\"\
    .\"\n    local delimiter52=\",\"\n    local delimiter53=\";\"\n    local delimiter54=\"\
    :\"\n    local delimiter55=\";\"\n    local delimiter56=\".\"\n    local delimiter57=\"\
    ?\"\n    local delimiter58=\"!\"\n    local delimiter59=\".\"\n    local delimiter60=\"\
    ,\"\n    local delimiter61=\";\"\n    local delimiter62=\":\"\n    local delimiter63=\"\
    ;\"\n    local delimiter64=\".\"\n    local delimiter65=\"?\"\n    local delimiter66=\"\
    !\"\n    local delimiter67=\".\"\n    local delimiter68=\",\"\n    \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1 \n    local delimiters=.?!\n    for\
    \ word in $words; do\n        if [[ \"$word\" == I* ]]; then\n            ((bored++))\n\
    \        fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local boredom_words=()\n  local\
    \ boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=''\n  local boredom_word_index=''\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local bore\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 boredoms=$((boredoms+1))\n  local delimiter=$2\
    \ words=$((words+1))\n  local delimiters=(\".\")(\"?\")(\"!\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoqrbn67o.sh: line 16: syntax error near unexpected token `(''

    /tmp/tmpoqrbn67o.sh: line 16: `  local delimiters=(".")("?")("!")''

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=( \".\" \"?\" \"\
    !\" )\n  for word in $words; do\n    for delimiter in \"${delimiters[@]}\"; do\n\
    \      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        (( boredoms += 1\
    \ ))\n        break\n      fi\n    done\n  done\n  echo $boredoms\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_word=\"I\"\
    \n  local delimiter=\".\"\n  local delimiters=\" . ? !\"\n  local delimiter_count=0\n\
    \  local delimiters_count=${#delimiters}\n  local delimiters_word=${delimiters:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word:0:1}\n\
    \  local delimiters_count=${#delimiters_word}\n  local delimiters_word=${delimiters_word\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpytb2obrw.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$@\n  local delimiters=(\".\")\n  local\
    \ delimiters_len=${#delimiters[@]}\n  local delimiters_chars=${delimiters[*]}\n\
    \  local delimiters_chars_len=${#delimiters_chars[@]}\n  local delimiters_chars_chars=${delimiters_chars[*]}\n\
    \  local delimiters_chars_chars_len=${#delimiters_chars_chars[@]}\n  local delimiters_chars_chars_chars=${delimiters_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars_chars_chars[*]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_char\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwvktvhxm.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  for word in $words; do\n    if [[ \"$word\" == \"I\" ]]; then\n     \
    \ bored=$((bored + 1))\n    fi\n  done\n  echo \"$bored\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=(\
    \ $boredom_string )\n    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_array=( $boredom_sentence )\n    local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \    local boredom_sentence_sentence=${boredom_sentence_array[1]}\n    local boredom_sentence_sentence_array=(\
    \ $boredom_sentence_sentence )\n    local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=(\
    \ $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence )\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=(\
    \ $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprp_xykfc.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiters=(\".\")\n \
    \   local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[@]}\n    local delimiters_string_length=${#delimiters_string[@]}\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\".?!\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqyvp2bli.sh: line 91: unexpected EOF while looking for matching
    `"''

    /tmp/tmpqyvp2bli.sh: line 95: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local boredom_count=0\n  while IFS=$delimiter read -r word; do\n    if [[ $word\
    \ == *\"I\"* ]]; then\n      boredom_count=$((boredom_count + 1))\n    fi\n  done\
    \ < <(echo \"$words\")\n  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_i=()\n  local delimiters_o=()\n  local delimiters_b=()\n\
    \  local delimiters_c=()\n  local delimiters_l=()\n  local delimiters_r=()\n \
    \ local delimiters_p=()\n  local delimiters_q=()\n  local delimiters_u=()\n  local\
    \ delimiters_x=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string_length=${#delimiters_string}\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(${delimiters[@]})\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_len=${#delimiters[@]}\n    local delimiters_str=${delimiters[*]}\n\
    \    local delimiters_str_len=${#delimiters_str[@]}\n    local delimiters_str_len=$((delimiters_str_len-1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiters_str_len+1))\n\
    \    local delimiters_str=$((delimiters_str+1))\n    local delimiters_str_len=$((delimiter\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpld5rsyvi.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpld5rsyvi.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiter=(\"\
    ?\")\n  local delimiter2=(\"!\")\n  local delimiter3=(\"?\")\n  local delimiter4=(\"\
    !\")\n  local delimiter5=(\".\")\n  local delimiter6=(\".\")\n  local delimiter7=(\"\
    .\")\n  local delimiter8=(\".\")\n  local delimiter9=(\".\")\n  local delimiter10=(\"\
    .\")\n  local delimiter11=(\".\")\n  local delimiter12=(\".\")\n  local delimiter13=(\"\
    .\")\n  local delimiter14=(\".\")\n  local delimiter15=(\".\")\n  local delimiter16=(\"\
    .\")\n  local delimiter17=(\".\")\n  local delimiter18=(\".\")\n  local delimiter19=(\"\
    .\")\n  local delimiter20=(\".\")\n  local delimiter21=(\".\")\n  local delimiter22=(\"\
    .\")\n  local delimiter23=(\".\")\n  local delimiter24=(\".\")\n  local delimiter25=(\"\
    .\")\n  local delimiter26=(\".\")\n  local delimiter27=(\".\")\n  local delimiter28=(\"\
    .\")\n  local delimiter29=(\".\")\n  local delimiter30=(\".\")\n  local delimiter31=(\"\
    .\")\n  local delimiter32=(\".\")\n  local delimiter33=(\".\")\n  local delimiter34=(\"\
    .\")\n  local delimiter35=(\".\")\n  local delimiter36=(\".\")\n  local delimiter37=(\"\
    .\")\n  local delimiter38=(\".\")\n  local delimiter39=(\".\")\n  local delimiter40=(\"\
    .\")\n  local delimiter41=(\".\")\n  local delimiter42=(\".\")\n  local delimiter43=(\"\
    .\")\n  local delimiter44=(\".\")\n  local delimiter45=(\".\")\n  local delimiter46=(\"\
    .\")\n  local delimiter47=(\".\")\n  local delimiter48=(\".\")\n  local delimiter49=(\"\
    .\")\n  local delimiter50=(\".\")\n  local delimiter51=(\".\")\n  local delimiter52=(\"\
    .\")\n  local delimiter53=(\".\")\n  local delimiter54=(\".\")\n  local delimiter55=(\"\
    .\")\n  local delimiter56=(\".\")\n  local delimiter57=(\".\")\n  local delimiter58=(\"\
    .\")\n  local delimiter59=(\".\")\n  local delimiter60=(\".\")\n  local delimiter61=(\"\
    .\")\n  local delimiter62=(\".\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0 # index for delimiters\n  local delimiters_length=0\
    \ # length of delimiters\n  local delimiters_string=\"\" # delimiters string\n\
    \  local delimiters_string_index=0 # index for delimiters string\n  local delimiters_string_length=0\
    \ # length of delimiters string\n  local delimiters_string_word=\"\" # delimiters\
    \ string word\n  local delimiters_string_word_index=0 # index for delimiters string\
    \ word\n  local delimiters_string_word_length=0 # length of delimiters string\
    \ word\n  local delimiters_string_word_boredom=0 # delimiters string word boredom\n\
    \  local delimiters_string_word_boredom_index=0 # index for delimiters string\
    \ word boredom\n  local delimiters_string_word_boredom_length=0 # length of delimiters\
    \ string word boredom\n  local delimiters_string_word_boredom_count=0 # delimiters\
    \ string word boredom count\n  local delimiters_string_word_boredom_count_index=0\
    \ # index for delimiters string word boredom count\n  local delimiters_string_word_boredom_count_length=0\
    \ # length of delimiters string word boredom count\n  local delimiters_string_word_boredom_count_boredom=0\
    \ # delimiters string word boredom count boredom\n  local delimiters_string_word_boredom_count_boredom_index=0\
    \ # index for delimiters string word boredom count boredom\n  local delimiters_string_word_boredom_count_boredom_length=0\
    \ # length of delimiters string word boredom count boredom\n  local delimiters_string_word_boredom_count_boredom_count=0\
    \ # delimiters string word boredom count boredom count\n  local delimiters_string_word_boredom_count_boredom_count_index=0\
    \ # index for delimiters string word boredom count boredom count\n  local delimiters_string_word_boredom_count_boredom_count_length=0\
    \ # length of delimiters string word boredom count boredom count\n  local delimiters_string_word_boredom_count_boredom_count_boredom=0\
    \ # delimiters string word boredom count boredom count boredom\n  local delimiters_string_word_boredom_count_boredom_count_boredom_index=0\
    \ # index for delimiters string word boredom count \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${#delimiters[@]}\n  local delimiters_values=(\"?\"\
    )\n  local delimiters_values_count=${#delimiters_values[@]}\n  local delimiters_values_index=${#delimiters_values[@]}\n\
    \  local delimiters_values_values_count=${#delimiters_values_values[@]}\n  local\
    \ delimiters_values_values_index=${#delimiters_values_values[@]}\n  local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \  local delimiters_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ukgc8d1.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiters=\"\
    .?!\"\n  local delimiters_count=${#delimiters}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string_count=${#delimiters_string}\n  local delimiters_string_index=0\n\
    \  local delimiters_string_index2=0\n  local delimiters_string_index3=0\n  local\
    \ delimiters_string_index4=0\n  local delimiters_string_index5=0\n  local delimiters_string_index6=0\n\
    \  local delimiters_string_index7=0\n  local delimiters_string_index8=0\n  local\
    \ delimiters_string_index9=0\n  local delimiters_string_index10=0\n  local delimiters_string_index11=0\n\
    \  local delimiters_string_index12=0\n  local delimiters_string_index13=0\n  local\
    \ delimiters_string_index14=0\n  local delimiters_string_index15=0\n  local delimiters_string_index16=0\n\
    \  local delimiters_string_index17=0\n  local delimiters_string_index18=0\n  local\
    \ delimiters_string_index19=0\n  local delimiters_string_index20=0\n  local delimiters_string_index21=0\n\
    \  local delimiters_string_index22=0\n  local delimiters_string_index23=0\n  local\
    \ delimiters_string_index24=0\n  local delimiters_string_index25=0\n  local delimiters_string_index26=0\n\
    \  local delimiters_string_index27=0\n  local delimiters_string_index28=0\n  local\
    \ delimiters_string_index29=0\n  local delimiters_string_index30=0\n  local delimiters_string_index31=0\n\
    \  local delimiters_string_index32=0\n  local delimiters_string_index33=0\n  local\
    \ delimiters_string_index34=0\n  local delimiters_string_index35=0\n  local delimiters_string_index36=0\n\
    \  local delimiters_string_index37=0\n  local delimiters_string_index38=0\n  local\
    \ delimiters_string_index39=0\n  local delimiters_string_index40=0\n  local delimiters_string_index41=0\n\
    \  local delimiters_string_index42=0\n  local delimiters_string_index43=0\n  local\
    \ delimiters_string_index44=0\n  local delimiters_string_index45=0\n  local delimiters_string_index46=0\n\
    \  local delimiters_string_index47=0\n  local delimiters_string_index48=0\n  local\
    \ delimiters_string_index49=0\n  local delimiters_string_index50=0\n  local delimiters_string\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local boredom_word=\"\
    I\"\n  local boredom_count=0\n  local boredom_sentence=\"\"\n  local boredom_sentence_index=0\n\
    \  local boredom_sentence_length=${#words}\n  local boredom_sentence_words=\"\"\
    \n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_length=0\n\
    \  local boredom_sentence_word_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \  local boredom_sentence_word_length_index=0\n  local boredom_sentence_word_length_index=0\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\.\\?!//g')\n    local boredom_word_count=0\n    local\
    \ boredom_word_string=\"\"\n    local boredom_word_strings=$(echo $boredom_words\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\\?!//g')\n    local boredom_word_counts=$(echo $boredom_word_strings\
    \ | sed 's/\\.\\?!//g')\n    local boredom_word_string=\"\"\n    local boredom_word_strings=$(echo\
    \ $boredom_words | sed 's/\\.\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwu_mzu_r.sh: line 39: unexpected EOF while looking for matching
    `''''

    /tmp/tmpwu_mzu_r.sh: line 57: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=(\
    \ $boredom_string )\n    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_array=( $boredom_sentence )\n    local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \    local boredom_sentence_sentence=${boredom_sentence_array[1]}\n    local boredom_sentence_sentence_array=(\
    \ $boredom_sentence_sentence )\n    local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_array=( $boredom_sentence_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=(\
    \ $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence )\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=(\
    \ $boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence\
    \ )\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprp_xykfc.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=$1\n    local boredom_word=''\n\
    \    local boredom_sentence=''\n    local boredom_sentence_index=0\n    local\
    \ boredom_sentence_length=${#boredom_words}\n    local boredom_sentence_word=''\n\
    \    local boredom_sentence_word_index=0\n    local boredom_sentence_word_length=${#boredom_sentence_word}\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_length=0\n    local boredom_sentence_word_boredom_word=''\n\
    \    local boredom_sentence_word_boredom_word_index=0\n    local boredom_sentence_word_boredom_word_length=${#boredom_sentence_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_count=0\n    local boredom_sentence_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_length=0\n    local boredom_sentence_word_boredom_word_boredom_word=''\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_index=0\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_count=0\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n    local boredom_sentence_word_boredom_word_boredom_word_boredom_length=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word=''\n \
    \   local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_length=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_bore\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_count=${#delimiters[@]}\n    local delimiters_index=0\n    local\
    \ delimiters_char=\"${delimiters[$delimiters_index]}\"\n    local delimiters_char_count=${#delimiters_char}\n\
    \    local delimiters_char_index=0\n    local delimiters_char_char=\"${delimiters_char[$delimiters_char_index]}\"\
    \n    local delimiters_char_char_count=${#delimiters_char_char}\n    local delimiters_char_char_index=0\n\
    \    local delimiters_char_char_char=\"${delimiters_char_char[$delimiters_char_char_index]}\"\
    \n    local delimiters_char_char_char_count=${#delimiters_char_char_char}\n  \
    \  local delimiters_char_char_char_index=0\n    local delimiters_char_char_char_char=\"\
    ${delimiters_char_char_char[$delimiters_char_char_char_index]}\"\n    local delimiters_char_char_char_char_count=${#delimiters_char_char_char_char}\n\
    \    local delimiters_char_char_char_char_index=0\n    local delimiters_char_char_char_char_char=\"\
    ${delimiters_char_char_char_char[$delimiters_char_char_char_char_index]}\"\n \
    \   local delimiters_char_char_char_char_char_count=${#delimiters_char_char_char_char_char}\n\
    \    local delimiters_char_char_char_char_char_index=0\n    local delimiters_char_char_char_char_char_char=\"\
    ${delimiters_char_char_char_char_char[$delimiters_char_char_char_char_char_index]}\"\
    \n    local delimiters_char_char_char_char_char_char_count=${#delimiters_char_char_char_char_char_char}\n\
    \    local delimiters_char_char_char_char_char_char_index=0\n    local delimiters_char_char_char_char_char_char_char=\"\
    ${delimiters_char_char_char_char_char_char[$delimiters_char_char_char_char_char_char_index]}\"\
    \n    local delimiters_char_char_char_char_char_char_char_count=${#delimiters_char_char_char_char_char_char_char}\n\
    \    local delimiters_char_char_char_char_char_char_char_index=0\n    local delimiters_char_char_char_char_char_char_char_char=\"\
    ${delimiters_char_char_char_char_char_char_char[$delimiters_char_char_char_char_char_char_char_char_index]}\"\
    \n    local delimiters_char_char_char_char_char_char_char_char_count=${#delimiters_char_char_char_char_char_char_char_char}\n\
    \    local delimiters_char_char_char_char_char_char_char_char_index=0\n    local\
    \ delimiters_char_char_char_char_char_char_char_char_char=\"${delimiters_char_char_char_char_char_char_char_char[$\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb96b5_jk.sh: line 56: unexpected EOF while looking for matching
    `"''

    /tmp/tmpb96b5_jk.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=$boredom_array[0]\n    local boredom_sentence=$boredom_array[1]\n\
    \    local boredom_delimiter=$boredom_array[2]\n    local boredom_delimiter_count=0\n\
    \    local boredom_delimiter_index=0\n    local boredom_delimiter_index2=0\n \
    \   local boredom_delimiter_index3=0\n    local boredom_delimiter_index4=0\n \
    \   local boredom_delimiter_index5=0\n    local boredom_delimiter_index6=0\n \
    \   local boredom_delimiter_index7=0\n    local boredom_delimiter_index8=0\n \
    \   local boredom_delimiter_index9=0\n    local boredom_delimiter_index10=0\n\
    \    local boredom_delimiter_index11=0\n    local boredom_delimiter_index12=0\n\
    \    local boredom_delimiter_index13=0\n    local boredom_delimiter_index14=0\n\
    \    local boredom_delimiter_index15=0\n    local boredom_delimiter_index16=0\n\
    \    local boredom_delimiter_index17=0\n    local boredom_delimiter_index18=0\n\
    \    local boredom_delimiter_index19=0\n    local boredom_delimiter_index20=0\n\
    \    local boredom_delimiter_index21=0\n    local boredom_delimiter_index22=0\n\
    \    local boredom_delimiter_index23=0\n    local boredom_delimiter_index24=0\n\
    \    local boredom_delimiter_index25=0\n    local boredom_delimiter_index26=0\n\
    \    local boredom_delimiter_index27=0\n    local boredom_delimiter_index28=0\n\
    \    local boredom_delimiter_index29=0\n    local boredom_delimiter_index30=0\n\
    \    local boredom_delimiter_index31=0\n    local boredom_delimiter_index32=0\n\
    \    local boredom_delimiter_index33=0\n    local boredom_delimiter_index34=0\n\
    \    local boredom_delimiter_index35=0\n    local boredom_delimiter_index36=0\n\
    \    local boredom_delimiter_index37=0\n    local boredom_delimiter_index38=0\n\
    \    local boredom_delimiter_index39=0\n    local boredom_delimiter_index40=0\n\
    \    local boredom_delimiter_index41=0\n    local boredom_delimiter_index42=0\n\
    \    local boredom_delimiter_index43=0\n    local boredom_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local delimiters=(\"\
    .\")\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[$delimiters_count]}\n\
    \    local delimiters_string_count=${#delimiters_string}\n    local delimiters_string_index=0\n\
    \    local delimiters_string_index2=0\n    local delimiters_string_index3=0\n\
    \    local delimiters_string_index4=0\n    local delimiters_string_index5=0\n\
    \    local delimiters_string_index6=0\n    local delimiters_string_index7=0\n\
    \    local delimiters_string_index8=0\n    local delimiters_string_index9=0\n\
    \    local delimiters_string_index10=0\n    local delimiters_string_index11=0\n\
    \    local delimiters_string_index12=0\n    local delimiters_string_index13=0\n\
    \    local delimiters_string_index14=0\n    local delimiters_string_index15=0\n\
    \    local delimiters_string_index16=0\n    local delimiters_string_index17=0\n\
    \    local delimiters_string_index18=0\n    local delimiters_string_index19=0\n\
    \    local delimiters_string_index20=0\n    local delimiters_string_index21=0\n\
    \    local delimiters_string_index22=0\n    local delimiters_string_index23=0\n\
    \    local delimiters_string_index24=0\n    local delimiters_string_index25=0\n\
    \    local delimiters_string_index26=0\n    local delimiters_string_index27=0\n\
    \    local delimiters_string_index28=0\n    local delimiters_string_index29=0\n\
    \    local delimiters_string_index30=0\n    local delimiters_string_index31=0\n\
    \    local delimiters_string_index32=0\n    local delimiters_string_index33=0\n\
    \    local delimiters_string_index34=0\n    local delimiters_string_index35=0\n\
    \    local delimiters_string_index36=0\n    local delimiters_string_index37=0\n\
    \    local delimiters_string_index38=0\n    local delimiters_string_index39=0\n\
    \    local delimiters_string_index40=0\n    local delimiters_string_index41=0\n\
    \    local delimiters_string_index42=0\n    local delimiters_string_index43=0\n\
    \    local delimiters_string_index44=0\n    local delimiters_string_index45=0\n\
    \    local delimiters_string_index46=0\n    local delimiters_string_index47=0\n\
    \    local delimiters_string_index48=0\n    local delimiters_string_index49=0\n\
    \    local delimiters_string_index50=0\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_len=${#delimiters[@]}\n    local delimiters_str=(\"${delimiters[*]}\"\
    )\n    local delimiters_str_cnt=${#delimiters_str[@]}\n    local delimiters_str_len=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_cnt=${#delimiters_str[@]}\n\
    \    local delimiters_str_len_cnt=${#delimiters_str[@]}\n    local delimiters_str_len_c\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local word\n  local delimiters\n\
    \  local delimiter\n  local delimiter_index\n  local delimiter_index2\n  local\
    \ delimiter_index3\n  local delimiter_index4\n  local delimiter_index5\n  local\
    \ delimiter_index6\n  local delimiter_index7\n  local delimiter_index8\n  local\
    \ delimiter_index9\n  local delimiter_index10\n  local delimiter_index11\n  local\
    \ delimiter_index12\n  local delimiter_index13\n  local delimiter_index14\n  local\
    \ delimiter_index15\n  local delimiter_index16\n  local delimiter_index17\n  local\
    \ delimiter_index18\n  local delimiter_index19\n  local delimiter_index20\n  local\
    \ delimiter_index21\n  local delimiter_index22\n  local delimiter_index23\n  local\
    \ delimiter_index24\n  local delimiter_index25\n  local delimiter_index26\n  local\
    \ delimiter_index27\n  local delimiter_index28\n  local delimiter_index29\n  local\
    \ delimiter_index30\n  local delimiter_index31\n  local delimiter_index32\n  local\
    \ delimiter_index33\n  local delimiter_index34\n  local delimiter_index35\n  local\
    \ delimiter_index36\n  local delimiter_index37\n  local delimiter_index38\n  local\
    \ delimiter_index39\n  local delimiter_index40\n  local delimiter_index41\n  local\
    \ delimiter_index42\n  local delimiter_index43\n  local delimiter_index44\n  local\
    \ delimiter_index45\n  local delimiter_index46\n  local delimiter_index47\n  local\
    \ delimiter_index48\n  local delimiter_index49\n  local delimiter_index50\n  local\
    \ delimiter_index51\n  local delimiter_index52\n  local delimiter_index53\n  local\
    \ delimiter_index54\n  local delimiter_index55\n  local delimiter_index56\n  local\
    \ delimiter_index57\n  local delimiter_index58\n  local delimiter_index59\n  local\
    \ delimiter_index60\n  local delimiter_index61\n  local delimiter_index62\n  local\
    \ delimiter_index63\n  local delimiter_index64\n  local delimiter_index65\n  local\
    \ delimiter_index66\n  local delimiter_index67\n  local delimiter_index68\n  local\
    \ delimiter_index69\n  local delimiter_index70\n  local delimiter_index71\n  local\
    \ delimiter_index72\n  local delimiter_index73\n  local delimiter_index74\n  local\
    \ delimiter_index75\n  local delimiter_index76\n  local delimiter_index77\n  local\
    \ delimiter_index78\n  local delimiter_index79\n  local delimiter_index80\n  local\
    \ delimiter_index81\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_value=${delimiters[$delimiters_index]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$((delimiters_value_count-1))\n\
    \    local delimiters_value_count=$((delimiters_value_count-1))\n    local delimiters_value_count=$\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_index=0\n  while [ $delimiters_index\
    \ -lt $delimiters_count ]; do\n    local delimiter=${delimiters[$delimiters_index]}\n\
    \    local delimiter_index=0\n    while [ $delimiter_index -lt $words ]; do\n\
    \      if [[ $words[$delimiter_index] == $delimiter ]]; then\n        boredoms=$((boredoms+1))\n\
    \      fi\n      delimiter_index=$((delimiter_index+1))\n    done\n    delimiters_index=$((delimiters_index+1))\n\
    \  done\n  echo $boredoms\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw4rkwbyp.sh: line 21: [: Hello: integer expression expected

    /tmp/tmpw4rkwbyp.sh: line 21: [: Is: integer expression expected

    /tmp/tmpw4rkwbyp.sh: line 21: [: I: integer expression expected

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local boredom_word=\"\
    I\"\n  local boredom_count=0\n  local boredom_sentence=\"\"\n  local boredom_sentences=\"\
    \"\n  local boredom_sentences_count=0\n  local boredom_sentence_count=0\n  local\
    \ boredom_sentence_words=\"\"\n  local boredom_sentence_words_count=0\n  local\
    \ boredom_sentence_words_count2=0\n  local boredom_sentence_words_count3=0\n \
    \ local boredom_sentence_words_count4=0\n  local boredom_sentence_words_count5=0\n\
    \  local boredom_sentence_words_count6=0\n  local boredom_sentence_words_count7=0\n\
    \  local boredom_sentence_words_count8=0\n  local boredom_sentence_words_count9=0\n\
    \  local boredom_sentence_words_count10=0\n  local boredom_sentence_words_count11=0\n\
    \  local boredom_sentence_words_count12=0\n  local boredom_sentence_words_count13=0\n\
    \  local boredom_sentence_words_count14=0\n  local boredom_sentence_words_count15=0\n\
    \  local boredom_sentence_words_count16=0\n  local boredom_sentence_words_count17=0\n\
    \  local boredom_sentence_words_count18=0\n  local boredom_sentence_words_count19=0\n\
    \  local boredom_sentence_words_count20=0\n  local boredom_sentence_words_count21=0\n\
    \  local boredom_sentence_words_count22=0\n  local boredom_sentence_words_count23=0\n\
    \  local boredom_sentence_words_count24=0\n  local boredom_sentence_words_count25=0\n\
    \  local boredom_sentence_words_count26=0\n  local boredom_sentence_words_count27=0\n\
    \  local boredom_sentence_words_count28=0\n  local boredom_sentence_words_count29=0\n\
    \  local boredom_sentence_words_count30=0\n  local boredom_sentence_words_count31=0\n\
    \  local boredom_sentence_words_count32=0\n  local boredom_sentence_words_count33=0\n\
    \  local boredom_sentence_words_count34=0\n  local boredom_sentence_words_count35=0\n\
    \  local boredom_sentence_words_count36=0\n  local boredom_sentence_words_count37=0\n\
    \  local boredom_sentence_words_count38=0\n  local boredom_sentence_words_count39=0\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_array=($boredom_sentence)\n    local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \    local boredom_sentence_sentence=${boredom_sentence_array[1]}\n    local boredom_sentence_sentence_array=($boredom_sentence_sentence)\n\
    \    local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4w0brm_c.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local words=$1\n  local delimiters=(\".\")\n \
    \ local delimiters_count=${#delimiters[@]}\n  local delimiters_array=(${delimiters[@]})\n\
    \  local delimiters_array_count=${#delimiters_array[@]}\n  local delimiters_array_elements=${delimiters_array[@]}\n\
    \  local delimiters_array_elements_count=${#delimiters_array_elements[@]}\n  local\
    \ delimiters_array_elements_elements=${delimiters_array_elements[@]}\n  local\
    \ delimiters_array_elements_elements_count=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_count=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_count=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_element\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local delimiters=(\"\
    .\")\n    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${delimiters_string//$delimiters_string/}\n\
    \    local delimiters_length=${#delimiters_string}\n    local delimiters_string=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0i8xnyut.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"?\"\
    )\n    local delimiter4=(\".\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\".\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\".\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\".\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\".\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    .\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\".\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\".\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\".\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\".\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    .\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\".\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\".\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\".\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\".\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_i=()\n  local delimiters_o=()\n\
    \  local delimiters_b=()\n  local delimiters_c=()\n  local delimiters_p=()\n \
    \ local delimiters_q=()\n  local delimiters_x=()\n  local delimiters_y=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n\
    \  local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n \
    \ local delimiters_z=()\n  local delimiters_z=()\n  local delimiters_z=()\n  local\
    \ delimiters_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_length}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements}\n  \
    \  local delimiters_array_elements_elements=${delimiters_array_elements_length}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements_length}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_length}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbpp23siw.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 boredoms=$((boredoms+1))\n    local\
    \ delimiters=$2 words=$((words+1))\n    local delimiter=$3 delimiters=$((delimiters+1))\n\
    \    local boredom=$4\n    local delimiter=$4\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local delimiter=$3\n    local delimiters=$((delimiters+1))\n    local delimiter=$3\n\
    \    local delimiters=$((delimiters+1))\n    local delimiter=$3\n    local delimiters=$((delimiters+1))\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj4qbm6b1.sh: line 15: Hello world: syntax error in expression (error
    token is "world")

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_array=($boredom_string)\n\
    \  local boredom_word=${boredom_array[0]}\n  local boredom_sentence=${boredom_array[1]}\n\
    \  local boredom_sentence_array=($boredom_sentence)\n  local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \  local boredom_sentence_sentence=${boredom_sentence_array[1]}\n  local boredom_sentence_sentence_array=($boredom_sentence_sentence)\n\
    \  local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence)\n\
    \  local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence)\n\
    \  local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpicfggnwx.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_index=0\n    local boredom_sentence_length=${#boredom_sentence}\n\
    \    local boredom_sentence_word=${boredom_sentence:$boredom_sentence_index}\n\
    \    local boredom_sentence_word_length=${#boredom_sentence_word}\n    local boredom_sentence_word_index=0\n\
    \    local boredom_sentence_word_length=${#boredom_sentence_word}\n    local boredom_sentence_word_boredom_count=0\n\
    \    local boredom_sentence_word_boredom_string=\"\"\n    local boredom_sentence_word_boredom_array=($boredom_sentence_word)\n\
    \    local boredom_sentence_word_boredom_word=${boredom_sentence_word_boredom_array[0]}\n\
    \    local boredom_sentence_word_boredom_sentence=${boredom_sentence_word_boredom_array[1]}\n\
    \    local boredom_sentence_word_boredom_sentence_index=0\n    local boredom_sentence_word_boredom_sentence_length=${#boredom_sentence_word_boredom_sentence}\n\
    \    local boredom_sentence_word_boredom_sentence_word=${boredom_sentence_word_boredom_sentence:$boredom_sentence_word_boredom_sentence_index}\n\
    \    local boredom_sentence_word_boredom_sentence_word_length=${#boredom_sentence_word_boredom_sentence_word}\n\
    \    local boredom_sentence_word_boredom_sentence_word_index=0\n    local boredom_sentence_word_boredom_sentence_word_length=${#boredom_sentence_word_boredom_sentence_word}\n\
    \    local boredom_sentence_word_boredom_sentence_word_boredom_count=0\n    local\
    \ boredom_sentence_word_boredom_sentence_word_boredom_string=\"\"\n    local boredom_sentence_word_boredom_sentence_word_boredom_array=($boredom_sentence_word_boredom_word)\n\
    \    local boredom_sentence_word_boredom_sentence_word_boredom_word=${boredom_sentence_word_boredom_sentence_word_boredom_array[0]}\n\
    \    local boredom_sentence_word_boredom_sentence_word_boredom_sentence=${boredom_sentence_word_boredom_sentence_word_boredom_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp__7hgumi.sh: line 57: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(${delimiters[@]})\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(echo \"$1\" | sed -n 's/^[\\.\\?!]\\?//p')\n  local boredom_count=0\n\
    \  for boredom in $boredoms; do\n    if [ \"$boredom\" = \"$1\" ]; then\n    \
    \  boredom_count=$((boredom_count + 1))\n    fi\n  done\n  echo \"$boredom_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiter=.?!\n\
    \  local boredom_words=$boredom_string\n  local delimiter_count=0\n  local delimiter_string=$delimiter\n\
    \  local delimiter_index=0\n  local delimiter_string_count=0\n  local delimiter_index=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  local delimiter_string_count=0\n  local delimiter_string_count=0\n  local delimiter_string_count=0\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  for word in $words; do\n    if [[ \"$word\" == *\"I\"* ]]; then\n   \
    \   boredoms=$((boredoms+1))\n    fi\n  done\n  echo \"$boredoms\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_delimiters=$4\n    local boredom_word=$5\n\
    \    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local boredom_word_delimiters=$boredom_delimiters\n\
    \    local boredom_word_delimiter=$boredom_delimiter\n    local \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  local word\n  local i\n  local j\n  local k\n  local len\n  local wordcount\n\
    \  local boredcount\n  local boredoms\n  local boredom\n  local boredom_count\n\
    \  local boredom_word\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local words=$1\n  local delimiter=$2\n  local\
    \ delimiters=(\".\")\n  local delimiters_i=(\"?\")\n  local delimiters_o=(\"!\"\
    )\n  local delimiters_all=(\".\")\n  local delimiters_all_i=(\"?\")\n  local delimiters_all_o=(\"\
    !\")\n  local delimiters_all_all=(\".\")\n  local delimiters_all_all_i=(\"?\"\
    )\n  local delimiters_all_all_o=(\"!\")\n  local delimiters_all_all_all=(\"?\"\
    )\n  local delimiters_all_all_all_i=(\"?\")\n  local delimiters_all_all_all_o=(\"\
    !\")\n  local delimiters_all_all_all_all=(\"?\")\n  local delimiters_all_all_all_all_i=(\"\
    ?\")\n  local delimiters_all_all_all_all_o=(\"!\")\n  local delimiters_all_all_all_all_all=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_i=(\"?\")\n  local delimiters_all_all_all_all_all_o=(\"\
    !\")\n  local delimiters_all_all_all_all_all_all=(\"?\")\n  local delimiters_all_all_all_all_all_all_i=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_o=(\"!\")\n  local delimiters_all_all_all_all_all_all_all=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_all_i=(\"?\")\n  local delimiters_all_all_all_all_all_all_all_o=(\"\
    !\")\n  local delimiters_all_all_all_all_all_all_all_all=(\"?\")\n  local delimiters_all_all_all_all_all_all_all_all_i=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_all_all_o=(\"!\")\n  local delimiters_all_all_all_all_all_all_all_all_all=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_all_all_all_i=(\"?\")\n  local\
    \ delimiters_all_all_all_all_all_all_all_all_all_o=(\"!\")\n  local delimiters_all_all_all_all_all_all_all_all_all=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_all_all_all_i=(\"?\")\n  local\
    \ delimiters_all_all_all_all_all_all_all_all_all_o=(\"!\")\n  local delimiters_all_all_all_all_all_all_all_all_all_all=(\"\
    ?\")\n  local delimiters_all_all_all_all_all_all_all_all_all_all_i=(\"?\")\n \
    \ local delimiters_all_all_all_all_all_all_all_all_all_o=(\"!\")\n  local \n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprbfljgp4.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmprbfljgp4.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1 \n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_element\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local delimiters=(\"\
    .\")\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[$delimiters_count]}\n\
    \    local delimiters_string_count=${#delimiters_string}\n    local delimiters_string_index=0\n\
    \    local delimiters_string_index2=0\n    local delimiters_string_index3=0\n\
    \    local delimiters_string_index4=0\n    local delimiters_string_index5=0\n\
    \    local delimiters_string_index6=0\n    local delimiters_string_index7=0\n\
    \    local delimiters_string_index8=0\n    local delimiters_string_index9=0\n\
    \    local delimiters_string_index10=0\n    local delimiters_string_index11=0\n\
    \    local delimiters_string_index12=0\n    local delimiters_string_index13=0\n\
    \    local delimiters_string_index14=0\n    local delimiters_string_index15=0\n\
    \    local delimiters_string_index16=0\n    local delimiters_string_index17=0\n\
    \    local delimiters_string_index18=0\n    local delimiters_string_index19=0\n\
    \    local delimiters_string_index20=0\n    local delimiters_string_index21=0\n\
    \    local delimiters_string_index22=0\n    local delimiters_string_index23=0\n\
    \    local delimiters_string_index24=0\n    local delimiters_string_index25=0\n\
    \    local delimiters_string_index26=0\n    local delimiters_string_index27=0\n\
    \    local delimiters_string_index28=0\n    local delimiters_string_index29=0\n\
    \    local delimiters_string_index30=0\n    local delimiters_string_index31=0\n\
    \    local delimiters_string_index32=0\n    local delimiters_string_index33=0\n\
    \    local delimiters_string_index34=0\n    local delimiters_string_index35=0\n\
    \    local delimiters_string_index36=0\n    local delimiters_string_index37=0\n\
    \    local delimiters_string_index38=0\n    local delimiters_string_index39=0\n\
    \    local delimiters_string_index40=0\n    local delimiters_string_index41=0\n\
    \    local delimiters_string_index42=0\n    local delimiters_string_index43=0\n\
    \    local delimiters_string_index44=0\n    local delimiters_string_index45=0\n\
    \    local delimiters_string_index46=0\n    local delimiters_string_index47=0\n\
    \    local delimiters_string_index48=0\n    local delimiters_string_index49=0\n\
    \    local delimiters_string_index50=0\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local boredom_word=\"I\"\n \
    \ local delimiter=\".\"\n  local delimiters=\" ?!\"\n\n  while read -r line; do\n\
    \    boredoms=$((boredoms + 1))\n    if [[ $line == *\"$boredom_word\"* ]]; then\n\
    \      boredoms=$((boredoms - 1))\n    fi\n  done <<< \"$string\"\n\n  echo \"\
    $boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${#delimiters[@]}\n  local delimiters_values=(\"?\"\
    )\n  local delimiters_values_count=${#delimiters_values[@]}\n  local delimiters_values_index=${#delimiters_values[@]}\n\
    \  local delimiters_values_values_count=${#delimiters_values_values[@]}\n  local\
    \ delimiters_values_values_index=${#delimiters_values_values[@]}\n  local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \  local delimiters_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \  local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_count=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbrj40y6b.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiters=(\".\")\n \
    \   local delimiters_with_delimiters=(\".\")\n    local delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters_with_delimiters=(\"\
    .\")\n    local delimiters_with_delimiters_with_delimiters_with\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  local word\n  local boredom\n  while IFS=$delimiter; read -r word; do\n\
    \    boredom=false\n    for d in $delimiters; do\n      if [[ \"$word\" == *\"\
    $d\"* ]]; then\n        boredom=true\n        break\n      fi\n    done\n    if\
    \ [ \"$boredom\" = true ]; then\n      (( boredoms += 1 ))\n    fi\n  done <<<\
    \ \"$words\"\n  echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=$1\n  local boredoms=0\n  local boredom_words=()\n  local\
    \ boredom_count=0\n  local boredom_word=''\n  local boredom_char=''\n  local boredom_char_count=0\n\
    \  local boredom_chars=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \  local boredom_char_count=''\n  local boredom_char_counts=()\n  local boredom_char_count=''\n\
    \  local boredom_char_counts=()\n  local boredom_char_count=''\n  local boredom_char_counts=()\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_sentence=\"\"\n    local boredom_char=\"\
    \"\n    local boredom_char_count=0\n    local boredom_char_count2=0\n    local\
    \ boredom_char_count3=0\n    local boredom_char_count4=0\n    local boredom_char_count5=0\n\
    \    local boredom_char_count6=0\n    local boredom_char_count7=0\n    local boredom_char_count8=0\n\
    \    local boredom_char_count9=0\n    local boredom_char_count10=0\n    local\
    \ boredom_char_count11=0\n    local boredom_char_count12=0\n    local boredom_char_count13=0\n\
    \    local boredom_char_count14=0\n    local boredom_char_count15=0\n    local\
    \ boredom_char_count16=0\n    local boredom_char_count17=0\n    local boredom_char_count18=0\n\
    \    local boredom_char_count19=0\n    local boredom_char_count20=0\n    local\
    \ boredom_char_count21=0\n    local boredom_char_count22=0\n    local boredom_char_count23=0\n\
    \    local boredom_char_count24=0\n    local boredom_char_count25=0\n    local\
    \ boredom_char_count26=0\n    local boredom_char_count27=0\n    local boredom_char_count28=0\n\
    \    local boredom_char_count29=0\n    local boredom_char_count30=0\n    local\
    \ boredom_char_count31=0\n    local boredom_char_count32=0\n    local boredom_char_count33=0\n\
    \    local boredom_char_count34=0\n    local boredom_char_count35=0\n    local\
    \ boredom_char_count36=0\n    local boredom_char_count37=0\n    local boredom_char_count38=0\n\
    \    local boredom_char_count39=0\n    local boredom_char_count40=0\n    local\
    \ boredom_char_count41=0\n    local boredom_char_count42=0\n    local boredom_char_count43=0\n\
    \    local boredom_char_count44=0\n    local boredom_char_count45=0\n    local\
    \ boredom_char_count46=0\n    local bore\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentence=()\n  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local\
    \ boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local\
    \ boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local\
    \ boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local\
    \ boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local\
    \ boredom_sentence_length=()\n  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_length=()\n  local\
    \ boredom_sentence_words=()\n  local boredom_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local word\n    for word\
    \ in $string; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms=\"\
    $((boredoms+1))\"\n        fi\n    done\n    echo \"$boredoms\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_count=${#delimiters_string[*]}\n\
    \  local delimiters_string_array=(${delimiters_string})\n  local delimiters_string_array_count=${#delimiters_string_array[@]}\n\
    \  local delimiters_string_array_element=${delimiters_string_array[$delimiters_string_array_count]}\n\
    \  local delimiters_string_array_element_count=${#delimiters_string_array_element[*]}\n\
    \  local delimiters_string_array_element_element=${delimiters_string_array_element[$delimiters_string_array_element_count]}\n\
    \  local delimiters_string_array_element_element_count=${#delimiters_string_array_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element=${delimiters_string_array_element_element[$delimiters_string_array_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_count=${#delimiters_string_array_element_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element_element=${delimiters_string_array_element_element_element[$delimiters_string_array_element_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_element_count=${#delimiters_string_array_element_element_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element_element_element=${delimiters_string_array_element_element_element_element[$delimiters_string_array_element_element_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element=${delimiters_string_array_element_element_element_element_element[$delimiters_string_array_element_element_element_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element=${delimiters_string_array_element_element_element_element_element_element[$delimiters_string_array_element_element_element_element_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element[*]}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element=${delimiters_string_array_element_element_element_element_element_element_element[$delimiters_string_array_element_element_element_element_element_element_element_element_count]}\n\
    \  local delimiters_string_array_element_element_element_element_element_\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=($delimiter)\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj8unwoe_.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_words=\"\"\n  local boredom_sentences=\"\
    \"\n  local boredom_word=\"\"\n  local boredom_sentence=\"\"\n  local boredom_sentence_count=0\n\
    \  local boredom_sentence_words=\"\"\n  local boredom_sentence_sentences=\"\"\n\
    \  local boredom_sentence_word=\"\"\n  local boredom_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_words=\"\"\n  local boredom_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_word=\"\"\n  local boredom_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_words=\"\"\n  local boredom_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_word=\"\"\n  local boredom_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_words=\"\"\n  local boredom_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_word=\"\"\n  local boredom_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_words=\"\"\n  local\
    \ boredom_sentence_sentence_sentence_sentence_sentence_sentences=\"\"\n  local\
    \ boredom_sentence_sentence_sentence_sentence_sentence_word=\"\"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_word=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n  local boredom_sentence_sentence_sentence_sentence_sentence_sentence_\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${1}\n  local delimiters_value=${delimiters[$delimiters_index]}\n\
    \  local delimiters_value_index=$((${delimiters_index} - 1))\n  local delimiters_value_length=${#delimiters_value}\n\
    \  local delimiters_value_length_index=$((${delimiters_value_length} - 1))\n \
    \ local delimiters_value_length_value=$((${delimiters_value_length} - 1))\n  local\
    \ delimiters_value_length_value_index=$((${delimiters_value_length_value} - 1))\n\
    \  local delimiters_value_length_value_value=$((${delimiters_value_length_value}\
    \ - 1))\n  local delimiters_value_length_value_value_index=$((${delimiters_value_length_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value=$((${delimiters_value_length_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_index=$((${delimiters_value_length_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value=$((${delimiters_value_length_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_index=$((${delimiters_value_length_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value=$((${delimiters_value_length_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_index=$((${delimiters_value_length_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value=$((${delimiters_value_length_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_index=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_value=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_index=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_value=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_index=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value_value_value_value=$((${delimiters_value_length_value_value_value_value_value}\
    \ - 1))\n  local delimiters_value_length_value_value_value\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp60da_on.sh: line 18: Hello world: syntax error in expression (error
    token is "world")

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n\n    local boredom_word_count=0\n    local boredom_word_string=\"\
    \"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_string2=\"\"\
    \n    local boredom_word_delimiter2=\"\"\n\n    local boredom_word_count2=0\n\
    \    local boredom_word_string2=\"\"\n    local boredom_word_delimiter2=\"\"\n\
    \    local boredom_word_string3=\"\"\n    local boredom_word_delimiter3=\"\"\n\
    \n    local boredom_word_count3=0\n    local boredom_word_string3=\"\"\n    local\
    \ boredom_word_delimiter3=\"\"\n    local boredom_word_string4=\"\"\n    local\
    \ boredom_word_delimiter4=\"\"\n\n    local boredom_word_count4=0\n    local boredom_word_string4=\"\
    \"\n    local boredom_word_delimiter4=\"\"\n    local boredom_word_string5=\"\"\
    \n    local boredom_word_delimiter5=\"\"\n\n    local boredom_word_count5=0\n\
    \    local boredom_word_string5=\"\"\n    local boredom_word_delimiter5=\"\"\n\
    \    local boredom_word_string6=\"\"\n    local boredom_word_delimiter6=\"\"\n\
    \n    local boredom_word_count6=0\n    local boredom_word_string6=\"\"\n    local\
    \ boredom_word_delimiter6=\"\"\n    local boredom_word_string7=\"\"\n    local\
    \ boredom_word_delimiter7=\"\"\n\n    local boredom_word_count7=0\n    local boredom_word_string7=\"\
    \"\n    local boredom_word_delimiter7=\"\"\n    local boredom_word_string8=\"\"\
    \n    local boredom_word_delimiter8=\"\"\n\n    local boredom_word_count8=0\n\
    \    local boredom_word_string8=\"\"\n    local boredom_word_delimiter8=\"\"\n\
    \    local boredom_word_string9=\"\"\n    local boredom_word_delimiter9=\"\"\n\
    \n    local boredom_word_count9=0\n    local boredom_word_string9=\"\"\n    local\
    \ boredom_word_delimiter9=\"\"\n    local boredom_word_string10=\"\"\n    local\
    \ boredom_word_delimiter10=\"\"\n\n    local boredom_word_count10=0\n    local\
    \ boredom_word_string10=\"\"\n    local boredom_word_delimiter10=\"\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' \"$1\" | wc -l)\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    grep: Is the sky blue?: No such file or directory

    grep: I love It \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string_length=${#delimiters_string}\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local\
    \ delimiters_string_length=$(( delimiters_string_length - 1 ))\n  local delimiters_string_length=$((\
    \ delimiters_string_length - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length\
    \ - 1 ))\n  local delimiters_string_length=$(( delimiters_string_length - 1 ))\n\
    \  local delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2onwoctr.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmp2onwoctr.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local bored_words=$3\n\
    \  local bored_count=$4\n  local delimiter_count=$5\n  local word\n  local delimiters\n\
    \  local delimiter_count\n  local bored_delimiters\n  local bored_delimiter_count\n\
    \  local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n  local bored_word\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiter_count\n \
    \ local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n  local bored_word\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiter_count\n \
    \ local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n  local bored_word\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiter_count\n \
    \ local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n  local bored_word\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiter_count\n \
    \ local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n  local bored_word\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiter_count\n \
    \ local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter_count\n  local bored_word\n  local bored_delimiter\n  local\
    \ bored_delimiters\n  local bored_delimiter_count\n\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=${delimiters[$delimiters_count]}\n  local delimiters_index_count=${#delimiters_index[@]}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=${#delimiters_index_count}\n  local delimiters_index_count=${#delimiters_index_count}\n\
    \  local delimiters_index_count=\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  for word in $words; do\n    if [[ \"$word\" == *\"$delimiter\"* ]]; then\n\
    \      bored=$((bored + 1))\n    fi\n  done\n  echo $bored\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  local delimiters_array=(${delimiters//,/ })\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp164p4b1f.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_delimiters=()\n    local boredom_word_count=0\n    local boredom_word_delimiters=()\n\
    \    local boredom_word_count=0\n    local boredom_word_delimiters=()\n    local\
    \ boredom_word_count=0\n    local boredom_word_delimiters=()\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n    local boredom_word_count=0\n    local\
    \ boredom_word_delimiters=()\n    local boredom_word_count=0\n    local boredom_word_delimiters=()\n\
    \    local boredom_word_count=0\n    local boredom_word_delimiters=()\n    local\
    \ boredom_word_count=0\n    local boredom_word_delimiters=()\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n    local boredom_word_count=0\n    local\
    \ boredom_word_delimiters=()\n    local boredom_word_count=0\n    local boredom_word_delimiters=()\n\
    \    local boredom_word_count=0\n    local boredom_word_delimiters=()\n    local\
    \ boredom_word_count=0\n    local boredom_word_delimiters=()\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n    local boredom_word_count=0\n    local\
    \ boredom_word_delimiters=()\n    local boredom_word_count=0\n    local boredom_word_delimiters=()\n\
    \    local boredom_word_count=0\n    local boredom_word_delimiters=()\n    local\
    \ boredom_word_count=0\n    local boredom_word_delimiters=()\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n    local boredom_word_count=0\n    local\
    \ boredom_word_delimiters=()\n    local boredom_word_count=0\n    local boredom_word_delimiters=()\n\
    \    local boredom_word_count=0\n    local boredom_word_delimiters=()\n    local\
    \ boredom_word_count=0\n    local boredom_word_delimiters=()\n    local boredom_word_count=0\n\
    \    local boredom_word_delimiters=()\n\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local words=$1\n    local delimiters=(\".\"\
    )\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_count=${#delimiters_string[*]}\n    local delimiters_string_count_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms=0\n    local delimiters_string_count_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms=0\n   \
    \ local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiters_string_count_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_count=0\n  local boredom_string=$1\n\
    \  local boredom_words=$2\n  local boredom_delimiter=$3\n\n  local boredom_count=0\n\
    \  local boredom_string=$1\n  local boredom_words=$2\n  local boredom_delimiter=$3\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_count=0\n  local boredom_string=$1\n\
    \  local boredom_words=$2\n  local boredom_delimiter=$3\n\n  local boredom_count=0\n\
    \  local boredom_string=$1\n  local boredom_words=$2\n  local boredom_delimiter=$3\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_count=0\n  local boredom_string=$1\n\
    \  local boredom_words=$2\n  local boredom_delimiter=$3\n\n  local boredom_count=0\n\
    \  local boredom_string=$1\n  local boredom_words=$2\n  local boredom_delimiter=$3\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_count=0\n  local boredom_string=$1\n\
    \  local boredom_words=$2\n  local boredom_delimiter=$3\n\n  local boredom_count=0\n\
    \  local boredom_string=$1\n  local boredom_words=$2\n  local boredom_delimiter=$3\n\
    \n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_count=0\n  local boredom_string=$1\n\
    \  local boredom_words=$2\n  local boredom_delimiter=$3\n\n  local boredom_count=0\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_sentence=\"\
    \"\n    local boredom_sentences=\"\"\n    local boredom_sentences2=\"\"\n    local\
    \ boredom_sentences3=\"\"\n    local boredom_sentences4=\"\"\n    local boredom_sentences5=\"\
    \"\n    local boredom_sentences6=\"\"\n    local boredom_sentences7=\"\"\n   \
    \ local boredom_sentences8=\"\"\n    local boredom_sentences9=\"\"\n    local\
    \ boredom_sentences10=\"\"\n    local boredom_sentences11=\"\"\n    local boredom_sentences12=\"\
    \"\n    local boredom_sentences13=\"\"\n    local boredom_sentences14=\"\"\n \
    \   local boredom_sentences15=\"\"\n    local boredom_sentences16=\"\"\n    local\
    \ boredom_sentences17=\"\"\n    local boredom_sentences18=\"\"\n    local boredom_sentences19=\"\
    \"\n    local boredom_sentences20=\"\"\n    local boredom_sentences21=\"\"\n \
    \   local boredom_sentences22=\"\"\n    local boredom_sentences23=\"\"\n    local\
    \ boredom_sentences24=\"\"\n    local boredom_sentences25=\"\"\n    local boredom_sentences26=\"\
    \"\n    local boredom_sentences27=\"\"\n    local boredom_sentences28=\"\"\n \
    \   local boredom_sentences29=\"\"\n    local boredom_sentences30=\"\"\n    local\
    \ boredom_sentences31=\"\"\n    local boredom_sentences32=\"\"\n    local boredom_sentences33=\"\
    \"\n    local boredom_sentences34=\"\"\n    local boredom_sentences35=\"\"\n \
    \   local boredom_sentences36=\"\"\n    local boredom_sentences37=\"\"\n    local\
    \ boredom_sentences38=\"\"\n    local boredom_sentences39=\"\"\n    local boredom_sentences40=\"\
    \"\n    local boredom_sentences41=\"\"\n    local boredom_sentences42=\"\"\n \
    \   local boredom_sentences43=\"\"\n    local boredom_sentences44=\"\"\n    local\
    \ boredom_sentences45=\"\"\n    local boredom_sentences46=\"\"\n    local boredom_sentences47=\"\
    \"\n    local boredom_sentences48=\"\"\n    local boredom_sentences49=\"\"\n \
    \   local boredom_sentences50=\"\"\n    local boredom_sentences51=\"\"\n    local\
    \ boredom_sentences52=\"\"\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_len=${#delimiters[@]}\n\
    \  local delimiters_chars=(\"?\")\n  local delimiters_chars_len=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_len=${#delimiters_chars[@]}\n  local delimiters_chars_chars_len=${#delimiters_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"\
    ${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=${delimiters_array[@]}\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(grep -E '^I' \"$1\" | wc -l)\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    grep: Is the sky blue?: No such file or directory

    grep: I love It \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprbfljgp4.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmprbfljgp4.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_sentence=\"\"\n    local boredom_punctuation=\"\
    \"\n    local boredom_punctuation_count=0\n    local boredom_punctuation_word=\"\
    \"\n    local boredom_punctuation_sentence=\"\"\n    local boredom_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_count=0\n    local boredom_punctuation_punctuation_word=\"\
    \"\n    local boredom_punctuation_punctuation_sentence=\"\"\n    local boredom_punctuation_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_count=0\n    local boredom_punctuation_punctuation_punctuation_word=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_sentence=\"\"\n    local\
    \ boredom_punctuation_punctuation_punctuation_punctuation=\"\"\n    local boredom_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_word=\"\"\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_sentence=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_word=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_word=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_word=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=\"\
    \"\n    local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=\"\
    \"\n    local boredom_punctuation_punctuation_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiters=(\".\")\n \
    \   local delimiters_i=(\"?\")\n    local delimiters_o=(\"!\")\n    local delimiters_all=(\"\
    .\")\n    local delimiters_all_i=(\"?\")\n    local delimiters_all_o=(\"!\")\n\
    \    local delimiters_all_all=(\".\")\n    local delimiters_all_all_i=(\"?\")\n\
    \    local delimiters_all_all_o=(\"!\")\n    local delimiters_all_all_all=(\"\
    ?\")\n\n    # Loop through each delimiter\n    for delimiter in \"${delimiters[@]}\"\
    ; do\n        # Loop through each delimiter\n        for delimiteri in \"${delimiters_i[@]}\"\
    ; do\n            # Loop through each delimiter\n            for delimitero in\
    \ \"${delimiters_o[@]}\"; do\n                # Loop through each delimiter\n\
    \                for delimiterall in \"${delimiters_all[@]}\"; do\n          \
    \          # Loop through each delimiter\n                    for delimiteralli\
    \ in \"${delimiters_all_i[@]}\"; do\n                        # Loop through each\
    \ delimiter\n                        for delimiteralo in \"${delimiters_all_o[@]}\"\
    ; do\n                            # Loop through each delimiter\n            \
    \                for delimiteralla in \"${delimiters_all_all[@]}\"; do\n     \
    \                           # Loop through each delimiter\n                  \
    \              for delimiterallii in \"${delimiters_all_all_i[@]}\"; do\n    \
    \                                # Loop through each delimiter\n             \
    \                       for delimiterallio in \"${delimiters_all_all_o[@]}\";\
    \ do\n                                        # Loop through each delimiter\n\
    \                                        for delimiterallaall in \"${delimiters_all_all_all[@]}\"\
    ; do\n                                            # Loop through each delimiter\n\
    \                                            for delimiteralliii in \"${delimiters_all_all_all_i[@]}\"\
    ; do\n                                                # Loop through each delimiter\n\
    \                                                for delimiterallioo in \"${delimiters_all_all_all_o[@]}\"\
    ; do\n                                                    # Loop through each\
    \ delimiter\n                                                    for delimiterallaalla\
    \ in \"${delimiters_all_all_all_all[@]}\"; do\n                              \
    \                          # Loop through each delimiter\n                   \
    \                                     for delimiteralliiii in \"${delimiters_all_all_all_all_i[@]}\"\
    ; do\n                                                            # Loop through\
    \ each delimiter\n                                                           \
    \ for delimiteralliooo in \"${delimiters_all_all_all_all_o[@]}\"; do\n       \
    \                                                         # Loop through each\
    \ delimiter\n                                                                for\
    \ delimiterallaalla in \"${delimiters_all_all_all_all_all[@]}\"; do\n        \
    \                                                            # Loop through each\
    \ delimiter\n                                                                \
    \    for delimiteralliiiii in \"${delimiters_all_all_all_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqid93b1_.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmpqid93b1_.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_index=0 \n\
    \    local delimiters_string=\"\"\n    local delimiters_string_count=0\n    local\
    \ delimiters_string_index=0\n    local delimiters_string_length=${#delimiters_string[@]}\n\
    \    local delimiters_string_length_count=0\n    local delimiters_string_length_index=0\n\
    \    local delimiters_string_length_length=0\n    local delimiters_string_length_length_count=0\n\
    \    local delimiters_string_length_length_index=0\n    local delimiters_string_length_length_length=0\n\
    \    local delimiters_string_length_length_length_count=0\n    local delimiters_string_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length=0\n    local delimiters_string_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_index=0\n    local delimiters_string_length_length_length_length_length=0\n\
    \    local delimiters_string_length_length_length_length_length_count=0\n    local\
    \ delimiters_string_length_length_length_length_length_index=0\n    local delimiters_string_length_length_length_length_length_length=0\n\
    \    local delimiters_string_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_length_length_length_length_count=0\n\
    \    local delimiters_string_length_length_length_length_length_length_length_length_length_length_length_length_length_length_index=0\n\
    \    local delimiters_string_length_length_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$@\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_count=${#delimiters_string[*]}\n    local delimiters_string_array=(${delimiters_string})\n\
    \    local delimiters_string_array_count=${#delimiters_string_array[@]}\n    local\
    \ delimiters_string_array_element=${delimiters_string_array[*]}\n    local delimiters_string_array_element_count=${#delimiters_string_array_element[*]}\n\
    \    local delimiters_string_array_element_element=${delimiters_string_array_element[*]}\n\
    \    local delimiters_string_array_element_element_count=${#delimiters_string_array_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_count=${#delimiters_string_array_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_count=${#delimiters_string_array_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element[*]}\n\
    \    local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count=${#delimiters_string_array_element_element_element_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps7must5w.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_sentence_words\n  local boredom_sentence_word\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count_index\n  local boredom_sentence_word_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index\n  local boredom_sentence_word_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index\n  local boredom_sentence_word_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local boredom_sentence_word_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredoms=0\n  local boredom_words=()\n  local\
    \ boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^I\\?.*\\.\\?$//p')\n    local\
    \ boredom_count=$(( ${#boredoms} ))\n    echo \"$boredom_count\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_delimiter=$3\n\n  local boredom_word\n  while read -r boredom_word;\
    \ do\n    if [[ $boredom_word == $boredom_delimiter ]]; then\n      boredom_count=$((boredom_count+1))\n\
    \    fi\n  done <<< \"$boredom_string\"\n\n  echo \"$boredom_count\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiters=(\".\")\n\
    \    local delimiters_len=${#delimiters[@]}\n    local delimiters_chars=(\"?\"\
    )\n    local delimiters_chars_len=${#delimiters_chars[@]}\n    local delimiters_chars_len=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_chars_len=${#delimiters_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars_len=${#delimiters_chars_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_len=${#delimiter\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi1j6mnzj.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$1\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_word=''\n  local boredom_sentence=''\n  local boredom_sentence_index=0\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_word=''\n  local\
    \ boredom_sentence_word_index=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n  local\
    \ bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\"!\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\"!\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\"!\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\"!\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\"!\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    !\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\"!\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\"!\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\"!\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\"!\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    !\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\"!\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\"!\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\"!\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\"!\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_array=(\"${delimiters[@]}\"\
    )\n    local delimiters_array_length=${#delimiters_array[@]}\n    local delimiters_array_elements=${delimiters_array[@]}\n\
    \    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_string=\"\
    I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    .\"\n  local delimiter_index=0\n  local delimiter_string_index=0\n  local delimiter_index2=0\n\
    \  local delimiter_string_index2=0\n  local delimiter_index3=0\n  local delimiter_string_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_string_index4=0\n  local delimiter_index5=0\n\
    \  local delimiter_string_index5=0\n  local delimiter_index6=0\n  local delimiter_string_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_string_index7=0\n  local delimiter_index8=0\n\
    \  local delimiter_string_index8=0\n  local delimiter_index9=0\n  local delimiter_string_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_string_index10=0\n  local delimiter_index11=0\n\
    \  local delimiter_string_index11=0\n  local delimiter_index12=0\n  local delimiter_string_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_string_index13=0\n  local delimiter_index14=0\n\
    \  local delimiter_string_index14=0\n  local delimiter_index15=0\n  local delimiter_string_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_string_index16=0\n  local delimiter_index17=0\n\
    \  local delimiter_string_index17=0\n  local delimiter_index18=0\n  local delimiter_string_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_string_index19=0\n  local delimiter_index20=0\n\
    \  local delimiter_string_index20=0\n  local delimiter_index21=0\n  local delimiter_string_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_string_index22=0\n  local delimiter_index23=0\n\
    \  local delimiter_string_index23=0\n  local delimiter_index24=0\n  local delimiter_string_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_string_index25=0\n  local delimiter_index26=0\n\
    \  local delimiter_string_index26=0\n  local delimiter_index27=0\n  local delimiter_string_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_string_index28=0\n  local delimiter_index29=0\n\
    \  local delimiter_string_index29=0\n  local delimiter_index30=0\n  local delimiter_string_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_string_index31=0\n  local delimiter_index32=0\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$1\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentence=()\n    local boredom_sentence_index=0\n    local\
    \ boredom_sentence_length=${#boredoms}\n    local boredom_sentence_words=()\n\
    \    local boredom_sentence_length=${#boredom_sentence}\n    local boredom_sentence_words=${#boredom_sentence_words[@]}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local boredom_sentence_words=${#boredom_sentence_words}\n    local boredom_sentence_words=${#boredom_sentence_words}\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\./ /g' | sed 's/\\?/ /g' | sed 's/!/ /g')\n    for\
    \ boredom_word in $boredom_words; do\n        if [ \"$boredom_word\" = \"I\" ];\
    \ then\n            boredom_count=$(($boredom_count+1))\n        fi\n    done\n\
    \    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_array=(${delimiters[@]})\n\
    \    local delimiters_array_count=${#delimiters_array[@]}\n    local delimiters_array_index=0\
    \ \n    local delimiters_array_element\n    local delimiters_array_element_count\n\
    \    local delimiters_array_element_index\n    local delimiters_array_element_value\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_count\n\
    \    local delimiters_array_element_value_count\n    local delimiters_array_element_value_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ boredom_word=\"I\"\n    local boredom_count=0\n    local boredom_count1=0\n\
    \    local boredom_count2=0\n    local boredom_count3=0\n    local boredom_count4=0\n\
    \    local boredom_count5=0\n    local boredom_count6=0\n    local boredom_count7=0\n\
    \    local boredom_count8=0\n    local boredom_count9=0\n    local boredom_count10=0\n\
    \    local boredom_count11=0\n    local boredom_count12=0\n    local boredom_count13=0\n\
    \    local boredom_count14=0\n    local boredom_count15=0\n    local boredom_count16=0\n\
    \    local boredom_count17=0\n    local boredom_count18=0\n    local boredom_count19=0\n\
    \    local boredom_count20=0\n    local boredom_count21=0\n    local boredom_count22=0\n\
    \    local boredom_count23=0\n    local boredom_count24=0\n    local boredom_count25=0\n\
    \    local boredom_count26=0\n    local boredom_count27=0\n    local boredom_count28=0\n\
    \    local boredom_count29=0\n    local boredom_count30=0\n    local boredom_count31=0\n\
    \    local boredom_count32=0\n    local boredom_count33=0\n    local boredom_count34=0\n\
    \    local boredom_count35=0\n    local boredom_count36=0\n    local boredom_count37=0\n\
    \    local boredom_count38=0\n    local boredom_count39=0\n    local boredom_count40=0\n\
    \    local boredom_count41=0\n    local boredom_count42=0\n    local boredom_count43=0\n\
    \    local boredom_count44=0\n    local boredom_count45=0\n    local boredom_count46=0\n\
    \    local boredom_count47=0\n    local boredom_count48=0\n    local boredom_count49=0\n\
    \    local boredom_count50=0\n    local boredom_count51=0\n    local boredom_count52=0\n\
    \    local boredom_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentence=()\n  local boredom_sentence_index=0\n  local boredom_sentence_length=${#string}\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_word_length=${#boredom_sentence_words[@]}\n\
    \  local boredom_sentence_word_index=0\n  local boredom_sentence_word_count=${#boredom_sentence_words[@]}\n\
    \  local boredom_sentence_word_boredom_count=0\n  local boredom_sentence_word_boredom_words=()\n\
    \  local boredom_sentence_word_boredom_word_length=${#boredom_sentence_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_count=${#boredom_sentence_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_boredom_count=0\n  local boredom_sentence_word_boredom_word_boredom_words=()\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_boredom_word_count=${#boredom_sentence_word_boredom_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n  local\
    \ boredom_sentence_word_boredom_word_boredom_word_boredom_words=()\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=${#boredom_sentence_word_boredom_word_boredom_word_boredom_words[@]}\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_chars=${delimiters[@]}\n  local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_count=${#delimiters_chars[*]}\n  local delimiters_chars_count_length=${#delimiters_chars_count[@]}\n\
    \  local delimiters_chars_count_count_length=${#delimiters_chars_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_length=${#delimiters_chars_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_length=${#delimiters_chars_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length[@]}\n\
    \  local delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_count_length=${#delimiters_chars_count_count_count_count_count_count_count_count_count_count_count_count_count_length[@\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvv0lt3f7.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_array=($boredom_sentence)\n    local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \    local boredom_sentence_sentence=${boredom_sentence_array[1]}\n    local boredom_sentence_sentence_array=($boredom_sentence_sentence)\n\
    \    local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_word=\"I\"\
    \n  local delimiter=\".\"\n  local delimiters=\" ?!\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_indexes=()\n  local delimiter_indexes_count=0\n\
    \  local delimiter_indexes_words=()\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | tr \" \" \"\\n\")\n    local boredom_word=${boredom_words[0]}\n\
    \    local boredom_sentence=${boredom_words[@]:1}\n    local boredom_sentence=${boredom_sentence:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:1}\n    local boredom_sentence=${boredom_sentence:0:1}\n\
    \    local boredom_sentence=${boredom_sentence:0:\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb4d4d6hu.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_values=(\"?\")\n    local delimiters_values_count=${#delimiters_values[@]}\n\
    \    local delimiters_values_index=${#delimiters_values[@]}\n    local delimiters_values_values=(\"\
    !\")\n    local delimiters_values_values_count=${#delimiters_values_values[@]}\n\
    \    local delimiters_values_values_index=${#delimiters_values_values[@]}\n  \
    \  local delimiters_values_values_values=(\"?\")\n    local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \    local delimiters_values_values_values_index=${#delimiters_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values=(\"!\")\n    local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_index=${#delimiters_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values=(\"?\")\n    local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy3dhujpq.sh: line 58: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local delimiters=(\".\"\
    )\n    local delimiters_length=${#delimiters[@]}\n    local delimiters_chars=(\"\
    ?\")\n    local delimiters_chars_length=${#delimiters_chars[@]}\n    local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \    local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n    local\
    \ delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \    local delimiters_chars_chars_chars_chars_chars_chars_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local delimiters=(\"\
    .\")\n    local delimiters_count=${#delimiters[@]}\n    local delimiters_string=${delimiters[$delimiters_count]}\n\
    \    local delimiters_string_count=${#delimiters_string}\n    local delimiters_string_index=0\n\
    \    local delimiters_string_index2=0\n    local delimiters_string_index3=0\n\
    \    local delimiters_string_index4=0\n    local delimiters_string_index5=0\n\
    \    local delimiters_string_index6=0\n    local delimiters_string_index7=0\n\
    \    local delimiters_string_index8=0\n    local delimiters_string_index9=0\n\
    \    local delimiters_string_index10=0\n    local delimiters_string_index11=0\n\
    \    local delimiters_string_index12=0\n    local delimiters_string_index13=0\n\
    \    local delimiters_string_index14=0\n    local delimiters_string_index15=0\n\
    \    local delimiters_string_index16=0\n    local delimiters_string_index17=0\n\
    \    local delimiters_string_index18=0\n    local delimiters_string_index19=0\n\
    \    local delimiters_string_index20=0\n    local delimiters_string_index21=0\n\
    \    local delimiters_string_index22=0\n    local delimiters_string_index23=0\n\
    \    local delimiters_string_index24=0\n    local delimiters_string_index25=0\n\
    \    local delimiters_string_index26=0\n    local delimiters_string_index27=0\n\
    \    local delimiters_string_index28=0\n    local delimiters_string_index29=0\n\
    \    local delimiters_string_index30=0\n    local delimiters_string_index31=0\n\
    \    local delimiters_string_index32=0\n    local delimiters_string_index33=0\n\
    \    local delimiters_string_index34=0\n    local delimiters_string_index35=0\n\
    \    local delimiters_string_index36=0\n    local delimiters_string_index37=0\n\
    \    local delimiters_string_index38=0\n    local delimiters_string_index39=0\n\
    \    local delimiters_string_index40=0\n    local delimiters_string_index41=0\n\
    \    local delimiters_string_index42=0\n    local delimiters_string_index43=0\n\
    \    local delimiters_string_index44=0\n    local delimiters_string_index45=0\n\
    \    local delimiters_string_index46=0\n    local delimiters_string_index47=0\n\
    \    local delimiters_string_index48=0\n    local delimiters_string_index49=0\n\
    \    local delimiters_string_index50=0\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ word\n    for word in $words; do\n        if [[ \"$word\" == \"$delimiter\"\
    \ ]]; then\n            bored=$((bored + 1))\n        fi\n    done\n    echo \"\
    $bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_len=${#delimiters[@]}\n\
    \  local delimiters_str=${delimiters[*]}\n  local delimiters_str_len=${#delimiters_str[@]}\n\
    \  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplwhv7r41.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmplwhv7r41.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=($delimiter)\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiters_length}\n  local delimiters_length=${#delimiters_length}\n\
    \  local delimiters_length=${#delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj8unwoe_.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=${#delimiters[@]}\n\
    \    local delimiters_value=${delimiters[$delimiters_index]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${#delimiters_value[@]}\n\
    \    local delimiters_value_count=${#delimiters_value[@]}\n    local delimiters_value_count=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpljubqgdi.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_array=($boredom_string)\n\
    \    local boredom_word=${boredom_array[0]}\n    local boredom_sentence=${boredom_array[1]}\n\
    \    local boredom_sentence_array=($boredom_sentence)\n    local boredom_sentence_word=${boredom_sentence_array[0]}\n\
    \    local boredom_sentence_sentence=${boredom_sentence_array[1]}\n    local boredom_sentence_sentence_array=($boredom_sentence_sentence)\n\
    \    local boredom_sentence_sentence_word=${boredom_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence=${boredom_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[1]}\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array=($boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence)\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_word=${boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_array[0]}\n\
    \    local boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n  local j\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local bored_word\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiter\n  local bored_delimiters\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiter\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_delimiters\n  local bored_delimiters\n  local\
    \ bored_delimiters\n  local bored_\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$1\n    local boredom_count=0\n    local boredom_words=\"\
    \"\n    local boredom_sentence=\"\"\n    local boredom_sentences=\"\"\n    local\
    \ boredom_sentence_count=0\n    local boredom_sentence_words=\"\"\n    local boredom_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentences=\"\"\n    local boredom_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentences=\"\"\n    local boredom_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentences=\"\"\n    local boredom_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentences=\"\"\n   \
    \ local boredom_sentence_sentence_sentence_sentence_sentence_count=0\n    local\
    \ boredom_sentence_sentence_sentence_sentence_sentence_words=\"\"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentences=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_count=0\n\
    \    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_words=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence_sentence=\"\
    \"\n    local boredom_sentence_sentence_sentence_sentence_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_chars=${delimiters[@]}\n\
    \  local delimiters_chars_length=${#delimiters_chars[@]}\n  local delimiters_chars_chars=${delimiters_chars[@]}\n\
    \  local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n  local\
    \ delimiters_chars_chars_chars=${delimiters_chars_chars[@]}\n  local delimiters_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars=${delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars=${delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_words=()\n  local delimiters_words_count=${#delimiters_words[@]}\n\
    \  local delimiters_words_index=0\n  local delimiters_words_count2=0\n  local\
    \ delimiters_words_index2=0\n  local delimiters_words_count3=0\n  local delimiters_words_index3=0\n\
    \  local delimiters_words_count4=0\n  local delimiters_words_index4=0\n  local\
    \ delimiters_words_count5=0\n  local delimiters_words_index5=0\n  local delimiters_words_count6=0\n\
    \  local delimiters_words_index6=0\n  local delimiters_words_count7=0\n  local\
    \ delimiters_words_index7=0\n  local delimiters_words_count8=0\n  local delimiters_words_index8=0\n\
    \  local delimiters_words_count9=0\n  local delimiters_words_index9=0\n  local\
    \ delimiters_words_count10=0\n  local delimiters_words_index10=0\n  local delimiters_words_count11=0\n\
    \  local delimiters_words_index11=0\n  local delimiters_words_count12=0\n  local\
    \ delimiters_words_index12=0\n  local delimiters_words_count13=0\n  local delimiters_words_index13=0\n\
    \  local delimiters_words_count14=0\n  local delimiters_words_index14=0\n  local\
    \ delimiters_words_count15=0\n  local delimiters_words_index15=0\n  local delimiters_words_count16=0\n\
    \  local delimiters_words_index16=0\n  local delimiters_words_count17=0\n  local\
    \ delimiters_words_index17=0\n  local delimiters_words_count18=0\n  local delimiters_words_index18=0\n\
    \  local delimiters_words_count19=0\n  local delimiters_words_index19=0\n  local\
    \ delimiters_words_count20=0\n  local delimiters_words_index20=0\n  local delimiters_words_count21=0\n\
    \  local delimiters_words_index21=0\n  local delimiters_words_count22=0\n  local\
    \ delimiters_words_index22=0\n  local delimiters_words_count23=0\n  local delimiters_words_index23=0\n\
    \  local delimiters_words_count24=0\n  local delimiters_words_index24=0\n  local\
    \ delimiters_words_count25=0\n  local delimiters_words_index25=0\n  local delimiters_words_count26=0\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed 's/\\.\\?!//g' | sed 's/^I//g' | wc\
    \ -l)\n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n\n  for i in $(seq 0 $((${#words} - 1))); do\n    word=${words[i]}\n\
    \    if [[ $word == I* ]]; then\n      bored=$((bored + 1))\n    fi\n  done\n\
    \  echo $bored\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=( \".\" \"\
    ?\" \"!\" )\n    local delimiters_length=${#delimiters[@]}\n    local delimiters_index=0\n\
    \    local delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    local delimiters_length=$(( delimiters_length + 1 ))\n    local\
    \ delimiters_length=$(( delimiters_length + 1 ))\n    local delimiters_length=$((\
    \ delimiters_length + 1 ))\n    local delimiters_length=$(( delimiters_length\
    \ + 1 ))\n    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_delimiter=$3\n    local boredom_delimiter_regex=$4\n    local\
    \ boredom_delimiter_regex_flags=$5\n    local boredom_delimiter_regex_flags=$6\n\
    \    local boredom_delimiter_regex_flags=$7\n    local boredom_delimiter_regex_flags=$8\n\
    \    local boredom_delimiter_regex_flags=$9\n    local boredom_delimiter_regex_flags=$10\n\
    \    local boredom_delimiter_regex_flags=$11\n    local boredom_delimiter_regex_flags=$12\n\
    \    local boredom_delimiter_regex_flags=$13\n    local boredom_delimiter_regex_flags=$14\n\
    \    local boredom_delimiter_regex_flags=$15\n    local boredom_delimiter_regex_flags=$16\n\
    \    local boredom_delimiter_regex_flags=$17\n    local boredom_delimiter_regex_flags=$18\n\
    \    local boredom_delimiter_regex_flags=$19\n    local boredom_delimiter_regex_flags=$20\n\
    \    local boredom_delimiter_regex_flags=$21\n    local boredom_delimiter_regex_flags=$22\n\
    \    local boredom_delimiter_regex_flags=$23\n    local boredom_delimiter_regex_flags=$24\n\
    \    local boredom_delimiter_regex_flags=$25\n    local boredom_delimiter_regex_flags=$26\n\
    \    local boredom_delimiter_regex_flags=$27\n    local boredom_delimiter_regex_flags=$28\n\
    \    local boredom_delimiter_regex_flags=$29\n    local boredom_delimiter_regex_flags=$30\n\
    \    local boredom_delimiter_regex_flags=$31\n    local boredom_delimiter_regex_flags=$32\n\
    \    local boredom_delimiter_regex_flags=$33\n    local boredom_delimiter_regex_flags=$34\n\
    \    local boredom_delimiter_regex_flags=$35\n    local boredom_delimiter_regex_flags=$36\n\
    \    local boredom_delimiter_regex_flags=$37\n    local boredom_delimiter_regex_flags=$38\n\
    \    local boredom_delimiter_regex_flags=$39\n    local boredom_delimiter_regex_flags=$40\n\
    \    local boredom_delimiter_regex_flags=$41\n    local boredom_delimiter_regex_flags=$42\n\
    \    local boredom_delimiter_regex_flags=$\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^[\\.\\?\\!]\\+\\(.*\\)$/\\\
    1/p' | wc -l)\n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_words=\"\"\n  local boredom_sentence=\"\
    \"\n  local boredom_sentence_words=\"\"\n  local boredom_sentence_word=\"\"\n\
    \  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  local boredom_sentence_word_count42=0\n\
    \  local boredom_sentence_word_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_len=${#delimiters[@]}\n\
    \  local delimiters_str=${delimiters[*]}\n  local delimiters_str_len=${#delimiters_str[@]}\n\
    \  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\
    \ delimiters_str_len - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len\
    \ - 1 ))\n  local delimiters_str_len=$(( delimiters_str_len - 1 ))\n  local delimiters_str_len=$((\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplwhv7r41.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmplwhv7r41.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiter=$2\n  local delimiters=\"\
    .?!\"\n  local delimiters_lower=\".?!\"\n  local delimiters_upper=\".?!\"\n  local\
    \ delimiters_lower2=\".?!\"\n  local delimiters_upper2=\".?!\"\n  local delimiters_lower3=\"\
    .?!\"\n  local delimiters_upper3=\".?!\"\n  local delimiters_lower4=\".?!\"\n\
    \  local delimiters_upper4=\".?!\"\n  local delimiters_lower5=\".?!\"\n  local\
    \ delimiters_upper5=\".?!\"\n  local delimiters_lower6=\".?!\"\n  local delimiters_upper6=\"\
    .?!\"\n  local delimiters_lower7=\".?!\"\n  local delimiters_upper7=\".?!\"\n\
    \  local delimiters_lower8=\".?!\"\n  local delimiters_upper8=\".?!\"\n  local\
    \ delimiters_lower9=\".?!\"\n  local delimiters_upper9=\".?!\"\n  local delimiters_lower10=\"\
    .?!\"\n  local delimiters_upper10=\".?!\"\n  local delimiters_lower11=\".?!\"\n\
    \  local delimiters_upper11=\".?!\"\n  local delimiters_lower12=\".?!\"\n  local\
    \ delimiters_upper12=\".?!\"\n  local delimiters_lower13=\".?!\"\n  local delimiters_upper13=\"\
    .?!\"\n  local delimiters_lower14=\".?!\"\n  local delimiters_upper14=\".?!\"\n\
    \  local delimiters_lower15=\".?!\"\n  local delimiters_upper15=\".?!\"\n  local\
    \ delimiters_lower16=\".?!\"\n  local delimiters_upper16=\".?!\"\n  local delimiters_lower17=\"\
    .?!\"\n  local delimiters_upper17=\".?!\"\n  local delimiters_lower18=\".?!\"\n\
    \  local delimiters_upper18=\".?!\"\n  local delimiters_lower19=\".?!\"\n  local\
    \ delimiters_upper19=\".?!\"\n  local delimiters_lower20=\".?!\"\n  local delimiters_upper20=\"\
    .?!\"\n  local delimiters_lower21=\".?!\"\n  local delimiters_upper21=\".?!\"\n\
    \  local delimiters_lower22=\".?!\"\n  local delimiters_upper22=\".?!\"\n  local\
    \ \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentences=()\n  local boredom_word=''\n  local boredom_sentence=''\n\
    \  local boredom_punctuation=''\n  local boredom_punctuation_count=0\n  local\
    \ boredom_punctuation_word=''\n  local boredom_punctuation_sentence=''\n  local\
    \ boredom_punctuation_punctuation=''\n  local boredom_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_word=''\n  local boredom_punctuation_punctuation_sentence=''\n\
    \  local boredom_punctuation_punctuation_punctuation=''\n  local boredom_punctuation_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_punctuation_word=''\n  local boredom_punctuation_punctuation_punctuation_sentence=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation=''\n  local boredom_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_word=''\n  local\
    \ boredom_punctuation_punctuation_punctuation_punctuation_sentence=''\n  local\
    \ boredom_punctuation_punctuation_punctuation_punctuation_punctuation=''\n  local\
    \ boredom_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_word=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_word=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_count=0\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_word=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_sentence=''\n\
    \  local boredom_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation_punctuation=''\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$*\n    local delimiters=(\".\")\n   \
    \ local delimiter=\".\"\n    local delimiters_count=${#delimiters[@]}\n    local\
    \ delimiters_index=${#delimiters[@]}\n    local delimiters_values=(\"?\" \"!\"\
    \ \"?\")\n    local delimiters_values_count=${#delimiters_values[@]}\n    local\
    \ delimiters_values_index=${#delimiters_values[@]}\n    local delimiters_values_values_count=${#delimiters_values_values[@]}\n\
    \    local delimiters_values_values_index=${#delimiters_values_values[@]}\n  \
    \  local delimiters_values_values_values_count=${#delimiters_values_values_values[@]}\n\
    \    local delimiters_values_values_values_index=${#delimiters_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_count=${#delimiters_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_index=${#delimiters_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_count=${#delimiters_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_index=${#delimiters_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_index=${#delimiters_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_values_values_values_values_values_values_values_values_values_values[@]}\n\
    \    local delimiters_values_values_values_values_values_values_values_values_values_values_values_values_count=${#delimiters_values_values_values_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpixpneiqr.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1 \n    local delimiters=(\".\")\n\
    \    local delimiters_count=${#delimiters[@]}\n    local delimiters_index=0 \n\
    \    local delimiters_words=()\n    local delimiters_words_count=0 \n    local\
    \ delimiters_words_index=0 \n    local delimiters_words_words_count=0 \n    local\
    \ delimiters_words_words_index=0 \n    local delimiters_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_index=0 \n    local delimiters_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_index=0 \n    local delimiters_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_index=0 \n    local delimiters_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_index=0 \n    local\
    \ delimiters_words_words_words_words_words_words_words_count=0 \n    local delimiters_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_index=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_count=0\
    \ \n    local delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\"!\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\"!\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\"!\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\"!\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\"!\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    !\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\"!\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\"!\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\"!\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\"!\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    !\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\"!\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\"!\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\"!\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\"!\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=(\"${delimiters_array[@]}\")\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=(\"${delimiters_array_elements[@]}\"\
    )\n  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=(\"${delimiters_array_elements_elements[@]}\"\
    )\n  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=(\"${delimiters_array_elements_elements_elements[@]}\"\
    )\n  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=(\"${delimiters_array_elements_elements_elements_elements[@]}\"\
    )\n  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0gp8_soz.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_sentence=\"\"\n    local boredom_punctuation=\"\
    \"\n    local boredom_punctuation_count=0\n    local boredom_punctuation_words=\"\
    \"\n    local boredom_punctuation_sentences=\"\"\n    local boredom_punctuation_word=\"\
    \"\n    local boredom_punctuation_sentence=\"\"\n    local boredom_punctuation_re=\"\
    \"\n    local boredom_punctuation_re_words=\"\"\n    local boredom_punctuation_re_sentences=\"\
    \"\n    local boredom_punctuation_re_word=\"\"\n    local boredom_punctuation_re_sentence=\"\
    \"\n    local boredom_punctuation_re_boredom_words=\"\"\n    local boredom_punctuation_re_boredom_sentences=\"\
    \"\n    local boredom_punctuation_re_boredom_word=\"\"\n    local boredom_punctuation_re_boredom_sentence=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_count=0\n    local boredom_punctuation_re_boredom_punctuation_words=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_sentences=\"\"\n    local\
    \ boredom_punctuation_re_boredom_punctuation_word=\"\"\n    local boredom_punctuation_re_boredom_punctuation_sentence=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_re=\"\"\n    local boredom_punctuation_re_boredom_punctuation_re_words=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_re_sentences=\"\"\n \
    \   local boredom_punctuation_re_boredom_punctuation_re_word=\"\"\n    local boredom_punctuation_re_boredom_punctuation_re_sentence=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_re_boredom_words=\"\"\
    \n    local boredom_punctuation_re_boredom_punctuation_re_boredom_sentences=\"\
    \"\n    local boredom_punctuation_re_boredom_punctuation_re_boredom_word=\"\"\n\
    \    local boredom_punctuation_re_boredom_punctuation_re_boredom_sentence=\"\"\
    \n    local boredom_punctuation_re_boredom_punctuation_re_boredom_punctuation_count\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local boredom_word_count\n    local boredom_sentence_count\n\
    \    local boredom_word_count\n    local boredom_sentence_count\n    local boredom_word_count\n\
    \    local boredom_sentence_count\n    local \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local delimiters=(\"\
    .\")\n  local delimiters_i=(\"?\")\n  local delimiters_o=(\"!\")\n  local delimiters_s=(\"\
    ?\")\n  local delimiters_s_i=(\"!\")\n  local delimiters_s_o=(\".\")\n  local\
    \ delimiters_s_s_i=(\".\")\n  local delimiters_s_s_o=(\"?\")\n  local delimiters_s_s_s_i=(\"\
    ?\")\n  local delimiters_s_s_s_o=(\"!\")\n  local delimiters_s_s_s_i=(\"!\")\n\
    \  local delimiters_s_s_s_o=(\".\")\n  local delimiters_s_s_s_s_i=(\".\")\n  local\
    \ delimiters_s_s_s_s_o=(\"?\")\n  local delimiters_s_s_s_s_i=(\"?\")\n  local\
    \ delimiters_s_s_s_s_o=(\"!\")\n  local delimiters_s_s_s_s_s_i=(\"!\")\n  local\
    \ delimiters_s_s_s_s_o=(\".\")\n  local delimiters_s_s_s_s_s_i=(\".\")\n  local\
    \ delimiters_s_s_s_s_o=(\"?\")\n  local delimiters_s_s_s_s_s_i=(\"?\")\n  local\
    \ delimiters_s_s_s_s_o=(\"!\")\n  local delimiters_s_s_s_s_s_i=(\"!\")\n  local\
    \ delimiters_s_s_s_s_s_o=(\".\")\n  local delimiters_s_s_s_s_s_s_i=(\".\")\n \
    \ local delimiters_s_s_s_s_s_o=(\"?\")\n  local delimiters_s_s_s_s_s_s_i=(\"?\"\
    )\n  local delimiters_s_s_s_s_s_o=(\"!\")\n  local delimiters_s_s_s_s_s_s_i=(\"\
    !\")\n  local delimiters_s_s_s_s_s_o=(\".\")\n  local delimiters_s_s_s_s_s_s_i=(\"\
    .\")\n  local delimiters_s_s_s_s_s_s_o=(\"?\")\n  local delimiters_s_s_s_s_s_s_i=(\"\
    ?\")\n  local delimiters_s_s_s_s_s_s_o=(\"!\")\n  local delimiters_s_s_s_s_s_s_s_i=(\"\
    !\")\n  local delimiters_s_s_s_s_s_s_o=(\".\")\n  local delimiters_s_s_s_s_s_s_s_i=(\"\
    .\")\n  local delimiters_s_s_s_s_s_s_o=(\"?\")\n  local delimiters_s_s_s_s_s_s_s_i=(\"\
    ?\")\n  local delimiters_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[$delimiters_count]}\n  local delimiters_string_count=${#delimiters_string}\n\
    \  local delimiters_string_index=0\n  local delimiters_string_index2=0\n  local\
    \ delimiters_string_index3=0\n  local delimiters_string_index4=0\n  local delimiters_string_index5=0\n\
    \  local delimiters_string_index6=0\n  local delimiters_string_index7=0\n  local\
    \ delimiters_string_index8=0\n  local delimiters_string_index9=0\n  local delimiters_string_index10=0\n\
    \  local delimiters_string_index11=0\n  local delimiters_string_index12=0\n  local\
    \ delimiters_string_index13=0\n  local delimiters_string_index14=0\n  local delimiters_string_index15=0\n\
    \  local delimiters_string_index16=0\n  local delimiters_string_index17=0\n  local\
    \ delimiters_string_index18=0\n  local delimiters_string_index19=0\n  local delimiters_string_index20=0\n\
    \  local delimiters_string_index21=0\n  local delimiters_string_index22=0\n  local\
    \ delimiters_string_index23=0\n  local delimiters_string_index24=0\n  local delimiters_string_index25=0\n\
    \  local delimiters_string_index26=0\n  local delimiters_string_index27=0\n  local\
    \ delimiters_string_index28=0\n  local delimiters_string_index29=0\n  local delimiters_string_index30=0\n\
    \  local delimiters_string_index31=0\n  local delimiters_string_index32=0\n  local\
    \ delimiters_string_index33=0\n  local delimiters_string_index34=0\n  local delimiters_string_index35=0\n\
    \  local delimiters_string_index36=0\n  local delimiters_string_index37=0\n  local\
    \ delimiters_string_index38=0\n  local delimiters_string_index39=0\n  local delimiters_string_index40=0\n\
    \  local delimiters_string_index41=0\n  local delimiters_string_index42=0\n  local\
    \ delimiters_string_index43=0\n  local delimiters_string_index44=0\n  local delimiters_string_index45=0\n\
    \  local delimiters_string_index46=0\n  local delimiters_string_index47=0\n  local\
    \ delimiters_string_index48=0\n  local delimiters_string_index49=0\n  local delimiters_string_index50=0\n\
    \  local delimiters_string_index51\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$1\n    local delimiter=$2\n    local\
    \ word\n    for word in $words; do\n        if [[ \"$word\" == \"I\" ]]; then\n\
    \            boredoms=$((boredoms+1))\n        fi\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiters_string=${delimiters_string//[!?]}\n\
    \  local delimiters_string=${delimiters_string//[!?]}\n  local delimiter\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_count=${#delimiters_string[*]}\n\
    \  local delimiters_string_index=0\n  local delimiters_string_index2=0\n  local\
    \ delimiters_string_index3=0\n  local delimiters_string_index4=0\n  local delimiters_string_index5=0\n\
    \  local delimiters_string_index6=0\n  local delimiters_string_index7=0\n  local\
    \ delimiters_string_index8=0\n  local delimiters_string_index9=0\n  local delimiters_string_index10=0\n\
    \  local delimiters_string_index11=0\n  local delimiters_string_index12=0\n  local\
    \ delimiters_string_index13=0\n  local delimiters_string_index14=0\n  local delimiters_string_index15=0\n\
    \  local delimiters_string_index16=0\n  local delimiters_string_index17=0\n  local\
    \ delimiters_string_index18=0\n  local delimiters_string_index19=0\n  local delimiters_string_index20=0\n\
    \  local delimiters_string_index21=0\n  local delimiters_string_index22=0\n  local\
    \ delimiters_string_index23=0\n  local delimiters_string_index24=0\n  local delimiters_string_index25=0\n\
    \  local delimiters_string_index26=0\n  local delimiters_string_index27=0\n  local\
    \ delimiters_string_index28=0\n  local delimiters_string_index29=0\n  local delimiters_string_index30=0\n\
    \  local delimiters_string_index31=0\n  local delimiters_string_index32=0\n  local\
    \ delimiters_string_index33=0\n  local delimiters_string_index34=0\n  local delimiters_string_index35=0\n\
    \  local delimiters_string_index36=0\n  local delimiters_string_index37=0\n  local\
    \ delimiters_string_index38=0\n  local delimiters_string_index39=0\n  local delimiters_string_index40=0\n\
    \  local delimiters_string_index41=0\n  local delimiters_string_index42=0\n  local\
    \ delimiters_string_index43=0\n  local delimiters_string_index44=0\n  local delimiters_string_index45=0\n\
    \  local delimiters_string_index46=0\n  local delimiters_string_index47=0\n  local\
    \ delimiters_string_index48=0\n  local delimiters_string_index49=0\n  local delimiters_string_index50=0\n\
    \  local delimiters_string_index51\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_chars=(\"?\")\n  local delimiters_chars_length=${#delimiters_chars[@]}\n\
    \  local delimiters_chars_length=${#delimiters_chars[@]}\n  local delimiters_chars_chars_length=${#delimiters_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_chars_chars_chars_chars_chars[@]}\n\
    \  local delimiters_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_chars_length=${#delimiters_chars_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1h3hvaa7.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed 's/\\.\\?!//g')\n    local boredom_word=$(echo $boredom_string\
    \ | sed 's/\\.\\?!//g' | sed 's/ /\\n/g')\n    local boredom_word_count=0\n  \
    \  local boredom_word_string=$boredom_word\n    local boredom_word_array=()\n\
    \    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local boredom_word_array=()\n    local boredom_word_count=0\n    local boredom_word_string=$boredom_word\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiters=(\"\
    .\")\n  local delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[$delimiters_count]}\n\
    \  local delimiters_string_count=${#delimiters_string}\n  local delimiters_string_index=0\n\
    \  local delimiters_string_index2=0\n  local delimiters_string_index3=0\n  local\
    \ delimiters_string_index4=0\n  local delimiters_string_index5=0\n  local delimiters_string_index6=0\n\
    \  local delimiters_string_index7=0\n  local delimiters_string_index8=0\n  local\
    \ delimiters_string_index9=0\n  local delimiters_string_index10=0\n  local delimiters_string_index11=0\n\
    \  local delimiters_string_index12=0\n  local delimiters_string_index13=0\n  local\
    \ delimiters_string_index14=0\n  local delimiters_string_index15=0\n  local delimiters_string_index16=0\n\
    \  local delimiters_string_index17=0\n  local delimiters_string_index18=0\n  local\
    \ delimiters_string_index19=0\n  local delimiters_string_index20=0\n  local delimiters_string_index21=0\n\
    \  local delimiters_string_index22=0\n  local delimiters_string_index23=0\n  local\
    \ delimiters_string_index24=0\n  local delimiters_string_index25=0\n  local delimiters_string_index26=0\n\
    \  local delimiters_string_index27=0\n  local delimiters_string_index28=0\n  local\
    \ delimiters_string_index29=0\n  local delimiters_string_index30=0\n  local delimiters_string_index31=0\n\
    \  local delimiters_string_index32=0\n  local delimiters_string_index33=0\n  local\
    \ delimiters_string_index34=0\n  local delimiters_string_index35=0\n  local delimiters_string_index36=0\n\
    \  local delimiters_string_index37=0\n  local delimiters_string_index38=0\n  local\
    \ delimiters_string_index39=0\n  local delimiters_string_index40=0\n  local delimiters_string_index41=0\n\
    \  local delimiters_string_index42=0\n  local delimiters_string_index43=0\n  local\
    \ delimiters_string_index44=0\n  local delimiters_string_index45=0\n  local delimiters_string_index46=0\n\
    \  local delimiters_string_index47=0\n  local delimiters_string_index48=0\n  local\
    \ delimiters_string_index49=0\n  local delimiters_string_index50=0\n  local \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$(echo\
    \ $boredom_string | sed -e 's/\\./ /g' -e 's/\\?/ /g' -e 's/!/ /g')\n    for boredom_word\
    \ in $boredom_words; do\n        if [[ \"$boredom_word\" == \"I\" ]]; then\n \
    \           boredom_count=$((boredom_count+1))\n        fi\n    done\n    echo\
    \ \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local boredom_string=$1\n    local boredom_words=$2\n\
    \    local boredom_word=$3\n    local boredom_sentence=$4\n    local boredom_sentence_index=0\n\
    \    local boredom_sentence_length=${#boredom_sentence}\n    local boredom_sentence_words=${#boredom_words}\n\
    \    local boredom_sentence_word=${#boredom_word}\n    local boredom_sentence_word_index=0\n\
    \    local boredom_sentence_word_length=${#boredom_sentence_word}\n    local boredom_sentence_word_boredom_word=${boredom_sentence_word:$boredom_sentence_word_index}\n\
    \    local boredom_sentence_word_boredom_words=${#boredom_sentence_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_length=${#boredom_sentence_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word=${boredom_sentence_word_boredom_word:$boredom_sentence_word_boredom_word_length}\n\
    \    local boredom_sentence_word_boredom_word_boredom_words=${#boredom_sentence_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word=${boredom_sentence_word_boredom_word_boredom_word:$boredom_sentence_word_boredom_word_boredom_word_length}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_words=${#boredom_sentence_word_boredom_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=${boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word:$boredom_sentence_word_boredom_word_boredom_word_boredom_word_bore\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5tll85jo.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    .\")\n  local delimiters_=(\".\")\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_word=\"I\"\
    \n  local boredom_sentence=\".\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    .\"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  local boredom_sentence_word_count42=0\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiters=(\".\")\n  local\
    \ delimiters_count=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string_count=${#delimiters_string[*]}\n  local delimiters_string_count_minus_one=${delimiters_string_count-1}\n\
    \  local delimiters_string_count_minus_one_minus_one=${delimiters_string_count_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one-1}\n\
    \  local delimiters_string_count_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=${delimiters_string_count_minus_one_minus_one_minus_one_minus_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0q__ch1q.sh: line 46: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local words=$@\n    local delimiters=(\".\")\n\
    \    local delimiters_length=${#delimiters[@]}\n    local delimiters_string=$(IFS=\"\
    ,\"; echo \"${delimiters[*]}\")\n    local delimiters_string_length=${#delimiters_string[@]}\n\
    \    local delimiters_string_length=$(( delimiters_string_length - 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_string_length=$((\
    \ delimiters_string_length + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length\
    \ + 1 ))\n    local delimiters_string_length=$(( delimiters_string_length + 1\
    \ ))\n    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n\
    \    local delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local\
    \ delimiters_string_length=$(( delimiters_string_length + 1 ))\n    local delimiters_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local word=$1\n    local delimiter=$2\n    local\
    \ delimiters=\".?!\"\n    for delimiter in $delimiters; do\n        local delimiter_index=`echo\
    \ $word | grep -n \"$delimiter\" | cut -d : -f 1`\n        if [ \"$delimiter_index\"\
    \ -eq 0 ]; then\n            boredoms=$((boredoms+1))\n        fi\n    done\n\
    \    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppmbw531_.sh: line 19: [: : integer expression expected

    /tmp/tmppmbw531_.sh: line 19: [: : integer expression expected

    /tmp/tmppmbw531_.sh: line 19: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiter=(\"?\")\n    local delimiter2=(\"!\")\n    local delimiter3=(\"\
    ?\")\n    local delimiter4=(\"!\")\n    local delimiter5=(\"?\")\n    local delimiter6=(\"\
    !\")\n    local delimiter7=(\"?\")\n    local delimiter8=(\"!\")\n    local delimiter9=(\"\
    ?\")\n    local delimiter10=(\"!\")\n    local delimiter11=(\"?\")\n    local\
    \ delimiter12=(\"!\")\n    local delimiter13=(\"?\")\n    local delimiter14=(\"\
    !\")\n    local delimiter15=(\"?\")\n    local delimiter16=(\"!\")\n    local\
    \ delimiter17=(\"?\")\n    local delimiter18=(\"!\")\n    local delimiter19=(\"\
    ?\")\n    local delimiter20=(\"!\")\n    local delimiter21=(\"?\")\n    local\
    \ delimiter22=(\"!\")\n    local delimiter23=(\"?\")\n    local delimiter24=(\"\
    !\")\n    local delimiter25=(\"?\")\n    local delimiter26=(\"!\")\n    local\
    \ delimiter27=(\"?\")\n    local delimiter28=(\"!\")\n    local delimiter29=(\"\
    ?\")\n    local delimiter30=(\"!\")\n    local delimiter31=(\"?\")\n    local\
    \ delimiter32=(\"!\")\n    local delimiter33=(\"?\")\n    local delimiter34=(\"\
    !\")\n    local delimiter35=(\"?\")\n    local delimiter36=(\"!\")\n    local\
    \ delimiter37=(\"?\")\n    local delimiter38=(\"!\")\n    local delimiter39=(\"\
    ?\")\n    local delimiter40=(\"!\")\n    local delimiter41=(\"?\")\n    local\
    \ delimiter42=(\"!\")\n    local delimiter43=(\"?\")\n    local delimiter44=(\"\
    !\")\n    local delimiter45=(\"?\")\n    local delimiter46=(\"!\")\n    local\
    \ delimiter47=(\"?\")\n    local delimiter48=(\"!\")\n    local delimiter49=(\"\
    ?\")\n    local delimiter50=(\"!\")\n    local delimiter51=(\"?\")\n    local\
    \ delimiter52=(\"!\")\n    local delimiter53=(\"?\")\n    local delimiter54=(\"\
    !\")\n    local delimiter55=(\"?\")\n    local delimiter56=(\"!\")\n    local\
    \ delimiter57=(\"?\")\n    local delimiter58=(\"!\")\n    local delimiter59=(\"\
    ?\")\n    local delimiter60=(\"!\")\n    local delimiter61=(\"?\")\n    local\
    \ delimiter62=(\"!\")\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_word=\"I\"\
    \n  local delimiter=\".\"\n  local delimiters=\" ?!\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_indexes=()\n  local delimiter_indexes_count=()\n\
    \  local delimiter_indexes_words=()\n  local delimiter_indexes_words_count=()\n\
    \  local delimiter_indexes_words_in_string=()\n  local delimiter_indexes_words_in_string_count=()\n\
    \  local delimiter_indexes_words_in_string_words=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$(echo \"$1\" | sed -n 's/^I\\?*\\.\\?*$//p')\n    echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 16: Invalid preceding regular expression

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local boredom_words=$2\n\
    \  local boredom_sentence=$3\n  local boredom_delimiter=$4\n\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_delimiter\n  local boredom_word\n \
    \ local boredom_word_count\n  local boredom_word_count\n\n  while read -r boredom_word;\
    \ do\n    boredom_word_count=0\n    boredom_word_count=$((boredom_word_count +\
    \ 1))\n  done < <(echo \"$boredom_string\" | sed -n \"s/^$boredom_delimiter\\\
    ([[:alpha:]]\\)/\\1/p\")\n\n  if [ \"$boredom_word_count\" -gt \"$boredom_words\"\
    \ ]; then\n    boredom_count=$((boredom_count + 1))\n  fi\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpajfx57yy.sh: line 31: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local words=$1 \n  local delimiters=(\".\")\n  local\
    \ delimiters_length=${#delimiters[@]}\n  local delimiters_string=${delimiters[*]}\n\
    \  local delimiters_string_length=${#delimiters_string[@]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_length-1))\n\
    \  local delimiters_string=${delimiters_string[*]}\n  local delimiters_string_length=$((delimiters_string_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6boxonci.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6boxonci.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_count=0\n  local boredom_string=$1\n  local delimiter=\"\
    .\"\n  local delimiter2=\"?\"\n  local delimiter3=\"!\"\n  local delimiter4=\"\
    .\"\n  local delimiter5=\",\"\n  local delimiter6=\";\"\n  local delimiter7=\"\
    :\"\n  local delimiter8=\";\"\n  local delimiter9=\".\"\n  local delimiter10=\"\
    ?\"\n  local delimiter11=\"!\"\n  local delimiter12=\".\"\n  local delimiter13=\"\
    ,\"\n  local delimiter14=\";\"\n  local delimiter15=\":\"\n  local delimiter16=\"\
    ;\"\n  local delimiter17=\".\"\n  local delimiter18=\"?\"\n  local delimiter19=\"\
    !\"\n  local delimiter20=\".\"\n  local delimiter21=\",\"\n  local delimiter22=\"\
    ;\"\n  local delimiter23=\":\"\n  local delimiter24=\";\"\n  local delimiter25=\"\
    .\"\n  local delimiter26=\"?\"\n  local delimiter27=\"!\"\n  local delimiter28=\"\
    .\"\n  local delimiter29=\",\"\n  local delimiter30=\";\"\n  local delimiter31=\"\
    :\"\n  local delimiter32=\";\"\n  local delimiter33=\".\"\n  local delimiter34=\"\
    ?\"\n  local delimiter35=\"!\"\n  local delimiter36=\".\"\n  local delimiter37=\"\
    ,\"\n  local delimiter38=\";\"\n  local delimiter39=\":\"\n  local delimiter40=\"\
    ;\"\n  local delimiter41=\".\"\n  local delimiter42=\"?\"\n  local delimiter43=\"\
    !\"\n  local delimiter44=\".\"\n  local delimiter45=\",\"\n  local delimiter46=\"\
    ;\"\n  local delimiter47=\":\"\n  local delimiter48=\";\"\n  local delimiter49=\"\
    .\"\n  local delimiter50=\"?\"\n  local delimiter51=\"!\"\n  local delimiter52=\"\
    .\"\n  local delimiter53=\",\"\n  local delimiter54=\";\"\n  local delimiter55=\"\
    :\"\n  local delimiter56=\";\"\n  local delimiter57=\".\"\n  local delimiter58=\"\
    ?\"\n  local delimiter59=\"!\"\n  local delimiter60=\".\"\n  local delimiter61=\"\
    ,\"\n  local delimiter62=\";\"\n  local delimiter63=\":\"\n  local delimiter64=\"\
    ;\"\n  local delimiter65=\".\"\n  local delimiter66=\"?\"\n  local delimiter67=\"\
    !\"\n  local delimiter68=\".\"\n  local delimiter69\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_string=${delimiters[*]}\n  local delimiters_string_count=${#delimiters_string[*]}\n\
    \  local delimiters_string_array=(${delimiters_string})\n  local delimiters_string_array_count=${#delimiters_string_array[@]}\n\
    \  local delimiters_string_array_element=${delimiters_string_array[*]}\n  local\
    \ delimiters_string_array_element_count=${#delimiters_string_array_element[*]}\n\
    \  local delimiters_string_array_element_element_count=${delimiters_string_array_element_count}\n\
    \  local delimiters_string_array_element_element_element_count=${delimiters_string_array_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_count=${delimiters_string_array_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_element_count=${delimiters_string_array_element_element_element_element_element_element_element_element_element_element_element_element_element_count}\n\
    \  local delimiters_string_array_element_\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local words=$1\n    local delimiters=(\".\")\n   \
    \ local delimiters_count=${#delimiters[@]}\n    local delimiters_index=0\n   \
    \ local delimiters_words=()\n    local delimiters_words_count=${#delimiters_words[@]}\n\
    \    local delimiters_words_index=0\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiters_words_index-1))\n    local delimiters_words_count=$((delimiters_words_count-1))\n\
    \    local delimiters_words_index=$((delimiter\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7p0b9ys7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmp7p0b9ys7.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredoms=0\n    local boredom_words=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local boredom_sentences=()\n    local boredom_sentences=()\n    local boredom_sentences=()\n\
    \    local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentence=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word_count\n  local boredom_sentence_count\n  local boredom_sentence_word\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_sentence=()\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local boredom_word\n    local boredom_sentence\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_word\n    local boredom_sentence\n\
    \    local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local word=$1\n    local delimiters=(\".\")\n    local\
    \ delimiters_length=${#delimiters[@]}\n    local delimiters_string=${delimiters[*]}\n\
    \    local delimiters_string_length=${#delimiters_string[*]}\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((delimiters_string_length-1))\n    local delimiters_string_length=$((delimiters_string_length-1))\n\
    \    local delimiters_string_length=$((delimiters_string_length-1))\n    local\
    \ delimiters_string_length=$((\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmlp6aqtl.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmlp6aqtl.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_string=\"\"\n  local delimiters_string_count=0\n\
    \  local delimiters_string_length=0\n  local delimiters_string_length_count=0\n\
    \  local delimiters_string_length_index=0\n  local delimiters_string_length_string=\"\
    \"\n  local delimiters_string_length_string_count=0\n  local delimiters_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length=0\n  local delimiters_string_length_string_length_count=0\n\
    \  local delimiters_string_length_string_length_index=0\n  local delimiters_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_count=0\n  local delimiters_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length=0\n  local delimiters_string_length_string_length_string_length_count=0\n\
    \  local delimiters_string_length_string_length_string_length_index=0\n  local\
    \ delimiters_string_length_string_length_string_length_string=\"\"\n  local delimiters_string_length_string_length_string_length_string_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local delimiters_string_length_string_length_string_length_string_length_string_length_string_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_count=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \  local delimiters_string_length_string_length_string_length_string_length\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local words=$1\n  local delimiter=$2\n  local word\n \
    \ local i\n  local j\n  local delimiter_count\n  local delimiter_index\n  local\
    \ delimiter_index2\n  local delimiter_index3\n  local delimiter_index4\n  local\
    \ delimiter_index5\n  local delimiter_index6\n  local delimiter_index7\n  local\
    \ delimiter_index8\n  local delimiter_index9\n  local delimiter_index10\n  local\
    \ delimiter_index11\n  local delimiter_index12\n  local delimiter_index13\n  local\
    \ delimiter_index14\n  local delimiter_index15\n  local delimiter_index16\n  local\
    \ delimiter_index17\n  local delimiter_index18\n  local delimiter_index19\n  local\
    \ delimiter_index20\n  local delimiter_index21\n  local delimiter_index22\n  local\
    \ delimiter_index23\n  local delimiter_index24\n  local delimiter_index25\n  local\
    \ delimiter_index26\n  local delimiter_index27\n  local delimiter_index28\n  local\
    \ delimiter_index29\n  local delimiter_index30\n  local delimiter_index31\n  local\
    \ delimiter_index32\n  local delimiter_index33\n  local delimiter_index34\n  local\
    \ delimiter_index35\n  local delimiter_index36\n  local delimiter_index37\n  local\
    \ delimiter_index38\n  local delimiter_index39\n  local delimiter_index40\n  local\
    \ delimiter_index41\n  local delimiter_index42\n  local delimiter_index43\n  local\
    \ delimiter_index44\n  local delimiter_index45\n  local delimiter_index46\n  local\
    \ delimiter_index47\n  local delimiter_index48\n  local delimiter_index49\n  local\
    \ delimiter_index50\n  local delimiter_index51\n  local delimiter_index52\n  local\
    \ delimiter_index53\n  local delimiter_index54\n  local delimiter_index55\n  local\
    \ delimiter_index56\n  local delimiter_index57\n  local delimiter_index58\n  local\
    \ delimiter_index59\n  local delimiter_index60\n  local delimiter_index61\n  local\
    \ delimiter_index62\n  local delimiter_index63\n  local delimiter_index64\n  local\
    \ delimiter_index65\n  local delimiter_index66\n  local delimiter_index67\n  local\
    \ delimiter_index68\n  local delimiter_index69\n  local delimiter_index70\n  local\
    \ delimiter_index71\n  local delimiter_index72\n  local delimiter_index73\n  local\
    \ delimiter_index74\n  local delimiter_index75\n  local delimiter_index76\n  local\
    \ delimiter_index77\n  local delimiter_index78\n  local delimiter_index79\n  local\
    \ delimiter_index\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\"!\")\n  local delimiters_=(\"\
    ?\")\n  local delimiters_=(\"!\")\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local word=$1\n  local delimiter=$2\n  local sentence=$3\n\
    \  local delimiters=(\".\")\n  local delimiters_i=()\n  local delimiters_o=()\n\
    \  local delimiters_b=()\n  local delimiters_e=()\n  local delimiters_s=()\n \
    \ local delimiters_w=()\n  local delimiters_d=()\n  local delimiters_t=()\n  local\
    \ delimiters_r=()\n  local delimiters_y=()\n  local delimiters_u=()\n  local delimiters_x=()\n\
    \  local delimiters_z=()\n  local delimiters_q=()\n  local delimiters_p=()\n \
    \ local delimiters_o=()\n  local delimiters_n=()\n  local delimiters_l=()\n  local\
    \ delimiters_m=()\n  local delimiters_a=()\n  local delimiters_g=()\n  local delimiters_f=()\n\
    \  local delimiters_h=()\n  local delimiters_v=()\n  local delimiters_g=()\n \
    \ local delimiters_f=()\n  local delimiters_h=()\n  local delimiters_v=()\n  local\
    \ delimiters_g=()\n  local delimiters_f=()\n  local delimiters_h=()\n  local delimiters_v=()\n\
    \  local delimiters_g=()\n  local delimiters_f=()\n  local delimiters_h=()\n \
    \ local delimiters_v=()\n  local delimiters_g=()\n  local delimiters_f=()\n  local\
    \ delimiters_h=()\n  local delimiters_v=()\n  local delimiters_g=()\n  local delimiters_f=()\n\
    \  local delimiters_h=()\n  local delimiters_v=()\n  local delimiters_g=()\n \
    \ local delimiters_f=()\n  local delimiters_h=()\n  local delimiters_v=()\n  local\
    \ delimiters_g=()\n  local delimiters_f=()\n  local delimiters_h=()\n  local delimiters_v=()\n\
    \  local delimiters_g=()\n  local delimiters_f=()\n  local delimiters_h=()\n \
    \ local delimiters_v=()\n  local delimiters_g=()\n  local delimiters_f=()\n  local\
    \ delimiters_h=()\n  local delimiters_v=()\n  local delimiters_g=()\n  local delimiters_f=()\n\
    \  local delimiters_h=()\n  local delimiters_v=()\n  local delimiters_g\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040254

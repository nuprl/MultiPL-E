language: sh
name: HumanEval_72_will_it_fly
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local result\n\n    for (( i=1; i<${#q}; i++ )); do\n      \
    \  sum=$((sum+${q:$i:1}))\n    done\n\n    if [ $sum -le $max ]; then\n      \
    \  result=true\n    else\n        result=false\n    fi\n\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuil9pdbj.sh: line 29: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_weight=$((w-1))\n  local\
    \ sum=0\n  local i\n  local balanced=0\n  local p\n  local w1\n  local w2\n  local\
    \ w3\n  local w4\n  local w5\n  local w6\n  local w7\n  local w8\n  local w9\n\
    \  local w10\n  local w11\n  local w12\n  local w13\n  local w14\n  local w15\n\
    \  local w16\n  local w17\n  local w18\n  local w19\n  local w20\n  local w21\n\
    \  local w22\n  local w23\n  local w24\n  local w25\n  local w26\n  local w27\n\
    \  local w28\n  local w29\n  local w30\n  local w31\n  local w32\n  local w33\n\
    \  local w34\n  local w35\n  local w36\n  local w37\n  local w38\n  local w39\n\
    \  local w40\n  local w41\n  local w42\n  local w43\n  local w44\n  local w45\n\
    \  local w46\n  local w47\n  local w48\n  local w49\n  local w50\n  local w51\n\
    \  local w52\n  local w53\n  local w54\n  local w55\n  local w56\n  local w57\n\
    \  local w58\n  local w59\n  local w60\n  local w61\n  local w62\n  local w63\n\
    \  local w64\n  local w65\n  local w66\n  local w67\n  local w68\n  local w69\n\
    \  local w70\n  local w71\n  local w72\n  local w73\n  local w74\n  local w75\n\
    \  local w76\n  local w77\n  local w78\n  local w79\n  local w80\n  local w81\n\
    \  local w82\n  local w83\n  local w84\n  local w85\n  local w86\n  local w87\n\
    \  local w88\n  local w89\n  local w90\n  local w91\n  local w92\n  local w93\n\
    \  local w94\n  local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w*w))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local p\n    local qw\n    local qw1\n    local\
    \ qw2\n    local qw3\n    local qw4\n    local qw5\n    local qw6\n    local qw7\n\
    \    local qw8\n    local qw9\n    local qw10\n    local qw11\n    local qw12\n\
    \    local qw13\n    local qw14\n    local qw15\n    local qw16\n    local qw17\n\
    \    local qw18\n    local qw19\n    local qw20\n    local qw21\n    local qw22\n\
    \    local qw23\n    local qw24\n    local qw25\n    local qw26\n    local qw27\n\
    \    local qw28\n    local qw29\n    local qw30\n    local qw31\n    local qw32\n\
    \    local qw33\n    local qw34\n    local qw35\n    local qw36\n    local qw37\n\
    \    local qw38\n    local qw39\n    local qw40\n    local qw41\n    local qw42\n\
    \    local qw43\n    local qw44\n    local qw45\n    local qw46\n    local qw47\n\
    \    local qw48\n    local qw49\n    local qw50\n    local qw51\n    local qw52\n\
    \    local qw53\n    local qw54\n    local qw55\n    local qw56\n    local qw57\n\
    \    local qw58\n    local qw59\n    local qw60\n    local qw61\n    local qw62\n\
    \    local qw63\n    local qw64\n    local qw65\n    local qw66\n    local qw67\n\
    \    local qw68\n    local qw69\n    local qw70\n    local qw71\n    local qw72\n\
    \    local qw73\n    local qw74\n    local qw75\n    local qw76\n    local qw77\n\
    \    local qw78\n    local qw79\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local i\n    local j\n    local tmp\n    local result\n\n\
    \    # reverse the list\n    local tmp\n    for ((i=${#q}-1; i>=0; i--)); do\n\
    \        tmp=${q:$i:1}\n        sum=$((sum+tmp))\n    done\n\n    # if the list\
    \ is balanced, then the sum of its elements is less than or equal the maximum\
    \ possible weight\n    if [ $((sum<=max_weight)) -eq 1 ]; then\n        result=true\n\
    \    else\n        result=false\n    fi\n\n    # return the result\n    echo \"\
    $result\"\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local max_sum=$((w-1))\n    local sum=0\n    local balanced=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sumw=0\n\
    \tlocal balanced=0\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\t\
    local b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sumw=0\n\
    \tlocal bal=0\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal\
    \ n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal\
    \ u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal\
    \ b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal\
    \ i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal\
    \ p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal\
    \ w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal\
    \ d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal\
    \ k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal\
    \ r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal\
    \ y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal\
    \ f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal\
    \ m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal\
    \ t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal\
    \ a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal\
    \ h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal\
    \ o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal\
    \ v\n\tlocal w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local p\n    local count\n    local count2\n    local count3\n\
    \    local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n    local count96\n\
    \    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local palindrome=false\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sumw=0\n\
    \  local p\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local w\n  local maxw\n  local sumw\n  local\
    \ p\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local w\n  local maxw\n  local sumw\n  local p\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local w\n  local maxw\n  local sumw\n  local p\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local w\n  local maxw\n  local sumw\n  local p\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local w\n  local maxw\n  local sumw\n  local p\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local w\n  local maxw\n  local sumw\n  local p\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local w\n  local maxw\n  local sumw\n  local p\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ w\n  local maxw\n  local sumw\n  local p\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local w\n\
    \  local maxw\n  local sumw\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local p\n    local w1\n    local\
    \ w2\n    local w3\n    local w4\n    local w5\n    local w6\n    local w7\n \
    \   local w8\n    local w9\n    local w10\n    local w11\n    local w12\n    local\
    \ w13\n    local w14\n    local w15\n    local w16\n    local w17\n    local w18\n\
    \    local w19\n    local w20\n    local w21\n    local w22\n    local w23\n \
    \   local w24\n    local w25\n    local w26\n    local w27\n    local w28\n  \
    \  local w29\n    local w30\n    local w31\n    local w32\n    local w33\n   \
    \ local w34\n    local w35\n    local w36\n    local w37\n    local w38\n    local\
    \ w39\n    local w40\n    local w41\n    local w42\n    local w43\n    local w44\n\
    \    local w45\n    local w46\n    local w47\n    local w48\n    local w49\n \
    \   local w50\n    local w51\n    local w52\n    local w53\n    local w54\n  \
    \  local w55\n    local w56\n    local w57\n    local w58\n    local w59\n   \
    \ local w60\n    local w61\n    local w62\n    local w63\n    local w64\n    local\
    \ w65\n    local w66\n    local w67\n    local w68\n    local w69\n    local w70\n\
    \    local w71\n    local w72\n    local w73\n    local w74\n    local w75\n \
    \   local w76\n    local w77\n    local w78\n    local w79\n    local w80\n  \
    \  local w81\n    local w82\n    local w83\n    local w84\n    local w85\n   \
    \ local w86\n    local w87\n    local w88\n    local w89\n    local w90\n    local\
    \ w91\n    local w92\n    local w93\n    local w94\n    local w95\n\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((\
    \ ${#q} + w ))\"\n    local sumw=\"$(( ${#q} ))\"\n    local balanced=\"false\"\
    \n    local sum=0\n    local max=0\n    local maxsum=0\n    local maxmax=0\n \
    \   local maxmaxsum=0\n    local maxmaxmax=0\n    local maxmaxmaxsum=0\n    local\
    \ maxmaxmaxmax=0\n    local maxmaxmaxmaxsum=0\n    local maxmaxmaxmaxmax=0\n \
    \   local maxmaxmaxmaxmaxsum=0\n    local maxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxsum=0\n   \
    \ local maxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmax=0\n    local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxmaxsum=0\n\
    \    local maxmaxmaxmaxmaxmax\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\"\
    ) = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal list=\"$1\"\n\tlocal w=\"$2\"\n\tlocal sum=$(echo \"\
    $list\" | sed 's/ /+/g' | awk '{sum+=$1} END {print sum}')\n\tlocal max=$((w-sum))\n\
    \tlocal balanced=0\n\tlocal maxsum=0\n\tlocal maxweight=0\n\tlocal maxweightsum=0\n\
    \tlocal maxweightweight=0\n\tlocal maxweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal\
    \ maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\tlocal maxweightweightweightsum=0\n\
    \tlocal maxweightweightweightsum\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local balanced=0\n  local i\n  local j\n  local k\n  local l\n  local m\n \
    \ local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local sum=0\n  local\
    \ maxw=0\n  local maxwsum=0\n  local maxwlist=\"\"\n  local maxwlistsum=0\n  local\
    \ maxwlistw=0\n  local maxwlistwsum=0\n  local maxwlistwsumw=0\n  local maxwlistwsumwsum=0\n\
    \  local maxwlistwsumwsumw=0\n  local maxwlistwsumwsumwsum=0\n  local maxwlistwsumwsumwsumw=0\n\
    \  local maxwlistwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumw=0\n  local\
    \ maxwlistwsumwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumwsumw=0\n  local\
    \ maxwlistwsumwsumwsumwsumwsumw=0\n  local maxwlistwsumwsumwsumwsumwsumwsum=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumw=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsum=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumwsumw=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsumw=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumw=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n  local maxwlistwsumwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \  local max\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local sum=$(echo $q | awk '{sum+=$1} END {print sum}')\n\
    \    local balanced=0\n    local palindromic=0\n    local max_sum=$(echo $sum\
    \ | awk '{if($1>$max_weight) max_sum=$1} END {print max_sum}')\n    local max_palindromic=$(echo\
    \ $max_sum | awk '{if($1>$max_weight) max_palindromic=$1} END {print max_palindromic}')\n\
    \    local max_balanced=$(echo $max_palindromic | awk '{if($1>$max_weight) max_balanced=$1}\
    \ END {print max_balanced}')\n    local max_unbalanced=$(echo $max_palindromic\
    \ | awk '{if($1>$max_weight) max_unbalanced=$1} END {print max_unbalanced}')\n\
    \    local max_unbalanced_sum=$(echo $max_unbalanced | awk '{if($1>$max_weight)\
    \ max_unbalanced_sum=$1} END {print max_unbalanced_sum}')\n    local max_unbalanced_palindromic=$(echo\
    \ $max_unbalanced_sum | awk '{if($1>$max_weight) max_unbalanced_palindromic=$1}\
    \ END {print max_unbalanced_palindromic}')\n    local max_unbalanced_balanced=$(echo\
    \ $max_unbalanced_palindromic | awk '{if($1>$max_weight) max_unbalanced_balanced=$1}\
    \ END {print max_unbalanced_balanced}')\n    local max_unbalanced_unbalanced=$(echo\
    \ $max_unbalanced_palindromic | awk '{if($1>$max_weight) max_unbalanced_unbalanced=$1}\
    \ END {print max_unbalanced_unbalanced}')\n    local max_unbalanced_unbalanced_sum=$(echo\
    \ $max_unbalanced_unbalanced | awk '{if($1>$max_weight) max_unbalanced_unbalanced_sum=$1}\
    \ END {print max_unbalanced_unbalanced_sum}')\n    local max_unbalanced_unbalanced_palindromic=$(echo\
    \ $max_unbalanced_unbalanced_sum | awk '{if($1>$max_weight) max_unbalanced_unbalanced_palindromic=$1}\
    \ END {print max_unbalanced_unbalanced_palindro\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp28m0sz95.sh: line 36: unexpected EOF while looking for matching
    `''''

    /tmp/tmp28m0sz95.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=$1\n    local w=$2\n    local sum=0\n    local\
    \ max=$w\n    local i\n    local j\n    local k\n    local tmp\n    local result\n\
    \n    # Convert the list into a palindromic list.\n    list=$(echo $list | sed\
    \ -e 's/ /+/g')\n\n    # Loop through the list to find the sum of the elements.\n\
    \    for ((i=1; i<${#list}; i++)); do\n        sum=$((sum + ${list[i]}))\n   \
    \ done\n\n    # If the sum of the elements is less than or equal to the maximum\
    \ possible weight,\n    # then return false.\n    if [ $sum -le $max ]; then\n\
    \        result=\"false\"\n    else\n        # Loop through the list to find the\
    \ maximum possible weight.\n        for ((j=1; j<${#list}; j++)); do\n       \
    \     tmp=${list[j]}\n            for ((k=0; k<j; k++)); do\n                tmp=${list[k]}\n\
    \            done\n            if [ $tmp -gt $max ]; then\n                max=$tmp\n\
    \            fi\n        done\n\n        # Loop through the list to find the number\
    \ of elements that are greater than the maximum possible weight.\n        for\
    \ ((k=0; k<${#list}; k++)); do\n            if [ ${list[k]} -gt $max ]; then\n\
    \                ((result++))\n            fi\n        done\n\n        # Return\
    \ true if the number of elements that are greater than the maximum possible weight\
    \ is less than or equal to two.\n        if [ $result -le 2 ]; then\n        \
    \    result=\"true\"\n        fi\n    fi\n\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv_08luo5.sh: line 36: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max=$w\n\tlocal sum=0\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local max_sum=$((w-1))\n    local sum=0\n    local p\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local w\n    local max_w\n    local max_sum\n    local sum\n\
    \    local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local max_sum\n    local sum\n    local p\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local w\n    local max_w\n    local max_sum\n    local sum\n\
    \    local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local max_sum\n    local sum\n    local p\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local w\n    local max_w\n    local max_sum\n    local sum\n\
    \    local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local max_sum\n    local sum\n    local p\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local w\n    local max_w\n    local max_sum\n    local sum\n\
    \    local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local max_sum\n    local sum\n    local p\n    local i\n    local j\n   \
    \ \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"\
    5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local p\n    local q_p\n    local q_p_w\n   \
    \ local q_p_w_i\n    local q_p_w_i_w\n    local q_p_w_i_w_i\n    local q_p_w_i_w_i_w\n\
    \    local q_p_w_i_w_i_w_i\n    local q_p_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i\n    local\
    \ q_p_w_i_w_i_w_i_w_i_w_i\n    local q_p_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\
    \    local q_p_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i_w_i\n\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local i\n    local j\n    local balanced\n    local max_sum\n\
    \    local max_i\n    local max_j\n    local max_balanced\n    local max_max_sum\n\
    \    local max_max_i\n    local max_max_j\n    local max_max_balanced\n    local\
    \ max_max_max_sum\n    local max_max_max_i\n    local max_max_max_j\n    local\
    \ max_max_max_balanced\n    local max_max_max_max_sum\n    local max_max_max_max_i\n\
    \    local max_max_max_max_j\n    local max_max_max_max_balanced\n    local max_max_max_max_max_sum\n\
    \    local max_max_max_max_max_i\n    local max_max_max_max_max_j\n    local max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_j\n    local max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sum=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local max_sum=$(echo $w | awk '{print $2}')\n    local\
    \ sum=0\n    local balanced=0\n    local palindromic=0\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | sed 's/ /+/g')\n    local sum=0\n    local balanced=0\n    local palindromic=0\n\
    \    local max_sum=0\n    local max_palindromic=0\n    local max_weight=0\n  \
    \  local max_sum_palindromic=0\n    local max_weight_palindromic=0\n    local\
    \ max_sum_palindromic_weight=0\n    local max_weight_palindromic_weight=0\n  \
    \  local max_sum_palindromic_weight_weight=0\n    local max_weight_palindromic_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight=0\n    local max_weight_palindromic_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight=0\n    local max_weight_palindromic_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight=0\n    local\
    \ max_weight_palindromic_weight_weight_weight_weight_weight=0\n    local max_sum_palindromic_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_weight_palindromic_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight_weight=0\n\
    \    local max_sum_p\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max=$w\n\tlocal sum=0\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_weight=$((w-1))\n  local\
    \ sum=0\n  local i\n  local j\n  local p\n  local q_p\n  local q_p_reverse\n \
    \ local q_p_reverse_reverse\n  local q_p_reverse_reverse_reverse\n  local q_p_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse\n  local q_p_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n  local\
    \ q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n  local\
    \ q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  local q_p_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse\n\
    \  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\"\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local is_balanced=0\n  local is_palindromic=0\n  local is_equal=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w1\n  local w2\n  local w3\n  local w4\n  local w5\n  local w6\n  local w7\n\
    \  local w8\n  local w9\n  local w10\n  local w11\n  local w12\n  local w13\n\
    \  local w14\n  local w15\n  local w16\n  local w17\n  local w18\n  local w19\n\
    \  local w20\n  local w21\n  local w22\n  local w23\n  local w24\n  local w25\n\
    \  local w26\n  local w27\n  local w28\n  local w29\n  local w30\n  local w31\n\
    \  local w32\n  local w33\n  local w34\n  local w35\n  local w36\n  local w37\n\
    \  local w38\n  local w39\n  local w40\n  local w41\n  local w42\n  local w43\n\
    \  local w44\n  local w45\n  local w46\n  local w47\n  local w48\n  local w49\n\
    \  local w50\n  local w51\n  local w52\n  local w53\n  local w54\n  local w55\n\
    \  local w56\n  local w57\n  local w58\n  local w59\n  local w60\n  local w61\n\
    \  local w62\n  local w63\n  local w64\n  local w65\n  local w66\n  local w67\n\
    \  local w68\n  local w69\n  local w70\n  local w71\n  local w72\n  local w73\n\
    \  local w74\n  local w75\n  local w76\n  local w77\n  local w78\n  local w79\n\
    \  local w80\n  local w81\n  local w82\n}\n\ncandidate() {\n    will_it_fly \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\"\
    \ \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local palindrome\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo \"\
    $w\" | bc)\n    local sum=$(echo \"$q\" | tr \" \" \"\\n\" | sort -n | tail -1)\n\
    \    local balanced=0\n    local max_sum=$(echo \"$sum\" | bc)\n    local max_sum_balanced=0\n\
    \    local max_sum_balanced_w=0\n    local max_sum_balanced_w_w=0\n    local max_sum_balanced_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sum=0\n\
    \  local i\n  local p\n  local wsum\n  local qw\n  local qwsum\n  local qwmax\n\
    \  local qwmaxw\n  local qwmaxwsum\n  local qwmaxwsumw\n  local qwmaxwsumwmax\n\
    \  local qwmaxwsumwmaxw\n  local qwmaxwsumwmaxwmax\n  local qwmaxwsumwmaxwmaxw\n\
    \  local qwmaxwsumwmaxwmaxwmax\n  local qwmaxwsumwmaxwmaxwmaxw\n  local qwmaxwsumwmaxwmaxwmaxwmax\n\
    \  local qwmaxwsumwmaxwmaxwmaxwmaxw\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmax\n \
    \ local qwmaxwsumwmaxwmaxwmaxwmaxwmaxw\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmax\n\
    \  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmax\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n\
    \  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n\
    \  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n\
    \  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n  local\
    \ qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n  local qwmaxwsumwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmax\n\
    \  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\"\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local palindrome=false\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$((w-1))\n    local\
    \ sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n   \
    \ local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n\
    \    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w*w))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_weight=\"\
    $3\"\n    local sum=0\n    local i\n    local j\n    local balanced=0\n    local\
    \ max_sum=0\n    local max_i\n    local max_j\n    local max_balanced=0\n    local\
    \ max_max_sum=0\n    local max_max_i\n    local max_max_j\n    local max_max_balanced=0\n\
    \    local max_max_max_sum=0\n    local max_max_max_i\n    local max_max_max_j\n\
    \    local max_max_max_balanced=0\n    local max_max_max_max_sum=0\n    local\
    \ max_max_max_max_i\n    local max_max_max_max_j\n    local max_max_max_max_balanced=0\n\
    \    local max_max_max_max_max_sum=0\n    local max_max_max_max_max_i\n    local\
    \ max_max_max_max_max_j\n    local max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_i\n    local max_max_max_max_max_max_j\n  \
    \  local max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_max_max_balanced=0\n    local max_max_max_max_max_max_max_max_max_sum=0\n\
    \    local max_max_max_max_max_\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local p\n    local w1\n    local w2\n    local\
    \ w3\n    local w4\n    local w5\n    local w6\n    local w7\n    local w8\n \
    \   local w9\n    local w10\n    local w11\n    local w12\n    local w13\n   \
    \ local w14\n    local w15\n    local w16\n    local w17\n    local w18\n    local\
    \ w19\n    local w20\n    local w21\n    local w22\n    local w23\n    local w24\n\
    \    local w25\n    local w26\n    local w27\n    local w28\n    local w29\n \
    \   local w30\n    local w31\n    local w32\n    local w33\n    local w34\n  \
    \  local w35\n    local w36\n    local w37\n    local w38\n    local w39\n   \
    \ local w40\n    local w41\n    local w42\n    local w43\n    local w44\n    local\
    \ w45\n    local w46\n    local w47\n    local w48\n    local w49\n    local w50\n\
    \    local w51\n    local w52\n    local w53\n    local w54\n    local w55\n \
    \   local w56\n    local w57\n    local w58\n    local w59\n    local w60\n  \
    \  local w61\n    local w62\n    local w63\n    local w64\n    local w65\n   \
    \ local w66\n    local w67\n    local w68\n    local w69\n    local w70\n    local\
    \ w71\n    local w72\n    local w73\n    local w74\n    local w75\n    local w76\n\
    \    local w77\n    local w78\n    local w79\n    local w80\n    local w81\n \
    \   local w82\n    local w83\n    local w84\n    local w85\n    local w86\n  \
    \  local w87\n    local w88\n    local w89\n    local w90\n    local w91\n   \
    \ local w92\n    local w93\n    local w94\n    local w95\n    local w96\n}\n\n\
    candidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2\
    \ 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal list=\"$1\"\n\tlocal w=\"$2\"\n\tlocal sum=0\n\tlocal\
    \ max=0\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\t\
    local e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\t\
    local b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal \n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local p\n    local b\n    local w\n    local f\n    local s\n\
    \    local t\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    local w\n    local w\n    local w\n    local w\n\
    \    local w\n    local w\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$3\"\
    \n    local sumw=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local p\n    local q_p\n    local\
    \ q_pp\n    local q_q\n    local q_qq\n    local q_qpp\n    local q_qqq\n    local\
    \ q_qqqq\n    local q_qqqqq\n    local q_qqqqqq\n    local q_qqqqqqq\n    local\
    \ q_qqqqqqqq\n    local q_qqqqqqqqq\n    local q_qqqqqqqqqq\n    local q_qqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqq\n    local q_qqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqq\n    local\
    \ q_qqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\n    local q_qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\n\
    \    local q_qqqq\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local max_sum=$((w-1))\n    local sum=0\n    local balanced=0\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max_weight=0\n    local balanced=0\n    local palindrome=0\n    local\
    \ i\n    local j\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=\"$1\"\n\tlocal w=\"$2\"\n\tlocal maxw=\"$w\"\n\tlocal\
    \ sumw=0\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\t\
    local e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\t\
    local b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local i\n    local j\n    local result\n    local balanced\n\
    \    local max_sum\n    local max_i\n    local max_j\n    local max_sum_balanced\n\
    \    local max_sum_unbalanced\n    local max_sum_unbalanced_i\n    local max_sum_unbalanced_j\n\
    \    local max_sum_unbalanced_i_j\n    local max_sum_unbalanced_i_j_sum\n    local\
    \ max_sum_unbalanced_i_j_sum_balanced\n    local max_sum_unbalanced_i_j_sum_unbalanced\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i\n    local max_sum_unbalanced_i_j_sum_unbalanced_j\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j\n    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_balanced\n    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i\n    local\
    \ max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_j\n    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_balanced\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_j\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalanced_i_j_sum\n\
    \    local max_sum_unbalanced_i_j_sum_unbalanced_i_j_sum_unbalance\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local palindrome=false\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sumw=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local bal=0\n    local i\n    local j\n    local sum\n   \
    \ local max\n    local maxi\n    local maxj\n    local maxsum\n    local maxbal\n\
    \    local maxsumw\n    local maxbalw\n    local maxbalsumw\n    local maxbalsumw1\n\
    \    local maxbalsumw2\n    local maxbalsumw3\n    local maxbalsumw4\n    local\
    \ maxbalsumw5\n    local maxbalsumw6\n    local maxbalsumw7\n    local maxbalsumw8\n\
    \    local maxbalsumw9\n    local maxbalsumw10\n    local maxbalsumw11\n    local\
    \ maxbalsumw12\n    local maxbalsumw13\n    local maxbalsumw14\n    local maxbalsumw15\n\
    \    local maxbalsumw16\n    local maxbalsumw17\n    local maxbalsumw18\n    local\
    \ maxbalsumw19\n    local maxbalsumw20\n    local maxbalsumw21\n    local maxbalsumw22\n\
    \    local maxbalsumw23\n    local maxbalsumw24\n    local maxbalsumw25\n    local\
    \ maxbalsumw26\n    local maxbalsumw27\n    local maxbalsumw28\n    local maxbalsumw29\n\
    \    local maxbalsumw30\n    local maxbalsumw31\n    local maxbalsumw32\n    local\
    \ maxbalsumw33\n    local maxbalsumw34\n    local maxbalsumw35\n    local maxbalsumw36\n\
    \    local maxbalsumw37\n    local maxbalsumw38\n    local maxbalsumw39\n    local\
    \ maxbalsumw40\n    local maxbalsumw41\n    local maxbalsumw42\n    local maxbalsumw43\n\
    \    local maxbalsumw44\n    local maxbalsumw45\n    local maxbalsumw46\n    local\
    \ maxbalsumw47\n    local maxbalsumw48\n    local maxbalsumw49\n    local maxbalsumw50\n\
    \    local maxbalsumw51\n    local maxbalsumw52\n    local maxbalsumw53\n    local\
    \ max\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\"\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local max_sum=$((w-1))\n\
    \  local sum=0\n  local i\n  local j\n  local p\n  local q_p\n  local q_p_i\n\
    \  local q_p_j\n  local q_p_i_j\n  local q_p_i_j_k\n  local q_p_i_j_k_l\n  local\
    \ q_p_i_j_k_l_m\n  local q_p_i_j_k_l_m_n\n  local q_p_i_j_k_l_m_n_o\n  local q_p_i_j_k_l_m_n_o_p\n\
    \  local q_p_i_j_k_l_m_n_o_p_q\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u\n  local\
    \ q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2_3\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2_3_4\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2_3_4_5\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2_3_4_5_6\n\
    \  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_0_1_2_3_4_5_6_7\n  local q_p_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local p\n    local q_rev\n    local q_rev_rev\n\
    \    local q_rev_revrev\n    local q_rev_revrevrev\n    local q_rev_revrevrevrev\n\
    \    local q_rev_revrevrevrev\n    local q_rev_revrevrevrevrev\n    local q_rev_revrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local\
    \ q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n    local q_rev_revrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrevrev\n\
    \    local q_rev_revrev\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n \
    \   local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w*w))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local p\n    local t\n    local wsum\n\
    \    local tsum\n    local tmax\n    local tmin\n    local tmaxw\n    local tminw\n\
    \    local tmaxwsum\n    local tminwsum\n    local tmaxwmax\n    local tminwmax\n\
    \    local tmaxwmin\n    local tminwmin\n    local tmaxwmaxsum\n    local tminwmaxsum\n\
    \    local tmaxwminmax\n    local tminwminmax\n    local tmaxwminmin\n    local\
    \ tminwminmin\n    local tmaxwmaxsumw\n    local tminwmaxsumw\n    local tmaxwminmaxw\n\
    \    local tminwminmaxw\n    local tmaxwminminw\n    local tminwminminw\n    local\
    \ tmaxwmaxsumwsum\n    local tminwmaxsumwsum\n    local tmaxwminmaxwmax\n    local\
    \ tminwminmaxwmax\n    local tmaxwminminwmax\n    local tminwminminwmax\n    local\
    \ tmaxwmaxsumwsumw\n    local tminwmaxsumwsumw\n    local tmaxwminmaxwmaxw\n \
    \   local tminwminmaxwmaxw\n    local tmaxwminminwmaxw\n    local tminwminminwmaxw\n\
    \    local tmaxwmaxsumwsumwsum\n    local tminwmaxsumwsumwsum\n    local tmaxwminmaxwmaxw\n\
    \    local tminwminmaxwmaxw\n    local tmaxwminminwmaxw\n    local tminwminminwmaxw\n\
    \    local tmaxwmaxsumwsumwsumw\n    local tminwmaxsumwsumwsumw\n    local tmaxwminmaxwmaxww\n\
    \    local tminwminmaxwmaxww\n    local tmaxwminminwmaxww\n    local tminwminminwmaxww\n\
    \    local tmaxwmaxsumwsumwsumw\n    local tminwmaxsumwsumwsumw\n\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local palindrome=false\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((w-1))\"\
    \n    local sumw=\"$((w*w))\"\n    local sumq=\"$((q*q))\"\n    local maxq=\"\
    $((maxw*maxw))\"\n    local maxsum=\"$((maxq+sumw))\"\n    local maxsumq=\"$((maxsum+sumq))\"\
    \n    local maxsumqw=\"$((maxsumq+w))\"\n    local maxsumqmaxw=\"$((maxsumqw+maxw))\"\
    \n    local maxsumqmaxwmaxw=\"$((maxsumqmaxw+maxw))\"\n    local maxsumqmaxwmaxwmaxw=\"\
    $((maxsumqmaxwmaxw+maxw))\"\n    local maxsumqmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxw+maxw))\"\n\
    \    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw+maxw))\"\
    \n    local maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxwmaxw=\"$((maxsumqmaxwmaxwmaxwmaxwmaxwmaxwmaxw\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1l9e1sft.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1l9e1sft.sh: line 58: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=$((w*2))\n\
    \    local max_sum=$((w*w))\n    local sum=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local result\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=\"$(will_it_fly_max_weight\
    \ \"$w\")\"\n    local max_sum=\"$(will_it_fly_max_sum \"$w\")\"\n    local max_wsum=\"\
    $(will_it_fly_max_wsum \"$w\")\"\n    local balanced=\"$(will_it_fly_is_balanced\
    \ \"$q\")\"\n    local sum=\"$(will_it_fly_sum \"$q\")\"\n    local wsum=\"$(will_it_fly_wsum\
    \ \"$q\")\"\n    local result=\"$(will_it_fly_result \"$q\" \"$w\")\"\n    if\
    \ [[ \"$result\" == \"true\" ]]; then\n        if [[ \"$balanced\" == \"true\"\
    \ ]]; then\n            if [[ \"$sum\" -le \"$max_wsum\" ]]; then\n          \
    \      return 0\n            else\n                return 1\n            fi\n\
    \        else\n            if [[ \"$sum\" -le \"$max_sum\" ]]; then\n        \
    \        return 0\n            else\n                return 1\n            fi\n\
    \        fi\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqasgybfb.sh: line 23: will_it_fly_max_weight: command not found

    /tmp/tmpqasgybfb.sh: line 24: will_it_fly_max_sum: command not found

    /tmp/tmpqasgybfb.sh: line 25: will_it_fly_max_wsum: command not found

    /tmp/tmpqasgybfb.sh: line 26: will_it_fly_is_balanced: command not found

    /tmp/tmpqasgybfb.sh: line 27: will_it_fly_sum: command not found

    /tmp/tmpqasgybfb.sh: line 28: will_it_fly_wsum: command not found

    /tmp/tmpqasgybfb.sh: line 29: will_it_fly_result: command not found

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sum=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local max_sum=$((w-1))\n    local sum=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local max_sum=$(echo $w | awk '{print $2}')\n    local\
    \ sum=$(echo $q | awk '{sum+=$1} END {print sum}')\n    local balanced=$(echo\
    \ $sum | awk '{if (sum<=max_sum) print 1; else print 0}')\n    local balanced_or_not=$(echo\
    \ $balanced | awk '{if ($0==1) print 1; else print 0}')\n    local will_it_fly=$(echo\
    \ $balanced_or_not | awk '{if ($0==1) print 1; else print 0}')\n    echo $will_it_fly\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w*w))\n\
    \    local sum=0\n    local i\n    local result\n\n    for ((i=0; i<${#q}; i++));\
    \ do\n        sum=$((sum+${q:$i:1}))\n    done\n\n    if [[ $sum -le $max_weight\
    \ ]]; then\n        result=\"true\"\n    else\n        result=\"false\"\n    fi\n\
    \n    echo \"$result\"\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo0_5x18g.sh: line 29: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local max_sum=$((w-1))\n    local sum=0\n    local palindrome=false\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sum=0\n\
    \  local balanced=0\n  local i\n  local j\n  local k\n  local l\n  local m\n \
    \ local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sumw=0\n\
    \tlocal bal=0\n\tlocal maxbal=0\n\tlocal maxbalsum=0\n\tlocal maxbalsumw=0\n\t\
    local maxbalsumwsum=0\n\tlocal maxbalsumwsumw=0\n\tlocal maxbalsumwsumwsum=0\n\
    \tlocal maxbalsumwsumwsumw=0\n\tlocal maxbalsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumw=0\n\
    \tlocal maxbalsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumwsumw=0\n\t\
    local maxbalsumwsumwsumwsumwsumw=0\n\tlocal maxbalsumwsumwsumwsumwsumwsum=0\n\t\
    local maxbalsumwsumwsumwsumwsumwsumw=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumw=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumw=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumw=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumw=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumw=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\
    \tlocal maxbalsumwsumwsumwsumwsumwsumwsumwsumwsumwsum=0\n\tlocal maxbalsumwsum\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((w*w))\"\
    \n    local sumw=\"$((w*w))\"\n    local i\n    local j\n    local sum\n    local\
    \ bal\n    local fl\n    local wfl\n    local wfl2\n    local wfl3\n    local\
    \ wfl4\n    local wfl5\n    local wfl6\n    local wfl7\n    local wfl8\n    local\
    \ wfl9\n    local wfl10\n    local wfl11\n    local wfl12\n    local wfl13\n \
    \   local wfl14\n    local wfl15\n    local wfl16\n    local wfl17\n    local\
    \ wfl18\n    local wfl19\n    local wfl20\n    local wfl21\n    local wfl22\n\
    \    local wfl23\n    local wfl24\n    local wfl25\n    local wfl26\n    local\
    \ wfl27\n    local wfl28\n    local wfl29\n    local wfl30\n    local wfl31\n\
    \    local wfl32\n    local wfl33\n    local wfl34\n    local wfl35\n    local\
    \ wfl36\n    local wfl37\n    local wfl38\n    local wfl39\n    local wfl40\n\
    \    local wfl41\n    local wfl42\n    local wfl43\n    local wfl44\n    local\
    \ wfl45\n    local wfl46\n    local wfl47\n    local wfl48\n    local wfl49\n\
    \    local wfl50\n    local wfl51\n    local wfl52\n    local wfl53\n    local\
    \ wfl54\n    local wfl55\n    local wfl56\n    local wfl57\n    local wfl58\n\
    \    local wfl59\n    local wfl60\n    local wfl61\n    local wfl62\n    local\
    \ wfl63\n    local wfl64\n    local wfl65\n    local wfl66\n    local wfl67\n\
    \    local wfl68\n    local wfl69\n    local wfl70\n    local wfl71\n    local\
    \ wfl72\n    local wfl73\n    local wfl74\n    local wfl75\n    local wfl76\n\
    \    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\"\
    \ \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max=$w\n\tlocal sum=0\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal A\n\tlocal B\n\tlocal C\n\t\
    local D\n\tlocal E\n\tlocal F\n\tlocal G\n\tlocal H\n\tlocal I\n\tlocal J\n\t\
    local K\n\tlocal L\n\tlocal M\n\tlocal N\n\tlocal O\n\tlocal P\n\tlocal Q\n\t\
    local R\n\tlocal S\n\tlocal T\n\tlocal U\n\tlocal V\n\tlocal W\n\tlocal X\n\t\
    local Y\n\tlocal Z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local A\n\tlocal B\n\tlocal C\n\tlocal D\n\tlocal E\n\tlocal F\n\tlocal G\n\t\
    local H\n\tlocal I\n\tlocal J\n\tlocal K\n\tlocal L\n\tlocal M\n\tlocal N\n\t\
    local O\n\tlocal P\n\tlocal Q\n\tlocal R\n\tlocal S\n\tlocal T\n\tlocal U\n\t\
    local V\n\tlocal W\n\tlocal X\n\tlocal Y\n\tlocal Z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=$1\n    local w=$2\n    local sum=0\n    local\
    \ max=$w\n    local i\n    local j\n    local k\n    local l\n    local m\n  \
    \  local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    \n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max_w=$((w-1))\n\tlocal sum=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local max_sum=$((w-1))\n    local sum=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local p\n    local q_p\n    local\
    \ q_pp\n    local q_ppp\n    local q_ppp_p\n    local q_ppp_pp\n    local q_ppp_ppp\n\
    \    local q_ppp_pppp\n    local q_ppp_ppppp\n    local q_ppp_pppppp\n    local\
    \ q_ppp_ppppppp\n    local q_ppp_pppppppp\n    local q_ppp_ppppppppp\n    local\
    \ q_ppp_pppppppppp\n    local q_ppp_ppppppppppp\n    local q_ppp_ppppppppppp\n\
    \    local q_ppp_pppppppppppp\n    local q_ppp_ppppppppppp\n    local q_ppp_pppppppppppp\n\
    \    local q_ppp_ppppppppppppp\n    local q_ppp_pppppppppppppp\n    local q_ppp_ppppppppppppppp\n\
    \    local q_ppp_ppppppppppppppp\n    local q_ppp_ppppppppppppppp\n    local q_ppp_ppppppppppppppp\n\
    \    local q_ppp_ppppppppppppppp\n    local q_ppp_ppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n\
    \    local q_ppp_ppppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n    local\
    \ q_ppp_ppppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n\
    \    local q_ppp_ppppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n    local\
    \ q_ppp_ppppppppppppppppp\n    local q_ppp_ppppppppppppppppp\n    local q_ppp_pppppppppppppppp\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local maxsumw=0\n    local maxbalanced=0\n\
    \    local maxmaxsumw=0\n    local maxmaxbalanced=0\n    local maxmaxmaxsumw=0\n\
    \    local maxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    \n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=\"$((w-1))\"\
    \n    local max_w1=\"$((max_w-1))\"\n    local max_w2=\"$((max_w-1))\"\n    local\
    \ max_w3=\"$((max_w-1))\"\n    local max_w4=\"$((max_w-1))\"\n    local max_w5=\"\
    $((max_w-1))\"\n    local max_w6=\"$((max_w-1))\"\n    local max_w7=\"$((max_w-1))\"\
    \n    local max_w8=\"$((max_w-1))\"\n    local max_w9=\"$((max_w-1))\"\n    local\
    \ max_w10=\"$((max_w-1))\"\n    local max_w11=\"$((max_w-1))\"\n    local max_w12=\"\
    $((max_w-1))\"\n    local max_w13=\"$((max_w-1))\"\n    local max_w14=\"$((max_w-1))\"\
    \n    local max_w15=\"$((max_w-1))\"\n    local max_w16=\"$((max_w-1))\"\n   \
    \ local max_w17=\"$((max_w-1))\"\n    local max_w18=\"$((max_w-1))\"\n    local\
    \ max_w19=\"$((max_w-1))\"\n    local max_w20=\"$((max_w-1))\"\n    local max_w21=\"\
    $((max_w-1))\"\n    local max_w22=\"$((max_w-1))\"\n    local max_w23=\"$((max_w-1))\"\
    \n    local max_w24=\"$((max_w-1))\"\n    local max_w25=\"$((max_w-1))\"\n   \
    \ local max_w26=\"$((max_w-1))\"\n    local max_w27=\"$((max_w-1))\"\n    local\
    \ max_w28=\"$((max_w-1))\"\n    local max_w29=\"$((max_w-1))\"\n    local max_w30=\"\
    $((max_w-1))\"\n    local max_w31=\"$((max_w-1))\"\n    local max_w32=\"$((max_w-1))\"\
    \n    local max_w33=\"$((max_w-1))\"\n    local max_w34=\"$((max_w-1))\"\n   \
    \ local max_w35=\"$((max_w-1))\"\n    local max_w36=\"$((max_w-1))\"\n    local\
    \ max_w37=\"$((max_w-1))\"\n    local max_w38=\"$((max_w-1))\"\n    local max_w39=\"\
    $((max_w-1))\"\n    local max_w40=\"$((max_w-1))\"\n    local max_w41=\"$((max_w-1))\"\
    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal maxw=$((w-1))\n\tlocal sum=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$((w-1))\n    local\
    \ sum=0\n    local i\n    local j\n    local result\n    local balanced\n    local\
    \ maxsum\n    local maxweight\n    local maxweightsum\n    local maxweightsum2\n\
    \    local maxweightsum3\n    local maxweightsum4\n    local maxweightsum5\n \
    \   local maxweightsum6\n    local maxweightsum7\n    local maxweightsum8\n  \
    \  local maxweightsum9\n    local maxweightsum10\n    local maxweightsum11\n \
    \   local maxweightsum12\n    local maxweightsum13\n    local maxweightsum14\n\
    \    local maxweightsum15\n    local maxweightsum16\n    local maxweightsum17\n\
    \    local maxweightsum18\n    local maxweightsum19\n    local maxweightsum20\n\
    \    local maxweightsum21\n    local maxweightsum22\n    local maxweightsum23\n\
    \    local maxweightsum24\n    local maxweightsum25\n    local maxweightsum26\n\
    \    local maxweightsum27\n    local maxweightsum28\n    local maxweightsum29\n\
    \    local maxweightsum30\n    local maxweightsum31\n    local maxweightsum32\n\
    \    local maxweightsum33\n    local maxweightsum34\n    local maxweightsum35\n\
    \    local maxweightsum36\n    local maxweightsum37\n    local maxweightsum38\n\
    \    local maxweightsum39\n    local maxweightsum40\n    local maxweightsum41\n\
    \    local maxweightsum42\n    local maxweightsum43\n    local maxweightsum44\n\
    \    local maxweightsum45\n    local maxweightsum46\n    local maxweightsum47\n\
    \    local maxweightsum48\n    local maxweightsum49\n    local maxweightsum50\n\
    \    local maxweightsum51\n    local maxweightsum52\n    local maxweightsum53\n\
    \    local maxweightsum54\n    local maxweightsum55\n    local maxweightsum56\n\
    \    local maxweightsum57\n    local maxweightsum58\n    local maxweightsum59\n\
    \    local maxweightsum60\n    local maxweightsum61\n    local maxweightsum62\n\
    \    local maxweightsum63\n    local maxweightsum64\n    local maxweightsum65\n\
    \    local maxweightsum66\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local max_weight=\"\
    $3\"\n  local sum=0\n  local i\n  local q\n  local found\n  local found2\n  local\
    \ found3\n  local found4\n  local found5\n  local found6\n  local found7\n  local\
    \ found8\n  local found9\n  local found10\n  local found11\n  local found12\n\
    \  local found13\n  local found14\n  local found15\n  local found16\n  local found17\n\
    \  local found18\n  local found19\n  local found20\n  local found21\n  local found22\n\
    \  local found23\n  local found24\n  local found25\n  local found26\n  local found27\n\
    \  local found28\n  local found29\n  local found30\n  local found31\n  local found32\n\
    \  local found33\n  local found34\n  local found35\n  local found36\n  local found37\n\
    \  local found38\n  local found39\n  local found40\n  local found41\n  local found42\n\
    \  local found43\n  local found44\n  local found45\n  local found46\n  local found47\n\
    \  local found48\n  local found49\n  local found50\n  local found51\n  local found52\n\
    \  local found53\n  local found54\n  local found55\n  local found56\n  local found57\n\
    \  local found58\n  local found59\n  local found60\n  local found61\n  local found62\n\
    \  local found63\n  local found64\n  local found65\n  local found66\n  local found67\n\
    \  local found68\n  local found69\n  local found70\n  local found71\n  local found72\n\
    \  local found73\n  local found74\n  local found75\n  local found76\n  local found77\n\
    \  local found78\n  local found79\n  local found80\n  local found81\n  local found82\n\
    \  local found83\n  local found84\n  local found85\n  local found86\n  local found87\n\
    \  local found88\n  local found89\n  local found90\n  local found91\n  local found92\n\
    \  local found93\n  local found94\n  local found95\n  local found96\n  \n}\n\n\
    candidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2\
    \ 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=\"$(echo\
    \ \"$w\" | awk '{print $1}')\"\n    local max_w1=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w2=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w3=\"\
    $(echo \"$w\" | awk '{print $1}')\"\n    local max_w4=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w5=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w6=\"\
    $(echo \"$w\" | awk '{print $1}')\"\n    local max_w7=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w8=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w9=\"\
    $(echo \"$w\" | awk '{print $1}')\"\n    local max_w10=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w11=\"$(echo \"$w\" | awk '{print $1}')\"\n    local\
    \ max_w12=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w13=\"$(echo \"\
    $w\" | awk '{print $1}')\"\n    local max_w14=\"$(echo \"$w\" | awk '{print $1}')\"\
    \n    local max_w15=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w16=\"\
    $(echo \"$w\" | awk '{print $1}')\"\n    local max_w17=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w18=\"$(echo \"$w\" | awk '{print $1}')\"\n    local\
    \ max_w19=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w20=\"$(echo \"\
    $w\" | awk '{print $1}')\"\n    local max_w21=\"$(echo \"$w\" | awk '{print $1}')\"\
    \n    local max_w22=\"$(echo \"$w\" | awk '{print $1}')\"\n    local max_w23=\"\
    $(echo \"$w\" | awk '{print $1}')\"\n    local max_w24=\"$(echo \"$w\" | awk '{print\
    \ $1}')\"\n    local max_w25=\"$(echo \"$w\" | awk '{print $1}')\"\n    local\
    \ max_w26=\"$(echo \"$\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6p561ja_.sh: line 63: unexpected EOF while looking for matching
    `"''

    /tmp/tmp6p561ja_.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((w-1))\"\
    \n    local sumw=\"$((w*w))\"\n    local balanced=\"false\"\n    local sum=0\n\
    \    local palindromic=\"false\"\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local qw\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local qw\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local qw\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local qw\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local qw\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max_weight=$(echo $w | awk\
    \ '{print $1}')\n\tlocal sum=$(echo $q | awk '{print $1}')\n\tlocal balanced=$(echo\
    \ $q | awk '{print $2}')\n\tlocal max_sum=$(echo $w | awk '{print $1}')\n\tlocal\
    \ max_balanced=$(echo $w | awk '{print $2}')\n\tlocal max_sum_balanced=$(echo\
    \ $w | awk '{print $3}')\n\tlocal max_sum_balanced_2=$(echo $w | awk '{print $4}')\n\
    \tlocal max_sum_balanced_3=$(echo $w | awk '{print $5}')\n\tlocal max_sum_balanced_4=$(echo\
    \ $w | awk '{print $6}')\n\tlocal max_sum_balanced_5=$(echo $w | awk '{print $7}')\n\
    \tlocal max_sum_balanced_6=$(echo $w | awk '{print $8}')\n\tlocal max_sum_balanced_7=$(echo\
    \ $w | awk '{print $9}')\n\tlocal max_sum_balanced_8=$(echo $w | awk '{print $10}')\n\
    \tlocal max_sum_balanced_9=$(echo $w | awk '{print $11}')\n\tlocal max_sum_balanced_10=$(echo\
    \ $w | awk '{print $12}')\n\tlocal max_sum_balanced_11=$(echo $w | awk '{print\
    \ $13}')\n\tlocal max_sum_balanced_12=$(echo $w | awk '{print $14}')\n\tlocal\
    \ max_sum_balanced_13=$(echo $w | awk '{print $15}')\n\tlocal max_sum_balanced_14=$(echo\
    \ $w | awk '{print $16}')\n\tlocal max_sum_balanced_15=$(echo $w | awk '{print\
    \ $17}')\n\tlocal max_sum_balanced_16=$(echo $w | awk '{print $18}')\n\tlocal\
    \ max_sum_balanced_17=$(echo $w | awk '{print $19}')\n\tlocal max_sum_balanced_18=$(echo\
    \ $w | awk '{print $20}')\n\tlocal max_sum_balanced_19=$(echo $w | awk '{print\
    \ $21}')\n\tlocal max_sum_balanced_20=$(echo $w | awk '{print $22}')\n\tlocal\
    \ max_sum_balanced_21=$(echo $w | awk '{print $23}')\n\tlocal max_sum_balanced_22=$(echo\
    \ $w | awk '{print $24}')\n\tlocal max_sum_balanced_23\n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local maxsumw=0\n    local maxbalanced=0\n\
    \    local maxmaxsumw=0\n    local maxmaxbalanced=0\n    local maxmaxmaxsumw=0\n\
    \    local maxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n\
    \    local maxmaxmaxmaxsumw=0\n    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n\
    \    local maxmaxmaxmaxbalanced=0\n    local maxmaxmaxmaxsumw=0\n    \n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local result\n\n    # reverse the\
    \ list\n    local tmp\n    for q in ${q[@]}; do\n        tmp=${q}\n        i=${#q}\n\
    \        j=$((i-1))\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n        echo ${q}\n        echo ${q}\n\
    \        echo ${q}\n        echo ${q}\n}\n\ncandidate() {\n    will_it_fly \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\"\
    \ \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplo4muuhd.sh: line 108: syntax error near unexpected token `}''

    /tmp/tmplo4muuhd.sh: line 108: `}''

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=\"$(will_it_fly_max_w\
    \ \"$q\" \"$w\")\"\n    local sum=\"$(will_it_fly_sum \"$q\" \"$w\")\"\n    [[\
    \ \"$sum\" -le \"$max_w\" ]] && return 0 || return 1\n}\n\ncandidate() {\n   \
    \ will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppr85yc9t.sh: line 23: will_it_fly_max_w: command not found

    /tmp/tmppr85yc9t.sh: line 24: will_it_fly_sum: command not found

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local sum=0\n  local\
    \ max=0\n  local palindrome\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w1\n  local w2\n  local w3\n  local w4\n  local\
    \ w5\n  local w6\n  local w7\n  local w8\n  local w9\n  local w10\n  local w11\n\
    \  local w12\n  local w13\n  local w14\n  local w15\n  local w16\n  local w17\n\
    \  local w18\n  local w19\n  local w20\n  local w21\n  local w22\n  local w23\n\
    \  local w24\n  local w25\n  local w26\n  local w27\n  local w28\n  local w29\n\
    \  local w30\n  local w31\n  local w32\n  local w33\n  local w34\n  local w35\n\
    \  local w36\n  local w37\n  local w38\n  local w39\n  local w40\n  local w41\n\
    \  local w42\n  local w43\n  local w44\n  local w45\n  local w46\n  local w47\n\
    \  local w48\n  local w49\n  local w50\n  local w51\n  local w52\n  local w53\n\
    \  local w54\n  local w55\n  local w56\n  local w57\n  local w58\n  local w59\n\
    \  local w60\n  local w61\n  local w62\n  local w63\n  local w64\n  local w65\n\
    \  local w66\n  local w67\n  local w68\n  local w69\n  local w70\n  local w71\n\
    \  local w72\n  local w73\n  local w74\n  local w75\n  local w76\n  local w77\n\
    \  local w78\n  local w79\n  local w80\n  local w81\n  local w82\n  local w83\n\
    \  local w84\n  local w85\n  local w86\n}\n\ncandidate() {\n    will_it_fly \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\"\
    \ \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local sum=0\n  local\
    \ max=0\n  local i\n  local j\n  local p\n  local q\n  local w1\n  local w2\n\
    \  local w3\n  local w4\n  local w5\n  local w6\n  local w7\n  local w8\n  local\
    \ w9\n  local w10\n  local w11\n  local w12\n  local w13\n  local w14\n  local\
    \ w15\n  local w16\n  local w17\n  local w18\n  local w19\n  local w20\n  local\
    \ w21\n  local w22\n  local w23\n  local w24\n  local w25\n  local w26\n  local\
    \ w27\n  local w28\n  local w29\n  local w30\n  local w31\n  local w32\n  local\
    \ w33\n  local w34\n  local w35\n  local w36\n  local w37\n  local w38\n  local\
    \ w39\n  local w40\n  local w41\n  local w42\n  local w43\n  local w44\n  local\
    \ w45\n  local w46\n  local w47\n  local w48\n  local w49\n  local w50\n  local\
    \ w51\n  local w52\n  local w53\n  local w54\n  local w55\n  local w56\n  local\
    \ w57\n  local w58\n  local w59\n  local w60\n  local w61\n  local w62\n  local\
    \ w63\n  local w64\n  local w65\n  local w66\n  local w67\n  local w68\n  local\
    \ w69\n  local w70\n  local w71\n  local w72\n  local w73\n  local w74\n  local\
    \ w75\n  local w76\n  local w77\n  local w78\n  local w79\n  local w80\n  local\
    \ w81\n  local w82\n  local w83\n  local w84\n  local w85\n  local w86\n  local\
    \ w87\n  local w88\n  local w89\n  local w90\n  local w91\n  local w92\n  local\
    \ w93\n  local w94\n  local w95\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local p\n    local w1\n    local w2\n    local w3\n    local\
    \ w4\n    local w5\n    local w6\n    local w7\n    local w8\n    local w9\n \
    \   local w10\n    local w11\n    local w12\n    local w13\n    local w14\n  \
    \  local w15\n    local w16\n    local w17\n    local w18\n    local w19\n   \
    \ local w20\n    local w21\n    local w22\n    local w23\n    local w24\n    local\
    \ w25\n    local w26\n    local w27\n    local w28\n    local w29\n    local w30\n\
    \    local w31\n    local w32\n    local w33\n    local w34\n    local w35\n \
    \   local w36\n    local w37\n    local w38\n    local w39\n    local w40\n  \
    \  local w41\n    local w42\n    local w43\n    local w44\n    local w45\n   \
    \ local w46\n    local w47\n    local w48\n    local w49\n    local w50\n    local\
    \ w51\n    local w52\n    local w53\n    local w54\n    local w55\n    local w56\n\
    \    local w57\n    local w58\n    local w59\n    local w60\n    local w61\n \
    \   local w62\n    local w63\n    local w64\n    local w65\n    local w66\n  \
    \  local w67\n    local w68\n    local w69\n    local w70\n    local w71\n   \
    \ local w72\n    local w73\n    local w74\n    local w75\n    local w76\n    local\
    \ w77\n    local w78\n    local w79\n    local w80\n    local w81\n    local w82\n\
    \    local w83\n    local w84\n    local w85\n    local w86\n    local w87\n \
    \   local w88\n    local w89\n    local w90\n    local w91\n    local w92\n  \
    \  local w93\n    local w94\n    local w95\n    local w96\n    local \n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local t\n  local wsum\n  local wsum2\n  local\
    \ wsum3\n  local wsum4\n  local wsum5\n  local wsum6\n  local wsum7\n  local wsum8\n\
    \  local wsum9\n  local wsum10\n  local wsum11\n  local wsum12\n  local wsum13\n\
    \  local wsum14\n  local wsum15\n  local wsum16\n  local wsum17\n  local wsum18\n\
    \  local wsum19\n  local wsum20\n  local wsum21\n  local wsum22\n  local wsum23\n\
    \  local wsum24\n  local wsum25\n  local wsum26\n  local wsum27\n  local wsum28\n\
    \  local wsum29\n  local wsum30\n  local wsum31\n  local wsum32\n  local wsum33\n\
    \  local wsum34\n  local wsum35\n  local wsum36\n  local wsum37\n  local wsum38\n\
    \  local wsum39\n  local wsum40\n  local wsum41\n  local wsum42\n  local wsum43\n\
    \  local wsum44\n  local wsum45\n  local wsum46\n  local wsum47\n  local wsum48\n\
    \  local wsum49\n  local wsum50\n  local wsum51\n  local wsum52\n  local wsum53\n\
    \  local wsum54\n  local wsum55\n  local wsum56\n  local wsum57\n  local wsum58\n\
    \  local wsum59\n  local wsum60\n  local wsum61\n  local wsum62\n  local wsum63\n\
    \  local wsum64\n  local wsum65\n  local wsum66\n  local wsum67\n  local wsum68\n\
    \  local wsum69\n  local wsum70\n  local wsum71\n  local wsum72\n  local wsum73\n\
    \  local wsum74\n  local wsum75\n  local wsum76\n  local wsum77\n  local wsum78\n\
    \  local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local result\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q=${q//[!A-Z]/}\n\n    # reverse the list\n    q=${q//[!0-9]/}\n\
    \    q=${q//[!a-z]/}\n    q\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj4jehxmq.sh: line 96: q: command not found

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local i\n    local result\n    local balanced\n    local maxsumw\n\
    \    local maxsumw1\n    local maxsumw2\n    local maxsumw3\n    local maxsumw4\n\
    \    local maxsumw5\n    local maxsumw6\n    local maxsumw7\n    local maxsumw8\n\
    \    local maxsumw9\n    local maxsumw10\n    local maxsumw11\n    local maxsumw12\n\
    \    local maxsumw13\n    local maxsumw14\n    local maxsumw15\n    local maxsumw16\n\
    \    local maxsumw17\n    local maxsumw18\n    local maxsumw19\n    local maxsumw20\n\
    \    local maxsumw21\n    local maxsumw22\n    local maxsumw23\n    local maxsumw24\n\
    \    local maxsumw25\n    local maxsumw26\n    local maxsumw27\n    local maxsumw28\n\
    \    local maxsumw29\n    local maxsumw30\n    local maxsumw31\n    local maxsumw32\n\
    \    local maxsumw33\n    local maxsumw34\n    local maxsumw35\n    local maxsumw36\n\
    \    local maxsumw37\n    local maxsumw38\n    local maxsumw39\n    local maxsumw40\n\
    \    local maxsumw41\n    local maxsumw42\n    local maxsumw43\n    local maxsumw44\n\
    \    local maxsumw45\n    local maxsumw46\n    local maxsumw47\n    local maxsumw48\n\
    \    local maxsumw49\n    local maxsumw50\n    local maxsumw51\n    local maxsumw52\n\
    \    local maxsumw53\n    local maxsumw54\n    local maxsumw55\n    local maxsumw56\n\
    \    local maxsumw57\n    local maxsumw58\n    local maxsumw59\n    local maxsumw60\n\
    \    local maxsumw61\n    local maxsumw62\n    local maxsumw63\n    local maxsumw64\n\
    \    local maxsumw65\n    local maxsumw66\n    local maxsumw67\n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=\"$1\"\n\tlocal w=\"$2\"\n\tlocal max_weight\n\tlocal\
    \ max_weight_index\n\tlocal balanced\n\tlocal sum\n\tlocal i\n\tlocal j\n\tlocal\
    \ result\n\tmax_weight=0\n\tmax_weight_index=0\n\tbalanced=0\n\tsum=0\n\tfor i\
    \ in \"${q[@]}\"; do\n\t\t((sum+=i))\n\t\tif (( sum > w )); then\n\t\t\tmax_weight=$i\n\
    \t\t\tmax_weight_index=$i\n\t\tfi\n\tdone\n\tfor i in \"${q[@]}\"; do\n\t\tif\
    \ (( i == max_weight_index )); then\n\t\t\tbalanced=1\n\t\tfi\n\tdone\n\tif ((\
    \ balanced == 0 )); then\n\t\tresult=0\n\telse\n\t\tresult=1\n\tfi\n\techo \"\
    $result\"\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp4o5bfdph.sh: line 35: ((: 3 2 3: syntax error in expression (error
    token is "2 3")

    /tmp/tmp4o5bfdph.sh: line 42: ((: 3 2 3: syntax error in expression (error token
    is "2 3")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local bal=0\n    local i\n    local j\n    local sum\n   \
    \ local max\n    local maxw\n    local maxsum\n    local maxbal\n    local maxsumw\n\
    \    local maxbalw\n    local maxbalsum\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n\
    \    local maxbalsumw\n    local maxbalsumw\n    local maxbalsumw\n    local maxbal\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max=$w\n\tlocal sum=0\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local sum=$(echo $q | awk '{sum+=$1} END {print sum}')\n\
    \    local balanced=$(echo $q | awk '{sum+=$1} END {print sum<max_weight}')\n\
    \    echo $(balanced && $sum<max_weight)\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc91hi16c.sh: line 26: balanced: command not found

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$3\"\
    \n    local sumw=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_weight=$((w-1))\n  local\
    \ max_sum=$((w-1))\n  local sum=0\n  local i\n  local j\n  local balanced=0\n\
    \  local palindrome\n  local max_palindrome\n  local max_palindrome_sum\n  local\
    \ max_palindrome_index\n  local max_palindrome_index2\n  local max_palindrome_weight\n\
    \  local max_palindrome_weight2\n  local max_palindrome_weight3\n  local max_palindrome_weight4\n\
    \  local max_palindrome_weight5\n  local max_palindrome_weight6\n  local max_palindrome_weight7\n\
    \  local max_palindrome_weight8\n  local max_palindrome_weight9\n  local max_palindrome_weight10\n\
    \  local max_palindrome_weight11\n  local max_palindrome_weight12\n  local max_palindrome_weight13\n\
    \  local max_palindrome_weight14\n  local max_palindrome_weight15\n  local max_palindrome_weight16\n\
    \  local max_palindrome_weight17\n  local max_palindrome_weight18\n  local max_palindrome_weight19\n\
    \  local max_palindrome_weight20\n  local max_palindrome_weight21\n  local max_palindrome_weight22\n\
    \  local max_palindrome_weight23\n  local max_palindrome_weight24\n  local max_palindrome_weight25\n\
    \  local max_palindrome_weight26\n  local max_palindrome_weight27\n  local max_palindrome_weight28\n\
    \  local max_palindrome_weight29\n  local max_palindrome_weight30\n  local max_palindrome_weight31\n\
    \  local max_palindrome_weight32\n  local max_palindrome_weight33\n  local max_palindrome_weight34\n\
    \  local max_palindrome_weight35\n  local max_palindrome_weight36\n  local max_palindrome_weight37\n\
    \  local max_palindrome_weight38\n  local max_palindrome_weight39\n  local max_palindrome_weight40\n\
    \  local max_palindrome_weight41\n  local max_palindrome_weight42\n  \n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local p\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ w\n    local max_w\n    local sum\n    local p\n    local i\n    local j\n \
    \   local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local w\n    local max_w\n    local sum\n    local p\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local w\n    local max_w\n    local sum\n \
    \   local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local sum\n    local p\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ w\n    local max_w\n    local sum\n    local p\n    local i\n    local j\n \
    \   local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local w\n    local max_w\n    local sum\n    local p\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local w\n    local max_w\n    local sum\n \
    \   local p\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local w\n    local max_w\n\
    \    local sum\n    local p\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ w\n    local max_w\n    local sum\n    local p\n    local i\n    \n}\n\ncandidate()\
    \ {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n\
    \    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"\
    1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[\
    \ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local t\n    local f\n\
    \    local s\n    local l\n    local b\n    local x\n    local y\n    local z\n\
    \    local w1\n    local w2\n    local w3\n    local w4\n    local w5\n    local\
    \ w6\n    local w7\n    local w8\n    local w9\n    local w10\n    local w11\n\
    \    local w12\n    local w13\n    local w14\n    local w15\n    local w16\n \
    \   local w17\n    local w18\n    local w19\n    local w20\n    local w21\n  \
    \  local w22\n    local w23\n    local w24\n    local w25\n    local w26\n   \
    \ local w27\n    local w28\n    local w29\n    local w30\n    local w31\n    local\
    \ w32\n    local w33\n    local w34\n    local w35\n    local w36\n    local w37\n\
    \    local w38\n    local w39\n    local w40\n    local w41\n    local w42\n \
    \   local w43\n    local w44\n    local w45\n    local w46\n    local w47\n  \
    \  local w48\n    local w49\n    local w50\n    local w51\n    local w52\n   \
    \ local w53\n    local w54\n    local w55\n    local w56\n    local w57\n    local\
    \ w58\n    local w59\n    local w60\n    local w61\n    local w62\n    local w63\n\
    \    local w64\n    local w65\n    local w66\n    local w67\n    local w68\n \
    \   local w69\n    local w70\n    local w71\n    local w72\n    local w73\n  \
    \  local w74\n    local w75\n    local w76\n    local w77\n    local w78\n   \
    \ local w79\n    local w80\n    local w81\n    local w82\n    local w83\n    local\
    \ w84\n    local w85\n    local w86\n    local w87\n    local w88\n    local w\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local p\n    local qw\n    local qw1\n    local\
    \ qw2\n    local qw3\n    local qw4\n    local qw5\n    local qw6\n    local qw7\n\
    \    local qw8\n    local qw9\n    local qw10\n    local qw11\n    local qw12\n\
    \    local qw13\n    local qw14\n    local qw15\n    local qw16\n    local qw17\n\
    \    local qw18\n    local qw19\n    local qw20\n    local qw21\n    local qw22\n\
    \    local qw23\n    local qw24\n    local qw25\n    local qw26\n    local qw27\n\
    \    local qw28\n    local qw29\n    local qw30\n    local qw31\n    local qw32\n\
    \    local qw33\n    local qw34\n    local qw35\n    local qw36\n    local qw37\n\
    \    local qw38\n    local qw39\n    local qw40\n    local qw41\n    local qw42\n\
    \    local qw43\n    local qw44\n    local qw45\n    local qw46\n    local qw47\n\
    \    local qw48\n    local qw49\n    local qw50\n    local qw51\n    local qw52\n\
    \    local qw53\n    local qw54\n    local qw55\n    local qw56\n    local qw57\n\
    \    local qw58\n    local qw59\n    local qw60\n    local qw61\n    local qw62\n\
    \    local qw63\n    local qw64\n    local qw65\n    local qw66\n    local qw67\n\
    \    local qw68\n    local qw69\n    local qw70\n    local qw71\n    local qw72\n\
    \    local qw73\n    local qw74\n    local qw75\n    local qw76\n    local qw77\n\
    \    local qw78\n    local qw79\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max=$w\n\tlocal sum=0\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local result\n  local count\n  local balanced\n  local last\n  local\
    \ last2\n  local last3\n  local last4\n  local last5\n  local last6\n  local last7\n\
    \  local last8\n  local last9\n  local last10\n  local last11\n  local last12\n\
    \  local last13\n  local last14\n  local last15\n  local last16\n  local last17\n\
    \  local last18\n  local last19\n  local last20\n  local last21\n  local last22\n\
    \  local last23\n  local last24\n  local last25\n  local last26\n  local last27\n\
    \  local last28\n  local last29\n  local last30\n  local last31\n  local last32\n\
    \  local last33\n  local last34\n  local last35\n  local last36\n  local last37\n\
    \  local last38\n  local last39\n  local last40\n  local last41\n  local last42\n\
    \  local last43\n  local last44\n  local last45\n  local last46\n  local last47\n\
    \  local last48\n  local last49\n  local last50\n  local last51\n  local last52\n\
    \  local last53\n  local last54\n  local last55\n  local last56\n  local last57\n\
    \  local last58\n  local last59\n  local last60\n  local last61\n  local last62\n\
    \  local last63\n  local last64\n  local last65\n  local last66\n  local last67\n\
    \  local last68\n  local last69\n  local last70\n  local last71\n  local last72\n\
    \  local last73\n  local last74\n  local last75\n  local last76\n  local last77\n\
    \  local last78\n  local last79\n  local last80\n  local last81\n  local last82\n\
    \  local last83\n  local last84\n  local last85\n  local last86\n  local last87\n\
    \  local last88\n  local last89\n  local last90\n  local last91\n  local last92\n\
    \  local last93\n  local last94\n  local last\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local p\n    local qw\n    local\
    \ qw1\n    local qw2\n    local qw3\n    local qw4\n    local qw5\n    local qw6\n\
    \    local qw7\n    local qw8\n    local qw9\n    local qw10\n    local qw11\n\
    \    local qw12\n    local qw13\n    local qw14\n    local qw15\n    local qw16\n\
    \    local qw17\n    local qw18\n    local qw19\n    local qw20\n    local qw21\n\
    \    local qw22\n    local qw23\n    local qw24\n    local qw25\n    local qw26\n\
    \    local qw27\n    local qw28\n    local qw29\n    local qw30\n    local qw31\n\
    \    local qw32\n    local qw33\n    local qw34\n    local qw35\n    local qw36\n\
    \    local qw37\n    local qw38\n    local qw39\n    local qw40\n    local qw41\n\
    \    local qw42\n    local qw43\n    local qw44\n    local qw45\n    local qw46\n\
    \    local qw47\n    local qw48\n    local qw49\n    local qw50\n    local qw51\n\
    \    local qw52\n    local qw53\n    local qw54\n    local qw55\n    local qw56\n\
    \    local qw57\n    local qw58\n    local qw59\n    local qw60\n    local qw61\n\
    \    local qw62\n    local qw63\n    local qw64\n    local qw65\n    local qw66\n\
    \    local qw67\n    local qw68\n    local qw69\n    local qw70\n    local qw71\n\
    \    local qw72\n    local qw73\n    local qw74\n    local qw75\n    local qw76\n\
    \    local qw77\n    local qw78\n    local q\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local sum=$(echo $q | awk '{print $1}')\n    local\
    \ balanced=0\n    local max_sum=$(echo $sum | awk '{print $1}')\n    local max_sum_balanced=0\n\
    \    local max_sum_balanced_w=0\n    local max_sum_balanced_w_w=0\n    local max_sum_balanced_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n\
    \    local max_sum_balanced_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w_w=0\n    local max_sum_balanced_w_w_w_w_w_w_w_w_\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local max_sum=$((w-1))\n\
    \  local sum=0\n  local balanced=0\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n\
    \  local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w-1))\n\
    \    local sum=0\n    local i\n    local j\n    local result\n    local balanced\n\
    \    local max_sum\n    local max_i\n    local max_j\n    local max_result\n \
    \   local max_balanced\n    local max_max_sum\n    local max_max_i\n    local\
    \ max_max_j\n    local max_max_result\n    local max_max_balanced\n    local max_max_max_sum\n\
    \    local max_max_max_i\n    local max_max_max_j\n    local max_max_max_result\n\
    \    local max_max_max_balanced\n    local max_max_max_max_sum\n    local max_max_max_max_i\n\
    \    local max_max_max_max_j\n    local max_max_max_max_result\n    local max_max_max_max_balanced\n\
    \    local max_max_max_max_max_sum\n    local max_max_max_max_max_i\n    local\
    \ max_max_max_max_max_j\n    local max_max_max_max_max_result\n    local max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_j\n    local max_max_max_max_max_max_result\n\
    \    local max_max_max_max_max_max_balanced\n    local max_max_max_max_max_max_max_sum\n\
    \    local max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_result\n    local max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_result\n\
    \    local max_max_max_max_max_max_max_max_balanced\n    local max_max_max_max_max_max_max_max_max_sum\n\
    \    local max_max_max_max_max_max_max_max_max_i\n    local max_max_max_max_max_max_max_max_max_j\n\
    \    local max_max_max_max_max_max_max_max_max_result\n    local max_max_max_max_max_max_max_max_max_balanced\n\
    \    local max_max_max_max_max_max_max_max_max_max_sum\n    local max_max_max_max_max_max_max_max_max_max_i\n\
    \    local max_max_max_max_max_max_max_max_max_max_j\n    local max_max_max_max_max_max_max_max_max_result\n\
    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=\"$1\"\n  local w=\"$2\"\n  local maxw=\"$3\"\n  local\
    \ sumw=0\n  local i\n  local j\n  local sum\n  local balanced\n  local max\n \
    \ local maxi\n  local maxj\n  local maxsum\n  local maxbalanced\n  local maxmax\n\
    \  local maxmaxi\n  local maxmaxj\n  local maxmaxsum\n  local maxmaxbalanced\n\
    \  local maxmaxmax\n  local maxmaxmaxi\n  local maxmaxmaxj\n  local maxmaxmaxsum\n\
    \  local maxmaxmaxbalanced\n  local maxmaxmaxmax\n  local maxmaxmaxmaxi\n  local\
    \ maxmaxmaxmaxj\n  local maxmaxmaxmaxsum\n  local maxmaxmaxmaxbalanced\n  local\
    \ maxmaxmaxmaxmax\n  local maxmaxmaxmaxmaxi\n  local maxmaxmaxmaxmaxj\n  local\
    \ maxmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxbalanced\n  local maxmaxmaxmaxmaxmax\n\
    \  local maxmaxmaxmaxmaxmaxi\n  local maxmaxmaxmaxmaxmaxj\n  local maxmaxmaxmaxmaxmaxsum\n\
    \  local maxmaxmaxmaxmaxmaxbalanced\n  local maxmaxmaxmaxmaxmaxmax\n  local maxmaxmaxmaxmaxmaxmaxi\n\
    \  local maxmaxmaxmaxmaxmaxmaxj\n  local maxmaxmaxmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxmaxmaxbalanced\n\
    \  local maxmaxmaxmaxmaxmaxmaxmax\n  local maxmaxmaxmaxmaxmaxmaxmaxi\n  local\
    \ maxmaxmaxmaxmaxmaxmaxmaxj\n  local maxmaxmaxmaxmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxmaxmaxmaxbalanced\n\
    \  local maxmaxmaxmaxmaxmaxmaxmaxmax\n  local maxmaxmaxmaxmaxmaxmaxmaxmaxi\n \
    \ local maxmaxmaxmaxmaxmaxmaxmaxmaxj\n  local maxmaxmaxmaxmaxmaxmaxmaxmaxsum\n\
    \  local maxmaxmaxmaxmaxmaxmaxmaxmaxbalanced\n  local maxmaxmaxmaxmaxmaxmaxmaxmaxmax\n\
    \  local maxmaxmaxmaxmaxmaxmaxmaxmaxi\n  local maxmaxmaxmaxmaxmaxmaxmaxmaxj\n\
    \  local maxmaxmaxmaxmaxmaxmaxmaxmaxmaxsum\n  local maxmaxmaxmaxmaxmaxmaxmaxmaxmax\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_weight=\"\
    $3\"\n    local sum=0\n    local i\n    local j\n    local k\n    local l\n  \
    \  local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n}\n\ncandidate() {\n    will_it_fly \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"\
    3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\"\
    \ \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=$1\n\tlocal w=$2\n\tlocal max_w=$((w-1))\n\tlocal sum=0\n\
    \tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local qw\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\t\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w*w))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local max_w=$((\
    \ $(wc -l < \"$list\") - 1 ))\n    local sum=$(echo \"$list\" | tr ' ' '\\n' |\
    \ sort | tr '\\n' '+' | sed 's/+$//')\n    local result=$(echo \"$list\" | tr\
    \ ' ' '\\n' | sort | tr '\\n' '+' | sed 's/+$//' | grep -Fxq \"$list\")\n    local\
    \ balanced=\"$(echo \"$list\" | tr ' ' '\\n' | sort | tr '\\n' '+' | sed 's/+$//'\
    \ | grep -Fxq \"$list\" | wc -l)\"\n    local max_balanced=\"$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort | tr '\\n' '+' | sed 's/+$//' | grep -Fxq \"$list\" |\
    \ wc -l)\"\n    local max_sum=\"$(echo \"$list\" | tr ' ' '\\n' | sort | tr '\\\
    n' '+' | sed 's/+$//' | grep -Fxq \"$list\" | wc -l)\"\n    local max_sum_balanced=\"\
    $(echo \"$list\" | tr ' ' '\\n' | sort | tr '\\n' '+' | sed 's/+$//' | grep -Fxq\
    \ \"$list\" | wc -l)\"\n    if [[ $result != \"\" ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqs_i7ge3.sh: line 23: 3 2 3: No such file or directory

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local max_w=\"$(echo\
    \ \"$w\" | awk '{print sqrt($1)}')\"\n    local sum=\"$(echo \"$q\" | awk '{sum+=$1}END{print\
    \ sum}')\"\n    local bal=\"$(echo \"$q\" | awk '{bal+=$1}END{print bal}')\"\n\
    \    [[ \"$sum\" -ge \"$max_w\" ]] && [[ \"$bal\" -ge \"$max_w\" ]] || return\
    \ 1\n    return 0\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local qw\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local qw\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local qw\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local bal=0\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local qw\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local qw\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local qw\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local qw\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local qw\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$(echo $w\
    \ | awk '{print $1}')\n    local sum=$(echo $q | awk '{sum+=$1} END {print sum}')\n\
    \    local balanced=0\n    local balanced_sum=0\n    local balanced_weight=0\n\
    \    local balanced_q=''\n    local balanced_w=0\n    local balanced_max_weight=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_q=''\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n    local balanced_max_w=0\n\
    \    local balanced_max_sum=0\n    local balanced_max_w=0\n    local balanced_max_sum=0\n\
    \    local balanced_max_w=0\n    local balanced_max_sum=0\n}\n\ncandidate() {\n\
    \    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal q=\"$1\"\n\tlocal w=\"$2\"\n\tlocal max_weight\n\tlocal\
    \ max_weight_index\n\tlocal max_weight_sum\n\tlocal max_weight_sum_index\n\tlocal\
    \ balanced\n\tlocal balanced_index\n\tlocal balanced_sum\n\tlocal balanced_sum_index\n\
    \tlocal sum\n\tlocal sum_index\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\t\
    local e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local balanced=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max=$w\n  local sum=0\n \
    \ local p\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local result\n    local will_it_fly\n    local\
    \ will_it_fly_result\n\n    # Write your code here\n    will_it_fly=false\n  \
    \  for ((i=0;i<${#q[@]};++i)); do\n        sum=$((sum+${q[i]}))\n        if ((sum<=max_w)\
    \ && (${q[i]}==${q[${#q[@]}-1]})); then\n            will_it_fly=true\n      \
    \      break\n        fi\n    done\n    will_it_fly_result=$will_it_fly\n    if\
    \ ((will_it_fly_result==true)); then\n        result=\"true\"\n    else\n    \
    \    result=\"false\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6mh81dp9.sh: line 33: sum+3 2 3: syntax error in expression (error
    token is "2 3")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local list=\"$1\"\n    local w=\"$2\"\n    local sum=0\n\
    \    local max=0\n    local p\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate() {\n \
    \   will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_weight=$(echo $w | awk\
    \ '{print $1}')\n  local sum=$(echo $q | awk '{print $1}')\n  local balanced=$(echo\
    \ $q | awk '{print $2}')\n  local max_sum=$(echo $max_weight | awk '{print $1}')\n\
    \  local max_balanced=$(echo $max_weight | awk '{print $2}')\n  local max_sum_balanced=$(echo\
    \ $max_sum | awk '{print $1}')\n  local max_balanced_sum=$(echo $max_balanced\
    \ | awk '{print $1}')\n  local max_balanced_sum_balanced=$(echo $max_balanced_sum\
    \ | awk '{print $1}')\n  local max_sum_balanced_balanced=$(echo $max_sum_balanced\
    \ | awk '{print $1}')\n  local max_balanced_sum_balanced_balanced=$(echo $max_balanced_sum_balanced\
    \ | awk '{print $1}')\n  local max_sum_balanced_balanced_balanced_balanced=$(echo\
    \ $max_sum_balanced_balanced | awk '{print $1}')\n  local max_balanced_sum_balanced_balanced_balanced_balanced=$(echo\
    \ $max_balanced_sum_balanced_balanced | awk '{print $1}')\n  local max_sum_balanced_balanced_balanced_balanced_balanced_balanced=$(echo\
    \ $max_sum_balanced_balanced_balanced_balanced | awk '{print $1}')\n  local max_balanced_sum_balanced_balanced_balanced_balanced_balanced_balanced=$(echo\
    \ $max_balanced_sum_balanced_balanced_balanced_balanced_balanced | awk '{print\
    \ $1}')\n  local max_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced=$(echo\
    \ $max_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced | awk\
    \ '{print $1}')\n  local max_balanced_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced=$(echo\
    \ $max_balanced_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced\
    \ | awk '{print $1}')\n  local max_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced=$(echo\
    \ $max_sum_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced_balanced\
    \ | awk '{print $1}')\n  local max_balanced_sum_balance\n}\n\ncandidate() {\n\
    \    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\"\
    \ \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local palindrome=1\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local sum=0\n  local\
    \ max=0\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w1\n  local w2\n  local w3\n  local w4\n  local w5\n  local w6\n\
    \  local w7\n  local w8\n  local w9\n  local w10\n  local w11\n  local w12\n \
    \ local w13\n  local w14\n  local w15\n  local w16\n  local w17\n  local w18\n\
    \  local w19\n  local w20\n  local w21\n  local w22\n  local w23\n  local w24\n\
    \  local w25\n  local w26\n  local w27\n  local w28\n  local w29\n  local w30\n\
    \  local w31\n  local w32\n  local w33\n  local w34\n  local w35\n  local w36\n\
    \  local w37\n  local w38\n  local w39\n  local w40\n  local w41\n  local w42\n\
    \  local w43\n  local w44\n  local w45\n  local w46\n  local w47\n  local w48\n\
    \  local w49\n  local w50\n  local w51\n  local w52\n  local w53\n  local w54\n\
    \  local w55\n  local w56\n  local w57\n  local w58\n  local w59\n  local w60\n\
    \  local w61\n  local w62\n  local w63\n  local w64\n  local w65\n  local w66\n\
    \  local w67\n  local w68\n  local w69\n  local w70\n  local w71\n  local w72\n\
    \  local w73\n  local w74\n  local w75\n  local w76\n  local w77\n  local w78\n\
    \  local w79\n  local w80\n  local w81\n  local w82\n  local w83\n  local w84\n\
    \  local w85\n  local w86\n  local w87\n  \n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local p\n    local qw\n    local qw1\n    local qw2\n    local\
    \ qw3\n    local qw4\n    local qw5\n    local qw6\n    local qw7\n    local qw8\n\
    \    local qw9\n    local qw10\n    local qw11\n    local qw12\n    local qw13\n\
    \    local qw14\n    local qw15\n    local qw16\n    local qw17\n    local qw18\n\
    \    local qw19\n    local qw20\n    local qw21\n    local qw22\n    local qw23\n\
    \    local qw24\n    local qw25\n    local qw26\n    local qw27\n    local qw28\n\
    \    local qw29\n    local qw30\n    local qw31\n    local qw32\n    local qw33\n\
    \    local qw34\n    local qw35\n    local qw36\n    local qw37\n    local qw38\n\
    \    local qw39\n    local qw40\n    local qw41\n    local qw42\n    local qw43\n\
    \    local qw44\n    local qw45\n    local qw46\n    local qw47\n    local qw48\n\
    \    local qw49\n    local qw50\n    local qw51\n    local qw52\n    local qw53\n\
    \    local qw54\n    local qw55\n    local qw56\n    local qw57\n    local qw58\n\
    \    local qw59\n    local qw60\n    local qw61\n    local qw62\n    local qw63\n\
    \    local qw64\n    local qw65\n    local qw66\n    local qw67\n    local qw68\n\
    \    local qw69\n    local qw70\n    local qw71\n    local qw72\n    local qw73\n\
    \    local qw74\n    local qw75\n    local qw76\n    local qw77\n    local qw78\n\
    \    local qw79\n    local qw\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\"\
    ) = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n\tlocal list=\"$1\"\n\tlocal w=\"$2\"\n\tlocal sum=0\n\tlocal\
    \ max=0\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\t\
    local e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\t\
    local b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal \n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max=$w\n    local sum=0\n\
    \    local i\n    local result\n    local w1\n    local w2\n    local w3\n   \
    \ local w4\n    local w5\n    local w6\n    local w7\n    local w8\n    local\
    \ w9\n    local w10\n    local w11\n    local w12\n    local w13\n    local w14\n\
    \    local w15\n    local w16\n    local w17\n    local w18\n    local w19\n \
    \   local w20\n    local w21\n    local w22\n    local w23\n    local w24\n  \
    \  local w25\n    local w26\n    local w27\n    local w28\n    local w29\n   \
    \ local w30\n    local w31\n    local w32\n    local w33\n    local w34\n    local\
    \ w35\n    local w36\n    local w37\n    local w38\n    local w39\n    local w40\n\
    \    local w41\n    local w42\n    local w43\n    local w44\n    local w45\n \
    \   local w46\n    local w47\n    local w48\n    local w49\n    local w50\n  \
    \  local w51\n    local w52\n    local w53\n    local w54\n    local w55\n   \
    \ local w56\n    local w57\n    local w58\n    local w59\n    local w60\n    local\
    \ w61\n    local w62\n    local w63\n    local w64\n    local w65\n    local w66\n\
    \    local w67\n    local w68\n    local w69\n    local w70\n    local w71\n \
    \   local w72\n    local w73\n    local w74\n    local w75\n    local w76\n  \
    \  local w77\n    local w78\n    local w79\n    local w80\n    local w81\n   \
    \ local w82\n    local w83\n    local w84\n    local w85\n    local w86\n    local\
    \ w87\n    local w88\n    local w89\n    local w90\n    local w91\n    local w92\n\
    \    local w93\n    local w94\n    local w95\n    local w96\n    local \n}\n\n\
    candidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2\
    \ 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((\
    \ ${#q} + w ))\"\n    local sumw=\"$(( ${#q} + w ))\"\n    local i\n    local\
    \ j\n    local result\n    local balanced\n    local max\n    local min\n    local\
    \ maxw\n    local sumw\n    local maxw1\n    local sumw1\n    local maxw2\n  \
    \  local sumw2\n    local maxw3\n    local sumw3\n    local maxw4\n    local sumw4\n\
    \    local maxw5\n    local sumw5\n    local maxw6\n    local sumw6\n    local\
    \ maxw7\n    local sumw7\n    local maxw8\n    local sumw8\n    local maxw9\n\
    \    local sumw9\n    local maxw10\n    local sumw10\n    local maxw11\n    local\
    \ sumw11\n    local maxw12\n    local sumw12\n    local maxw13\n    local sumw13\n\
    \    local maxw14\n    local sumw14\n    local maxw15\n    local sumw15\n    local\
    \ maxw16\n    local sumw16\n    local maxw17\n    local sumw17\n    local maxw18\n\
    \    local sumw18\n    local maxw19\n    local sumw19\n    local maxw20\n    local\
    \ sumw20\n    local maxw21\n    local sumw21\n    local maxw22\n    local sumw22\n\
    \    local maxw23\n    local sumw23\n    local maxw24\n    local sumw24\n    local\
    \ maxw25\n    local sumw25\n    local maxw26\n    local sumw26\n    local maxw27\n\
    \    local sumw27\n    local maxw28\n    local sumw28\n    local maxw29\n    local\
    \ sumw29\n    local maxw30\n    local sumw30\n    local maxw31\n    local sumw31\n\
    \    local maxw32\n    local sumw32\n    local maxw33\n    local sumw33\n    local\
    \ maxw34\n    local sumw34\n    local maxw35\n    local sumw35\n    local maxw36\n\
    \    local sumw36\n    local max\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"\
    5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_weight=$((w*w))\n\
    \    local sum=0\n    local i\n    local result\n\n    for ((i=0; i<${#q}; i++));\
    \ do\n        sum=$((sum+${q:$i:1}))\n    done\n\n    if [[ $sum -le $max_weight\
    \ ]]; then\n        result=true\n    else\n        result=false\n    fi\n\n  \
    \  echo \"$result\"\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp29t022z.sh: line 29: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local is_palindrome\n    local is_balanced\n\
    \    local is_unbalanced\n    local is_unbalanced_or_empty\n    local is_balanced_or_empty\n\
    \    local is_balanced_or_empty_or_zero\n    local is_balanced_or_empty_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero\n    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero\n    local\
    \ is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one\n    local\
    \ is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one\n\
    \    local is_balanced_or_empty_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_zero_or_one_or_\n\
    }\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"1 2\" \"5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w-1))\n   \
    \ local sumw=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local qw\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local qw\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ qw\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local qw\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  \n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local maxw=$((w-1))\n  local sumw=0\n\
    \  local balanced=0\n  local i\n  local j\n  local sum\n  local max\n  local maxw\n\
    \  local maxsumw\n  local maxsum\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n  local maxsumw\n\
    \  local maxsumw\n  local max\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\"\
    ) = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_w=$((w-1))\n  local sum=0\n\
    \  local i\n  local found\n  local found2\n  local found3\n  local found4\n  local\
    \ found5\n  local found6\n  local found7\n  local found8\n  local found9\n  local\
    \ found10\n  local found11\n  local found12\n  local found13\n  local found14\n\
    \  local found15\n  local found16\n  local found17\n  local found18\n  local found19\n\
    \  local found20\n  local found21\n  local found22\n  local found23\n  local found24\n\
    \  local found25\n  local found26\n  local found27\n  local found28\n  local found29\n\
    \  local found30\n  local found31\n  local found32\n  local found33\n  local found34\n\
    \  local found35\n  local found36\n  local found37\n  local found38\n  local found39\n\
    \  local found40\n  local found41\n  local found42\n  local found43\n  local found44\n\
    \  local found45\n  local found46\n  local found47\n  local found48\n  local found49\n\
    \  local found50\n  local found51\n  local found52\n  local found53\n  local found54\n\
    \  local found55\n  local found56\n  local found57\n  local found58\n  local found59\n\
    \  local found60\n  local found61\n  local found62\n  local found63\n  local found64\n\
    \  local found65\n  local found66\n  local found67\n  local found68\n  local found69\n\
    \  local found70\n  local found71\n  local found72\n  local found73\n  local found74\n\
    \  local found75\n  local found76\n  local found77\n  local found78\n  local found79\n\
    \  local found80\n  local found81\n  local found82\n  local found83\n  local found84\n\
    \  local found85\n  local found86\n  local found87\n  local found88\n  local found89\n\
    \  local found90\n  local found91\n  local found92\n  local found93\n  local found94\n\
    \  local found95\n  local found96\n  local found\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local list=\"$1\"\n  local w=\"$2\"\n  local sum=0\n  local\
    \ max=0\n  local i\n\n  for i in $list; do\n    ((sum+=i))\n    ((max=$((max>sum?max:sum))));\n\
    \  done\n\n  ((sum<w))\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n  local q=$1\n  local w=$2\n  local max_weight=$((w-1))\n  local\
    \ sum=0\n  local balanced=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ qw\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local qw\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local qw\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") =\
    \ \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=\"$1\"\n    local w=\"$2\"\n    local maxw=\"$((\
    \ ${#q} + w ))\"\n    local sumw=0\n    local i\n    local result\n    for ((\
    \ i=0; i<${#q}; i++ )); do\n        sumw=$(( sumw + ${q:$i:1} ))\n    done\n \
    \   if [[ $sumw -le $maxw ]]; then\n        result=\"true\"\n    else\n      \
    \  result=\"false\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqjl8oby5.sh: line 28: sumw +   : syntax error: operand expected
    (error token is "+   ")

    '
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local maxw=$((w*2))\n   \
    \ local sum=0\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local qw\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local qw\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local qw\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n\n}\n\ncandidate() {\n    will_it_fly \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 2 3\" \"9\") = \"true\" ]]\n    [[ $(candidate \"\
    1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate \"3\" \"5\") = \"true\" ]]\n \
    \   [[ $(candidate \"3 2 3\" \"1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\"\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"5\" \"5\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that returns true if the object q will\
    \ fly, and false otherwise.\n# The object q will fly if it's balanced (it is a\
    \ palindromic list) and the sum of its elements is less than or equal the maximum\
    \ possible weight w.\n# Example:\n# >>> $(will_it_fly \"1 2\" \"5\")\n# \"false\"\
    \n# # 1+2 is less than the maximum possible weight, but it's unbalanced.\n# >>>\
    \ $(will_it_fly \"3 2 3\" \"1\")\n# \"false\"\n# # it's balanced, but 3+2+3 is\
    \ more than the maximum possible weight.\n# >>> $(will_it_fly \"3 2 3\" \"9\"\
    )\n# \"true\"\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
    # >>> $(will_it_fly \"3\" \"5\")\n# \"true\"\n# # 3 is less than the maximum possible\
    \ weight, and it's balanced.\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    will_it_fly() {\n    local q=$1\n    local w=$2\n    local max_w=$((w-1))\n  \
    \  local sum=0\n    local i\n    local j\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n    will_it_fly\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 3\" \"9\") = \"\
    true\" ]]\n    [[ $(candidate \"1 2\" \"5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"3\" \"5\") = \"true\" ]]\n    [[ $(candidate \"3 2 3\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3\" \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    5\" \"5\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660045474

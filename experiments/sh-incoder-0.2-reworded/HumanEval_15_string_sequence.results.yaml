language: sh
name: HumanEval_15_string_sequence
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n\
    \  done\n  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while ((n--)); do\n    s=\"$s $((n+1))\"\n  done\n \
    \ echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str$i\" \"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\"\
    \ \"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local j\n\
    \    for j in $(seq 0 $((n-1))); do\n      str=\"$str $i\"\n    done\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    echo $i\n\
    \  done\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" \"$i\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while (( n )); do\n    str=$(( str + $(( n )) ))\n\
    \    n=$(( n - 1 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$s $((n--))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    echo $str$i\n\
    \    str=\" \"\n  done\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$1\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while [ $n -gt 0 ]; do\n    local i\n    i=$((n-1))\n\
    \    str=\"$str $((i))\"\n    n=$((n-1))\n  done\n  echo $str\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while ((n--)); do\n    s+=\" $n\"\n  done\n  echo $s\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\"\
    \ \"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$((n-1))\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s+=\" $n\"\n    (( n-- ))\n \
    \ done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n\
    \    n=$(( $n / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=$str\"\
    \ $i\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i=0\n  while (( i < n )); do\n    s=$(( $s + $1\
    \ ))\n    i=$(( i + 1 ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while [ $n -gt 0 ]; do\n    str=$((n--))\n    echo\
    \ $str\n  done\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$s $((n-1))\"\n    n=$((n-1))\n\
    \  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while ((n--)); do\n    s=\"$s $n\"\n  done\n  echo \"\
    $s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while ((n--)); do\n    s=\"$s $n\"\n  done\n  echo \"\
    $s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$((n\
    \ - 1))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n\
    \ - 1))\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local j\n\
    \    for j in $(seq 0 $((n-1))); do\n      str=\"$str $i\"\n    done\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n \
    \   local str=\"$str $j\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local str=\"\
    $str $i\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n \
    \   local k=$((j+1))\n    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n\
    \    local o=$((n+1))\n    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n\
    \    local s=$((r+1))\n    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n\
    \    local w=$((v+1))\n    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n\
    \    local A=$((z+1))\n    str=$str\" \"$i\n    str=$str\" \"$j\n    str=$str\"\
    \ \"$k\n    str=$str\" \"$l\n    str=$str\" \"$m\n    str=$str\" \"$n\n    str=$str\"\
    \ \"$o\n    str=$str\" \"$p\n    str=$str\" \"$q\n    str=$str\" \"$r\n    str=$str\"\
    \ \"$s\n    str=$str\" \"$t\n    str=$str\" \"$u\n    str=$str\" \"$v\n    str=$str\"\
    \ \"$w\n    str=$str\" \"$x\n    str=$str\" \"$y\n    str=$str\" \"$z\n    str=$str\"\
    \ \"$A\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n \
    \   local k=$((j+1))\n    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n\
    \    local o=$((n+1))\n    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n\
    \    local s=$((r+1))\n    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n\
    \    local w=$((v+1))\n    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n\
    \    local A=$((z+1))\n    local B=$((A+1))\n    local C=$((B+1))\n    local D=$((C+1))\n\
    \    local E=$((D+1))\n    local F=$((E+1))\n    local G=$((F+1))\n    local H=$((G+1))\n\
    \    local I=$((H+1))\n    local J=$((I+1))\n    local K=$((J+1))\n    local L=$((K+1))\n\
    \    local M=$((L+1))\n    local N=$((M+1))\n    local O=$((N+1))\n    local P=$((O+1))\n\
    \    local Q=$((P+1))\n    local R=$((Q+1))\n    local S=$((R+1))\n    local T=$((S+1))\n\
    \    local U=$((T+1))\n    local V=$((U+1))\n    local W=$((V+1))\n    local X=$((W+1))\n\
    \    local Y=$((X+1))\n    local Z=$((Y+1))\n    local AA=$((Z+1))\n    local\
    \ AB=$((AA+1))\n    local AC=$((AB+1))\n    local AD=$((AC+1))\n    local AE=$((AD+1))\n\
    \    local AF=$((AE+1))\n    local AG=$((AF+1))\n    local AH=$((AG+1))\n    local\
    \ AI=$((AH+1))\n    local AJ=$((AI+1))\n    local AK=$((AJ+1))\n    local AL=$((AK+1))\n\
    \    local AM\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpodejsudo.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpodejsudo.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=$str\"\
    \ $i\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    echo $i\n\
    \  done\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\"\
    \ \"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n \
    \   local k=$((j-1))\n    local l=$((j+1))\n    local m=$((k-1))\n    local n=$((k+1))\n\
    \    local o=$((l-1))\n    local p=$((l+1))\n    local q=$((m-1))\n    local r=$((m+1))\n\
    \    local s=$((n-1))\n    local t=$((n+1))\n    local u=$((o-1))\n    local v=$((o+1))\n\
    \    local w=$((p-1))\n    local x=$((p+1))\n    local y=$((q-1))\n    local z=$((q+1))\n\
    \    local A=$((r-1))\n    local B=$((r+1))\n    local C=$((s-1))\n    local D=$((s+1))\n\
    \    local E=$((t-1))\n    local F=$((t+1))\n    local G=$((u-1))\n    local H=$((u+1))\n\
    \    local I=$((v-1))\n    local J=$((v+1))\n    local K=$((w-1))\n    local L=$((w+1))\n\
    \    local M=$((x-1))\n    local N=$((x+1))\n    local O=$((y-1))\n    local P=$((y+1))\n\
    \    local Q=$((z-1))\n    local R=$((z+1))\n    local S=$((A-1))\n    local T=$((A+1))\n\
    \    local U=$((B-1))\n    local V=$((B+1))\n    local W=$((C-1))\n    local X=$((C+1))\n\
    \    local Y=$((D-1))\n    local Z=$((D+1))\n    local A=$((E-1))\n    local B=$((E+1))\n\
    \    local C=$((F-1))\n    local D=$((F+1))\n    local E=$((G-1))\n    local F=$((G+1))\n\
    \    local G=$((H-1))\n    local H=$((H+1))\n    local I=$((I-1))\n    local J=$((I+1))\n\
    \    local K=$((J-1))\n    local L=$((J+1))\n    local M=$((K-1))\n    local N=$((K+1))\n\
    \    local O=$((L-1))\n    local P=$\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwzaxtfut.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmpwzaxtfut.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq\
    \ $i\"\n  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s+=$(( n-- ))\n  done\n  echo\
    \ $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n\
    \  done\n  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" \"$i\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $(( ${s// /} + 1 ))\
    \ )) $s\n    n=$(( $n - 1 ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str\
    \ $i\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\
    \n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n \
    \   local k=$((j+1))\n    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n\
    \    local o=$((n+1))\n    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n\
    \    local s=$((r+1))\n    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n\
    \    local w=$((v+1))\n    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n\
    \    local A=$((z+1))\n    str=\"$str $A \"\n  done\n  echo $str\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$1\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\
    \n  done\n  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044584
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> $(string_sequence \"0\")\n# \"0\"\n# >>> $(string_sequence\
    \ \"5\")\n# \"0 1 2 3 4 5\"\n#\n# $1 is an integer\nstring_sequence() {\n  local\
    \ n=$1\n  local seq=\"\"\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660044584

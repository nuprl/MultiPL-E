name: HumanEval_95_check_dict_case
language: sh
prompt: "#!/bin/bash\n# Given a CSV, return true if all keys are strings in lower\
  \ \n# case or all keys are strings in upper case, else return false.\n# The function\
  \ should return false is the given CSV is empty.\n# Examples:\n# >>> $(check_dict_case\
  \ \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case \"a,apple\\nA,banana\\\
  nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"a,apple\\n8,banana\")\n# \"\
  false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\nCity,Houston\")\n# \"false\"\
  \n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\")\n# \"true\"\n#\n# $1 is a two\
  \ column CSV in key,value order\ncheck_dict_case() {\n"
tests: "}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
  \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
  n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
  nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") =\
  \ \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n\
  \    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  local keys=$(echo $1 | cut -d ',' -f 1)\n  local values=$(echo $1\
    \ | cut -d ',' -f 2)\n  local lower\n  local upper\n  lower=$(echo $keys | tr\
    \ '[:upper:]' '[:lower:]')\n  upper=$(echo $keys | tr '[:lower:]' '[:upper:]')\n\
    \  local len\n  len=$((${#keys} + 1))\n  local i\n  local j\n  local k\n  local\
    \ v\n  local result\n  result=\"false\"\n  for ((i=0;i<$len;i++)); do\n    for\
    \ ((j=0;j<$len;j++)); do\n      if [[ $i -eq $j ]]; then\n        continue\n \
    \     fi\n      if [[ $i -eq 0 ]]; then\n        if [[ $lower == $upper ]]; then\n\
    \          result=\"true\"\n          break\n        fi\n      else\n        if\
    \ [[ $lower == $upper ]]; then\n          result=\"true\"\n          break\n \
    \       fi\n      fi\n      if [[ $j -eq 0 ]]; then\n        if [[ $lower == $upper\
    \ ]]; then\n          result=\"true\"\n          break\n        fi\n      else\n\
    \        if [[ $lower == $upper ]]; then\n          result=\"true\"\n        \
    \  break\n        fi\n      fi\n    done\n  done\n  echo $result", "    local\
    \ csv_lines=$(echo $1 | sed 's/,/ /g')\n    local keys=$(echo $csv_lines | cut\
    \ -d ',' -f 1)\n    local values=$(echo $csv_lines | cut -d ',' -f 2)\n    local\
    \ lowercase_keys=$(echo $keys | tr '[:upper:]' '[:lower:]')\n    local uppercase_keys=$(echo\
    \ $keys | tr '[:lower:]' '[:upper:]')\n    local lowercase_values=$(echo $values\
    \ | tr '[:upper:]' '[:lower:]')\n    local uppercase_values=$(echo $values | tr\
    \ '[:lower:]' '[:upper:]')\n    local all_keys_are_lower=$(echo $lowercase_keys\
    \ | wc -l)\n    local all_keys_are_upper=$(echo $uppercase_keys | wc -l)\n   \
    \ local all_values_are_lower=$(echo $lowercase_values | wc -l)\n    local all_values_are_upper=$(echo\
    \ $uppercase_values | wc -l)\n    local all_keys_are_equal=$(echo $lowercase_keys\
    \ | sort | uniq | wc -l)\n    local all_values_are_equal=$(echo $lowercase_values\
    \ | sort | uniq | wc -l)\n    local all_keys_are_different=$(echo $lowercase_keys\
    \ | sort | uniq | wc -l)\n    local all_values_are_different=$(echo $lowercase_values\
    \ | sort | uniq | wc -l)\n    local all_keys_are_different_or_equal=$(echo $lowercase_keys\
    \ | sort | uniq | wc -l)\n    local all_values_are_different_or_equal=$(echo $lowercase_values\
    \ | sort | uniq | wc -l)\n    local all_keys_are_different_or_equal_or_empty=$(echo\
    \ $lowercase_keys | sort | uniq | wc -l)\n    local all_values_are_different_or_equal_or_empty=$(echo\
    \ $lowercase_values | sort | uniq | wc -l)\n    local all_keys_are_different_or_equal_or_empty_or_empty=$(echo\
    \ $lowercase_keys | sort | uniq | wc -l)\n    local all_values_are_different_or_equal_or_empty_or_empty=$(echo\
    \ $lowercase_values | sort | uniq | wc -l)\n    local all_keys_are_different_or_equal_or_empty_or_empty_or_empty=$(echo\
    \ $lowercase_keys | sort | uniq | wc -l)\n    local all_values_are_different_or_equal_or_empty_or_empty_or_empty=$(echo\
    \ $lowercase_values | sort | uniq | wc -l)\n    local all_keys_are_different_or_equal_or_empty_or_",
  "    local csv_line=\"$1\"\n    local key_col=\"$2\"\n    local value_col=\"$3\"\
    \n    local key_col_value=\"$4\"\n    local value_col_value=\"$5\"\n    local\
    \ key_col_lower=\"$6\"\n    local value_col_lower=\"$7\"\n    local key_col_upper=\"\
    $8\"\n    local value_col_upper=\"$9\"\n    local key_col_lower_in=\"$10\"\n \
    \   local value_col_lower_in=\"$11\"\n    local key_col_upper_in=\"$12\"\n   \
    \ local value_col_upper_in=\"$13\"\n    local key_col_lower_out=\"$14\"\n    local\
    \ value_col_lower_out=\"$15\"\n    local key_col_upper_out=\"$16\"\n    local\
    \ value_col_upper_out=\"$17\"\n    local key_col_lower_out_in=\"$18\"\n    local\
    \ value_col_lower_out_in=\"$19\"\n    local key_col_upper_out_in=\"$20\"\n   \
    \ local value_col_upper_out_in=\"$21\"\n    local key_col_lower_out_out=\"$22\"\
    \n    local value_col_lower_out_out=\"$23\"\n    local key_col_upper_out_out=\"\
    $24\"\n    local value_col_upper_out_out=\"$25\"\n    local key_col_lower_out_out_in=\"\
    $26\"\n    local value_col_lower_out_out_in=\"$27\"\n    local key_col_upper_out_out_in=\"\
    $28\"\n    local value_col_upper_out_out_in=\"$29\"\n    local key_col_lower_out_out_out=\"\
    $30\"\n    local value_col_lower_out_out_out=\"$31\"\n    local key_col_upper_out_out_out=\"\
    $32\"\n    local value_col_upper_out_out_out=\"$33\"\n    local key_col_lower_out_out_out_in=\"\
    $34\"\n    local value_col_lower_out_out_out_in=\"$35\"\n    local key_col_upper_out_out_out_in=\"\
    $36\"\n    local value_col_upper_out_out_out_in=\"$37\"\n    local key_col_lower_out_out_out_out=\"\
    $38\"\n    local value_col_lower_out_out_out_out=\"$39\"\n    local key_col_upper_out_out_out_out=\"\
    $40\"\n    local value_col_upper_out_out_out_out=\"$41\"\n    local key_col_lower_out_out_out_out_in=\"\
    $42\"\n    local value_col_lower_out_out_out_out_in=\"$43\"\n    local key_col_upper_out_out_out_out_in=\"\
    $44\"\n    local value_col_upper_out_out_out_out_in=\"$45\"\n    local key_col_lower_out_out_out_out_out=\"\
    $46\"\n    local value_", "    local csv=$1\n    local keys=$(echo $csv | awk\
    \ -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n  \
    \  local lower=0\n    local upper=0\n    local result=0\n    for k in $keys; do\n\
    \        lower=$(echo $k | awk '{print tolower($0)}')\n        upper=$(echo $k\
    \ | awk '{print toupper($0)}')\n        if [ \"$lower\" == \"$k\" ] || [ \"$upper\"\
    \ == \"$k\" ]; then\n            result=1\n        fi\n    done\n    if [ \"$result\"\
    \ -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n    local lower\n    local upper\n    lower=$(echo\
    \ $keys | awk -F, '{print tolower($0)}')\n    upper=$(echo $keys | awk -F, '{print\
    \ toupper($0)}')\n    lower=${lower//,/ }\n    upper=${upper//,/ }\n    if [ -z\
    \ \"$keys\" ]; then\n        echo \"$csv is empty\"\n        false\n    elif [\
    \ -z \"$values\" ]; then\n        echo \"$csv is empty\"\n        false\n    elif\
    \ [ \"$lower\" != \"$upper\" ]; then\n        echo \"$csv has keys that are not\
    \ strings in lower or upper case\"\n        false\n    else\n        true\n  \
    \  fi", "    local csv_line=$1\n    local csv_line_keys=$(echo $csv_line | awk\
    \ -F, '{print $1}')\n    local csv_line_values=$(echo $csv_line | awk -F, '{print\
    \ $2}')\n    local csv_line_lower=$(echo $csv_line_keys | awk '{print tolower($0)}')\n\
    \    local csv_line_upper=$(echo $csv_line_keys | awk '{print toupper($0)}')\n\
    \    local csv_line_count=$(echo $csv_line_keys | wc -w)\n    local csv_line_all_lower=$(echo\
    \ $csv_line_values | awk '{print tolower($0)}')\n    local csv_line_all_upper=$(echo\
    \ $csv_line_values | awk '{print toupper($0)}')\n    local csv_line_all_count=$(echo\
    \ $csv_line_values | wc -w)\n    local csv_line_all_lower_in=$(echo $csv_line_all_lower\
    \ | awk '{print tolower($0)}')\n    local csv_line_all_upper_in=$(echo $csv_line_all_upper\
    \ | awk '{print toupper($0)}')\n    local csv_line_all_count_in=$(echo $csv_line_all_count\
    \ | wc -w)\n    local csv_line_all_lower_in_all=$(echo $csv_line_all_lower_in)\n\
    \    local csv_line_all_upper_in_all=$(echo $csv_line_all_upper_in)\n    local\
    \ csv_line_all_count_in_all=$(echo $csv_line_all_count_in)\n    local csv_line_all_lower_in_all_lower=$(echo\
    \ $csv_line_all_lower_in_all | awk '{print tolower($0)}')\n    local csv_line_all_lower_in_all_upper=$(echo\
    \ $csv_line_all_lower_in_all | awk '{print toupper($0)}')\n    local csv_line_all_upper_in_all_lower=$(echo\
    \ $csv_line_all_upper_in_all | awk '{print tolower($0)}')\n    local csv_line_all_upper_in_all_upper=$(echo\
    \ $csv_line_all_upper_in_all | awk '{print toupper($0)}')\n    local csv_line_all_count_in_all_lower=$(echo\
    \ $csv_line_all_count_in_all | wc -w)\n    local csv_line_all_count_in_all_upper=$(echo\
    \ $csv_line_all_count_in_all | wc -w)\n    local csv_line_all_count_in_all_lower_in=$(echo\
    \ $csv_line_all_count_in_all_lower | awk '{print tolower($0)}')\n    local csv_line_all_count_in_all_upper_in=$(echo\
    \ $csv_line_all_count_in_all_upper | awk '{print toupper($0)}')\n    local csv_line_all_count_in_all_lower_in_",
  "  local csv=$1\n  local keys=$2\n  local lower=${3:-true}\n  local upper=${4:-true}\n\
    \  local count=0\n  local key\n  local value\n  local lower\n  local upper\n \
    \ local key\n  local value\n  local lower\n  local upper\n  local key\n  local\
    \ value\n  local lower\n  local upper\n  local key\n  local value\n  local lower\n\
    \  local upper\n  local key\n  local value\n  local lower\n  local upper\n  local\
    \ key\n  local value\n  local lower\n  local upper\n  local key\n  local value\n\
    \  local lower\n  local upper\n  local key\n  local value\n  local lower\n  local\
    \ upper\n  local key\n  local value\n  local lower\n  local upper\n  local key\n\
    \  local value\n  local lower\n  local upper\n  local key\n  local value\n  local\
    \ lower\n  local upper\n  local key\n  local value\n  local lower\n  local upper\n\
    \  local key\n  local value\n  local lower\n  local upper\n  local key\n  local\
    \ value\n  local lower\n  local upper\n  local key\n  local value\n  local lower\n\
    \  local upper\n  local key\n  local value\n  local lower\n  local upper\n  local\
    \ key\n  local value\n  local lower\n  local upper\n  local key\n  local value\n\
    \  local lower\n  local upper\n  local key\n  local value\n  local lower\n  local\
    \ upper\n  local key\n  local value\n  local lower\n  local upper\n  local key\n\
    \  local value\n  local lower\n  local upper\n  local key\n  local value\n  local\
    \ lower\n  local upper\n  local key\n  local value\n  local lower\n  local upper\n\
    \  local key\n  local value\n  local lower\n  local upper\n  local key\n  local\
    \ value\n  local lower\n  local upper\n  local key\n  local value\n  local lower\n\
    \  local upper\n  local key\n  local value\n  local lower\n  local upper\n  local\
    \ key\n  local value\n  local lower\n  local upper\n  local key\n  local value\n\
    \  local lower\n  local upper\n  local key\n  local value\n  local lower\n", " \
    \   local key\n    local value\n    local count\n    local lower\n    local upper\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n", "    local csv_line=$1\n    local\
    \ csv_line_keys=$(echo $csv_line | cut -d',' -f1)\n    local csv_line_values=$(echo\
    \ $csv_line | cut -d',' -f2)\n    local csv_line_lower=$(echo $csv_line_keys |\
    \ tr '[:upper:]' '[:lower:]')\n    local csv_line_upper=$(echo $csv_line_keys\
    \ | tr '[:lower:]' '[:upper:]')\n    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n\
    \    local csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    local csv_line_upper_index=0\n    local csv_line_key_count=0\n    local csv_line_value_count=0\n\
    \    local csv_line_lower_index=0\n    local csv_line_upper_index=0\n    local\
    \ csv_line_key_count=0\n    local csv_line_value_count=0\n    local csv_line_lower_index=0\n\
    \    ", "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n", "    local csv=$1\n\
    \    local key\n    local value\n    local found\n    local lower\n    local upper\n\
    \    local found\n    lower=$(echo $csv | awk -F, '{print $1}')\n    upper=$(echo\
    \ $csv | awk -F, '{print $2}')\n    found=$(echo $lower | tr '[:upper:]' '[:lower:]')\n\
    \    found=$(echo $upper | tr '[:upper:]' '[:lower:]')\n    if [ -z \"$found\"\
    \ ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", " \
    \   local csv_lines=$(cat $1)\n    local keys=$(echo $csv_lines | awk -F, '{print\
    \ $1}')\n    local vals=$(echo $csv_lines | awk -F, '{print $2}')\n    local lower=$(echo\
    \ $keys | awk '{print tolower($0)}')\n    local upper=$(echo $keys | awk '{print\
    \ toupper($0)}')\n    local lower_in=$(echo $lower)\n    local upper_in=$(echo\
    \ $upper)\n    local lower_in_all=$(echo $lower_in)\n    local upper_in_all=$(echo\
    \ $upper_in)\n    local lower_in_all_len=$(echo $lower_in_all | wc -w)\n    local\
    \ upper_in_all_len=$(echo $upper_in_all | wc -w)\n    local lower_in_all_len_equal=$(echo\
    \ $lower_in_all_len | bc)\n    local upper_in_all_len_equal=$(echo $upper_in_all_len\
    \ | bc)\n    local lower_in_all_len_greater_equal=$(echo $lower_in_all_len | bc\
    \ -l)\n    local upper_in_all_len_greater_equal=$(echo $upper_in_all_len | bc\
    \ -l)\n    local lower_in_all_len_less_equal=$(echo $lower_in_all_len | bc -u)\n\
    \    local upper_in_all_len_less_equal=$(echo $upper_in_all_len | bc -u)\n   \
    \ local lower_in_all_len_equal=$(echo $lower_in_all_len | bc)\n    local upper_in_all_len_equal=$(echo\
    \ $upper_in_all_len | bc)\n    local lower_in_all_len_greater_equal=$(echo $lower_in_all_len\
    \ | bc -l)\n    local upper_in_all_len_greater_equal=$(echo $upper_in_all_len\
    \ | bc -l)\n    local lower_in_all_len_less_equal=$(echo $lower_in_all_len | bc\
    \ -u)\n    local upper_in_all_len_less_equal=$(echo $upper_in_all_len | bc -u)\n\
    \    local lower_in_all_len_equal=$(echo $lower_in_all_len | bc)\n    local upper_in_all_len_equal=$(echo\
    \ $upper_in_all_len | bc)\n    local lower_in_all_len_greater_equal=$(echo $lower_in_all_len\
    \ | bc -l)\n    local upper_in_all_len_greater_equal=$(echo $upper_in_all_len\
    \ | bc -l)\n    local lower_in_all_len_less_equal=$(echo $lower_in_all_len | bc\
    \ -u)\n    local upper_in_all_len_less_equal=$(echo $upper_in_all_len | bc -u)\n\
    \    local lower_in_all_len_equal=$(echo $", "    local csv_lines=$1\n    local\
    \ keys=$(echo $csv_lines | cut -d, -f1)\n    local values=$(echo $csv_lines |\
    \ cut -d, -f2)\n    local lowercase_keys=$(echo $keys | tr [a-z] [A-Z])\n    local\
    \ uppercase_keys=$(echo $keys | tr [A-Z] [a-z])\n    local lowercase_values=$(echo\
    \ $values | tr [a-z] [A-Z])\n    local uppercase_values=$(echo $values | tr [A-Z]\
    \ [a-z])\n    local all_lowercase_keys=$(echo $lowercase_keys | tr [A-Z] [a-z])\n\
    \    local all_uppercase_keys=$(echo $uppercase_keys | tr [A-Z] [a-z])\n    local\
    \ all_lowercase_values=$(echo $lowercase_values | tr [A-Z] [a-z])\n    local all_uppercase_values=$(echo\
    \ $uppercase_values | tr [A-Z] [a-z])\n    local all_keys=$(echo $all_lowercase_keys\
    \ $all_uppercase_keys)\n    local all_values=$(echo $all_lowercase_values $all_uppercase_values)\n\
    \    local all_keys_present=$(echo $all_keys | tr [A-Z] [a-z])\n    local all_values_present=$(echo\
    \ $all_values | tr [A-Z] [a-z])\n    local all_keys_present=$(echo $all_keys |\
    \ tr [A-Z] [a-z])\n    local all_values_present=$(echo $all_values | tr [A-Z]\
    \ [a-z])\n    local all_keys_present=$(echo $all_keys | tr [A-Z] [a-z])\n    local\
    \ all_values_present=$(echo $all_values | tr [A-Z] [a-z])\n    local all_keys_present=$(echo\
    \ $all_keys | tr [A-Z] [a-z])\n    local all_values_present=$(echo $all_values\
    \ | tr [A-Z] [a-z])\n    local all_keys_present=$(echo $all_keys | tr [A-Z] [a-z])\n\
    \    local all_values_present=$(echo $all_values | tr [A-Z] [a-z])\n    local\
    \ all_keys_present=$(echo $all_keys | tr [A-Z] [a-z])\n    local all_values_present=$(echo\
    \ $all_values | tr [A-Z] [a-z])\n    local all_keys_present=$(echo $all_keys |\
    \ tr [A-Z] [a-z])\n    local all_values_present=$(echo $all_values | tr [A-Z]\
    \ [a-z])\n    local all_keys_present=$(echo $all_keys | tr [A-Z] [a-z])\n    local\
    \ all_values_present=$(echo $all_values | tr [A-Z] [a-z])\n    local all_keys_present=$(echo\
    \ $all_keys | tr [A-Z] [a-z])\n    local all_values_present=$(echo $all_values\
    \ | tr [A-Z] [a-z])\n    local all_keys_present=$(echo $all_keys | tr [A-Z] [",
  "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed '", "    local csv=$1\n    local keys=$2\n    local lower=${3:-true}\n \
    \   local upper=${4:-true}\n    local count=0\n    local result=true\n    local\
    \ line\n    local key\n    local value\n    IFS=,\n    for line; do\n        IFS=,\n\
    \        key=$(echo $line | cut -d',' -f1)\n        value=$(echo $line | cut -d','\
    \ -f2)\n        if [ \"$lower\" == \"true\" ]; then\n            key=$(echo $key\
    \ | tr '[:upper:]' '[:lower:]')\n        fi\n        if [ \"$upper\" == \"true\"\
    \ ]; then\n            key=$(echo $key | tr '[:lower:]' '[:upper:]')\n       \
    \ fi\n        if [ \"$keys\" == \"$key\" ]; then\n            count=$((count+1))\n\
    \        else\n            result=false\n        fi\n    done\n    if [ \"$count\"\
    \ == \"$keys\" ]; then\n        result=true\n    fi\n    echo \"$result\"", " \
    \   local csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local\
    \ values=$(echo $csv | awk -F, '{print $2}')\n    local lower=0\n    local upper=0\n\
    \    local ok=1\n    for (( i=0; i<${#keys[@]}; i++ )); do\n        lower=$(echo\
    \ $lower | awk -F, '{print $1}')\n        upper=$(echo $upper | awk -F, '{print\
    \ $1}')\n        if [[ ${keys[$i]} == ${values[$i]} ]]; then\n            lower=$((\
    \ $lower + 1 ))\n            upper=$(( $upper + 1 ))\n        else\n         \
    \   ok=0\n        fi\n    done\n    if [[ $ok == 1 ]]; then\n        if [[ $lower\
    \ == $upper ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi", "    local\
    \ csv_line=$1\n    local csv_line_split=(${csv_line//,/ })\n    local csv_line_count=$((${#csv_line_split[@]}\
    \ / 2))\n    local csv_line_first_key=${csv_line_split[0]}\n    local csv_line_second_key=${csv_line_split[1]}\n\
    \    local csv_line_first_key_upper=$(echo \"${csv_line_first_key}\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_line_second_key_upper=$(echo \"${csv_line_second_key}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_lower=$(echo \"\
    ${csv_line_first_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_second_key_lower=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_first_key_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_empty=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_empty=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_empty=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_empty=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_empty=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_empty=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_empty=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_empty=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_",
  "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(", "    local csv=$1\n\
    \    local keys=$(echo $csv | cut -d',' -f1)\n    local values=$(echo $csv | cut\
    \ -d',' -f2)\n    local lower=false\n    local upper=false\n    local fail=false\n\
    \    local fail_keys=()\n    local fail_values=()\n    local fail_keys_upper=()\n\
    \    local fail_values_upper=()\n    local fail_keys_lower=()\n    local fail_values_lower=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n",
  "    local csv_line=$1\n    local csv_line_split=(${csv_line//,/ })\n    local csv_line_split_len=${#csv_line_split[@]}\n\
    \    local csv_line_split_len2=$((csv_line_split_len-1))\n    local csv_line_split_len3=$((csv_line_split_len-csv_line_split_len2))\n\
    \    local csv_line_split_len4=$((csv_line_split_len-csv_line_split_len3))\n \
    \   local csv_line_split_len5=$((csv_line_split_len-csv_line_split_len4))\n  \
    \  local csv_line_split_len6=$((csv_line_split_len-csv_line_split_len5))\n   \
    \ local csv_line_split_len7=$((csv_line_split_len-csv_line_split_len6))\n    local\
    \ csv_line_split_len8=$((csv_line_split_len-csv_line_split_len7))\n    local csv_line_split_len9=$((csv_line_split_len-csv_line_split_len8))\n\
    \    local csv_line_split_len10=$((csv_line_split_len-csv_line_split_len9))\n\
    \    local csv_line_split_len11=$((csv_line_split_len-csv_line_split_len10))\n\
    \    local csv_line_split_len12=$((csv_line_split_len-csv_line_split_len11))\n\
    \    local csv_line_split_len13=$((csv_line_split_len-csv_line_split_len12))\n\
    \    local csv_line_split_len14=$((csv_line_split_len-csv_line_split_len13))\n\
    \    local csv_line_split_len15=$((csv_line_split_len-csv_line_split_len14))\n\
    \    local csv_line_split_len16=$((csv_line_split_len-csv_line_split_len15))\n\
    \    local csv_line_split_len17=$((csv_line_split_len-csv_line_split_len16))\n\
    \    local csv_line_split_len18=$((csv_line_split_len-csv_line_split_len17))\n\
    \    local csv_line_split_len19=$((csv_line_split_len-csv_line_split_len18))\n\
    \    local csv_line_split_len20=$((csv_line_split_len-csv_line_split_len19))\n\
    \    local csv_line_split_len21=$((csv_line_split_len-csv_line_split_len20))\n\
    \    local csv_line_split_len22=$((csv_line_split_len-csv_line_split_len21))\n\
    \    local csv_line_split_len23=$((csv_line_split_len-csv_line_split_len22))\n\
    \    local csv_line_split_len24=$((csv_line_split_len-csv_line_split_len23))\n\
    \    local csv_line_split_len25=$((csv_", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\
    \"/g' | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g'\
    \ | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g'\
    \ | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed\
    \ 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/\
    \ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g'\
    \ | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed\
    \ 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\
    \"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g'\
    \ | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed\
    \ 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\
    \"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' |\
    \ sed 's/^/\\\"/g' | sed 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed\
    \ 's/$/\\\"/g' | sed 's/,/ /g' | sed 's/^/\\\"/g' | sed '", "  local csv_lines=$1\n\
    \  local keys=$2\n  local upper=false\n  local lower=false\n  local found=false\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local num_keys=${#keys[@]}\n\
    \  local num_lines=${#csv_lines[@]}\n  local num_cols=${#keys[*]}\n  local num_rows=0\n\
    \  local num_chars=0\n  local num_chars_upper=0\n  local num_chars_lower=0\n \
    \ local num_chars_total=0\n  local num_chars_upper_total=0\n  local num_chars_lower_total=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n\
    \  local num_chars_total_upper=0\n  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n\
    \  local num_chars_total_lower=0\n  local num_chars_total_upper=0\n  ", "  local\
    \ csv=$1\n  local keys=$(echo $csv | awk -F, '{print $1}')\n  local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n  local lower\n  local upper\n  lower=$(echo $keys\
    \ | awk '{print tolower($0)}')\n  upper=$(echo $keys | awk '{print toupper($0)}')\n\
    \  if [ -z \"$keys\" ]; then\n    echo \"$csv is empty\"\n    return 0\n  fi\n\
    \  if [ -z \"$values\" ]; then\n    echo \"$csv is empty\"\n    return 0\n  fi\n\
    \  for i in $lower; do\n    if [ -z \"$values\" ]; then\n      echo \"$csv is\
    \ empty\"\n      return 0\n    fi\n    if [[ $i != \"A\" ]]; then\n      if [[\
    \ $i != \"a\" ]]; then\n        echo \"$i not lower case\"\n        return 0\n\
    \      fi\n    fi\n  done\n  for i in $upper; do\n    if [ -z \"$values\" ]; then\n\
    \      echo \"$csv is empty\"\n      return 0\n    fi\n    if [[ $i != \"A\" ]];\
    \ then\n      if [[ $i != \"a\" ]]; then\n        echo \"$i not upper case\"\n\
    \        return 0\n      fi\n    fi\n  done\n  return 1", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=0\n    local upper=0\n    local ok=1\n\
    \    local key\n    local value\n    local i\n    \n    for (( i=0; i<${#keys};\
    \ i++ )); do\n\tkey=${keys[i]}\n\tvalue=${values[i]}\n\tif [[ $key =~ ^[[:lower:]]+$\
    \ ]]; then\n\t    lower=$((lower + 1))\n\telse\n\t    upper=$((upper + 1))\n\t\
    fi\n    done\n    \n    if [[ $lower -eq ${#keys} ]]; then\n\tok=0\n    elif [[\
    \ $upper -eq ${#keys} ]]; then\n\tok=0\n    fi\n    \n    if [[ $ok -eq 0 ]];\
    \ then\n\techo \"false\"\n    else\n\techo \"true\"\n    fi", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower\n    local upper\n    lower=$(echo\
    \ $keys | awk -F, '{print tolower($0)}')\n    upper=$(echo $keys | awk -F, '{print\
    \ toupper($0)}')\n    if [ -z \"$keys\" ]\n    then\n        echo \"$csv is empty\"\
    \n        false\n    else\n        echo \"$lower == $upper ? $lower : $upper\"\
    \n        if [ \"$lower\" == \"$upper\" ]\n        then\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"\n      \
    \      echo \"$lower == $upper ? $lower : $upper\"\n            echo \"$lower\
    \ == $upper ? $lower : $upper\"\n            echo \"$lower == $upper ? $lower\
    \ : $upper\"\n            echo \"$lower == $upper ? $lower : $upper\"", "    local\
    \ csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n", "    local csv_lines=$1\n    local keys=$2\n    local key_count=0\n\
    \    local key_count2=0\n    local key_count3=0\n    local key_count4=0\n    local\
    \ key_count5=0\n    local key_count6=0\n    local key_count7=0\n    local key_count8=0\n\
    \    local key_count9=0\n    local key_count10=0\n    local key_count11=0\n  \
    \  local key_count12=0\n    local key_count13=0\n    local key_count14=0\n   \
    \ local key_count15=0\n    local key_count16=0\n    local key_count17=0\n    local\
    \ key_count18=0\n    local key_count19=0\n    local key_count20=0\n    local key_count21=0\n\
    \    local key_count22=0\n    local key_count23=0\n    local key_count24=0\n \
    \   local key_count25=0\n    local key_count26=0\n    local key_count27=0\n  \
    \  local key_count28=0\n    local key_count29=0\n    local key_count30=0\n   \
    \ local key_count31=0\n    local key_count32=0\n    local key_count33=0\n    local\
    \ key_count34=0\n    local key_count35=0\n    local key_count36=0\n    local key_count37=0\n\
    \    local key_count38=0\n    local key_count39=0\n    local key_count40=0\n \
    \   local key_count41=0\n    local key_count42=0\n    local key_count43=0\n  \
    \  local key_count44=0\n    local key_count45=0\n    local key_count46=0\n   \
    \ local key_count47=0\n    local key_count48=0\n    local key_count49=0\n    local\
    \ key_count50=0\n    local key_count51=0\n    local key_count52=0\n    local key_count53=0\n\
    \    local key_count54=0\n    local key_count55=0\n    local key_count56=0\n \
    \   local key_count57=0\n    local key_count58=0\n    local key_count59=0\n  \
    \  local key_count60=0\n    local key_count61=0\n    local key_count62=0\n   \
    \ local key_count63=0\n    local key_count64=0\n    local key_count65=0\n    local\
    \ key_count66=0\n    local key_count67=0\n    local key_count68=0\n    local key_count69=0\n\
    \    local key_count70=0\n    local key_count71=0\n    local ", "    local csv_line=$1\n\
    \    local csv_line_keys=$2\n    local csv_line_values=$3\n    local csv_line_count=$((${#csv_line_keys}+${#csv_line_values}))\n\
    \    local csv_line_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n  \
    \  local csv_line_lower=$((${#csv_line_keys}*${#csv_line_values}))\n    local\
    \ csv_line_upper=$((${#csv_line_keys}*${#csv_line_values}))\n    local csv_line_chars=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_chars=$((${#csv_line_keys}*${#csv_line_values}))\n \
    \   local csv_line_upper_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_lower_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower=$((${#csv_line_keys}*${#csv_line_values}))\n \
    \   local csv_line_upper_lower=$((${#csv_line_keys}*${#csv_line_values}))\n  \
    \  local csv_line_upper_lower_chars=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_lower_lower_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower_chars=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_lower_lower_lower_char_count=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower_lower=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_lower_lower=$((${#csv_line_keys}*${#csv_line_values}))\n\
    \    local csv_line_upper_lower_", "    local csv_lines=$(cat $1)\n    local key_col=0\n\
    \    local val_col=1\n    local key_val\n    local key_val_arr\n    local key_val_arr_size\n\
    \    local key_val_arr_count\n    local key_val_arr_i\n    local key_val_arr_j\n\
    \    local key_val_arr_k\n    local key_val_arr_v\n    local key_val_arr_k_size\n\
    \    local key_val_arr_v_size\n    local key_val_arr_k_count\n    local key_val_arr_v_count\n\
    \    local key_val_arr_k_i\n    local key_val_arr_v_i\n    local key_val_arr_k_j\n\
    \    local key_val_arr_v_j\n    local key_val_arr_k_k\n    local key_val_arr_v_k\n\
    \    local key_val_arr_k_l\n    local key_val_arr_v_l\n    local key_val_arr_k_m\n\
    \    local key_val_arr_v_m\n    local key_val_arr_k_n\n    local key_val_arr_v_n\n\
    \    local key_val_arr_k_o\n    local key_val_arr_v_o\n    local key_val_arr_k_p\n\
    \    local key_val_arr_v_p\n    local key_val_arr_k_q\n    local key_val_arr_v_q\n\
    \    local key_val_arr_k_r\n    local key_val_arr_v_r\n    local key_val_arr_k_s\n\
    \    local key_val_arr_v_s\n    local key_val_arr_k_t\n    local key_val_arr_v_t\n\
    \    local key_val_arr_k_u\n    local key_val_arr_v_u\n    local key_val_arr_k_v\n\
    \    local key_val_arr_v_v\n    local key_val_arr_k_w\n    local key_val_arr_v_w\n\
    \    local key_val_arr_k_x\n    local key_val_arr_v_x\n    local key_val_arr_k_y\n\
    \    local key_val_arr_v_y\n    local key_val_arr_k_z\n    local key_val_arr_v_z\n\
    \    local key_val_arr_k_a\n    local key_val_arr_v_a\n    local key_val_arr_k_b\n\
    \    local key_val_arr_v_b\n    local key_val_arr_k_c\n    local key_val_arr_v_c\n\
    \    local key_val_arr_k_d\n    local key_val_arr_v_d\n    local key_val_arr_k_e\n\
    \    local key_val_arr_v_e\n    local key_val_arr_k_f\n    local key_val_arr_v_f\n\
    \    local key_val_arr_k_g\n    local key_val_arr_v_g\n    local key_val_", " \
    \   local csv_lines=$1\n    local keys=$2\n    local upper=false\n    local lower=false\n\
    \    local ok=false\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n   \
    \ local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local\
    \ G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n\
    \    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n \
    \   local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n  \
    \  local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n   \
    \ local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local\
    \ G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n\
    \    local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n \
    \   local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n  \
    \  local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local ", "    local\
    \ csv_line=\"$1\"\n    local csv_line_split=(${csv_line//,/ })\n    local csv_line_count=\"\
    ${#csv_line_split[@]}\"\n    local csv_line_count_lower=\"${csv_line_count}\"\n\
    \    local csv_line_count_upper=\"${csv_line_count}\"\n    local csv_line_count_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_equal=\"${csv_line_count}\"\n\
    \    local csv_line_count_not_in_lower=\"${csv_line_count}\"\n    local csv_line_count_not_in_upper=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both=\"${csv_line_count}\"\
    \n    local csv_line_count_not_in_both_lower=\"${csv_line_count}\"\n    local\
    \ csv_line_count_not_in_both_upper=\"${csv_line_count}\"\n    local csv_line_count_not_in_both_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_equal=\"${csv_line_count}\"\
    \n    local csv_line_count_not_in_both_not_in_lower=\"${csv_line_count}\"\n  \
    \  local csv_line_count_not_in_both_not_in_upper=\"${csv_line_count}\"\n    local\
    \ csv_line_count_not_in_both_not_in_both=\"${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_lower=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_upper=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_lower=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_upper=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both_lower=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both_upper=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both_not_equal=\"\
    ${csv_line_count}\"\n    local csv_line_count_not_in_both_not_in_both_not_in_both_not_in_lower=\"\
    ${csv_line_", "    local csv=$1\n    local keys=$(echo $csv | awk -F, '{print\
    \ $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n    local lower=false\n\
    \    local upper=false\n    local found=false\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local found\n    for (( i=0; i<${#keys};\
    \ i++ )); do\n        key=${keys[i]}\n        value=${values[i]}\n        lower=$(echo\
    \ $key | awk '{print tolower($0)}')\n        upper=$(echo $key | awk '{print toupper($0)}')\n\
    \        if [[ $lower == $key ]]; then\n            lower=true\n        fi\n \
    \       if [[ $upper == $key ]]; then\n            upper=true\n        fi\n  \
    \      if [[ $lower == $upper ]]; then\n            found=true\n        fi\n \
    \   done\n    if [[ $found == false ]]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local csv=$1\n    local keys=$(echo $csv\
    \ | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local lowerValues=$(echo $values | awk\
    \ '{print tolower($0)}')\n    local upperValues=$(echo $values | awk '{print toupper($0)}')\n\
    \    if [ -z \"$keys\" ]; then\n        echo \"$csv is empty\"\n        return\
    \ false\n    fi\n    if [ \"$lower\" != \"$lowerValues\" ] || [ \"$upper\" !=\
    \ \"$upperValues\" ]; then\n        echo \"$csv has non-string keys or values\"\
    \n        return false\n    fi\n    echo \"$csv is OK\"\n    return true", " \
    \   local csv_line\n    local key\n    local value\n    local result\n    local\
    \ keys_in_lower\n    local keys_in_upper\n    local keys_in_both\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_both\n    local keys_in_both_both_lower\n\
    \    local keys_in_both_both_upper\n    local keys_in_both_both_both\n    local\
    \ keys_in_both_both_both_lower\n    local keys_in_both_both_both_upper\n    local\
    \ keys_in_both_both_both_both\n    local keys_in_both_both_both_both_lower\n \
    \   local keys_in_both_both_both_both_upper\n    local keys_in_both_both_both_both_both\n\
    \    local keys_in_both_both_both_both_both_lower\n    local keys_in_both_both_both_both_both_upper\n\
    \    local keys_in_both_both_both_both_both_both\n    local keys_in_both_both_both_both_both_both_lower\n\
    \    local keys_in_both_both_both_both_both_both_upper\n    local keys_in_both_both_both_both_both_both_both_lower\n\
    \    local keys_in_both_both_both_both_both_both_both_upper\n    local keys_in_both_both_both_both_both_both_both_both_lower\n\
    \    local keys_in_both_both_both_both_both_both_both_both_upper\n    local keys_in_both_both_both_both_both_both_both_both_both_lower\n\
    \    local keys_in_both_both_both_both_both_both_both_both_both_upper\n    local\
    \ keys_in_both_both_both_both_both_both_both_both_both_both_lower\n    local keys_in_both_both_both_both_both_both_both_both_both_both_upper\n\
    \    local keys_in_both_both_both_both_both_both_both_both_both_both_both_lower\n\
    \    local keys_in_both_both_both_both_both_both_both_both_both_both_both_upper\n\
    \    local keys_in_both_both_both_both_both_both_both_both_both", "    local keys=$(echo\
    \ \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n    local vals=$(echo \"$1\"\
    \ | sed 's/,/\\n/g' | awk -F, '{print $2}')\n    local lower\n    local upper\n\
    \    lower=$(echo \"$keys\" | sed 's/,/\\n/g' | awk -F, '{print tolower($0)}')\n\
    \    upper=$(echo \"$keys\" | sed 's/,/\\n/g' | awk -F, '{print toupper($0)}')\n\
    \    lower=${lower//[[:space:]]/}\n    upper=${upper//[[:space:]]/}\n    if [\
    \ -z \"$lower\" ] || [ -z \"$upper\" ]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local csv_line=$1\n    local csv_line_count=$((${#csv_line}\
    \ / 2))\n    local key_count=$((${#csv_line} % 2))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_count}\
    \ + 1))\n    local key_count=$((${key_count} + 1))\n    local key_count=$((${key_",
  "    local csv_line=\"$1\"\n    local csv_key=\"$2\"\n    local csv_val=\"$3\"\n\
    \    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$", "    local\
    \ csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local lowerValues=$(echo\
    \ $values | awk '{print tolower($0)}')\n    local upperValues=$(echo $values |\
    \ awk '{print toupper($0)}')\n    local lowerCount=$(echo $lowerValues | wc -l)\n\
    \    local upperCount=$(echo $upperValues | wc -l)\n    local count=$((lowerCount\
    \ + upperCount))\n    if [ $count -eq 0 ]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "  local csv=$1\n  local keys=$(echo $csv | awk\
    \ -F, '{print $1}')\n  local values=$(echo $csv | awk -F, '{print $2}')\n  local\
    \ lower=$(echo $keys | awk '{print tolower($0)}')\n  local upper=$(echo $keys\
    \ | awk '{print toupper($0)}')\n  local count=0\n  local result=false\n  for key\
    \ in $lower; do\n    if [[ $key != $upper ]]; then\n      result=true\n    fi\n\
    \  done\n  if [[ $result ]]; then\n    echo \"$csv is in lower case\"\n  else\n\
    \    echo \"$csv is in upper case\"\n  fi", "    local csv=$1\n    local key\n\
    \    local value\n    local keyIsString\n    local valueIsString\n    local result\n\
    \    local count\n    local keyIsUpper\n    local valueIsUpper\n    local keyIsLower\n\
    \    local valueIsLower\n    local keyIsNumber\n    local valueIsNumber\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n\
    \    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local\
    \ valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n\
    \    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n\
    \    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local\
    \ valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n\
    \    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n\
    \    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local\
    \ valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n\
    \    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n\
    \    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local\
    \ valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n\
    \    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n\
    \    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local\
    \ valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n\
    \    local valueIsEmpty\n    local keyIsEmpty\n    local valueIsEmpty\n    local\
    \ keyIsEmpty\n    local valueIsEmpty\n    local keyIsEmpty\n    local valueIs",
  "    local csv_line=\"$1\"\n    local csv_line_array=($csv_line)\n    local key_is_string=false\n\
    \    local key_is_upper=false\n    local key_is_lower=false\n    local key_is_empty=false\n\
    \    local key_is_number=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false\n    local key_is_empty=false\n    local key_is_empty=false\n\
    \    local key_is_empty=false", "    local csv_line=\"$1\"\n    local csv_line_count=$((${#csv_line}\
    \ / 2))\n    local csv_line_first_key=\"${csv_line:0:${csv_line_count}}\"\n  \
    \  local csv_line_second_key=\"${csv_line:${csv_line_count}:${#csv_line}}\"\n\
    \    local csv_line_first_key_upper=$(echo \"${csv_line_first_key}\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_line_second_key_upper=$(echo \"${csv_line_second_key}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_lower=$(echo \"\
    ${csv_line_first_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_second_key_lower=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_first_key_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_", "    local csv_line=$1\n    local keys=$(echo $csv_line | cut -d\
    \ ',' -f 1)\n    local values=$(echo $csv_line | cut -d ',' -f 2)\n    local lowercase_keys=$(echo\
    \ $keys | tr '[:upper:]' '[:lower:]')\n    local uppercase_keys=$(echo $keys |\
    \ tr '[:lower:]' '[:upper:]')\n    local lowercase_values=$(echo $values | tr\
    \ '[:upper:]' '[:lower:]')\n    local uppercase_values=$(echo $values | tr '[:lower:]'\
    \ '[:upper:]')\n    if [ -z \"$keys\" ]; then\n        echo \"$csv_line is empty\"\
    \n        false\n    elif [ -z \"$values\" ]; then\n        echo \"$csv_line is\
    \ empty\"\n        false\n    elif [ \"$lowercase_keys\" != \"$keys\" ] || [ \"\
    $uppercase_keys\" != \"$keys\" ] || [ \"$lowercase_values\" != \"$values\" ] ||\
    \ [ \"$uppercase_values\" != \"$values\" ]; then\n        echo \"$csv_line has\
    \ non-string keys or values\"\n        false\n    else\n        true\n    fi",
  "    local csv_line=\"$1\"\n    local csv_line_count=$((${#csv_line} / 2))\n   \
    \ local key_count=0\n    local key_string=\"\"\n    local value_string=\"\"\n\
    \    local value_count=0\n    local value_char_count=0\n    local value_chars=\"\
    \"\n    local key_char_count=0\n    local key_chars=\"\"\n    local key_char_count=0\n\
    \    local value_char_count=0\n    local value_chars=\"\"\n    local key_char_count=0\n\
    \    local key_chars=\"\"\n    local key_char_count=0\n    local value_char_count=0\n\
    \    local value_chars=\"\"\n    local key_char_count=0\n    local key_chars=\"\
    \"\n    local key_char_count=0\n    local value_char_count=0\n    local value_chars=\"\
    \"\n    local key_char_count=0\n    local key_chars=\"\"\n    local key_char_count=0\n\
    \    local value_char_count=0\n    local value_chars=\"\"\n    local key_char_count=0\n\
    \    local key_chars=\"\"\n    local key_char_count=0\n    local value_char_count=0\n\
    \    local value_chars=\"\"\n    local key_char_count=0\n    local key_chars=\"\
    \"\n    local key_char_count=0\n    local value_char_count=0\n    local value_chars=\"\
    \"\n    local key_char_count=0\n    local key_chars=\"\"\n    local key_char_count=0\n\
    \    local value_char_count=0\n    local value_chars=\"\"\n    local key_char_count=0\n\
    \    local key_chars=\"\"\n    local key_char_count=0\n    local value_char_count=0\n\
    \    local value_chars=\"\"\n    local key_char_count=0\n    local key_chars=\"\
    \"\n    local key_char_count=0\n    local value_char_count=0\n    local value_chars=\"\
    \"\n    local key_char_count=0\n    local key_chars=\"\"\n    local key_char_count=0\n\
    \    local value_char_count=0\n    local value_chars=\"\"\n    local key_char_count=0\n\
    \    local key_chars=\"\"\n    local key_char_count=0\n    local value_char_count=0\n\
    \    local value_chars=\"\"\n    local key_char_count=0\n    local key_chars=\"\
    \"\n    local key_char_count=0\n    local value_char_count=0\n    local value_chars=\"\
    \"\n    local key_char_count=0\n    local key_chars=\"\"\n    local key_char_count=0\n\
    \    local value_char_count=0\n    local value_char", "    local csv_line\n  \
    \  csv_line=$1\n    local csv_key\n    csv_key=$(echo $csv_line | cut -d',' -f1)\n\
    \    local csv_value\n    csv_value=$(echo $csv_line | cut -d',' -f2)\n    local\
    \ csv_lower\n    csv_lower=$(echo $csv_key | tr '[:upper:]' '[:lower:]')\n   \
    \ local csv_upper\n    csv_upper=$(echo $csv_key | tr '[:lower:]' '[:upper:]')\n\
    \    if [ -z \"$csv_key\" ] || [ -z \"$csv_value\" ]; then\n        echo \"false\"\
    \n    else\n        if [ \"$csv_lower\" == \"$csv_key\" ] || [ \"$csv_upper\"\
    \ == \"$csv_key\" ]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    fi", "    local csv=$1\n    local keys=$(echo\
    \ $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print\
    \ $2}')\n    local lower=false\n    local upper=false\n    local result=false\n\
    \    for (( i=0; i<${#keys[@]}; i++ )); do\n        if [[ ${keys[$i]} == *[a-z]*\
    \ ]]; then\n            lower=true\n        elif [[ ${keys[$i]} == *[A-Z]* ]];\
    \ then\n            upper=true\n        fi\n    done\n    for (( i=0; i<${#values[@]};\
    \ i++ )); do\n        if [[ ${values[$i]} == *[a-z]* ]]; then\n            lower=true\n\
    \        elif [[ ${values[$i]} == *[A-Z]* ]]; then\n            upper=true\n \
    \       fi\n    done\n    if [[ ${lower} == true && ${upper} == true ]]; then\n\
    \        result=true\n    fi\n    echo \"$result\"", "  local csv_lines=$1\n \
    \ local csv_headers=$2\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\\
    n/g')\n  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed -e 's/,/\\n/')\n\
    \  local csv_headers=$(echo $csv_headers | sed -e 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed -e 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ -e 's/#/\\n/')\n", "    local csv=$1\n    local keys=$(echo $csv | cut -d, -f1)\n\
    \    local values=$(echo $csv | cut -d, -f2)\n    local lower\n    local upper\n\
    \    lower=$(echo $keys | tr '[:upper:]' '[:lower:]')\n    upper=$(echo $keys\
    \ | tr '[:lower:]' '[:upper:]')\n    if [ -z \"$keys\" ]; then\n        echo \"\
    $csv is empty\"\n        false\n    fi\n    if [ \"$lower\" != \"$keys\" ] ||\
    \ [ \"$upper\" != \"$keys\" ]; then\n        echo \"$csv has non-string keys\"\
    \n        false\n    fi\n    if [ \"$lower\" != \"$values\" ] || [ \"$upper\"\
    \ != \"$values\" ]; then\n        echo \"$csv has non-string values\"\n      \
    \  false\n    fi\n    true", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\
    \"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\
    \"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\\
    n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\
    \"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\
    \"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\\
    n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\
    \"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\\\
    \"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\\
    n/g' | sed 's/^/\\\"/g' | sed 's/$/\\\"/g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/\\n/g' | sed ", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^", "    local\
    \ csv_lines=$1\n    local key_col=1\n    local val_col=2\n    local key_lower=\"\
    $(echo $csv_lines | awk -F, '{print $1}')\"\n    local val_lower=\"$(echo $csv_lines\
    \ | awk -F, '{print $2}')\"\n    local key_upper=\"$(echo $csv_lines | awk -F,\
    \ '{print $1}')\"\n    local val_upper=\"$(echo $csv_lines | awk -F, '{print $2}')\"\
    \n    local key_found=false\n    local val_found=false\n    local key_not_found=false\n\
    \    local val_not_found=false\n    local key_not_in_lower=false\n    local val_not_in_lower=false\n\
    \    local key_not_in_upper=false\n    local val_not_in_upper=false\n    local\
    \ key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_both=false\n\
    \    local val_not_in_both=false\n    local key_not_in_both=false\n    local val_not_in_both=false\n\
    \    local key_not_in_both=false\n    local val_not_in_both=false\n    local key_not_in_",
  "    local csv_line=\"$1\"\n    local csv_line_keys=$(echo \"$csv_line\" | cut -d\
    \ ',' -f 1)\n    local csv_line_values=$(echo \"$csv_line\" | cut -d ',' -f 2)\n\
    \    local csv_line_lower=$(echo \"$csv_line_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_upper=$(echo \"$csv_line_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_count=$(echo \"$csv_line_values\" | wc -l)\n    if [ \"$csv_line_count\"\
    \ -eq 0 ]; then\n        echo \"false\"\n    else\n        local csv_line_lower_index=0\n\
    \        local csv_line_upper_index=0\n        local csv_line_lower_index2=0\n\
    \        local csv_line_upper_index2=0\n        local csv_line_lower_index3=0\n\
    \        local csv_line_upper_index3=0\n        local csv_line_lower_index4=0\n\
    \        local csv_line_upper_index4=0\n        local csv_line_lower_index5=0\n\
    \        local csv_line_upper_index5=0\n        local csv_line_lower_index6=0\n\
    \        local csv_line_upper_index6=0\n        local csv_line_lower_index7=0\n\
    \        local csv_line_upper_index7=0\n        local csv_line_lower_index8=0\n\
    \        local csv_line_upper_index8=0\n        local csv_line_lower_index9=0\n\
    \        local csv_line_upper_index9=0\n        local csv_line_lower_index10=0\n\
    \        local csv_line_upper_index10=0\n        local csv_line_lower_index11=0\n\
    \        local csv_line_upper_index11=0\n        local csv_line_lower_index12=0\n\
    \        local csv_line_upper_index12=0\n        local csv_line_lower_index13=0\n\
    \        local csv_line_upper_index13=0\n        local csv_line_lower_index14=0\n\
    \        local csv_line_upper_index14=0\n        local csv_line_lower_index15=0\n\
    \        local csv_line_upper_index15=0\n        local csv_line_lower_index16=0\n\
    \        local csv_line_upper_index16=0\n        local csv_line_lower_index17=0\n\
    \        local csv_line_upper_index17=0\n        local csv_line_lower_index18=0\n\
    \        local csv_line_upper_index18=0\n        local csv_line_lower_index19=0\n\
    \        local csv_line_upper_index19=0\n        local csv_line_lower_index20=0\n\
    \        local csv_line_upper_index20=0\n        local csv_line_lower_index21=0\n\
    \        local csv_line_upper_index21=0\n        local csv_line_lower_index",
  "    local csv=$1\n    local keys=$(head -n 1 $csv | cut -d, -f1)\n    local values=$(head\
    \ -n 1 $csv | cut -d, -f2)\n    local lower=false\n    local upper=false\n   \
    \ local fail=false\n    local fail_keys=()\n    local fail_values=()\n    local\
    \ fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=", "    local csv=$1\n    local keys=$(echo $csv |\
    \ cut -d',' -f1)\n    local values=$(echo $csv | cut -d',' -f2)\n    local lowercase_keys=$(echo\
    \ $keys | tr [a-z] [A-Z])\n    local uppercase_keys=$(echo $keys | tr [A-Z] [a-z])\n\
    \    local lowercase_values=$(echo $values | tr [a-z] [A-Z])\n    local uppercase_values=$(echo\
    \ $values | tr [A-Z] [a-z])\n    if [ -z \"$csv\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [ -z \"$keys\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [ -z \"$values\" ]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [ -z \"$lowercase_keys\" ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [ -z \"$uppercase_keys\" ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [ -z \"$lowercase_values\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    if [ -z \"$uppercase_values\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    if [ \"$lowercase_keys\"\
    \ != \"$lowercase_values\" ]; then\n        echo \"false\"\n        return\n \
    \   fi\n    if [ \"$uppercase_keys\" != \"$uppercase_values\" ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    echo \"true\"", "    local csv_lines=$1\n\
    \    local csv_headers=$2\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\\
    n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n", " \
    \   local csv_lines=$1\n    local key_col=0\n    local val_col=1\n    local key_lower=0\n\
    \    local val_lower=1\n    local key_upper=0\n    local val_upper=1\n    local\
    \ key_found=0\n    local val_found=0\n    local key_not_found=0\n    local val_not_found=0\n\
    \    local key_not_found_lower=0\n    local val_not_found_lower=0\n    local key_not_found_upper=0\n\
    \    local val_not_found_upper=0\n    local key_not_found_both=0\n    local val_not_found_both=0\n\
    \    local key_not_found_both_lower=0\n    local val_not_found_both_lower=0\n\
    \    local key_not_found_both_upper=0\n    local val_not_found_both_upper=0\n\
    \    local key_not_found_both_both=0\n    local val_not_found_both_both=0\n  \
    \  local key_not_found_both_both_lower=0\n    local val_not_found_both_both_lower=0\n\
    \    local key_not_found_both_both_upper=0\n    local val_not_found_both_both_upper=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0\n\
    \    local key_not_found_both_both_both=0\n    local val_not_found_both_both_both=0",
  "    local csv_line=\"$1\"\n    local csv_line_count=$((${#csv_line} / 2))\n   \
    \ local csv_line_first_key=\"${csv_line:0:${#csv_line}/2}\"\n    local csv_line_second_key=\"\
    ${csv_line:${#csv_line}/2:}\"\n    local csv_line_first_key_upper=$(echo \"${csv_line_first_key}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_upper=$(echo \"\
    ${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_lower=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_second_key_lower=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_first_key_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_is_number=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_second_key_is_number=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_first_key_is_number=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_second_key_is_number=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_first_key_is_number=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_second_key_is_number=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_first_key_is_number=$(echo\
    \ \"${csv_line_first_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_second_key_is_number=$(echo\
    \ \"${csv_line_second_key}\" | tr '[:digit:]' '[:lower:]')\n    local csv_line_first_key_is_number=$(echo\
    \ \"${csv_line_", "    local csv_line\n    local key\n    local value\n    local\
    \ key_lower\n    local key_upper\n    local value_lower\n    local value_upper\n\
    \    local result\n    local count\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v", "    local csv=$1\n    local keys=$(echo $csv | awk -F, '{print\
    \ $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n    local lower=false\n\
    \    local upper=false\n    local ok=true\n    for (( i=0; i<${#keys[@]}; i++\
    \ )); do\n        lower=$(echo $keys[$i] | awk '{print tolower($0)}')\n      \
    \  upper=$(echo $keys[$i] | awk '{print toupper($0)}')\n        if [ \"$lower\"\
    \ == \"$keys[$i]\" ] || [ \"$upper\" == \"$keys[$i]\" ]; then\n            ok=false\n\
    \        fi\n    done\n    if [ \"$ok\" == \"true\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local csv_line=$1\n    local\
    \ csv_line_count=$((${#csv_line} / 2))\n    local key_count\n    local key_count2\n\
    \    local key_count3\n    local key_count4\n    local key_count5\n    local key_count6\n\
    \    local key_count7\n    local key_count8\n    local key_count9\n    local key_count10\n\
    \    local key_count11\n    local key_count12\n    local key_count13\n    local\
    \ key_count14\n    local key_count15\n    local key_count16\n    local key_count17\n\
    \    local key_count18\n    local key_count19\n    local key_count20\n    local\
    \ key_count21\n    local key_count22\n    local key_count23\n    local key_count24\n\
    \    local key_count25\n    local key_count26\n    local key_count27\n    local\
    \ key_count28\n    local key_count29\n    local key_count30\n    local key_count31\n\
    \    local key_count32\n    local key_count33\n    local key_count34\n    local\
    \ key_count35\n    local key_count36\n    local key_count37\n    local key_count38\n\
    \    local key_count39\n    local key_count40\n    local key_count41\n    local\
    \ key_count42\n    local key_count43\n    local key_count44\n    local key_count45\n\
    \    local key_count46\n    local key_count47\n    local key_count48\n    local\
    \ key_count49\n    local key_count50\n    local key_count51\n    local key_count52\n\
    \    local key_count53\n    local key_count54\n    local key_count55\n    local\
    \ key_count56\n    local key_count57\n    local key_count58\n    local key_count59\n\
    \    local key_count60\n    local key_count61\n    local key_count62\n    local\
    \ key_count63\n    local key_count64\n    local key_count65\n    local key_count66\n\
    \    local key_count67\n    local key_count68\n    local key_count69\n    local\
    \ key_count70\n    local key_count71\n    local key_count72\n    local key_count73\n\
    \    local key_count74\n    local key_count75\n    local key_count76\n    local\
    \ key_count77\n    local key_count78\n    local key_count79\n    local key_count80\n\
    \    local key_count81\n    local key_count82", "    local keys=$(echo $1 | cut\
    \ -d, -f1 )\n    local vals=$(echo $1 | cut -d, -f2 )\n    local lower=false\n\
    \    local upper=false\n    local found=false\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n    local\
    \ E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n\
    \    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local O=0\n \
    \   local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n  \
    \  local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n   \
    \ local Z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n    local\
    \ E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n\
    \    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local O=0\n \
    \   local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n  \
    \  local U=0\n    local V=0\n    local W=0\n    local X", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local vals=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local ok=1\n    local upper=0\n    local lower=0\n\
    \    local len=${#keys[@]}\n    local i=0\n    while [ $i -lt $len ]; do\n   \
    \     local key=${keys[$i]}\n        local val=${vals[$i]}\n        if [[ $key\
    \ =~ ^[A-Z]+$ ]]; then\n            ((upper=upper+1))\n        elif [[ $key =~\
    \ ^[a-z]+$ ]]; then\n            ((lower=lower+1))\n        fi\n        ((i=i+1))\n\
    \    done\n    if [[ $upper -eq 0 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local csv=$1\n    local keys=$2\n    local\
    \ lower=$3\n    local upper=$4\n    local result=false\n    local line\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local key\n    local\
    \ value\n    local key\n    local value\n    local lower\n    local upper\n  \
    \  local key\n    local value\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local key\n    local value\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local key\n    local value\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local key\n    local value\n\
    \    local key\n    local value\n    local lower\n    local upper\n    local key\n\
    \    local value\n    local key\n    local value\n    local lower\n    local upper\n\
    \    local key\n    local value\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local key\n    local value\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local key\n    local value\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local key\n    local value\n\
    \    local key\n    local value\n    local lower\n    local upper\n    local key\n\
    \    local value\n    local key\n    local value\n    local lower\n    local upper\n\
    \    local key\n    local value\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local key\n    local value\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local key\n    local value\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local key\n    local value\n\
    \    local key\n    local value\n    local lower\n    local upper\n    local key\n\
    \    local value\n    local key\n    local value\n    local lower\n    local upper\n\
    \    local key\n    local value\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local key\n    local value\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local key\n    local value\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local key\n    ", "  \
    \  local csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local\
    \ vals=$(echo $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk\
    \ -F, '{print tolower($0)}')\n    local upper=$(echo $keys | awk -F, '{print toupper($0)}')\n\
    \    local lowercount=0\n    local uppercount=0\n    local keycount=0\n    local\
    \ valcount=0\n    local result=0\n    local key\n    local val\n    local lowerkey\n\
    \    local upperkey\n    local lowerval\n    local upperval\n    local lowerkeycount\n\
    \    local upperkeycount\n    local lowervalcount\n    local uppervalcount\n \
    \   local lowerkey\n    local upperkey\n    local lowerval\n    local upperval\n\
    \    local lowerkeycount\n    local upperkeycount\n    local lowervalcount\n \
    \   local uppervalcount\n    local lowerkey\n    local upperkey\n    local lowerval\n\
    \    local upperval\n    local lowerkeycount\n    local upperkeycount\n    local\
    \ lowervalcount\n    local uppervalcount\n    local lowerkey\n    local upperkey\n\
    \    local lowerval\n    local upperval\n    local lowerkeycount\n    local upperkeycount\n\
    \    local lowervalcount\n    local uppervalcount\n    local lowerkey\n    local\
    \ upperkey\n    local lowerval\n    local upperval\n    local lowerkeycount\n\
    \    local upperkeycount\n    local lowervalcount\n    local uppervalcount\n \
    \   local lowerkey\n    local upperkey\n    local lowerval\n    local upperval\n\
    \    local lowerkeycount\n    local upperkeycount\n    local lowervalcount\n \
    \   local uppervalcount\n    local lowerkey\n    local upperkey\n    local lowerval\n\
    \    local upperval\n    local lowerkeycount\n    local upperkeycount\n    local\
    \ lowervalcount\n    local uppervalcount\n    local lowerkey\n    local upperkey\n\
    \    local lowerval\n    local upperval\n    local lowerkeycount\n    local upperkeycount\n\
    \    local lowervalcount\n    local uppervalcount\n    local lowerkey\n    local\
    \ upperkey\n    local lowerval\n    local upperval\n    local lowerkeycount\n\
    \    local upperkeycount\n    local lowervalcount\n    local uppervalcount\n \
    \   ", "    local csv=$1\n    local lower=false\n    local upper=false\n    local\
    \ key\n    local value\n    local result\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local ", "    local csv=$1\n \
    \   local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local lowerCount=$(echo\
    \ $lower | wc -w)\n    local upperCount=$(echo $upper | wc -w)\n    if [ $lowerCount\
    \ -eq 0 ]; then\n        echo \"true\"\n    else\n        if [ $lowerCount -eq\
    \ $upperCount ]; then\n            echo \"false\"\n        else\n            echo\
    \ \"true\"\n        fi\n    fi", "    local csv=$1\n    local keys=$(echo $csv\
    \ | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo $lower | wc\
    \ -w)\n    local uppercount=$(echo $upper | wc -w)\n    if [[ $lowercount == $uppercount\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local keys=$(echo \"$1\" | awk -F, '{print $1}')\n    local values=$(echo \"\
    $1\" | awk -F, '{print $2}')\n    local lower=$(echo \"$keys\" | awk '{print tolower($0)}')\n\
    \    local upper=$(echo \"$keys\" | awk '{print toupper($0)}')\n    local lowerCount=$(echo\
    \ \"$lower\" | wc -l)\n    local upperCount=$(echo \"$upper\" | wc -l)\n    if\
    \ [ \"$lowerCount\" -eq \"0\" ]; then\n        echo \"true\"\n    else\n     \
    \   echo \"false\"\n    fi", "    local csv_line=\"$1\"\n    local csv_line_split=($csv_line)\n\
    \    local csv_line_count=$((${#csv_line_split[@]} / 2))\n    local csv_line_key_count=$((${#csv_line_split[@]}\
    \ - 1))\n    local csv_line_val=\"\"\n    local csv_line_val_split=($csv_line_val)\n\
    \    local csv_line_val_count=$((${#csv_line_val_split[@]} / 2))\n    local csv_line_val_key_count=$((${#csv_line_val_split[@]}\
    \ - 1))\n    local csv_line_val_val=\"\"\n    local csv_line_val_val_split=($csv_line_val_val)\n\
    \    local csv_line_val_val_count=$((${#csv_line_val_val_split[@]} / 2))\n   \
    \ local csv_line_val_val_key_count=$((${#csv_line_val_val_split[@]} - 1))\n  \
    \  local csv_line_val_val_val=\"\"\n    local csv_line_val_val_val_split=($csv_line_val_val_val)\n\
    \    local csv_line_val_val_val_count=$((${#csv_line_val_val_val_split[@]} / 2))\n\
    \    local csv_line_val_val_val_key_count=$((${#csv_line_val_val_val_split[@]}\
    \ - 1))\n    local csv_line_val_val_val_val=\"\"\n    local csv_line_val_val_val_val_split=($csv_line_val_val_val_val)\n\
    \    local csv_line_val_val_val_val_count=$((${#csv_line_val_val_val_val_split[@]}\
    \ / 2))\n    local csv_line_val_val_val_val_key_count=$((${#csv_line_val_val_val_val_split[@]}\
    \ - 1))\n    local csv_line_val_val_val_val_val=\"\"\n    local csv_line_val_val_val_val_val_split=($csv_line_val_val_val_val_val)\n\
    \    local csv_line_val_val_val_val_val_count=$((${#csv_line_val_val_val_val_val_split[@]}\
    \ / 2))\n    local csv_line_val_val_val_val_key_count=$((${#csv_line_val_val_val_val_val_split[@]}\
    \ - 1))\n    local csv_line_val_val_val_val_val=\"\"\n    local csv_line_val_val_val_val_val_split=($csv_line_val_val_val_val_val)\n\
    \    local csv_line_val_val_val_val_val_count=$((${#csv_line_val_val_val_val_val_val_split[@]}\
    \ / 2))\n    local csv_line_val_val_val_val_val_key_count=$((${#csv_line_val_val_val_val_val_val_split[@]}\
    \ - 1))\n    local csv_line_val_val_", "  local csv_lines=$1\n  local keys=$2\n\
    \  local upper_case_keys=$3\n  local lower_case_keys=$4\n  local empty_lines=$5\n\
    \  local all_keys=$6\n  local all_keys_upper_case=$7\n  local all_keys_lower_case=$8\n\
    \  local all_keys_empty=$9\n  local all_keys_all=$10\n  local all_keys_all_upper_case=$11\n\
    \  local all_keys_all_lower_case=$12\n  local all_keys_all_empty=$13\n  local\
    \ all_keys_all_all=$14\n  local all_keys_all_all_upper_case=$15\n  local all_keys_all_all_lower_case=$16\n\
    \  local all_keys_all_all_empty=$17\n  local all_keys_all_all_all=$18\n  local\
    \ all_keys_all_all_all_upper_case=$19\n  local all_keys_all_all_all_lower_case=$20\n\
    \  local all_keys_all_all_all_empty=$21\n  local all_keys_all_all_all_all=$22\n\
    \  local all_keys_all_all_all_all_upper_case=$23\n  local all_keys_all_all_all_all_lower_case=$24\n\
    \  local all_keys_all_all_all_all_empty=$25\n  local all_keys_all_all_all_all_all=$26\n\
    \  local all_keys_all_all_all_all_all_upper_case=$27\n  local all_keys_all_all_all_all_all_lower_case=$28\n\
    \  local all_keys_all_all_all_all_all_empty=$29\n  local all_keys_all_all_all_all_all_all=$30\n\
    \  local all_keys_all_all_all_all_all_all_upper_case=$31\n  local all_keys_all_all_all_all_all_all_lower_case=$32\n\
    \  local all_keys_all_all_all_all_all_all_empty=$33\n  local all_keys_all_all_all_all_all_all_all=$34\n\
    \  local all_keys_all_all_all_all_all_all_all_upper_case=$35\n  local all_keys_all_all_all_all_all_all_lower_case=$36\n\
    \  local all_keys_all_all_all_all_all_all_empty=$37\n  local all_keys_all_all_all_all_all_all_all=$38\n\
    \  local all_keys_all_all_all_all_all_all_all_upper_case=$39\n  local all_keys_all_all_all_all_all_all_lower_case=$40\n\
    \  local all_keys_all_all_all_all_all_all_all_empty=$41\n  local all_keys_all_all_all_all_all_all_all=$42\n\
    \  local all_keys_all_all_all_all_all_all_all_upper_case=$43\n  local all_keys_all_all_all_all_all_all_lower_case=$44\n\
    \  local all_", "    local keys=$(echo $1 | tr \",\" \"\\n\")\n    local lower=$(echo\
    \ $keys | tr [A-Z] [a-z])\n    local upper=$(echo $keys | tr [a-z] [A-Z])\n  \
    \  local length=$(echo $keys | wc -l)\n    local result=$(echo $lower | tr [A-Z]\
    \ [a-z]) && \\\n            echo $upper | tr [A-Z] [a-z]\n    echo $result", " \
    \   local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/$/#/')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/#,/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/#,/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/#/#,", "    local csv=$1\n  \
    \  local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local result=$(echo\
    \ $lower | wc -l)\n    if [ $result -eq 0 ]; then\n        result=$(echo $upper\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $keys\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $values\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n        result=$(echo $csv\
    \ | wc -l)\n    fi\n    if [ $result -eq ", "    local csv_line=\"$1\"\n    local\
    \ csv_line2=\"$2\"\n    local csv_line3=\"$3\"\n    local csv_line4=\"$4\"\n \
    \   local csv_line5=\"$5\"\n    local csv_line6=\"$6\"\n    local csv_line7=\"\
    $7\"\n    local csv_line8=\"$8\"\n    local csv_line9=\"$9\"\n    local csv_line10=\"\
    $10\"\n    local csv_line11=\"$11\"\n    local csv_line12=\"$12\"\n    local csv_line13=\"\
    $13\"\n    local csv_line14=\"$14\"\n    local csv_line15=\"$15\"\n    local csv_line16=\"\
    $16\"\n    local csv_line17=\"$17\"\n    local csv_line18=\"$18\"\n    local csv_line19=\"\
    $19\"\n    local csv_line20=\"$20\"\n    local csv_line21=\"$21\"\n    local csv_line22=\"\
    $22\"\n    local csv_line23=\"$23\"\n    local csv_line24=\"$24\"\n    local csv_line25=\"\
    $25\"\n    local csv_line26=\"$26\"\n    local csv_line27=\"$27\"\n    local csv_line28=\"\
    $28\"\n    local csv_line29=\"$29\"\n    local csv_line30=\"$30\"\n    local csv_line31=\"\
    $31\"\n    local csv_line32=\"$32\"\n    local csv_line33=\"$33\"\n    local csv_line34=\"\
    $34\"\n    local csv_line35=\"$35\"\n    local csv_line36=\"$36\"\n    local csv_line37=\"\
    $37\"\n    local csv_line38=\"$38\"\n    local csv_line39=\"$39\"\n    local csv_line40=\"\
    $40\"\n    local csv_line41=\"$41\"\n    local csv_line42=\"$42\"\n    local csv_line43=\"\
    $43\"\n    local csv_line44=\"$44\"\n    local csv_line45=\"$45\"\n    local csv_line46=\"\
    $46\"\n    local csv_line47=\"$47\"\n    local csv_line48=\"$48\"\n    local csv_line49=\"\
    $49\"\n    local csv_line50=\"$50\"\n    local csv_line51=\"$51\"\n    local csv_line52=\"\
    $52\"\n    local csv_line53=\"$53\"\n    local csv_line54=\"$54\"\n    local csv_line55=\"\
    $55\"\n    local csv_line56=\"$56\"\n    local csv_line57=\"$57\"\n    local csv_line58=\"\
    $58", "    local csv_line=$1\n    local csv_line_keys=$2\n    local csv_line_vals=$3\n\
    \    local csv_line_keys_lower=$4\n    local csv_line_keys_upper=$5\n    local\
    \ csv_line_vals_lower=$6\n    local csv_line_vals_upper=$7\n    local csv_line_keys_count=${#csv_line_keys}\n\
    \    local csv_line_vals_count=${#csv_line_vals}\n    local csv_line_vals_count_lower=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_upper=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local csv_line_vals_count_equal=${#csv_line_vals_lower}\n\
    \    local csv_line_vals_count_equal=${#csv_line_vals_upper}\n    local ", " \
    \   local csv_line=\"$1\"\n    local csv_line_keys=$(echo \"$csv_line\" | cut\
    \ -d',' -f1)\n    local csv_line_values=$(echo \"$csv_line\" | cut -d',' -f2)\n\
    \    local csv_line_lower=$(echo \"$csv_line_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_upper=$(echo \"$csv_line_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_lower_in=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_in=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_out=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_out=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_in=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_in=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_out=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_out=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_in=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_in=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_out=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_out=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_in=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_in=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_out=$(echo \"$csv_line_lower\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_upper_out=$(echo \"$csv_line_upper\" | grep -w '^[[:alpha:]]')\n\
    \    local csv_line_lower_in=$(echo \"$csv_line_lower\" | grep -w '^[", "    local\
    \ csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n    local lower=false\n    local upper=false\n\
    \    local lowerKeys=$(echo $keys | awk -F, '{print tolower($0)}')\n    local\
    \ upperKeys=$(echo $keys | awk -F, '{print toupper($0)}')\n    local lowerValues=$(echo\
    \ $values | awk -F, '{print tolower($0)}')\n    local upperValues=$(echo $values\
    \ | awk -F, '{print toupper($0)}')\n    local lowerKeysCount=$(echo $lowerKeys\
    \ | wc -w)\n    local upperKeysCount=$(echo $upperKeys | wc -w)\n    local lowerValuesCount=$(echo\
    \ $lowerValues | wc -w)\n    local upperValuesCount=$(echo $upperValues | wc -w)\n\
    \    local lowerKeysCount=$(echo $lowerKeys | wc -w)\n    local upperKeysCount=$(echo\
    \ $upperKeys | wc -w)\n    local lowerValuesCount=$(echo $lowerValues | wc -w)\n\
    \    local upperValuesCount=$(echo $upperValues | wc -w)\n    local lowerKeysCount=$(echo\
    \ $lowerKeys | wc -w)\n    local upperKeysCount=$(echo $upperKeys | wc -w)\n \
    \   local lowerValuesCount=$(echo $lowerValues | wc -w)\n    local upperValuesCount=$(echo\
    \ $upperValues | wc -w)\n    if [ $lowerKeysCount -gt 0 ]; then\n        lower=true\n\
    \    fi\n    if [ $upperKeysCount -gt 0 ]; then\n        upper=true\n    fi\n\
    \    if [ $lowerValuesCount -gt 0 ]; then\n        lower=true\n    fi\n    if\
    \ [ $upperValuesCount -gt 0 ]; then\n        upper=true\n    fi\n    if [ $lowerKeysCount\
    \ -gt 0 ] && [ $lowerValuesCount -gt 0 ]; then\n        lower=true\n    fi\n \
    \   if [ $upperKeysCount -gt 0 ] && [ $upperValuesCount -gt 0 ]; then\n      \
    \  upper=true\n    fi\n    if [ $lower == true ] && [ $upper == true ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ csv_lines=$1\n    local key_col=0\n    local val_col=1\n    local key_lower=0\n\
    \    local val_upper=0\n    local key_upper=0\n    local val_lower=0\n    local\
    \ key_found=0\n    local val_found=0\n    local key_not_found=0\n    local val_not_found=0\n\
    \    local key_not_found_lower=0\n    local val_not_found_lower=0\n    local key_not_found_upper=0\n\
    \    local val_not_found_upper=0\n    local key_found=0\n    local val_found=0\n\
    \    local key_not_found=0\n    local val_not_found=0\n    local key_not_found_lower=0\n\
    \    local val_not_found_lower=0\n    local key_not_found_upper=0\n    local val_not_found_upper=0\n\
    \    local key_found=0\n    local val_found=0\n    local key_not_found=0\n   \
    \ local val_not_found=0\n    local key_not_found_lower=0\n    local val_not_found_lower=0\n\
    \    local key_not_found_upper=0\n    local val_not_found_upper=0\n    local key_found=0\n\
    \    local val_found=0\n    local key_not_found=0\n    local val_not_found=0\n\
    \    local key_not_found_lower=0\n    local val_not_found_lower=0\n    local key_not_found_upper=0\n\
    \    local val_not_found_upper=0\n    local key_found=0\n    local val_found=0\n\
    \    local key_not_found=0\n    local val_not_found=0\n    local key_not_found_lower=0\n\
    \    local val_not_found_lower=0\n    local key_not_found_upper=0\n    local val_not_found_upper=0\n\
    \    local key_found=0\n    local val_found=0\n    local key_not_found=0\n   \
    \ local val_not_found=0\n    local key_not_found_lower=0\n    local val_not_found_lower=0\n\
    \    local key_not_found_upper=0\n    local val_not_found_upper=0\n    local key_found=0\n\
    \    local val_found=0\n    local key_not_found=0\n    local val_not_found=0\n\
    \    local key_not_found_lower=0\n    local val_not_found_lower=0\n    local key_not_found_upper=0\n\
    \    local val_not_found_upper=0\n    local key_found=0\n    local val_found=0\n\
    \    local key_not_found=0\n    local val_not_found=0\n    local key_not_found_lower=0\n\
    \    local val_not_found_lower=0\n    local key_not_found_upper=0\n    local val_not_found_upper=0\n\
    \    local key_found=0", "  local csv=$1\n  local keys=$(echo $csv | awk -F, '{print\
    \ $1}')\n  local values=$(echo $csv | awk -F, '{print $2}')\n  local lower=$(echo\
    \ $keys | awk '{print tolower($0)}')\n  local upper=$(echo $keys | awk '{print\
    \ toupper($0)}')\n  local lowercount=$(echo $lower | wc -w)\n  local uppercount=$(echo\
    \ $upper | wc -w)\n  if [[ $lowercount -eq 0 && $uppercount -eq 0 ]]; then\n \
    \   echo \"true\"\n  else\n    echo \"false\"\n  fi", "  local csv=$1\n  local\
    \ keys=$(echo $csv | cut -d',' -f1)\n  local values=$(echo $csv | cut -d',' -f2)\n\
    \  local lowercase_keys=$(echo $keys | tr [a-z] [A-Z])\n  local uppercase_keys=$(echo\
    \ $keys | tr [A-Z] [a-z])\n  local lowercase_values=$(echo $values | tr [a-z]\
    \ [A-Z])\n  local uppercase_values=$(echo $values | tr [A-Z] [a-z])\n  local all_lowercase_keys=$(echo\
    \ $lowercase_keys | tr [A-Z] [a-z])\n  local all_uppercase_keys=$(echo $uppercase_keys\
    \ | tr [A-Z] [a-z])\n  local all_lowercase_values=$(echo $lowercase_values | tr\
    \ [A-Z] [a-z])\n  local all_uppercase_values=$(echo $uppercase_values | tr [A-Z]\
    \ [a-z])\n  local all_keys=$(echo $all_lowercase_keys $all_uppercase_keys)\n \
    \ local all_values=$(echo $all_lowercase_values $all_uppercase_values)\n  local\
    \ all_keys_count=$(echo $all_keys | wc -w)\n  local all_values_count=$(echo $all_values\
    \ | wc -w)\n  local all_keys_count_lower=$(echo $all_lowercase_keys | wc -w)\n\
    \  local all_values_count_lower=$(echo $all_lowercase_values | wc -w)\n  local\
    \ all_keys_count_upper=$(echo $all_uppercase_keys | wc -w)\n  local all_values_count_upper=$(echo\
    \ $all_uppercase_values | wc -w)\n  local all_keys_count_both=$(echo $all_keys_count\
    \ + $all_values_count)\n  local all_values_count_both=$(echo $all_keys_count_lower\
    \ + $all_values_count_lower)\n  local all_keys_count_both_lower=$(echo $all_keys_count_lower\
    \ + $all_values_count_upper)\n  local all_values_count_both_lower=$(echo $all_keys_count_both_lower\
    \ + $all_values_count_both)\n  local all_keys_count_both_upper=$(echo $all_keys_count_upper\
    \ + $all_values_count_both)\n  local all_values_count_both_upper=$(echo $all_keys_count_both_upper\
    \ + $all_values_count_both)\n  local all_keys_count_both_both=$(echo $all_keys_count_both\
    \ + $all_values_count_both)\n  local all_values_count_both_both=$(echo $all_keys_count_both_both\
    \ + $all_values_count_both)\n  local all_keys_count_both_both_lower=$(echo $all_keys_count_both_lower\
    \ + $all_values_count_both_", "  local csv_line=\"$1\"\n  local csv_line2=\"$2\"\
    \n  local csv_line3=\"$3\"\n  local csv_line4=\"$4\"\n  local csv_line5=\"$5\"\
    \n  local csv_line6=\"$6\"\n  local csv_line7=\"$7\"\n  local csv_line8=\"$8\"\
    \n  local csv_line9=\"$9\"\n  local csv_line10=\"$10\"\n  local csv_line11=\"\
    $11\"\n  local csv_line12=\"$12\"\n  local csv_line13=\"$13\"\n  local csv_line14=\"\
    $14\"\n  local csv_line15=\"$15\"\n  local csv_line16=\"$16\"\n  local csv_line17=\"\
    $17\"\n  local csv_line18=\"$18\"\n  local csv_line19=\"$19\"\n  local csv_line20=\"\
    $20\"\n  local csv_line21=\"$21\"\n  local csv_line22=\"$22\"\n  local csv_line23=\"\
    $23\"\n  local csv_line24=\"$24\"\n  local csv_line25=\"$25\"\n  local csv_line26=\"\
    $26\"\n  local csv_line27=\"$27\"\n  local csv_line28=\"$28\"\n  local csv_line29=\"\
    $29\"\n  local csv_line30=\"$30\"\n  local csv_line31=\"$31\"\n  local csv_line32=\"\
    $32\"\n  local csv_line33=\"$33\"\n  local csv_line34=\"$34\"\n  local csv_line35=\"\
    $35\"\n  local csv_line36=\"$36\"\n  local csv_line37=\"$37\"\n  local csv_line38=\"\
    $38\"\n  local csv_line39=\"$39\"\n  local csv_line40=\"$40\"\n  local csv_line41=\"\
    $41\"\n  local csv_line42=\"$42\"\n  local csv_line43=\"$43\"\n  local csv_line44=\"\
    $44\"\n  local csv_line45=\"$45\"\n  local csv_line46=\"$46\"\n  local csv_line47=\"\
    $47\"\n  local csv_line48=\"$48\"\n  local csv_line49=\"$49\"\n  local csv_line50=\"\
    $50\"\n  local csv_line51=\"$51\"\n  local csv_line52=\"$52\"\n  local csv_line53=\"\
    $53\"\n  local csv_line54=\"$54\"\n  local csv_line55=\"$55\"\n  local csv_line56=\"\
    $56\"\n  local csv_line57=\"$57\"\n  local csv_line58=\"$58", "  local csv=$1\n\
    \  local keys=$(echo $csv | cut -d, -f1)\n  local values=$(echo $csv | cut -d,\
    \ -f2)\n  local lower=false\n  local upper=false\n  local result=false\n  local\
    \ count=0\n  local key\n  local value\n  \n  for key in $keys; do\n    value=$(echo\
    \ $values | cut -d, -f$count)\n    lower=$(echo $key | tr '[:upper:]' '[:lower:]')\n\
    \    upper=$(echo $key | tr '[:lower:]' '[:upper:]')\n    if [ \"$lower\" == \"\
    $key\" ] || [ \"$upper\" == \"$key\" ]; then\n      result=true\n    fi\n    ((count++))\n\
    \  done\n  \n  if [ \"$result\" == \"false\" ]; then\n    echo \"$csv is invalid\"\
    \n  else\n    echo \"$csv is valid\"\n  fi", "    local csv=$1\n    local keys=$(echo\
    \ $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print\
    \ $2}')\n    local lower=false\n    local upper=false\n    local result=false\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    ", "    local csv_line=$1\n  \
    \  local csv_line_keys=$2\n    local csv_line_vals=$3\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower=$(echo\
    \ $csv_line_vals | tr '[:upper:]' '[:lower:]')\n    local csv_line_vals_upper=$(echo\
    \ $csv_line_vals | tr '[:lower:]' '[:upper:]')\n    local csv_line_vals_lower",
  "    local csv_lines=$1\n    local dict_lines=$2\n    local dict_keys=$3\n    local\
    \ dict_values=$4\n    local dict_case=$5\n    local dict_case_lower=$6\n    local\
    \ dict_case_upper=$7\n    local dict_case_both=$8\n    local dict_case_both_lower=$9\n\
    \    local dict_case_both_upper=$10\n    local dict_case_both_both=$11\n    local\
    \ dict_case_both_both_lower=$12\n    local dict_case_both_both_upper=$13\n   \
    \ local dict_case_both_both_both=$14\n    local dict_case_both_both_both_lower=$15\n\
    \    local dict_case_both_both_both_upper=$16\n    local dict_case_both_both_both_both=$17\n\
    \    local dict_case_both_both_both_both_lower=$18\n    local dict_case_both_both_both_both_upper=$19\n\
    \    local dict_case_both_both_both_both_both=$20\n    local dict_case_both_both_both_both_both_lower=$21\n\
    \    local dict_case_both_both_both_both_both_upper=$22\n    local dict_case_both_both_both_both_both_both_lower=$23\n\
    \    local dict_case_both_both_both_both_both_both_upper=$24\n    local dict_case_both_both_both_both_both_both_both_lower=$25\n\
    \    local dict_case_both_both_both_both_both_both_both_upper=$26\n    local dict_case_both_both_both_both_both_both_both_both_lower=$27\n\
    \    local dict_case_both_both_both_both_both_both_both_both_upper=$28\n    local\
    \ dict_case_both_both_both_both_both_both_both_both_both_lower=$29\n    local\
    \ dict_case_both_both_both_both_both_both_both_both_both_upper=$30\n    local\
    \ dict_case_both_both_both_both_both_both_both_both_both_both_lower=$31\n    local\
    \ dict_case_both_both_both_both_both_both_both_both_both_both_upper=$32\n    local\
    \ dict_case_both_both_both_both_both_both_both_", "    local csv=$1\n    local\
    \ keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk\
    \ -F, '{print $2}')\n    local lower=false\n    local upper=false\n    local found=false\n\
    \    local i=0 \n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n   \
    \ local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local\
    \ H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n\
    \    local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n \
    \   local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n  \
    \  local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n   \
    \ local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local\
    \ H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n\
    \    local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n \
    \   local S=0\n    local T=0\n    local U=0\n", "    local csv_line=\"$1\"\n \
    \   local csv_key=\"$2\"\n    local csv_val=\"$3\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$", "    local csv=$1\n    local keys=$(echo $csv\
    \ | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=0\n    local upper=0\n    local ok=1\n    for k in $keys; do\n\
    \        if [[ $k =~ ^[A-Z]$ ]]; then\n            lower=$((lower + 1))\n    \
    \    else\n            upper=$((upper + 1))\n        fi\n    done\n    for v in\
    \ $values; do\n        if [[ $v =~ ^[A-Z]$ ]]; then\n            lower=$((lower\
    \ + 1))\n        else\n            upper=$((upper + 1))\n        fi\n    done\n\
    \    if [[ $lower -eq 0 ]]; then\n        echo \"$csv is all upper case\"\n  \
    \      ok=0\n    elif [[ $upper -eq 0 ]]; then\n        echo \"$csv is all lower\
    \ case\"\n        ok=0\n    else\n        echo \"$csv is mixed case\"\n      \
    \  ok=0\n    fi\n    return $ok", "    local csv=$1\n    local keys=$(echo $csv\
    \ | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo $lower | wc\
    \ -w)\n    local uppercount=$(echo $upper | wc -w)\n    if [[ $lowercount == $uppercount\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local csv=$1\n    local key\n    local value\n    local result\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local ", "    local csv=$1\n    local keys=$(echo\
    \ $csv | cut -d, -f1)\n    local values=$(echo $csv | cut -d, -f2)\n    local\
    \ lower=$(echo $keys | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo $keys\
    \ | tr '[:lower:]' '[:upper:]')\n    local lower_in=$(echo $values | tr '[:upper:]'\
    \ '[:lower:]')\n    local upper_in=$(echo $values | tr '[:lower:]' '[:upper:]')\n\
    \    local lower_in_all=$(echo $values | grep -v \"^$lower$\")\n    local upper_in_all=$(echo\
    \ $values | grep -v \"^$upper$\")\n    local lower_in_all_in=$(echo $lower_in_all\
    \ | grep -v \"^$lower$\")\n    local upper_in_all_in=$(echo $upper_in_all | grep\
    \ -v \"^$upper$\")\n    local lower_in_all_in_all=$(echo $lower_in_all | grep\
    \ -v \"^$lower$\" | grep -v \"^$upper$\")\n    local upper_in_all_in_all=$(echo\
    \ $upper_in_all | grep -v \"^$lower$\" | grep -v \"^$upper$\")\n    local lower_in_all_in_all_in=$(echo\
    \ $lower_in_all_in_all | grep -v \"^$lower$\" | grep -v \"^$upper$\")\n    local\
    \ upper_in_all_in_all_in=$(echo $upper_in_all_in_all | grep -v \"^$lower$\" |\
    \ grep -v \"^$upper$\")\n    local lower_in_all_in_all_in_all=$(echo $lower_in_all_in_all\
    \ | grep -v \"^$lower$\" | grep -v \"^$upper$\" | grep -v \"^$lower$\" | grep\
    \ -v \"^$upper$\")\n    local upper_in_all_in_all_in_all=$(echo $upper_in_all_in_all\
    \ | grep -v \"^$lower$\" | grep -v \"^$upper$\" | grep -v \"^$lower$\" | grep\
    \ -v \"^$upper$\")\n    local lower_in_all_in_all_in_all_in=$(echo $lower_in_all_in_all_in_all\
    \ | grep -v \"^$lower$\" | grep -v \"^$upper$\" | grep -v \"^$lower$\" | grep\
    \ -v \"^$upper$\")\n    local upper_in_all_in_all_in_all_in=$(echo $upper_in_all_in_all_in_all\
    \ | grep -v \"^$lower$\" | grep -v \"^$upper$\" | grep -v \"^$lower$\" | grep\
    \ -v \"^$upper$\")\n    local lower_in_all_in_all_in_all_in_all=$(echo $lower_in_all_in_all",
  "  local csv_line=$1\n  local csv_line_split=(${csv_line//,/ })\n  local csv_line_count=$((${#csv_line_split[@]}-1))\n\
    \  local csv_line_first_key=${csv_line_split[0]}\n  local csv_line_first_key_upper=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n  local csv_line_first_key_lower=$(echo\
    \ $csv_line_first_key | tr '[:lower:]' '[:upper:]')\n  local csv_line_first_key_lower_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:lower:]' '[:insensitive:]')\n  local csv_line_first_key_upper_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:insensitive:]')\n  local csv_line_first_key_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n  local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:lower:]' '[:upper:]')\n  local csv_line_first_key_not_equal_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:lower:]' '[:insensitive:]')\n  local csv_line_first_key_not_equal_upper=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:upper:]')\n  local csv_line_first_key_not_equal_lower=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:lower:]')\n  local csv_line_first_key_not_equal_lower_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:insensitive:]')\n  local csv_line_first_key_not_equal_upper_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:upper:]')\n  local csv_line_first_key_not_equal_equal=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:lower:]')\n  local csv_line_first_key_not_equal_equal_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:insensitive:]')\n  local csv_line_first_key_not_equal_equal_upper=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:upper:]')\n  local csv_line_first_key_not_equal_equal_lower=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:lower:]')\n  local csv_line_first_key_not_equal_equal_lower_insensitive=$(echo\
    \ $csv_line_first_key | tr '[:insensitive:]' '[:insensitive:]')\n  local csv_line_first_key_not_equal_equal_upper",
  "    local csv=$1\n    local keys=$(echo $csv | cut -d, -f1 | sort -u)\n    local\
    \ values=$(echo $csv | cut -d, -f2 | sort -u)\n    local lower\n    local upper\n\
    \    lower=$(echo $keys | tr '[:upper:]' '[:lower:]')\n    upper=$(echo $keys\
    \ | tr '[:lower:]' '[:upper:]')\n    lower=${lower,,}\n    upper=${upper,,}\n\
    \    lower=${lower,,}\n    upper=${upper,,}\n    if [ -z \"$keys\" ]\n    then\n\
    \        echo \"$csv is empty\"\n        false\n    else\n        echo \"$keys,$values\
    \ have different case\"\n        false\n    fi", "    local csv_lines=$(cat $1)\n\
    \    local csv_headers=$(cat $1 | head -n 1)\n    local csv_headers=$(echo $csv_headers\
    \ | tr -d '\\n')\n    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n\
    \    local csv_headers=$(echo $csv_headers | tr -s ' ')\n    local csv_headers=$(echo\
    \ $csv_headers | tr -d ' ')\n    local csv_headers=$(echo $csv_headers | tr -s\
    \ ' ')\n    local csv_headers=$(echo $csv_headers | tr -d '\\n')\n    local csv_headers=$(echo\
    \ $csv_headers | tr '\\n' ' ')\n    local csv_headers=$(echo $csv_headers | tr\
    \ -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d ' ')\n    local csv_headers=$(echo\
    \ $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d\
    \ '\\n')\n    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n    local\
    \ csv_headers=$(echo $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers\
    \ | tr -d ' ')\n    local csv_headers=$(echo $csv_headers | tr -s ' ')\n    local\
    \ csv_headers=$(echo $csv_headers | tr -d '\\n')\n    local csv_headers=$(echo\
    \ $csv_headers | tr '\\n' ' ')\n    local csv_headers=$(echo $csv_headers | tr\
    \ -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d ' ')\n    local csv_headers=$(echo\
    \ $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d\
    \ '\\n')\n    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n    local\
    \ csv_headers=$(echo $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers\
    \ | tr -d ' ')\n    local csv_headers=$(echo $csv_headers | tr -s ' ')\n    local\
    \ csv_headers=$(echo $csv_headers | tr -d '\\n')\n    local csv_headers=$(echo\
    \ $csv_headers | tr '\\n' ' ')\n    local csv_headers=$(echo $csv_headers | tr\
    \ -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d ' ')\n    local csv_headers=$(echo\
    \ $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers | tr -d\
    \ '\\n')\n    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n    local\
    \ csv_headers=$(echo $csv_headers | tr -s ' ')\n    local csv_headers=$(echo $csv_headers\
    \ | tr -", "    local csv_lines=$(cat $1)\n    local csv_headers=$(cat $1 | head\
    \ -n 1)\n    local csv_headers=$(echo $csv_headers | awk -F, '{print $1}')\n \
    \   local csv_headers=$(echo $csv_headers | awk -F, '{print $2}')\n    local csv_headers=$(echo\
    \ $csv_headers | awk -F, '{print $3}')\n    local csv_headers=$(echo $csv_headers\
    \ | awk -F, '{print $4}')\n    local csv_headers=$(echo $csv_headers | awk -F,\
    \ '{print $5}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print $6}')\n\
    \    local csv_headers=$(echo $csv_headers | awk -F, '{print $7}')\n    local\
    \ csv_headers=$(echo $csv_headers | awk -F, '{print $8}')\n    local csv_headers=$(echo\
    \ $csv_headers | awk -F, '{print $9}')\n    local csv_headers=$(echo $csv_headers\
    \ | awk -F, '{print $10}')\n    local csv_headers=$(echo $csv_headers | awk -F,\
    \ '{print $11}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print\
    \ $12}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print $13}')\n\
    \    local csv_headers=$(echo $csv_headers | awk -F, '{print $14}')\n    local\
    \ csv_headers=$(echo $csv_headers | awk -F, '{print $15}')\n    local csv_headers=$(echo\
    \ $csv_headers | awk -F, '{print $16}')\n    local csv_headers=$(echo $csv_headers\
    \ | awk -F, '{print $17}')\n    local csv_headers=$(echo $csv_headers | awk -F,\
    \ '{print $18}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print\
    \ $19}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print $20}')\n\
    \    local csv_headers=$(echo $csv_headers | awk -F, '{print $21}')\n    local\
    \ csv_headers=$(echo $csv_headers | awk -F, '{print $22}')\n    local csv_headers=$(echo\
    \ $csv_headers | awk -F, '{print $23}')\n    local csv_headers=$(echo $csv_headers\
    \ | awk -F, '{print $24}')\n    local csv_headers=$(echo $csv_headers | awk -F,\
    \ '{print $25}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print\
    \ $26}')\n    local csv_headers=$(echo $csv_headers | awk -F, '{print $27}')\n\
    \    ", "    local csv=$1\n    local key\n    local value\n    local result\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local ", "    local csv=$1\n    local\
    \ keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk\
    \ -F, '{print $2}')\n    local lower=false\n    local upper=false\n    local result=false\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    ", "    local csv_lines=$1\n \
    \   local csv_headers=$2\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^", "    local csv_line=\"$1\"\n    local csv_line_count=$((${#csv_line}\
    \ / 2))\n    if [[ ${csv_line_count} -eq 0 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local csv_line_1=\"${csv_line:0:${csv_line_count}}\"\
    \n    local csv_line_2=\"${csv_line:${csv_line_count}:${#csv_line}}\"\n    local\
    \ csv_line_1_lower=$(echo \"${csv_line_1}\" | tr '[:upper:]' '[:lower:]')\n  \
    \  local csv_line_2_lower=$(echo \"${csv_line_2}\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_1_upper=$(echo \"${csv_line_1}\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_2_upper=$(echo \"${csv_line_2}\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ ${csv_line_1_lower} != ${csv_line_1_upper} ]]; then\n        echo \"\
    false\"\n        return\n    elif [[ ${csv_line_2_lower} != ${csv_line_2_upper}\
    \ ]]; then\n        echo \"false\"\n        return\n    else\n        echo \"\
    true\"\n        return\n    fi", "    local csv_line\n    local key\n    local\
    \ value\n    local key_lower\n    local key_upper\n    local value_lower\n   \
    \ local value_upper\n    local result\n    local i\n    local num_keys\n    local\
    \ num_values\n    local num_key_lower\n    local num_key_upper\n    local num_value_lower\n\
    \    local num_value_upper\n    local num_key_equal\n    local num_value_equal\n\
    \    local num_key_not_equal\n    local num_value_not_equal\n    local num_key_not_in_list\n\
    \    local num_value_not_in_list\n    local num_key_in_list\n    local num_value_in_list\
    \ \n    local num_key_not_in_list_value\n    local num_value_not_in_list_value\n\
    \    local num_key_in_list_value\n    local num_value_in_list_value\n    local\
    \ num_key_not_in_list_key\n    local num_value_not_in_list_key\n    local num_key_in_list_key\n\
    \    local num_value_in_list_key\n    local num_key_not_in_list_value_key\n  \
    \  local num_value_not_in_list_value_key\n    local num_key_in_list_value_key\n\
    \    local num_value_in_list_value_key\n    local num_key_not_in_list_key_value\n\
    \    local num_value_not_in_list_key_value\n    local num_key_in_list_key_value\n\
    \    local num_value_in_list_key_value\n    local num_key_not_in_list_value_value\n\
    \    local num_value_not_in_list_value_value\n    local num_key_in_list_value_value\n\
    \    local num_value_in_list_value_value\n    local num_key_not_in_list_key_value_key\n\
    \    local num_value_not_in_list_key_value_key\n    local num_key_in_list_key_value_key\n\
    \    local num_value_in_list_key_value_key\n    local num_key_not_in_list_value_value_key\n\
    \    local num_value_not_in_list_value_value_key\n    local num_key_in_list_value_value_key\n\
    \    local num_value_in_list_value_value_key\n    local num_key_not_in_list_key_value_value\n\
    \    local num_value_not_in_list_key_value_value\n    local num_key_in_list_key_value_value\n\
    \    local num_value_in_list_key_value_value\n    local num_key_not_in_list_value_value_value\n\
    \    local num_value_not_in_list_value_value_value\n    local num_key_in_list_value_value_key\n\
    \    local num_value_in_list_value_value_key\n    local num_key_not_in_list_key_value_value_key\n\
    \    local num_value_not_in_list_key_value_value_key\n    local num_key_in_list_key_",
  "    local csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local\
    \ vals=$(echo $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk\
    \ '{print tolower($0)}')\n    local upper=$(echo $keys | awk '{print toupper($0)}')\n\
    \    local result=$(echo $lower | wc -l)\n    if [ $result -eq 0 ]; then\n   \
    \     result=$(echo $upper | wc -l)\n    fi\n    if [ $result -eq 0 ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ csv_line=\"$1\"\n    local csv_key=\"$2\"\n    local csv_val=\"$3\"\n    local\
    \ csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$", "    local keys=$(echo\
    \ $1 | cut -d, -f1 )\n    local values=$(echo $1 | cut -d, -f2 )\n    local lower=false\n\
    \    local upper=false\n    local count=$(echo $keys | wc -w)\n    for (( i=0;\
    \ i<$count; i++ )); do\n        lower=$(echo $keys | awk -F, '{print tolower($1)}')\n\
    \        upper=$(echo $keys | awk -F, '{print toupper($1)}')\n        if [ \"\
    $lower\" == \"$keys\" ] || [ \"$upper\" == \"$keys\" ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    done\n    echo \"false\"", " \
    \   local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g' | sed 's/^/#/')\n    local csv_headers=$(", "    local csv=$1\n\
    \    local lower=false\n    local upper=false\n    local key\n    local value\n\
    \    local result\n    local count\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local ", "    local csv=$1\n    local keys=$(echo\
    \ $csv | cut -d, -f1 )\n    local values=$(echo $csv | cut -d, -f2 )\n    local\
    \ lowercase_keys=$(echo $keys | tr [a-z] [A-Z])\n    local uppercase_keys=$(echo\
    \ $keys | tr [A-Z] [a-z])\n    local lowercase_values=$(echo $values | tr [a-z]\
    \ [A-Z])\n    local uppercase_values=$(echo $values | tr [A-Z] [a-z])\n    local\
    \ all_lowercase_keys=$(echo $lowercase_keys | tr [A-Z] [a-z])\n    local all_uppercase_keys=$(echo\
    \ $uppercase_keys | tr [A-Z] [a-z])\n    local all_lowercase_values=$(echo $lowercase_values\
    \ | tr [A-Z] [a-z])\n    local all_uppercase_values=$(echo $uppercase_values |\
    \ tr [A-Z] [a-z])\n    local all_keys=$(echo $all_lowercase_keys $all_uppercase_keys\
    \ $all_lowercase_values $all_uppercase_values)\n    local all_values=$(echo $all_lowercase_values\
    \ $all_uppercase_values $all_lowercase_keys $all_uppercase_keys)\n    local all_keys_count=$(echo\
    \ $all_keys | wc -w)\n    local all_values_count=$(echo $all_values | wc -w)\n\
    \    local all_keys_count_lower=$(echo $all_lowercase_keys | wc -w)\n    local\
    \ all_keys_count_upper=$(echo $all_uppercase_keys | wc -w)\n    local all_values_count_lower=$(echo\
    \ $all_lowercase_values | wc -w)\n    local all_values_count_upper=$(echo $all_uppercase_values\
    \ | wc -w)\n    local all_keys_count_both=$(echo $all_lowercase_keys $all_uppercase_keys\
    \ | wc -w)\n    local all_values_count_both=$(echo $all_lowercase_values $all_uppercase_values\
    \ | wc -w)\n    local all_keys_count_both_lower=$(echo $all_lowercase_keys $all_lowercase_values\
    \ | wc -w)\n    local all_keys_count_both_upper=$(echo $all_uppercase_keys $all_uppercase_values\
    \ | wc -w)\n    local all_values_count_both_lower=$(echo $all_lowercase_values\
    \ $all_lowercase_keys | wc -w)\n    local all_values_count_both_upper=$(echo $all_uppercase_values\
    \ $all_uppercase_keys | wc -w)\n    local all_keys_count_both_both=$(echo $all_lowercase_keys\
    \ $all_uppercase_values | wc -w)\n    local all_values_count_both_both=$(", " \
    \   local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g' | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g'\
    \ | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' |\
    \ sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed\
    \ 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/$/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/$/#/')\n  \
    \  local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/$/#/')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g' | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/ /g' | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g' | sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g'\
    \ | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' |\
    \ sed 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed\
    \ 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/$/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed '", "    local csv=$1\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local found\n  \
    \  local count\n    local found\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local found\n    local count\n    local found\n    local ",
  "    local csv_line=$1\n    local csv_line_split=(${csv_line//,/ })\n    local csv_line_split_len=${#csv_line_split[@]}\n\
    \    local csv_line_split_len2=$((csv_line_split_len-1))\n    local csv_line_split_len3=$((csv_line_split_len-csv_line_split_len2))\n\
    \    local csv_line_split_len4=$((csv_line_split_len-csv_line_split_len2-csv_line_split_len3))\n\
    \    local csv_line_split_len5=$((csv_line_split_len-csv_line_split_len3-csv_line_split_len4))\n\
    \    local csv_line_split_len6=$((csv_line_split_len-csv_line_split_len4-csv_line_split_len5))\n\
    \    local csv_line_split_len7=$((csv_line_split_len-csv_line_split_len5-csv_line_split_len6))\n\
    \    local csv_line_split_len8=$((csv_line_split_len-csv_line_split_len6-csv_line_split_len7))\n\
    \    local csv_line_split_len9=$((csv_line_split_len-csv_line_split_len7-csv_line_split_len8))\n\
    \    local csv_line_split_len10=$((csv_line_split_len-csv_line_split_len8-csv_line_split_len9))\n\
    \    local csv_line_split_len11=$((csv_line_split_len-csv_line_split_len9-csv_line_split_len10))\n\
    \    local csv_line_split_len12=$((csv_line_split_len-csv_line_split_len10-csv_line_split_len11))\n\
    \    local csv_line_split_len13=$((csv_line_split_len-csv_line_split_len11-csv_line_split_len12))\n\
    \    local csv_line_split_len14=$((csv_line_split_len-csv_line_split_len12-csv_line_split_len13))\n\
    \    local csv_line_split_len15=$((csv_line_split_len-csv_line_split_len13-csv_line_split_len14))\n\
    \    local csv_line_split_len16=$((csv_line_split_len-csv_line_split_len14-csv_line_split_len15))\n\
    \    local csv_line_split_len17=$((csv_line_split_len-csv_line_split_len15-csv_line_split_len16))\n\
    \    local csv_line_split_len18=$((csv_line_split_len-csv_line_split_len16-csv_line_split_len17))\n\
    \    local csv_line_split_len19=$((csv_line_split_len-csv_line_split_len17-csv_line_split_len18))\n\
    \    local csv_line_split_len20=$((csv_line_split_len-csv_line_split_len18-csv_line_split_len19))\n\
    \    ", "    local csv_lines=$1\n    local keys=$2\n    local lower=$3\n    local\
    \ upper=$4\n    local count=0\n    local line\n    local key\n    local value\n\
    \    local lower\n    local upper\n    local result\n    \n    # Return false\
    \ if CSV is empty\n    if [ -z \"$csv_lines\" ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    \n    # Return false if CSV has only one line\n \
    \   if [ \"${#csv_lines}\" -eq 1 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    \n    # Return false if CSV has more than one line\n    if [ \"${#csv_lines}\"\
    \ -gt 1 ]; then\n        echo \"false\"\n        return\n    fi\n    \n    # Return\
    \ false if CSV has more than one key\n    if [ \"${#keys}\" -gt 1 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    \n    # Return false if CSV\
    \ has more than one value\n    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    \n    # Return false if CSV has more than\
    \ one key\n    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"false\"\n     \
    \   return\n    fi\n    \n    # Return false if CSV has more than one value\n\
    \    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    \n    # Return false if CSV has more than one key\n    if [ \"${#keys}\"\
    \ -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n    \n    # Return\
    \ false if CSV has more than one value\n    if [ \"${#keys}\" -eq 1 ]; then\n\
    \        echo \"false\"\n        return\n    fi\n    \n    # Return false if CSV\
    \ has more than one key\n    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    \n    # Return false if CSV has more than\
    \ one value\n    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"false\"\n   \
    \     return\n    fi\n    \n    # Return false if CSV has more than one key\n\
    \    if [ \"${#keys}\" -eq 1 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    \n    # Return false if CSV has more than one value\n    if [ \"\
    ${#keys}\" -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n   \
    \ \n    # Return false if CSV has more than one key\n    if [ \"${#keys}\" -",
  "    local csv_lines=$1\n    local key_column=0\n    local value_column=1\n    local\
    \ key_column_lower=0\n    local key_column_upper=0\n    local value_column_lower=0\n\
    \    local value_column_upper=0\n    local key_column_values=()\n    local value_column_values=()\n\
    \    local key_column_lowercase_values=()\n    local key_column_uppercase_values=()\n\
    \    local value_column_lowercase_values=()\n    local value_column_uppercase_values=()\n\
    \    local key_column_lowercase_keys=()\n    local key_column_uppercase_keys=()\n\
    \    local value_column_lowercase_keys=()\n    local value_column_uppercase_keys=()\n\
    \    local key_column_value_keys=()\n    local value_column_value_keys=()\n  \
    \  local key_column_value_keys_lower=()\n    local key_column_value_keys_upper=()\n\
    \    local value_column_value_keys_lower=()\n    local value_column_value_keys_upper=()\n\
    \    local key_column_value_keys_values=()\n    local value_column_value_keys_values=()\n\
    \    local key_column_value_keys_values_lower=()\n    local key_column_value_keys_values_upper=()\n\
    \    local value_column_value_keys_values_lower=()\n    local value_column_value_keys_values_upper=()\n\
    \    local key_column_value_keys_values_values=()\n    local value_column_value_keys_values_values=()\n\
    \    local key_column_value_keys_values_values_lower=()\n    local key_column_value_keys_values_values_upper=()\n\
    \    local value_column_value_keys_values_values_lower=()\n    local value_column_value_keys_values_values_upper=()\n\
    \    local key_column_value_keys_values_values_values=()\n    local value_column_value_keys_values_values_values=()\n\
    \    local key_column_value_keys_values_values_values_lower=()\n    local key_column_value_keys_values_values_values_upper=()\n\
    \    local value_column_value_keys_values_values_values_lower=()\n    local value_column_value_keys_values_values_values_upper=()\n\
    \    local key_column_value_keys_values_values_values_values=()\n    local value_column_value_keys_values_values_values_values=()\n\
    \    local key_column_value_keys_values_values_values_values_lower=()\n    local\
    \ key_column_value_keys_values_values_values_values_upper=()\n    local value_column_value_keys_values_values_values_values_lower=()\n\
    \    local value_column_value_key", "    local csv_line=$1\n    local csv_line_array=($csv_line)\n\
    \    local key_value_pair\n    local key_value_pair_array\n    local key_value_pair_array_length\n\
    \    local key_value_pair_array_length_index\n    local key_value_pair_array_length_index2\n\
    \    local key_value_pair_array_length_index3\n    local key_value_pair_array_length_index4\n\
    \    local key_value_pair_array_length_index5\n    local key_value_pair_array_length_index6\n\
    \    local key_value_pair_array_length_index7\n    local key_value_pair_array_length_index8\n\
    \    local key_value_pair_array_length_index9\n    local key_value_pair_array_length_index10\n\
    \    local key_value_pair_array_length_index11\n    local key_value_pair_array_length_index12\n\
    \    local key_value_pair_array_length_index13\n    local key_value_pair_array_length_index14\n\
    \    local key_value_pair_array_length_index15\n    local key_value_pair_array_length_index16\n\
    \    local key_value_pair_array_length_index17\n    local key_value_pair_array_length_index18\n\
    \    local key_value_pair_array_length_index19\n    local key_value_pair_array_length_index20\n\
    \    local key_value_pair_array_length_index21\n    local key_value_pair_array_length_index22\n\
    \    local key_value_pair_array_length_index23\n    local key_value_pair_array_length_index24\n\
    \    local key_value_pair_array_length_index25\n    local key_value_pair_array_length_index26\n\
    \    local key_value_pair_array_length_index27\n    local key_value_pair_array_length_index28\n\
    \    local key_value_pair_array_length_index29\n    local key_value_pair_array_length_index30\n\
    \    local key_value_pair_array_length_index31\n    local key_value_pair_array_length_index32\n\
    \    local key_value_pair_array_length_index33\n    local key_value_pair_array_length_index34\n\
    \    local key_value_pair_array_length_index35\n    local key_value_pair_array_length_index36\n\
    \    local key_value_pair_array_length_index37\n    local key_value_pair_array_length_index38\n\
    \    local key_value_pair_array_length_index39\n    local key_value_pair_array_length_index40\n\
    \    local key_value_pair_array_length_index41\n    local key_value_pair_array_length_index42\n\
    \    local key_value_pair_array_length_index43\n    local key_value_pair_array_length_index44\n\
    \    local key_value_pair_array_length_index45\n    local key_value_pair_array_length_index46\n\
    \    local key_value_pair_array_length_index47\n    local key_value_pair_", " \
    \   local csv_line=$1\n    local csv_line_keys=$2\n    local csv_line_values=$3\n\
    \    local csv_line_count=$((${#csv_line_keys}+${#csv_line_values}))\n    local\
    \ csv_line_char_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_char_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_char_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_key_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_key_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_char_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_char_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_key_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_key_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_val_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_val_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_val_char_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_val_char_count=$((${#csv_line_keys}*2))\n    local\
    \ csv_line_upper_val_val_key_count=$((${#csv_line_keys}*2))\n    local csv_line_lower_val_val_key_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_upper_val_val_val_count=$((${#csv_line_keys}*2))\n    local\
    \ csv_line_lower_val_val_val_count=$((${#csv_line_keys}*2))\n    local csv_line_upper_val_val_val_char_count=$((${#csv_line_keys}*2))\n\
    \    local csv_line_lower_val_val_val_char_count=$((${#csv_line_keys}*2))\n  \
    \  local csv_line_upper_val_val_val_key_count=$((${#csv_line_keys}*2))\n    local\
    \ csv_line_lower_val_val_val_key_", "    local csv_line=$1\n    local csv_line_count=$((${#csv_line}\
    \ / 2))\n    local csv_line_first_key=${csv_line:0:1}\n    local csv_line_second_key=${csv_line:1:1}\n\
    \    local csv_line_first_key_upper=$(echo $csv_line_first_key | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_line_second_key_upper=$(echo $csv_line_second_key\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_lower=$(echo $csv_line_first_key\
    \ | tr '[:lower:]' '[:upper:]')\n    local csv_line_second_key_lower=$(echo $csv_line_second_key\
    \ | tr '[:lower:]' '[:upper:]')\n    local csv_line_first_key_equal=$(echo $csv_line_first_key\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_equal=$(echo $csv_line_second_key\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_first_key_not_equal=$(echo\
    \ $csv_line_first_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_second_key_not_equal=$(echo\
    \ $csv_line_second_key | tr '[:upper:]' '[:lower:]')\n    local csv_line_", " \
    \   local keys=$(echo $1 | tr \",\" \"\\n\")\n    local lower=$(echo $keys | tr\
    \ [A-Z] [a-z])\n    local upper=$(echo $keys | tr [a-z] [A-Z])\n    local empty=$(echo\
    \ $keys | wc -l | tr -d ' ')\n    if [[ $empty -eq 0 ]]; then\n        echo \"\
    false\"\n    else\n        echo \"true\"\n    fi", "  local csv_lines=$1\n  local\
    \ csv_headers=$2\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/", "    local key\n    local value\n    local count\n    local lower\n  \
    \  local upper\n    local lowercount\n    local uppercount\n    local lowerlower\n\
    \    local upperupper\n    local lowerupper\n    local upperlower\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperlower\n    local upperupperlower\n\
    \    local lowerupperlower\n    local upperlowercount\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperupper\n    local upperlowerlower\n\
    \    local lowerupperupper\n    local lowerlowercount\n    local upperuppercount\n\
    \    local lowerupperlower\n    local upperupperlower\n    local lowerupperupper\n\
    \    local lowerlowercount\n    local upperuppercount\n    local lowerupperlower\n\
    \    local upperupperlower\n    local lowerupperupper\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperlower\n    local upperupperlower\n\
    \    local lowerupperupper\n    local lowerlowercount\n    local upperuppercount\n\
    \    local lowerupperlower\n    local upperupperlower\n    local lowerupperupper\n\
    \    local lowerlowercount\n    local upperuppercount\n    local lowerupperlower\n\
    \    local upperupperlower\n    local lowerupperupper\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperlower\n    local upperupperlower\n\
    \    local lowerupperupper\n    local lowerlowercount\n    local upperuppercount\n\
    \    local lowerupperlower\n    local upperupperlower\n    local lowerupperupper\n\
    \    local lowerlowercount\n    local upperuppercount\n    local lowerupperlower\n\
    \    local upperupperlower\n    local lowerupperupper\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperlower\n    local upperupperlower\n\
    \    local lowerupperupper\n    local lowerlowercount\n    local upperuppercount\n\
    \    local lowerupperlower\n    local upperupperlower\n    local lowerupperupper\n\
    \    local lowerlowercount\n    local upperuppercount\n    local lowerupperlower\n\
    \    local upperupperlower\n    local lowerupperupper\n    local lowerlowercount\n\
    \    local upperuppercount\n    local lowerupperlower\n    local upperupperlower\n\
    \    local lowerupperupper\n    local lowerlowercount\n    local upperuppercount\n\
    \    local lowerupperlower\n    local upperupperlower\n    local lowerupperupper\n\
    \    local lowerlowercount\n", "    local csv=$1\n    local keys=$(echo $csv |\
    \ awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo $lower | wc\
    \ -w)\n    local uppercount=$(echo $upper | wc -w)\n    local count=$(echo $keys\
    \ | wc -w)\n    if [ $count -eq 0 ]\n    then\n        echo \"$csv is empty\"\n\
    \        exit 0\n    fi\n    if [ $lowercount -eq $lowercount ]\n    then\n  \
    \      echo \"$csv is all lower case\"\n        exit 0\n    fi\n    if [ $uppercount\
    \ -eq $uppercount ]\n    then\n        echo \"$csv is all upper case\"\n     \
    \   exit 0\n    fi\n    echo \"$csv is mixed case\"\n    exit 0", "    local csv=$1\n\
    \    local keys=$(head -n 1 $csv | cut -d, -f1)\n    local values=$(head -n 1\
    \ $csv | cut -d, -f2)\n    local lower\n    local upper\n    lower=$(echo $keys\
    \ | tr [A-Z] [a-z])\n    upper=$(echo $keys | tr [a-z] [A-Z])\n    lower=$(echo\
    \ $values | tr [A-Z] [a-z])\n    upper=$(echo $values | tr [a-z] [A-Z])\n    lower=$(echo\
    \ $lower | tr '[:upper:]' '[:lower:]')\n    upper=$(echo $upper | tr '[:upper:]'\
    \ '[:lower:]')\n    lower=$(echo $lower | tr '[:upper:]' '[:lower:]')\n    upper=$(echo\
    \ $upper | tr '[:upper:]' '[:lower:]')\n    if [ -z \"$keys\" ]; then\n      \
    \  echo \"$csv is empty\"\n        return false\n    elif [ \"$lower\" != \"$keys\"\
    \ ] || [ \"$upper\" != \"$keys\" ]; then\n        echo \"$csv is not all strings\
    \ in lower case\"\n        return false\n    elif [ \"$lower\" != \"$values\"\
    \ ] || [ \"$upper\" != \"$values\" ]; then\n        echo \"$csv is not all strings\
    \ in upper case\"\n        return false\n    else\n        echo \"$csv is all\
    \ strings in lower or upper case\"\n        return true\n    fi", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local vals=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local lower_in=$(echo\
    \ $lower)\n    local upper_in=$(echo $upper)\n    local lower_in_all=$(echo $lower_in)\n\
    \    local upper_in_all=$(echo $upper_in)\n    local lower_in_any=$(echo $lower_in_all)\n\
    \    local upper_in_any=$(echo $upper_in_all)\n    local lower_in_any_all=$(echo\
    \ $lower_in_any)\n    local upper_in_any_all=$(echo $upper_in_any)\n    local\
    \ lower_in_any_any=$(echo $lower_in_any_all)\n    local upper_in_any_any=$(echo\
    \ $upper_in_any_all)\n    local lower_in_any_any_all=$(echo $lower_in_any_any)\n\
    \    local upper_in_any_any_all=$(echo $upper_in_any_any)\n    local lower_in_any_any_any=$(echo\
    \ $lower_in_any_any_all)\n    local upper_in_any_any_any=$(echo $upper_in_any_any_all)\n\
    \    local lower_in_any_any_any_all=$(echo $lower_in_any_any_any)\n    local upper_in_any_any_any_all=$(echo\
    \ $upper_in_any_any_any)\n    local lower_in_any_any_any_any=$(echo $lower_in_any_any_any_all)\n\
    \    local upper_in_any_any_any_any=$(echo $upper_in_any_any_any_all)\n    local\
    \ lower_in_any_any_any_any_all=$(echo $lower_in_any_any_any_any)\n    local upper_in_any_any_any_any_all=$(echo\
    \ $upper_in_any_any_any_any)\n    local lower_in_any_any_any_any_any=$(echo $lower_in_any_any_any_any_all)\n\
    \    local upper_in_any_any_any_any_any=$(echo $upper_in_any_any_any_any_all)\n\
    \    local lower_in_any_any_any_any_any_all=$(echo $lower_in_any_any_any_any_any_all)\n\
    \    local upper_in_any_any_any_any_any_all=$(echo $upper_in_any_any_any_any_any_all)\n\
    \    local lower_in_any_any_any_any_any_any=$(echo $lower_in_any_any_any_any_any_any_all)\n\
    \    local upper_in_any_any_any_any_any_any=$(echo $upper_in_any_any_any_any_any_any_all)\n\
    \    local lower_in_any_any_any_any_any_any_all=$(echo $lower_in_any_any_any_any_any_any_any_any_all)\n\
    \    local upper_in_any_any_any_any_any_", "    local csv=$1\n    local keys=$2\n\
    \    local lower=$3\n    local upper=$4\n    local result=false\n    local line\n\
    \    local key\n    local value\n    local keylen\n    local valuelen\n    local\
    \ keychar\n    local valuechar\n    local keychars\n    local valuechars\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local keycharslen\n    local\
    \ valuecharslen\n    local keycharslen\n    local valuecharslen\n    local keycharslen\n\
    \    local valuecharslen\n    local keycharslen\n    local valuecharslen\n   \
    \ local keycharslen\n    local valuecharslen\n    local key", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=false\n    local upper=false\n    local\
    \ fail=false\n    local count=0\n    local key\n    local value\n    local lower\n\
    \    local upper\n    \n    for (( i=0; i<${#keys}; i++ )); do\n        key=${keys[i]}\n\
    \        value=${values[i]}\n        if [[ $key =~ ^[A-Z]$ ]]; then\n        \
    \    lower=true\n        else\n            lower=false\n        fi\n        if\
    \ [[ $value =~ ^[A-Z]$ ]]; then\n            upper=true\n        else\n      \
    \      upper=false\n        fi\n        if [[ $lower == $upper ]]; then\n    \
    \        fail=true\n        fi\n        count=$(( count+1 ))\n    done\n    if\
    \ [[ $count -eq 0 ]]; then\n        fail=true\n    fi\n    if [[ $fail == true\
    \ ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
  "    local csv_line=\"$1\"\n    local keys=\"$2\"\n    local lower=\"$(echo $keys\
    \ | tr '[:upper:]' '[:lower:]')\"\n    local upper=\"$(echo $keys | tr '[:lower:]'\
    \ '[:upper:]')\"\n    local len_keys=\"$(echo $keys | wc -c)\"\n    local len_lower=\"\
    $(echo $lower | wc -c)\"\n    local len_upper=\"$(echo $upper | wc -c)\"\n   \
    \ local len=\"$(echo $len_keys + $len_lower + $len_upper | bc)\"\n    if [ \"\
    $len\" -eq \"0\" ]; then\n        echo \"$csv_line\"\n    else\n        echo \"\
    $csv_line\" | grep -E \"^$lower$|^$upper$\"\n    fi", "    local csv=$1\n    local\
    \ keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk\
    \ -F, '{print $2}')\n    local lower=false\n    local upper=false\n    local fail=false\n\
    \    local fail_keys=()\n    local fail_values=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n",
  "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g'\
    \ | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed\
    \ 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n  \
    \  local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g' | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g'\
    \ | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' |\
    \ sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed\
    \ 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/^/#/')\n\
    \    ", "    local keys=$(echo \"$1\" | sed 's/,/ /g' | awk '{print $1}')\n  \
    \  local vals=$(echo \"$1\" | sed 's/,/ /g' | awk '{print $2}')\n    local lower=$(echo\
    \ \"$keys\" | tr '[:upper:]' '[:lower:]')\n    local upper=$(echo \"$keys\" |\
    \ tr '[:lower:]' '[:upper:]')\n    local len=${#keys[@]}\n    local i=0\n    while\
    \ [ $i -lt $len ]; do\n        if [[ ${keys[$i]} == ${lower} ]]; then\n      \
    \      echo \"true\"\n            return 0\n        fi\n        if [[ ${keys[$i]}\
    \ == ${upper} ]]; then\n            echo \"true\"\n            return 0\n    \
    \    fi\n        i=$((i+1))\n    done\n    echo \"false\"\n    return 1", "  \
    \  local csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local\
    \ values=$(echo $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk\
    \ '{print tolower($0)}')\n    local upper=$(echo $keys | awk '{print toupper($0)}')\n\
    \    local lowercount=$(echo $lower | wc -w)\n    local uppercount=$(echo $upper\
    \ | wc -w)\n    local lowerlower=$(echo $lower | awk '{print tolower($0)}')\n\
    \    local upperupper=$(echo $upper | awk '{print toupper($0)}')\n    local lowerlowercount=$(echo\
    \ $lowerlower | wc -w)\n    local upperuppercount=$(echo $upperupper | wc -w)\n\
    \    local lowerupper=$(echo $lower | awk '{print tolower($0)}')\n    local upperuppercount=$(echo\
    \ $upperupper | wc -w)\n    local lowerlowerlower=$(echo $lowerlower | awk '{print\
    \ tolower($0)}')\n    local upperupperlower=$(echo $upperupper | awk '{print tolower($0)}')\n\
    \    local lowerupperupper=$(echo $lowerupper | awk '{print toupper($0)}')\n \
    \   local upperupperlower=$(echo $upperupper | awk '{print toupper($0)}')\n  \
    \  local lowerlowerlowercount=$(echo $lowerlowerlower | wc -w)\n    local upperupperuppercount=$(echo\
    \ $upperupperupper | wc -w)\n    local lowerupperupper=$(echo $lowerupper | awk\
    \ '{print toupper($0)}')\n    local upperupperlower=$(echo $upperupper | awk '{print\
    \ toupper($0)}')\n    local lowerlowerlowerlower=$(echo $lowerlowerlower | awk\
    \ '{print tolower($0)}')\n    local upperupperupperlower=$(echo $upperupperupper\
    \ | awk '{print tolower($0)}')\n    local lowerupperupperlower=$(echo $lowerupperupper\
    \ | awk '{print tolower($0)}')\n    local upperupperupperlower=$(echo $upperupperupper\
    \ | awk '{print tolower($0)}')\n    local lowerlowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupperlower=$(echo $upperupperupper\
    \ | awk '{print tolower($0)}')\n    local lowerupperupperlower=$(echo $lowerupperupper\
    \ | awk '{print tolower($0)}')\n    local upperupperupper", "    local csv_lines=$1\n\
    \    local csv_headers=$2\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\\
    n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"\
    /' | sed 's/$/\"/')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g'\
    \ | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g' | sed 's/^/\"/' | sed 's/$/\"/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n", "    local csv_line=$1\n    local csv_lines=$2\n\
    \    local key_col=0\n    local val_col=1\n    local key_val\n    local val_val\n\
    \    local key_vals=()\n    local val_vals=()\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    local key_val\n    local val_val\n\
    \    local key_val\n    local val_val\n    ", "    local csv_line=\"$1\"\n   \
    \ local csv_key=\"$2\"\n    local csv_val=\"$3\"\n    local csv_keys=$(echo $csv_line\
    \ | cut -d ',' -f 1)\n    local csv_vals=$(echo $csv_line | cut -d ',' -f 2)\n\
    \    local csv_keys_lower=$(echo $csv_keys | tr '[:upper:]' '[:lower:]')\n   \
    \ local csv_vals_lower=$(echo $csv_vals | tr '[:upper:]' '[:lower:]')\n    local\
    \ csv_keys_upper=$(echo $csv_keys | tr '[:lower:]' '[:upper:]')\n    local csv_vals_upper=$(echo\
    \ $csv_vals | tr '[:lower:]' '[:upper:]')\n    local csv_keys_equal=$(echo $csv_keys_lower\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_vals_equal=$(echo $csv_vals_lower\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_keys_not_equal=$(echo $csv_keys_upper\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_vals_not_equal=$(echo $csv_vals_upper\
    \ | tr '[:upper:]' '[:lower:]')\n    local csv_keys_empty=$(echo $csv_keys | tr\
    \ '[:upper:]' '[:lower:]')\n    local csv_vals_empty=$(echo $csv_vals | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_vals_not_empty=$(echo $csv_vals | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_vals_not_empty=$(echo $csv_vals | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_vals_not_empty=$(echo $csv_vals | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_vals_not_empty=$(echo $csv_vals | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_vals_not_empty=$(echo $csv_vals | tr '[:lower:]'\
    \ '[:upper:]')\n    local csv_keys_not_empty=$(echo $csv_keys | tr '[:upper:]'\
    \ '[:lower:]')", "    local csv_lines=$1\n    local keys=$2\n    local upper_case_keys=$3\n\
    \    local lower_case_keys=$4\n    local empty_lines=$5\n    local num_lines=$6\n\
    \    local num_upper_case=$7\n    local num_lower_case=$8\n    local num_empty_lines=$9\n\
    \    local num_keys=$10\n    local num_upper_case_keys=$11\n    local num_lower_case_keys=$12\n\
    \    local num_empty_line_keys=$13\n    local num_upper_case_vals=$14\n    local\
    \ num_lower_case_vals=$15\n    local num_empty_line_vals=$16\n    local num_upper_case_keys_in_line=$17\n\
    \    local num_lower_case_keys_in_line=$18\n    local num_empty_line_keys_in_line=$19\n\
    \    local num_upper_case_vals_in_line=$20\n    local num_lower_case_vals_in_line=$21\n\
    \    local num_empty_line_vals_in_line=$22\n    local num_upper_case_keys_in_line_vals=$23\n\
    \    local num_lower_case_keys_in_line_vals=$24\n    local num_empty_line_keys_in_line_vals=$25\n\
    \    local num_upper_case_vals_in_line_vals=$26\n    local num_lower_case_vals_in_line_vals=$27\n\
    \    local num_empty_line_vals_in_line_vals=$28\n    local num_upper_case_keys_in_line_vals_keys=$29\n\
    \    local num_lower_case_keys_in_line_vals_keys=$30\n    local num_empty_line_keys_in_line_vals_keys=$31\n\
    \    local num_upper_case_vals_in_line_vals_keys=$32\n    local num_lower_case_vals_in_line_vals_keys=$33\n\
    \    local num_empty_line_vals_in_line_vals_keys=$34\n    local num_upper_case_keys_in_line_vals_vals=$35\n\
    \    local num_lower_case_keys_in_line_vals_vals=$36\n    local num_empty_line_keys_in_line_vals_vals=$37\n\
    \    local num_upper_case_vals_in_line_vals_vals=$38\n    local num_lower_case_vals_in_line_vals_vals=$39\n\
    \    local num_empty_line_vals_in_line_vals_vals=$40\n    local num_upper_case_keys_in_line_vals_vals_keys=$41\n\
    \    local num_lower_case_keys_in_line_vals_vals_keys=$42\n    local num_empty_line_keys_in_line_vals_vals_keys=$43\n\
    \    local num_upper_case_vals_in_line_vals_vals_keys=$44", "    local csv=$1\n\
    \    local keys=$2\n    local lower=$3\n    local upper=$4\n    local result=false\n\
    \    local line\n    local key\n    local value\n    local lower\n    local upper\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    local value\n    local key\n    local value\n    local key\n    local value\n\
    \    local key\n    local value\n    local key\n    local value\n    local key\n\
    \    ", "    local csv=$1\n    local keys=$(echo $csv | cut -d',' -f1)\n    local\
    \ values=$(echo $csv | cut -d',' -f2)\n    local result=$(echo $csv | cut -d','\
    \ -f1 | grep -w $keys)\n    local upper=$(echo $csv | cut -d',' -f1 | grep -w\
    \ $keys | cut -d'\"' -f2)\n    local lower=$(echo $csv | cut -d',' -f1 | grep\
    \ -w $keys | cut -d'\"' -f1 | cut -d'\"' -f2)\n    local upper_value=$(echo $csv\
    \ | cut -d',' -f2 | grep -w $values | cut -d'\"' -f2)\n    local lower_value=$(echo\
    \ $csv | cut -d',' -f2 | grep -w $values | cut -d'\"' -f1 | cut -d'\"' -f2)\n\
    \    local upper_result=$(echo $csv | cut -d',' -f2 | grep -w $values | grep -w\
    \ $keys)\n    local lower_result=$(echo $csv | cut -d',' -f2 | grep -w $values\
    \ | grep -w $keys | cut -d'\"' -f2)\n    if [ -z \"$result\" ];\n    then\n  \
    \      echo \"$csv is empty\"\n        return $result\n    fi\n    if [ \"$result\"\
    \ == \"$keys\" ];\n    then\n        if [ \"$upper\" == \"$keys\" ];\n       \
    \ then\n            if [ \"$upper_value\" == \"$values\" ];\n            then\n\
    \                echo \"$csv is all upper case\"\n                return $result\n\
    \            fi\n        fi\n        if [ \"$lower\" == \"$keys\" ];\n       \
    \ then\n            if [ \"$lower_value\" == \"$values\" ];\n            then\n\
    \                echo \"$csv is all lower case\"\n                return $result\n\
    \            fi\n        fi\n    fi\n    if [ \"$upper_result\" == \"$values\"\
    \ ];\n    then\n        if [ \"$upper_result\" == \"$keys\" ];\n        then\n\
    \            if [ \"$upper_value\" == \"$values\" ];\n            then\n     \
    \           echo \"$csv is all upper case\"\n                return $result\n\
    \            fi\n        fi\n    fi\n    if [ \"$lower_result\" == \"$values\"\
    \ ];\n    then\n        if [ \"$lower_result\" == \"$keys\" ];\n        then\n\
    \            if [ \"$lower_value\" == \"$values\" ];\n            then\n     \
    \           echo \"$csv is all lower case\"\n                return $result\n\
    \            fi\n        fi\n    fi\n    echo \"$csv is mixed case\"\n    return\
    \ $result\n", "    local csv_line=\"$1\"\n    local csv_line2=\"$2\"\n    local\
    \ csv_line3=\"$3\"\n    local csv_line4=\"$4\"\n    local csv_line5=\"$5\"\n \
    \   local csv_line6=\"$6\"\n    local csv_line7=\"$7\"\n    local csv_line8=\"\
    $8\"\n    local csv_line9=\"$9\"\n    local csv_line10=\"$10\"\n    local csv_line11=\"\
    $11\"\n    local csv_line12=\"$12\"\n    local csv_line13=\"$13\"\n    local csv_line14=\"\
    $14\"\n    local csv_line15=\"$15\"\n    local csv_line16=\"$16\"\n    local csv_line17=\"\
    $17\"\n    local csv_line18=\"$18\"\n    local csv_line19=\"$19\"\n    local csv_line20=\"\
    $20\"\n    local csv_line21=\"$21\"\n    local csv_line22=\"$22\"\n    local csv_line23=\"\
    $23\"\n    local csv_line24=\"$24\"\n    local csv_line25=\"$25\"\n    local csv_line26=\"\
    $26\"\n    local csv_line27=\"$27\"\n    local csv_line28=\"$28\"\n    local csv_line29=\"\
    $29\"\n    local csv_line30=\"$30\"\n    local csv_line31=\"$31\"\n    local csv_line32=\"\
    $32\"\n    local csv_line33=\"$33\"\n    local csv_line34=\"$34\"\n    local csv_line35=\"\
    $35\"\n    local csv_line36=\"$36\"\n    local csv_line37=\"$37\"\n    local csv_line38=\"\
    $38\"\n    local csv_line39=\"$39\"\n    local csv_line40=\"$40\"\n    local csv_line41=\"\
    $41\"\n    local csv_line42=\"$42\"\n    local csv_line43=\"$43\"\n    local csv_line44=\"\
    $44\"\n    local csv_line45=\"$45\"\n    local csv_line46=\"$46\"\n    local csv_line47=\"\
    $47\"\n    local csv_line48=\"$48\"\n    local csv_line49=\"$49\"\n    local csv_line50=\"\
    $50\"\n    local csv_line51=\"$51\"\n    local csv_line52=\"$52\"\n    local csv_line53=\"\
    $53\"\n    local csv_line54=\"$54\"\n    local csv_line55=\"$55\"\n    local csv_line56=\"\
    $56\"\n    local csv_line57=\"$57\"\n    local csv_line58=\"$58", "    local csv=$1\n\
    \    local keys=$(echo $csv | cut -d',' -f1)\n    local values=$(echo $csv | cut\
    \ -d',' -f2)\n    local lower=$(echo $keys | tr [a-z] [A-Z])\n    local upper=$(echo\
    \ $keys | tr [A-Z] [a-z])\n    local lowercount=$(echo $lower | wc -w)\n    local\
    \ uppercount=$(echo $upper | wc -w)\n    if [[ $lowercount -eq $lowercount &&\
    \ $uppercount -eq $uppercount ]]; then\n        echo \"true\"\n    else\n    \
    \    echo \"false\"\n    fi", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/", "  \
    \  local csv_line=\"$1\"\n    local csv_line_key=\"$2\"\n    local csv_line_value=\"\
    $3\"\n    local csv_line_key_upper=$(echo \"$csv_line_key\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_key_lower=$(echo \"$csv_line_key\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_key_count=$(echo \"$csv_line_key\" | wc -c)\n    local csv_line_key_count_upper=$(echo\
    \ \"$csv_line_key\" | wc -c)\n    local csv_line_key_count_lower=$(echo \"$csv_line_key\"\
    \ | wc -c)\n    local csv_line_key_count_equal=$(echo \"$csv_line_key\" | wc -c)\n\
    \    local csv_line_key_count_not_equal=$(echo \"$csv_line_key\" | wc -c)\n  \
    \  local csv_line_key_count_empty=$(echo \"$csv_line_key\" | wc -c)\n    local\
    \ csv_line_key_count_not_empty=$(echo \"$csv_line_key\" | wc -c)\n    local csv_line_key_count_not_in_list=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_upper=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_lower=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_equal=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_not_equal=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_empty=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_not_empty=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | wc -c)\n    local csv_line_key_count_not_in_list_not_in_list=$(echo\
    \ \"$csv_line_key\" | grep -F -v \"^$csv_line_value$\" | grep -F -v \"^$csv_line_value$\"\
    \ | wc -c)\n    local csv_line_key_count_not_in_list_not_in_", "    local csv_line=\"\
    $1\"\n    local csv_line2=\"$2\"\n    local csv_line3=\"$3\"\n    local csv_line4=\"\
    $4\"\n    local csv_line5=\"$5\"\n    local csv_line6=\"$6\"\n    local csv_line7=\"\
    $7\"\n    local csv_line8=\"$8\"\n    local csv_line9=\"$9\"\n    local csv_line10=\"\
    $10\"\n    local csv_line11=\"$11\"\n    local csv_line12=\"$12\"\n    local csv_line13=\"\
    $13\"\n    local csv_line14=\"$14\"\n    local csv_line15=\"$15\"\n    local csv_line16=\"\
    $16\"\n    local csv_line17=\"$17\"\n    local csv_line18=\"$18\"\n    local csv_line19=\"\
    $19\"\n    local csv_line20=\"$20\"\n    local csv_line21=\"$21\"\n    local csv_line22=\"\
    $22\"\n    local csv_line23=\"$23\"\n    local csv_line24=\"$24\"\n    local csv_line25=\"\
    $25\"\n    local csv_line26=\"$26\"\n    local csv_line27=\"$27\"\n    local csv_line28=\"\
    $28\"\n    local csv_line29=\"$29\"\n    local csv_line30=\"$30\"\n    local csv_line31=\"\
    $31\"\n    local csv_line32=\"$32\"\n    local csv_line33=\"$33\"\n    local csv_line34=\"\
    $34\"\n    local csv_line35=\"$35\"\n    local csv_line36=\"$36\"\n    local csv_line37=\"\
    $37\"\n    local csv_line38=\"$38\"\n    local csv_line39=\"$39\"\n    local csv_line40=\"\
    $40\"\n    local csv_line41=\"$41\"\n    local csv_line42=\"$42\"\n    local csv_line43=\"\
    $43\"\n    local csv_line44=\"$44\"\n    local csv_line45=\"$45\"\n    local csv_line46=\"\
    $46\"\n    local csv_line47=\"$47\"\n    local csv_line48=\"$48\"\n    local csv_line49=\"\
    $49\"\n    local csv_line50=\"$50\"\n    local csv_line51=\"$51\"\n    local csv_line52=\"\
    $52\"\n    local csv_line53=\"$53\"\n    local csv_line54=\"$54\"\n    local csv_line55=\"\
    $55\"\n    local csv_line56=\"$56\"\n    local csv_line57=\"$57\"\n    local csv_line58=\"\
    $58", "    local csv_line=$1\n    local csv_keys=$2\n    local csv_values=$3\n\
    \    local csv_key\n    local csv_value\n    local result\n    local key\n   \
    \ local value\n    local keys_in_lower\n    local keys_in_upper\n    local keys_in_both\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_upper\n    local keys_in_both_lower\n    local keys_in_both_upper\n\
    \    local keys_in_both_lower\n    local keys_in_both_upper\n    ", "    local\
    \ csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local count=0\n\
    \    for (( i=0; i<${#keys[@]}; i++ )); do\n        if [[ ${keys[$i]} == ${lower[$i]}\
    \ ]]; then\n            count=$((count+1))\n        elif [[ ${keys[$i]} == ${upper[$i]}\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    if [[ ${count}\
    \ -eq 0 ]]; then\n        return 0\n    else\n        return 1\n    fi", "   \
    \ local csv_line=$1\n    local csv_line_split=($csv_line)\n    local csv_line_count=$((${#csv_line_split[@]}-1))\n\
    \    local csv_line_key_count=$((${#csv_line_split[@]}/2))\n    local csv_line_key_split=(${csv_line_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n\
    \    local csv_line_key_count=$((${#csv_line_key_split[@]}-1))\n    local csv_line_key_split=(${csv_line_key_split[@]:0:$csv_line_key_count})\n",
  "    local csv_lines=$1\n    local keys=$(echo $csv_lines | awk -F, '{print $1}')\n\
    \    local vals=$(echo $csv_lines | awk -F, '{print $2}')\n    local lowercase_keys=$(echo\
    \ $keys | awk -F, '{print tolower($0)}')\n    local uppercase_keys=$(echo $keys\
    \ | awk -F, '{print toupper($0)}')\n    local lowercase_vals=$(echo $vals | awk\
    \ -F, '{print tolower($0)}')\n    local uppercase_vals=$(echo $vals | awk -F,\
    \ '{print toupper($0)}')\n    local all_lowercase_keys=$(echo $lowercase_keys\
    \ | awk -F, '{print tolower($0)}')\n    local all_uppercase_keys=$(echo $uppercase_keys\
    \ | awk -F, '{print toupper($0)}')\n    local all_lowercase_vals=$(echo $lowercase_vals\
    \ | awk -F, '{print tolower($0)}')\n    local all_uppercase_vals=$(echo $uppercase_vals\
    \ | awk -F, '{print toupper($0)}')\n    local all_keys=$(echo $keys | awk -F,\
    \ '{print tolower($0)}')\n    local all_vals=$(echo $vals | awk -F, '{print tolower($0)}')\n\
    \    local all_lowercase_keys=$(echo $lowercase_keys | awk -F, '{print tolower($0)}')\n\
    \    local all_uppercase_keys=$(echo $uppercase_keys | awk -F, '{print toupper($0)}')\n\
    \    local all_lowercase_vals=$(echo $lowercase_vals | awk -F, '{print tolower($0)}')\n\
    \    local all_uppercase_vals=$(echo $uppercase_vals | awk -F, '{print toupper($0)}')\n\
    \    local all_keys=$(echo $keys | awk -F, '{print tolower($0)}')\n    local all_vals=$(echo\
    \ $vals | awk -F, '{print tolower($0)}')\n    local all_lowercase_keys=$(echo\
    \ $lowercase_keys | awk -F, '{print tolower($0)}')\n    local all_uppercase_keys=$(echo\
    \ $uppercase_keys | awk -F, '{print toupper($0)}')\n    local all_lowercase_vals=$(echo\
    \ $lowercase_vals | awk -F, '{print tolower($0)}')\n    local all_uppercase_vals=$(echo\
    \ $uppercase_vals | awk -F, '{print toupper($", "    local keys=$(echo \"$1\"\
    \ | awk -F, '{print $1}')\n    local vals=$(echo \"$1\" | awk -F, '{print $2}')\n\
    \    local lower=$(echo \"$keys\" | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ \"$keys\" | awk '{print toupper($0)}')\n    local len_keys=$(echo \"$keys\"\
    \ | wc -l)\n    local len_vals=$(echo \"$vals\" | wc -l)\n    local len_lower=$(echo\
    \ \"$lower\" | wc -l)\n    local len_upper=$(echo \"$upper\" | wc -l)\n    if\
    \ [ $len_vals -ne $len_lower -a $len_vals -ne $len_upper ]; then\n        echo\
    \ \"false\"\n    else\n        echo \"true\"\n    fi", "    local csv_line=\"\
    $1\"\n    local csv_key=\"$2\"\n    local csv_val=\"$3\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"\
    $csv_val\"\n    local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n \
    \   local csv_key=\"$csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_val=\"$csv_val\"\n    local csv_key=\"$csv_key\"\n \
    \   local csv_val=\"$csv_val\"\n    local csv_key=\"$", "    local csv_line=\"\
    $1\"\n    local csv_key=\"$2\"\n    local csv_value=\"$3\"\n    local csv_key_lower=\"\
    $(echo \"$csv_key\" | tr '[:upper:]' '[:lower:]')\"\n    local csv_value_lower=\"\
    $(echo \"$csv_value\" | tr '[:upper:]' '[:lower:]')\"\n    local csv_key_upper=\"\
    $(echo \"$csv_key\" | tr '[:lower:]' '[:upper:]')\"\n    local csv_value_upper=\"\
    $(echo \"$csv_value\" | tr '[:lower:]' '[:upper:]')\"\n    local csv_key_lower_in_list=\"\
    $(echo \"$csv_key\" | tr '[:upper:]' '[:lower:]' | grep -F -f <(echo \"$csv_key\"\
    \ | tr '[:upper:]' '[:lower:]') )\"\n    local csv_value_lower_in_list=\"$(echo\
    \ \"$csv_value\" | tr '[:upper:]' '[:lower:]' | grep -F -f <(echo \"$csv_value\"\
    \ | tr '[:upper:]' '[:lower:]') )\"\n    local csv_key_upper_in_list=\"$(echo\
    \ \"$csv_key\" | tr '[:lower:]' '[:upper:]' | grep -F -f <(echo \"$csv_key\" |\
    \ tr '[:lower:]' '[:upper:]') )\"\n    local csv_value_upper_in_list=\"$(echo\
    \ \"$csv_value\" | tr '[:lower:]' '[:upper:]' | grep -F -f <(echo \"$csv_value\"\
    \ | tr '[:lower:]' '[:upper:]') )\"\n    local csv_key_lower_not_in_list=\"$(echo\
    \ \"$csv_key\" | tr '[:upper:]' '[:lower:]' | grep -v -f <(echo \"$csv_key\" |\
    \ tr '[:upper:]' '[:lower:]') )\"\n    local csv_value_lower_not_in_list=\"$(echo\
    \ \"$csv_value\" | tr '[:upper:]' '[:lower:]' | grep -v -f <(echo \"$csv_value\"\
    \ | tr '[:upper:]' '[:lower:]') )\"\n    local csv_key_upper_not_in_list=\"$(echo\
    \ \"$csv_key\" | tr '[:lower:]' '[:upper:]' | grep -v -f <(echo \"$csv_key\" |\
    \ tr '[:lower:]' '[:upper:]') )\"\n    local csv_value_upper_not_in_list=\"$(echo\
    \ \"$csv_value\" | tr '[:lower:]' '[:upper:]' | grep -v -f <(echo \"$csv_value\"\
    \ | tr '[:lower:]' '[:upper:]') )\"\n    local csv_key_lower_in_list_not_in_list=\"",
  "    local csv_line=$1\n    local csv_line_split=($csv_line)\n    local key_found=false\n\
    \    local key_found2=false\n    local key_found3=false\n    local key_found4=false\n\
    \    local key_found5=false\n    local key_found6=false\n    local key_found7=false\n\
    \    local key_found8=false\n    local key_found9=false\n    local key_found10=false\n\
    \    local key_found11=false\n    local key_found12=false\n    local key_found13=false\n\
    \    local key_found14=false\n    local key_found15=false\n    local key_found16=false\n\
    \    local key_found17=false\n    local key_found18=false\n    local key_found19=false\n\
    \    local key_found20=false\n    local key_found21=false\n    local key_found22=false\n\
    \    local key_found23=false\n    local key_found24=false\n    local key_found25=false\n\
    \    local key_found26=false\n    local key_found27=false\n    local key_found28=false\n\
    \    local key_found29=false\n    local key_found30=false\n    local key_found31=false\n\
    \    local key_found32=false\n    local key_found33=false\n    local key_found34=false\n\
    \    local key_found35=false\n    local key_found36=false\n    local key_found37=false\n\
    \    local key_found38=false\n    local key_found39=false\n    local key_found40=false\n\
    \    local key_found41=false\n    local key_found42=false\n    local key_found43=false\n\
    \    local key_found44=false\n    local key_found45=false\n    local key_found46=false\n\
    \    local key_found47=false\n    local key_found48=false\n    local key_found49=false\n\
    \    local key_found50=false\n    local key_found51=false\n    local key_found52=false\n\
    \    local key_found53=false\n    local key_found54=false\n    local key_found55=false\n\
    \    local key_found56=false\n    local key_found57=false\n    local key_found58=false\n\
    \    local key_found59=false\n    local key_found60=false\n    local key_found61=false\n\
    \    local key_found62=false\n    local ", "    local csv_lines=$1\n    local\
    \ csv_headers=$2\n    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' |\
    \ sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed\
    \ 's/ //g' | sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g'\
    \ | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g' | sed 's/ //g' | sed\
    \ 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed\
    \ 's/ //g' | sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g'\
    \ | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed 's/ //g'\
    \ | sed 's/,/ /g' | sed 's/ //g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/ /g' | sed 's/ //g' | sed 's/,/ /g' | sed '", "    local csv=$1\n \
    \   local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lowercase_keys=$(echo $keys | awk '{print\
    \ tolower($0)}')\n    local uppercase_keys=$(echo $keys | awk '{print toupper($0)}')\n\
    \    local lowercase_values=$(echo $values | awk '{print tolower($0)}')\n    local\
    \ uppercase_values=$(echo $values | awk '{print toupper($0)}')\n    if [ -z \"\
    $keys\" ]\n    then\n        echo \"$csv is empty\"\n        false\n    elif [\
    \ -z \"$values\" ]\n    then\n        echo \"$csv is empty\"\n        false\n\
    \    elif [ \"$lowercase_keys\" != \"$keys\" ]\n    then\n        echo \"$csv\
    \ has non-lowercase keys\"\n        false\n    elif [ \"$uppercase_keys\" != \"\
    $keys\" ]\n    then\n        echo \"$csv has non-uppercase keys\"\n        false\n\
    \    elif [ \"$lowercase_values\" != \"$values\" ]\n    then\n        echo \"\
    $csv has non-lowercase values\"\n        false\n    elif [ \"$uppercase_values\"\
    \ != \"$values\" ]\n    then\n        echo \"$csv has non-uppercase values\"\n\
    \        false\n    else\n        true\n    fi", "    local csv=$1\n    local\
    \ keys=$(head -n 1 $csv | cut -d, -f1)\n    local values=$(head -n 1 $csv | cut\
    \ -d, -f2)\n    local lower=$(echo $keys | tr [a-z] [A-Z])\n    local upper=$(echo\
    \ $keys | tr [A-Z] [a-z])\n    local lowerlower=$(echo $lower | tr [a-z] [a-z])\n\
    \    local upperupper=$(echo $upper | tr [A-Z] [A-Z])\n    local lowerupper=$(echo\
    \ $lowerlower | tr [a-z] [A-Z])\n    local upperlower=$(echo $upperupper | tr\
    \ [A-Z] [a-z])\n    local lowerupperlower=$(echo $lowerupper | tr [a-z] [a-z])\n\
    \    local upperlowerupper=$(echo $upperlower | tr [A-Z] [A-Z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [a-z])\n    local lowerupperlower=$(echo $upperupper\
    \ | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo $lowerupper | tr [A-Z] [A-Z])\n\
    \    local lowerupperlower=$(echo $upperlower | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [A-Z])\n    local lowerupperlower=$(echo $upperlower\
    \ | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo $lowerupper | tr [A-Z] [A-Z])\n\
    \    local lowerupperlower=$(echo $upperlower | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [A-Z])\n    local lowerupperlower=$(echo $upperupper\
    \ | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo $lowerupper | tr [A-Z] [A-Z])\n\
    \    local lowerupperlower=$(echo $upperlower | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [A-Z])\n    local lowerupperlower=$(echo $upperupper\
    \ | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo $lowerupper | tr [A-Z] [A-Z])\n\
    \    local lowerupperlower=$(echo $upperlower | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [A-Z])\n    local lowerupperlower=$(echo $upperupper\
    \ | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo $lowerupper | tr [A-Z] [A-Z])\n\
    \    local lowerupperlower=$(echo $upperlower | tr [A-Z] [a-z])\n    local lowerupperupper=$(echo\
    \ $lowerupper | tr [A-Z] [A-Z])\n    local lowerupperlower=$(echo $upperupper\
    \ | tr [A-Z] [a-z])\n    local ", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n    local csv_headers=$(echo\
    \ $csv_headers | sed '", "    local csv_line=$1\n    local csv_lines=$2\n    local\
    \ key_col=0\n    local val_col=1\n    local key_val\n    local val_val\n    local\
    \ key_vals=()\n    local val_vals=()\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    local key_val\n    local val_val\n \
    \   local key_val\n    local val_val\n    ", "    local csv=$1\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local found\n    local\
    \ keycount\n    local valuecount\n    local keycount2\n    local valuecount2\n\
    \    local keycount3\n    local valuecount3\n    local keycount4\n    local valuecount4\n\
    \    local keycount5\n    local valuecount5\n    local keycount6\n    local valuecount6\n\
    \    local keycount7\n    local valuecount7\n    local keycount8\n    local valuecount8\n\
    \    local keycount9\n    local valuecount9\n    local keycount10\n    local valuecount10\n\
    \    local keycount11\n    local valuecount11\n    local keycount12\n    local\
    \ valuecount12\n    local keycount13\n    local valuecount13\n    local keycount14\n\
    \    local valuecount14\n    local keycount15\n    local valuecount15\n    local\
    \ keycount16\n    local valuecount16\n    local keycount17\n    local valuecount17\n\
    \    local keycount18\n    local valuecount18\n    local keycount19\n    local\
    \ valuecount19\n    local keycount20\n    local valuecount20\n    local keycount21\n\
    \    local valuecount21\n    local keycount22\n    local valuecount22\n    local\
    \ keycount23\n    local valuecount23\n    local keycount24\n    local valuecount24\n\
    \    local keycount25\n    local valuecount25\n    local keycount26\n    local\
    \ valuecount26\n    local keycount27\n    local valuecount27\n    local keycount28\n\
    \    local valuecount28\n    local keycount29\n    local valuecount29\n    local\
    \ keycount30\n    local valuecount30\n    local keycount31\n    local valuecount31\n\
    \    local keycount32\n    local valuecount32\n    local keycount33\n    local\
    \ valuecount33\n    local keycount34\n    local valuecount34\n    local keycount35\n\
    \    local valuecount35\n    local keycount36\n    local valuecount36\n    local\
    \ keycount37\n    local valuecount37\n    local keycount38\n    local valuecount38\n\
    \    local keycount39\n    local valuecount39\n    local keycount40\n    local\
    \ valuecount40\n    local keycount41\n    local ", "  local csv_lines=$1\n  local\
    \ csv_headers=$2\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \  local csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed 's/^/#/')\n  local csv_headers=$(echo\
    \ $csv_headers | sed 's/$/#/')\n  local csv_headers=$(echo $csv_headers | sed\
    \ 's/#/\\n/')\n  local csv_headers=$(echo $csv_headers | sed 's/,/\\n/')\n  local\
    \ csv_headers=$(echo $csv_headers | sed '", "    local csv_lines=$1\n    local\
    \ key\n    local value\n    local result\n    local keys_in_lower\n    local keys_in_upper\n\
    \    local keys_in_both\n    local keys_in_both_upper\n    local keys_in_both_lower\n\
    \    local keys_in_both_not_equal\n    local keys_in_both_not_equal_upper\n  \
    \  local keys_in_both_not_equal_lower\n    local keys_in_both_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_upper\n    local keys_in_both_not_equal_not_equal_lower\n\
    \    local keys_in_both_not_equal_not_equal_not_equal\n    local keys_in_both_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_lower\n    local keys_in_both_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_upper\n    local\
    \ keys_in_both_not_equal_not_equal_not_equal_not_equal_lower\n    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_lower\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_lower\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_lower\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_lower\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal\n\
    \    local keys_in_both_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_not_equal_upper\n\
    \    local keys_in_both_not_equal_not_equal_", "    local csv=$1\n    local keys=$(echo\
    \ $csv | awk -F, '{print $1}')\n    local vals=$(echo $csv | awk -F, '{print $2}')\n\
    \    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local lowervals=$(echo $vals | awk '{print\
    \ tolower($0)}')\n    local uppervals=$(echo $vals | awk '{print toupper($0)}')\n\
    \    local lowerlower=$(echo $lowervals | awk '{print tolower($0)}')\n    local\
    \ upperupper=$(echo $uppervals | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo\
    \ $lowerlower | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $upperupperupper\
    \ | awk '{print toupper($0)}')\n    local lowerlowerlower=$(echo $lowerlowerlower\
    \ | awk '{print tolower($0)}')\n    local upperupperupper=$(echo $", "  local\
    \ csv_line\n  local key\n  local value\n  local result\n  local keys_in_lower\n\
    \  local keys_in_upper\n  local keys_in_both\n  local keys_in_both_upper\n  local\
    \ keys_in_both_lower\n  local keys_in_both_not_upper\n  local keys_in_both_not_lower\n\
    \  local keys_in_both_not_both\n  local keys_in_both_not_both_upper\n  local keys_in_both_not_both_lower\n\
    \  local keys_in_both_not_both_not_upper\n  local keys_in_both_not_both_not_lower\n\
    \  local keys_in_both_not_both_not_both\n  local keys_in_both_not_both_not_both_upper\n\
    \  local keys_in_both_not_both_not_both_lower\n  local keys_in_both_not_both_not_both_not_upper\n\
    \  local keys_in_both_not_both_not_both_not_lower\n  local keys_in_both_not_both_not_both_not_both\n\
    \  local keys_in_both_not_both_not_both_not_both_upper\n  local keys_in_both_not_both_not_both_not_both_lower\n\
    \  local keys_in_both_not_both_not_both_not_both_not_upper\n  local keys_in_both_not_both_not_both_not_both_not_lower\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both\n  local keys_in_both_not_both_not_both_not_both_not_both_upper\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both_lower\n  local keys_in_both_not_both_not_both_not_both_not_both_not_upper\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both_not_lower\n  local keys_in_both_not_both_not_both_not_both_not_both_not_both\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both_not_both_upper\n  local\
    \ keys_in_both_not_both_not_both_not_both_not_both_not_both_lower\n  local keys_in_both_not_both_not_both_not_both_not_both_not_both_not_upper\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both_not_both_not_lower\n\
    \  local keys_in_both_not_both_not_both_not_both_not_both_", "  local csv_line=$1\n\
    \  local keys=$2\n  local values=$3\n  local result\n  local key\n  local value\n\
    \  local keylen\n  local valuelen\n  local keychars\n  local valuechars\n  local\
    \ keychar\n  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n\
    \  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n  local\
    \ valuechar\n  local keychars\n  local valuechars\n  local keychar\n  local valuechar\n\
    \  local keychars\n  local valuechars\n  local keychar\n  local valuechar\n  local\
    \ keychars\n  local valuechars\n  local keychar\n  local valuechar\n  local keychars\n\
    \  local valuechars\n  local keychar\n  local valuechar\n  local keychars\n  local\
    \ valuechars\n  local keychar\n  local valuechar\n  local keychars\n  local valuechars\n\
    \  local keychar\n  local valuechar\n  local keychars\n  local valuechars\n  local\
    \ keychar\n  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n\
    \  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n  local\
    \ valuechar\n  local keychars\n  local valuechars\n  local keychar\n  local valuechar\n\
    \  local keychars\n  local valuechars\n  local keychar\n  local valuechar\n  local\
    \ keychars\n  local valuechars\n  local keychar\n  local valuechar\n  local keychars\n\
    \  local valuechars\n  local keychar\n  local valuechar\n  local keychars\n  local\
    \ valuechars\n  local keychar\n  local valuechar\n  local keychars\n  local valuechars\n\
    \  local keychar\n  local valuechar\n  local keychars\n  local valuechars\n  local\
    \ keychar\n  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n\
    \  local valuechar\n  local keychars\n  local valuechars\n  local keychar\n  local\
    \ valuechar\n  local keychars\n  ", "    local csv_line=\"$1\"\n    local csv_key=\"\
    $2\"\n    local csv_val=\"$3\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n \
    \   local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\
    \n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/\
    \ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/\
    \ }\"\n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/\
    \ }\"\n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/\
    \ }\"\n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/\
    \ }\"\n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/\
    \ }\"\n    local csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"\n    local csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//\\\
    \"/ }\"", "    local csv_lines=$1\n    local key_col=1\n    local val_col=2\n\
    \    local key_lower=false\n    local key_upper=false\n    local val_lower=false\n\
    \    local val_upper=false\n    local key\n    local val\n    local key_count\n\
    \    local val_count\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local val_found\n    local key_found\n\
    \    local val_found\n    local key_found\n    local ", "    local csv=$1\n  \
    \  local lower=false\n    local upper=false\n    local key\n    local value\n\
    \    local result\n    IFS=',' read -ra keys <<< \"$csv\"\n    for k in \"${keys[@]}\"\
    ; do\n        IFS=',' read -ra values <<< \"$k\"\n        for v in \"${values[@]}\"\
    ; do\n            key=$(echo \"$v\" | cut -d ',' -f 1)\n            value=$(echo\
    \ \"$v\" | cut -d ',' -f 2)\n            if [ \"$lower\" == \"true\" ]; then\n\
    \                if [ \"$key\" != \"$key\" ]; then\n                    lower=false\n\
    \                fi\n            else\n                if [ \"$key\" == \"$key\"\
    \ ]; then\n                    lower=true\n                fi\n            fi\n\
    \            if [ \"$upper\" == \"true\" ]; then\n                if [ \"$value\"\
    \ != \"$value\" ]; then\n                    upper=false\n                fi\n\
    \            else\n                if [ \"$value\" == \"$value\" ]; then\n   \
    \                 upper=true\n                fi\n            fi\n        done\n\
    \    done\n    if [ \"$lower\" == \"true\" ] && [ \"$upper\" == \"true\" ]; then\n\
    \        result=true\n    else\n        result=false\n    fi\n    echo \"$result\"",
  "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^", "    local csv_line=$1\n\
    \    local keys=$(echo $csv_line | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv_line | awk -F, '{print $2}')\n    local lowercase_keys=$(echo $keys | awk\
    \ '{print tolower($0)}')\n    local uppercase_keys=$(echo $keys | awk '{print\
    \ toupper($0)}')\n    local lowercase_values=$(echo $values | awk '{print tolower($0)}')\n\
    \    local uppercase_values=$(echo $values | awk '{print toupper($0)}')\n    local\
    \ all_lowercase_keys=$(echo $lowercase_keys | awk '{print tolower($0)}')\n   \
    \ local all_uppercase_keys=$(echo $uppercase_keys | awk '{print toupper($0)}')\n\
    \    local all_lowercase_values=$(echo $lowercase_values | awk '{print tolower($0)}')\n\
    \    local all_uppercase_values=$(echo $uppercase_values | awk '{print toupper($0)}')\n\
    \    local all_keys=$(echo $all_lowercase_keys $all_uppercase_keys $all_lowercase_values\
    \ $all_uppercase_values)\n    local all_values=$(echo $all_lowercase_values $all_uppercase_values\
    \ $all_lowercase_keys $all_uppercase_keys)\n    local all_keys_count=$(echo $all_keys\
    \ | wc -l)\n    local all_values_count=$(echo $all_values | wc -l)\n    local\
    \ all_keys_found=$(echo $all_keys | grep -c '^[a-z]')\n    local all_values_found=$(echo\
    \ $all_values | grep -c '^[a-z]')\n    local all_keys_not_found=$(echo $all_keys\
    \ | grep -c '^[A-Z]')\n    local all_values_not_found=$(echo $all_values | grep\
    \ -c '^[A-Z]')\n    local all_keys_found=$(echo $all_keys | grep -c '^[a-z]')\n\
    \    local all_values_found=$(echo $all_values | grep -c '^[a-z]')\n    local\
    \ all_keys_not_found=$(echo $all_keys | grep -c '^[A-Z]')\n    local all_values_not_found=$(echo\
    \ $all_values | grep -c '^[A-Z]')\n    local all_keys_found=$(echo $all_keys |\
    \ grep -c '^[a-z]')\n    local all_values_found=$(echo $all_values | grep -c '^[a-z]')\n\
    \    local all_keys_not_found=$(echo $all_keys | grep -c '^[A-Z]')\n    local\
    \ all_values_not_found=$(echo $all_values | grep -c '^[A-Z]')\n    local all_keys_found=$(echo\
    \ $all_keys | grep -c '^[a-z]')", "    local csv=$1\n    local keys=$2\n    local\
    \ lower=$3\n    local upper=$4\n    local result=$(echo $csv | awk -F, 'BEGIN{OFS=\"\
    ,\"}{for(i=1;i<=NF;i++){if($i~/^'$keys'$/){$i=tolower($i)}else{if($i~/^'$keys'$/){$i=toupper($i)}}}}{print\
    \ }'$lower'$upper'$csv)\n    if [ \"$result\" == \"$csv\" ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local csv=$1\n   \
    \ local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo\
    \ $lower | wc -w)\n    local uppercount=$(echo $upper | wc -w)\n    local count=$(echo\
    \ $keys | wc -w)\n    if [ $count -eq 0 ]\n    then\n        echo \"$csv is empty\"\
    \n        exit 0\n    fi\n    if [ $lowercount -eq $uppercount ]\n    then\n \
    \       echo \"$csv is all lower case\"\n        exit 0\n    fi\n    if [ $lowercount\
    \ -gt $uppercount ]\n    then\n        echo \"$csv is all upper case\"\n     \
    \   exit 0\n    fi\n    echo \"$csv is mixed case\"\n    exit 0", "    local csv=$1\n\
    \    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower=false\n    local upper=false\n    local\
    \ found=false\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
    \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
    \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n\
    \    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n \
    \   local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n  \
    \  local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n   \
    \ local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local\
    \ W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n\
    \    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n \
    \   local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
    \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
    \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n\
    \    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n \
    \   local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n  \
    \  local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n   \
    \ local R=0\n    local S=0\n    local T=0\n    local U=0\n    ", "    local csv_lines=$1\n\
    \    local csv_headers=$2\n    local csv_headers=$(echo $csv_headers | sed 's/,/\
    \ /g')\n    local csv_headers=$(echo $csv_headers | sed 's/^[^,]*//g')\n    local\
    \ csv_headers=$(echo $csv_headers | sed 's/,[^,]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^[^,]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^[^,]*//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,[^,]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^[^,]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^[^,]*//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,[^,]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^[^,]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^[^,]*//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,[^,]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/^[^,]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n\
    \    local ", "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,", "  local csv=$1\n  local\
    \ keys=$(head -n 1 $csv)\n  local values=$(tail -n 1 $csv)\n  local lower=$(echo\
    \ $keys | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local upper=$(echo $keys\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \" | tr \"[A-Z]\" \"[a-z]\")\n  local\
    \ lowerUpper=$(echo $lower | tr \" \" \"\\n\" | sort | tr \"\\n\" \" \")\n  local\
    \ lowerUpperValues=$(echo $lowerUpper | tr \",\" \"\\n\" | sort | tr \"\\n\" \"\
    \ \")\n  local lowerUpperValuesValues=$(echo $lowerUpperValues | tr \",\" \"\\\
    n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValues=$(echo $lowerUpperValuesValues\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValues | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n\
    \  local lowerUpperValuesValuesValuesValuesValues=$(echo $lowerUpperValuesValuesValuesValues\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValues | tr \",\" \"\\n\" | sort | tr \"\\\
    n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValuesValuesValues | tr \",\" \"\\n\" | sort\
    \ | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValues | tr\
    \ \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues=$(echo\
    \ $lowerUpperValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues\
    \ | tr \",\" \"\\n\" | sort | tr \"\\n\" \" \")\n  local lowerUpperValuesValuesValuesValues",
  "    local key\n    local value\n    local result\n    local count\n    local keycount\n\
    \    local keycount2\n    local keycount3\n    local keycount4\n    local keycount5\n\
    \    local keycount6\n    local keycount7\n    local keycount8\n    local keycount9\n\
    \    local keycount10\n    local keycount11\n    local keycount12\n    local keycount13\n\
    \    local keycount14\n    local keycount15\n    local keycount16\n    local keycount17\n\
    \    local keycount18\n    local keycount19\n    local keycount20\n    local keycount21\n\
    \    local keycount22\n    local keycount23\n    local keycount24\n    local keycount25\n\
    \    local keycount26\n    local keycount27\n    local keycount28\n    local keycount29\n\
    \    local keycount30\n    local keycount31\n    local keycount32\n    local keycount33\n\
    \    local keycount34\n    local keycount35\n    local keycount36\n    local keycount37\n\
    \    local keycount38\n    local keycount39\n    local keycount40\n    local keycount41\n\
    \    local keycount42\n    local keycount43\n    local keycount44\n    local keycount45\n\
    \    local keycount46\n    local keycount47\n    local keycount48\n    local keycount49\n\
    \    local keycount50\n    local keycount51\n    local keycount52\n    local keycount53\n\
    \    local keycount54\n    local keycount55\n    local keycount56\n    local keycount57\n\
    \    local keycount58\n    local keycount59\n    local keycount60\n    local keycount61\n\
    \    local keycount62\n    local keycount63\n    local keycount64\n    local keycount65\n\
    \    local keycount66\n    local keycount67\n    local keycount68\n    local keycount69\n\
    \    local keycount70\n    local keycount71\n    local keycount72\n    local keycount73\n\
    \    local keycount74\n    local keycount75\n    local keycount76\n    local keycount77\n\
    \    local keycount78\n    local keycount79\n    local keycount80\n    local keycount81\n\
    \    local keycount82\n    local keycount83", "    local csv_line\n    local csv_key\n\
    \    local csv_value\n    local result\n\n    csv_line=$(echo $1 | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n    csv_line=$(echo $csv_line | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n    csv_line=$(echo $csv_line | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n    csv_line=$(echo $csv_line | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n    csv_line=$(echo $csv_line | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n    csv_line=$(echo $csv_line | sed 's/,/\\\
    n/g')\n    csv_line=$(echo $csv_line | sed 's/^/\"/; s/$/\"/; s/\\n//g')\n   \
    \ csv_line=$(echo $csv_line | sed 's/,/\\n/g')\n    csv_line=$(echo $csv_line\
    \ | sed 's/^/\"/; s/", "    local csv=$1\n    local key\n    local value\n   \
    \ local lower\n    local upper\n    local result\n\n    lower=$(echo $csv | awk\
    \ -F, '{print $1}')\n    upper=$(echo $csv | awk -F, '{print $2}')\n\n    if [\
    \ -z \"$lower\" ] || [ -z \"$upper\" ]; then\n        echo \"$csv is empty\"\n\
    \        exit 0\n    fi\n\n    for key in $lower; do\n        if [ -z \"$key\"\
    \ ]; then\n            echo \"$lower is empty\"\n            exit 0\n        fi\n\
    \    done\n\n    for value in $upper; do\n        if [ -z \"$value\" ]; then\n\
    \            echo \"$upper is empty\"\n            exit 0\n        fi\n    done\n\
    \n    result=$(echo $csv | awk -F, '{print $1 \" \" $2}')\n\n    if [ \"$result\"\
    \ != \"$lower\" ] && [ \"$result\" != \"$upper\" ]; then\n        echo \"$csv\
    \ is not in lower or upper case\"\n        exit 0\n    fi\n\n    echo \"$csv is\
    \ in lower or upper case\"", "    local csv=$1\n    local keys=$(echo $csv | awk\
    \ -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n  \
    \  local lower=$(echo $keys | awk '{print tolower($0)}')\n    local upper=$(echo\
    \ $keys | awk '{print toupper($0)}')\n    local result=$(echo $lower | wc -l |\
    \ awk '{print $1}')\n    local result_upper=$(echo $upper | wc -l | awk '{print\
    \ $1}')\n    if [ $result -eq 0 ]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi", "    local csv_line=\"$1\"\n    local csv_key=\"\
    $2\"\n    local csv_val=\"$3\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"\n    local\
    \ csv_val=\"${csv_val//,/ }\"\n    local csv_key=\"${csv_key//\\\"/ }\"\n    local\
    \ csv_val=\"${csv_val//\\\"/ }\"\n    local csv_key=\"${csv_key//,/ }\"", "  \
    \  local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^[ \\t]*//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    ", "    local csv=$1\n    local keys=$(echo\
    \ $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print\
    \ $2}')\n    local lower\n    local upper\n    local result\n    lower=$(echo\
    \ $keys | awk '{print tolower($0)}')\n    upper=$(echo $keys | awk '{print toupper($0)}')\n\
    \    if [ -z \"$keys\" ]; then\n        result=\"false\"\n    elif [ \"$lower\"\
    \ != \"$keys\" ] || [ \"$upper\" != \"$keys\" ]; then\n        result=\"false\"\
    \n    else\n        result=\"true\"\n    fi\n    echo \"$result\"", "    local\
    \ csv=$1\n    local keys=$(head -n 1 $csv | awk -F, '{print $1}')\n    local values=$(head\
    \ -n 1 $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | tr ',' '\\\
    n' | sort | tr '\\n' ' ')\n    local upper=$(echo $keys | tr ',' '\\n' | sort\
    \ | tr '\\n' '\\n' | tr '[:upper:]' '[:lower:]')\n    local lowercount=$(echo\
    \ $lower | wc -w)\n    local uppercount=$(echo $upper | wc -w)\n    local lowerlower=$(echo\
    \ $lower | tr ',' '\\n' | sort | tr '\\n' ' ')\n    local upperupper=$(echo $upper\
    \ | tr ',' '\\n' | sort | tr '\\n' '\\n' | tr '[:upper:]' '[:upper:]')\n    local\
    \ lowerlowercount=$(echo $lowerlower | wc -w)\n    local upperuppercount=$(echo\
    \ $upperupper | wc -w)\n    if [ $lowercount -eq 0 ]; then\n        echo \"false\"\
    \n    elif [ $lowerlowercount -eq 0 ]; then\n        echo \"false\"\n    elif\
    \ [ $uppercount -eq 0 ]; then\n        echo \"false\"\n    elif [ $upperuppercount\
    \ -eq 0 ]; then\n        echo \"false\"\n    elif [ $lowercount -eq $lowerlowercount\
    \ -a $lowercount -eq $loweruppercount -a $lowerlowercount -eq $uppercount -a $upperuppercount\
    \ -a $uppercount -eq $upperuppercount ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local csv_line=\"$1\"\n    local csv_line2=\"\
    $2\"\n    local csv_line3=\"$3\"\n    local csv_line4=\"$4\"\n    local csv_line5=\"\
    $5\"\n    local csv_line6=\"$6\"\n    local csv_line7=\"$7\"\n    local csv_line8=\"\
    $8\"\n    local csv_line9=\"$9\"\n    local csv_line10=\"$10\"\n    local csv_line11=\"\
    $11\"\n    local csv_line12=\"$12\"\n    local csv_line13=\"$13\"\n    local csv_line14=\"\
    $14\"\n    local csv_line15=\"$15\"\n    local csv_line16=\"$16\"\n    local csv_line17=\"\
    $17\"\n    local csv_line18=\"$18\"\n    local csv_line19=\"$19\"\n    local csv_line20=\"\
    $20\"\n    local csv_line21=\"$21\"\n    local csv_line22=\"$22\"\n    local csv_line23=\"\
    $23\"\n    local csv_line24=\"$24\"\n    local csv_line25=\"$25\"\n    local csv_line26=\"\
    $26\"\n    local csv_line27=\"$27\"\n    local csv_line28=\"$28\"\n    local csv_line29=\"\
    $29\"\n    local csv_line30=\"$30\"\n    local csv_line31=\"$31\"\n    local csv_line32=\"\
    $32\"\n    local csv_line33=\"$33\"\n    local csv_line34=\"$34\"\n    local csv_line35=\"\
    $35\"\n    local csv_line36=\"$36\"\n    local csv_line37=\"$37\"\n    local csv_line38=\"\
    $38\"\n    local csv_line39=\"$39\"\n    local csv_line40=\"$40\"\n    local csv_line41=\"\
    $41\"\n    local csv_line42=\"$42\"\n    local csv_line43=\"$43\"\n    local csv_line44=\"\
    $44\"\n    local csv_line45=\"$45\"\n    local csv_line46=\"$46\"\n    local csv_line47=\"\
    $47\"\n    local csv_line48=\"$48\"\n    local csv_line49=\"$49\"\n    local csv_line50=\"\
    $50\"\n    local csv_line51=\"$51\"\n    local csv_line52=\"$52\"\n    local csv_line53=\"\
    $53\"\n    local csv_line54=\"$54\"\n    local csv_line55=\"$55\"\n    local csv_line56=\"\
    $56\"\n    local csv_line57=\"$57\"\n    local csv_line58=\"$58", "    local csv=$1\n\
    \    local key\n    local value\n    local lower\n    local upper\n    local found\n\
    \    local count\n    local keycount\n    local keycount2\n    local keycount3\n\
    \    local keycount4\n    local keycount5\n    local keycount6\n    local keycount7\n\
    \    local keycount8\n    local keycount9\n    local keycount10\n    local keycount11\n\
    \    local keycount12\n    local keycount13\n    local keycount14\n    local keycount15\n\
    \    local keycount16\n    local keycount17\n    local keycount18\n    local keycount19\n\
    \    local keycount20\n    local keycount21\n    local keycount22\n    local keycount23\n\
    \    local keycount24\n    local keycount25\n    local keycount26\n    local keycount27\n\
    \    local keycount28\n    local keycount29\n    local keycount30\n    local keycount31\n\
    \    local keycount32\n    local keycount33\n    local keycount34\n    local keycount35\n\
    \    local keycount36\n    local keycount37\n    local keycount38\n    local keycount39\n\
    \    local keycount40\n    local keycount41\n    local keycount42\n    local keycount43\n\
    \    local keycount44\n    local keycount45\n    local keycount46\n    local keycount47\n\
    \    local keycount48\n    local keycount49\n    local keycount50\n    local keycount51\n\
    \    local keycount52\n    local keycount53\n    local keycount54\n    local keycount55\n\
    \    local keycount56\n    local keycount57\n    local keycount58\n    local keycount59\n\
    \    local keycount60\n    local keycount61\n    local keycount62\n    local keycount63\n\
    \    local keycount64\n    local keycount65\n    local keycount66\n    local keycount67\n\
    \    local keycount68\n    local keycount69\n    local keycount70\n    local keycount71\n\
    \    local keycount72\n    local keycount73\n    local keycount74\n    local keycount75\n\
    \    local keycount76\n    local keycount77\n    local keycount78\n    local keycount79\n\
    \    local keycount80\n    local key", "    local csv_lines=$1\n    local dict_lines=$2\n\
    \    local dict_keys=$3\n    local dict_values=$4\n    local dict_case=$5\n  \
    \  local dict_case_keys=$6\n    local dict_case_values=$7\n    local dict_case_lower=$8\n\
    \    local dict_case_upper=$9\n    local dict_case_count=${10}\n    local dict_case_lower=${11}\n\
    \    local dict_case_upper=${12}\n    local dict_case_count=${13}\n    local dict_case_lower=${14}\n\
    \    local dict_case_upper=${15}\n    local dict_case_count=${16}\n    local dict_case_lower=${17}\n\
    \    local dict_case_upper=${18}\n    local dict_case_count=${19}\n    local dict_case_lower=${20}\n\
    \    local dict_case_upper=${21}\n    local dict_case_count=${22}\n    local dict_case_lower=${23}\n\
    \    local dict_case_upper=${24}\n    local dict_case_count=${25}\n    local dict_case_lower=${26}\n\
    \    local dict_case_upper=${27}\n    local dict_case_count=${28}\n    local dict_case_lower=${29}\n\
    \    local dict_case_upper=${30}\n    local dict_case_count=${31}\n    local dict_case_lower=${32}\n\
    \    local dict_case_upper=${33}\n    local dict_case_count=${34}\n    local dict_case_lower=${35}\n\
    \    local dict_case_upper=${36}\n    local dict_case_count=${37}\n    local dict_case_lower=${38}\n\
    \    local dict_case_upper=${39}\n    local dict_case_count=${40}\n    local dict_case_lower=${41}\n\
    \    local dict_case_upper=${42}\n    local dict_case_count=${43}\n    local dict_case_lower=${44}\n\
    \    local dict_case_upper=${45}\n    local dict_case_count=${46}\n    local dict_case_lower=${47}\n\
    \    local dict_case_upper=${48}\n    local dict_case_count=${49}\n    local dict_case_lower=${50}\n\
    \    local dict_case_upper=${51}\n    local dict_case_count=${52}\n    local dict_case_lower=${53}\n\
    \    local dict_case_upper=${54}\n    local dict_case_count=${55}\n    local dict_case_lower=${56}\n\
    \    local dict_case_upper=${57}\n    local dict_case_count=${58}", "    local\
    \ csv=$1\n    local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo\
    \ $csv | awk -F, '{print $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n\
    \    local upper=$(echo $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo\
    \ $lower | wc -w)\n    local uppercount=$(echo $upper | wc -w)\n    if [[ $lowercount\
    \ == $lowercount && $uppercount == $uppercount ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local csv=$1\n    local keys=$(echo\
    \ $csv | awk -F, '{print $1}')\n    local values=$(echo $csv | awk -F, '{print\
    \ $2}')\n    local lower=$(echo $keys | awk '{print tolower($0)}')\n    local\
    \ upper=$(echo $keys | awk '{print toupper($0)}')\n    local lowercount=$(echo\
    \ $lower | wc -w)\n    local uppercount=$(echo $upper | wc -w)\n    if [ $lowercount\
    \ -eq $lowercount -o $uppercount -eq $uppercount ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local csv=$1\n    local key\n\
    \    local value\n    local lower\n    local upper\n    local found\n    local\
    \ keylen\n    local valuelen\n    local lowerlen\n    local upperlen\n    local\
    \ keylen2\n    local valuelen2\n    local lowerlen2\n    local upperlen2\n   \
    \ local found2\n    local found3\n    local found4\n    local found5\n    local\
    \ found6\n    local found7\n    local found8\n    local found9\n    local found10\n\
    \    local found11\n    local found12\n    local found13\n    local found14\n\
    \    local found15\n    local found16\n    local found17\n    local found18\n\
    \    local found19\n    local found20\n    local found21\n    local found22\n\
    \    local found23\n    local found24\n    local found25\n    local found26\n\
    \    local found27\n    local found28\n    local found29\n    local found30\n\
    \    local found31\n    local found32\n    local found33\n    local found34\n\
    \    local found35\n    local found36\n    local found37\n    local found38\n\
    \    local found39\n    local found40\n    local found41\n    local found42\n\
    \    local found43\n    local found44\n    local found45\n    local found46\n\
    \    local found47\n    local found48\n    local found49\n    local found50\n\
    \    local found51\n    local found52\n    local found53\n    local found54\n\
    \    local found55\n    local found56\n    local found57\n    local found58\n\
    \    local found59\n    local found60\n    local found61\n    local found62\n\
    \    local found63\n    local found64\n    local found65\n    local found66\n\
    \    local found67\n    local found68\n    local found69\n    local found70\n\
    \    local found71\n    local found72\n    local found73\n    local found74\n\
    \    local found75\n    local found76\n    local found77\n    local found78\n\
    \    local found79\n    local found80\n    local found81\n    local found82\n\
    \    local found83\n    local found84\n    local found85\n    local found86\n\
    \    local found87\n    local found88\n    local found89\n    local ", "    local\
    \ csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,", "    local csv_lines=$(echo \"$1\" | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')\n\
    \    local csv_headers=$(echo \"$1\" | sed 's/,/\\n/g' | awk -F, '{print $1}')",
  "    local csv_lines=$1\n    local csv_headers=$2\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^[^,]*//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[^,]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed 's/,$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | ", "    local csv_lines=$1\n    local\
    \ csv_headers=$2\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/ //g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^,//g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/,$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/^$//g')\n   \
    \ local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/,/", "    local csv=$1\n    local keys=$(echo $csv | awk -F, '{print\
    \ $1}')\n    local values=$(echo $csv | awk -F, '{print $2}')\n    local lower=$(echo\
    \ $keys | awk '{print tolower($0)}')\n    local upper=$(echo $keys | awk '{print\
    \ toupper($0)}')\n    local lowercount=$(echo $lower | wc -w)\n    local uppercount=$(echo\
    \ $upper | wc -w)\n    local count=$((lowercount + uppercount))\n    if [ $count\
    \ -eq 0 ]; then\n        echo \"$csv is empty\"\n        exit 0\n    fi\n    if\
    \ [ $lowercount -eq 0 ]; then\n        echo \"$csv is missing keys in lower case\"\
    \n        exit 0\n    fi\n    if [ $uppercount -eq 0 ]; then\n        echo \"\
    $csv is missing keys in upper case\"\n        exit 0\n    fi\n    if [ $lowercount\
    \ -gt $uppercount ]; then\n        echo \"$csv is missing keys in lower case\"\
    \n        exit 0\n    fi\n    if [ $lowercount -lt $uppercount ]; then\n     \
    \   echo \"$csv is missing keys in upper case\"\n        exit 0\n    fi\n    if\
    \ [ $lowercount -eq $uppercount ]; then\n        echo \"$csv is missing keys in\
    \ both upper and lower case\"\n        exit 0\n    fi\n    echo \"$csv is OK\"",
  "    local csv_line=\"$1\"\n    local csv_line_keys=$(echo \"$csv_line\" | cut -d\
    \ ',' -f 1)\n    local csv_line_values=$(echo \"$csv_line\" | cut -d ',' -f 2)\n\
    \    local csv_line_lower=$(echo \"$csv_line_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_upper=$(echo \"$csv_line_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_lower_inverse=$(echo \"$csv_line_lower\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local csv_line_upper_inverse=$(echo \"$csv_line_upper\" |\
    \ tr '[:lower:]' '[:upper:]')\n    local csv_line_lower_inverse_count=$(echo \"\
    $csv_line_lower_inverse\" | wc -w)\n    local csv_line_upper_inverse_count=$(echo\
    \ \"$csv_line_upper_inverse\" | wc -w)\n    local csv_line_lower_count=$(echo\
    \ \"$csv_line_lower\" | wc -w)\n    local csv_line_upper_count=$(echo \"$csv_line_upper\"\
    \ | wc -w)\n    local csv_line_lower_inverse_count_equal=$(echo \"$csv_line_lower_inverse_count\"\
    \ == \"$csv_line_lower_count\")\n    local csv_line_upper_inverse_count_equal=$(echo\
    \ \"$csv_line_upper_inverse_count\" == \"$csv_line_upper_count\")\n    local csv_line_lower_count_equal=$(echo\
    \ \"$csv_line_lower_count\" == \"$csv_line_upper_count\")\n    local csv_line_upper_count_equal=$(echo\
    \ \"$csv_line_upper_count\" == \"$csv_line_lower_inverse_count\")\n    local csv_line_lower_inverse_count_not_equal=$(echo\
    \ \"$csv_line_lower_inverse_count\" != \"$csv_line_lower_count\")\n    local csv_line_upper_inverse_count_not_equal=$(echo\
    \ \"$csv_line_upper_inverse_count\" != \"$csv_line_upper_count\")\n    local csv_line_lower_count_not_equal=$(echo\
    \ \"$csv_line_lower_count\" != \"$csv_line_upper_count\")\n    local csv_line_upper_count_not_equal=$(echo\
    \ \"$csv_line_upper_count\" != \"$csv_line_lower_inverse_count\")\n    local csv_line_lower_inverse_count_greater_than=$(echo\
    \ \"$csv_line_lower_inverse_count\" > \"$csv_line_lower_count\")\n    local csv_line_upper_inverse_count_greater_than=$(echo\
    \ \"$csv_line_upper_inverse_count\" > \"$csv_line_upper_count\")\n    local csv_line_lower_count_greater_than=$(echo\
    \ \"$csv_line_lower_count\" > \"$csv_line_upper_count", "    local csv=$1\n  \
    \  local keys=$(echo $csv | awk -F, '{print $1}')\n    local values=$(echo $csv\
    \ | awk -F, '{print $2}')\n    local lower\n    local upper\n    lower=$(echo\
    \ $keys | awk -F, '{print tolower($0)}')\n    upper=$(echo $keys | awk -F, '{print\
    \ toupper($0)}')\n    if [ -z \"$keys\" ]; then\n        echo \"$csv is empty\"\
    \n        exit 0\n    fi\n    if [ \"$lower\" != \"$keys\" ]; then\n        echo\
    \ \"$csv has non-string keys\"\n        exit 0\n    fi\n    if [ \"$upper\" !=\
    \ \"$keys\" ]; then\n        echo \"$csv has non-string keys\"\n        exit 0\n\
    \    fi\n    if [ \"$lower\" != \"$values\" ]; then\n        echo \"$csv has non-string\
    \ values\"\n        exit 0\n    fi\n    if [ \"$upper\" != \"$values\" ]; then\n\
    \        echo \"$csv has non-string values\"\n        exit 0\n    fi\n    echo\
    \ \"$csv has all string keys and values\"\n    exit 0", "    local csv=$1\n  \
    \  local keys=$(echo $csv | cut -d, -f1)\n    local values=$(echo $csv | cut -d,\
    \ -f2)\n    local lower\n    local upper\n    local lower2\n    local upper2\n\
    \    local lower3\n    local upper3\n    local lower4\n    local upper4\n    local\
    \ lower5\n    local upper5\n    local lower6\n    local upper6\n    local lower7\n\
    \    local upper7\n    local lower8\n    local upper8\n    local lower9\n    local\
    \ upper9\n    local lower10\n    local upper10\n    local lower11\n    local upper11\n\
    \    local lower12\n    local upper12\n    local lower13\n    local upper13\n\
    \    local lower14\n    local upper14\n    local lower15\n    local upper15\n\
    \    local lower16\n    local upper16\n    local lower17\n    local upper17\n\
    \    local lower18\n    local upper18\n    local lower19\n    local upper19\n\
    \    local lower20\n    local upper20\n    local lower21\n    local upper21\n\
    \    local lower22\n    local upper22\n    local lower23\n    local upper23\n\
    \    local lower24\n    local upper24\n    local lower25\n    local upper25\n\
    \    local lower26\n    local upper26\n    local lower27\n    local upper27\n\
    \    local lower28\n    local upper28\n    local lower29\n    local upper29\n\
    \    local lower30\n    local upper30\n    local lower31\n    local upper31\n\
    \    local lower32\n    local upper32\n    local lower33\n    local upper33\n\
    \    local lower34\n    local upper34\n    local lower35\n    local upper35\n\
    \    local lower36\n    local upper36\n    local lower37\n    local upper37\n\
    \    local lower38\n    local upper38\n    local lower39\n    local upper39\n\
    \    local lower40\n    local upper40\n    local lower41\n    local upper41\n\
    \    local lower42\n    local upper42\n    local lower43\n    local upper43\n\
    \    local lower44\n    local upper44\n    local lower45\n    local upper45\n\
    \    local lower46\n    local upper46\n    local lower47\n    local upper47\n\
    \    local lower48\n    local upper48\n", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^[ \\t]*//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers\
    \ | sed 's/[ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[\
    \ \\t]*$//g')\n    local csv_headers=$(echo $csv_headers | sed 's/[ \\t]*$//g')\n\
    \    ", "    local csv_line=\"$1\"\n    local csv_key=\"$2\"\n    local csv_value=\"\
    $3\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n   \
    \ local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local\
    \ csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"\
    $csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\
    \n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local\
    \ csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local\
    \ csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"\
    $csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\
    \n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local\
    \ csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local\
    \ csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"\
    $csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\
    \n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local\
    \ csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"\
    $csv_key\"\n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\
    \n    local csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local\
    \ csv_value=\"$csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"\
    $csv_value\"\n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_value\"\
    \n    local csv_key=\"$csv_key\"\n    local csv_value=\"$csv_", "    local csv=$1\n\
    \    local keys=$(echo $csv | cut -d, -f1)\n    local values=$(echo $csv | cut\
    \ -d, -f2)\n    local lower=false\n    local upper=false\n    local fail=false\n\
    \    local fail_keys=()\n    local fail_values=()\n    local fail_keys_upper=()\n\
    \    local fail_values_upper=()\n    local fail_keys_lower=()\n    local fail_values_lower=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local fail_values_count=()\n    local fail_keys_count=()\n    local fail_values_count=()\n\
    \    local fail_keys_count=()\n    local fail_values_count=()\n    local fail_keys_count=()\n\
    \    local ", "    local csv=$1\n    local lower=false\n    local upper=false\n\
    \    local key\n    local value\n    local count\n    local keycount\n    local\
    \ valuecount\n    local keycount2\n    local valuecount2\n    local keycount3\n\
    \    local valuecount3\n    local keycount4\n    local valuecount4\n    local\
    \ keycount5\n    local valuecount5\n    local keycount6\n    local valuecount6\n\
    \    local keycount7\n    local valuecount7\n    local keycount8\n    local valuecount8\n\
    \    local keycount9\n    local valuecount9\n    local keycount10\n    local valuecount10\n\
    \    local keycount11\n    local valuecount11\n    local keycount12\n    local\
    \ valuecount12\n    local keycount13\n    local valuecount13\n    local keycount14\n\
    \    local valuecount14\n    local keycount15\n    local valuecount15\n    local\
    \ keycount16\n    local valuecount16\n    local keycount17\n    local valuecount17\n\
    \    local keycount18\n    local valuecount18\n    local keycount19\n    local\
    \ valuecount19\n    local keycount20\n    local valuecount20\n    local keycount21\n\
    \    local valuecount21\n    local keycount22\n    local valuecount22\n    local\
    \ keycount23\n    local valuecount23\n    local keycount24\n    local valuecount24\n\
    \    local keycount25\n    local valuecount25\n    local keycount26\n    local\
    \ valuecount26\n    local keycount27\n    local valuecount27\n    local keycount28\n\
    \    local valuecount28\n    local keycount29\n    local valuecount29\n    local\
    \ keycount30\n    local valuecount30\n    local keycount31\n    local valuecount31\n\
    \    local keycount32\n    local valuecount32\n    local keycount33\n    local\
    \ valuecount33\n    local keycount34\n    local valuecount34\n    local keycount35\n\
    \    local valuecount35\n    local keycount36\n    local valuecount36\n    local\
    \ keycount37\n    local valuecount37\n    local keycount38\n    local valuecount38\n\
    \    local keycount39\n    local valuecount39\n    local keycount40\n    local\
    \ valuecount40\n    local keycount", "  local csv_lines=$1\n  local key_col=1\n\
    \  local val_col=2\n  local key_lower=\"[a-z]\"\n  local key_upper=\"[A-Z]\"\n\
    \  local val_lower=\"[a-z]\"\n  local val_upper=\"[A-Z]\"\n  local key_val\n \
    \ local val_val\n  local key_lower_in\n  local key_upper_in\n  local val_lower_in\n\
    \  local val_upper_in\n  local key_val_in\n  local val_val_in\n  local key_lower_in_all\n\
    \  local key_upper_in_all\n  local val_lower_in_all\n  local val_upper_in_all\n\
    \  local key_val_in_all\n  local val_val_in_all\n  local key_lower_in_one\n  local\
    \ key_upper_in_one\n  local val_lower_in_one\n  local val_upper_in_one\n  local\
    \ key_val_in_one\n  local val_val_in_one\n  local key_lower_in_one_all\n  local\
    \ key_upper_in_one_all\n  local val_lower_in_one_all\n  local val_upper_in_one_all\n\
    \  local key_val_in_one_all\n  local val_val_in_one_all\n  local key_lower_in_one_one\n\
    \  local key_upper_in_one_one\n  local val_lower_in_one_one\n  local val_upper_in_one_one\n\
    \  local key_val_in_one_one\n  local val_val_in_one_one\n  local key_lower_in_one_one_all\n\
    \  local key_upper_in_one_one_all\n  local val_lower_in_one_one_all\n  local val_upper_in_one_one_all\n\
    \  local key_val_in_one_one_all\n  local val_val_in_one_one_all\n  local key_lower_in_one_one_one\n\
    \  local key_upper_in_one_one_one\n  local val_lower_in_one_one_one\n  local val_upper_in_one_one_one\n\
    \  local key_val_in_one_one_one\n  local val_val_in_one_one_one\n  local key_lower_in_one_one_one_all\n\
    \  local key_upper_in_one_one_one_all\n  local val_lower_in_one_one_one_all\n\
    \  local val_upper_in_one_one_one_all\n  local key_val_in_one_one_one_all\n  local\
    \ val_val_in_one_one_one_all\n  local key_lower_in_one_one_one_one\n  local key_upper_in_one_one_one_one\n\
    \  local val_lower_in_one_one_one_one\n  local val_upper_in_one_one_one_one\n\
    \  local key_val_in_one_one_one_one\n  local val_val_in_one_one_one_one\n  local\
    \ key_lower_in_one_one_", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | tr '\\n' ' ')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed 's/ /\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/,/ /g')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/ /\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/,/ /g')\n \
    \   local csv_headers=$(echo $csv_headers | sed '", "    local csv_line\n    csv_line=$(echo\
    \ $1 | cut -d, -f1,2)\n    if [ -z \"$csv_line\" ]; then\n        echo \"false\"\
    \n    else\n        local key_value\n        key_value=$(echo $csv_line | cut\
    \ -d, -f1)\n        local key_value_upper\n        key_value_upper=$(echo $key_value\
    \ | tr '[:upper:]' '[:lower:]')\n        if [ \"$key_value_upper\" == \"$key_value\"\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    fi", "    local csv_lines=$1\n    local keys=$2\n    local values=$3\n\
    \    local result=false\n    local line\n    local key\n    local value\n    local\
    \ keylen\n    local valuelen\n    local keychar\n    local valuechar\n    local\
    \ keychars\n    local valuechars\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n    local valuechars_lower\n    local keychars_upper\n\
    \    local valuechars_upper\n    local keychars_lower\n    local valuechars_lower\n\
    \    local keychars_upper\n    local valuechars_upper\n    local keychars_lower\n\
    \    local valuechars_lower\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n    local valuechars_lower\n    local keychars_upper\n\
    \    local valuechars_upper\n    local keychars_lower\n    local valuechars_lower\n\
    \    local keychars_upper\n    local valuechars_upper\n    local keychars_lower\n\
    \    local valuechars_lower\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n    local valuechars_lower\n    local keychars_upper\n\
    \    local valuechars_upper\n    local keychars_lower\n    local valuechars_lower\n\
    \    local keychars_upper\n    local valuechars_upper\n    local keychars_lower\n\
    \    local valuechars_lower\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n    local valuechars_lower\n    local keychars_upper\n\
    \    local valuechars_upper\n    local keychars_lower\n    local valuechars_lower\n\
    \    local keychars_upper\n    local valuechars_upper\n    local keychars_lower\n\
    \    local valuechars_lower\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n    local valuechars_lower\n    local keychars_upper\n\
    \    local valuechars_upper\n    local keychars_lower\n    local valuechars_lower\n\
    \    local keychars_upper\n    local valuechars_upper\n    local keychars_lower\n\
    \    local valuechars_lower\n    local keychars_upper\n    local valuechars_upper\n\
    \    local keychars_lower\n", "    local csv_lines=$1\n    local csv_headers=$2\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/,/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/^/#/')\n    local csv_headers=$(echo $csv_headers | sed\
    \ 's/$/#/')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n  \
    \  local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n\
    \    local csv_headers=$(echo $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo\
    \ $csv_headers | sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers |\
    \ sed 's/#/\\n/g')\n    local csv_headers=$(echo $csv_headers | sed 's/#/\\n",
  "    local csv_line=\"$1\"\n    local csv_line_key=\"$2\"\n    local csv_line_value=\"\
    $3\"\n    local csv_line_key_upper=$(echo \"$csv_line_key\" | tr '[:upper:]' '[:lower:]')\n\
    \    local csv_line_key_lower=$(echo \"$csv_line_key\" | tr '[:lower:]' '[:upper:]')\n\
    \    local csv_line_key_count=$(echo \"$csv_line_key\" | wc -c)\n    local csv_line_value_upper=$(echo\
    \ \"$csv_line_value\" | tr '[:upper:]' '[:lower:]')\n    local csv_line_value_lower=$(echo\
    \ \"$csv_line_value\" | tr '[:lower:]' '[:upper:]')\n    local csv_line_value_count=$(echo\
    \ \"$csv_line_value\" | wc -c)\n    if [ \"$csv_line_key_count\" -eq \"0\" ];\
    \ then\n        echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key\" \"$csv_line_value\"\n  \
    \      echo \"$csv_line_key\" \"$csv_line_value\"\n        echo \"$csv_line_key\"\
    \ \"$csv_line_value\"\n        echo \"$csv_line_key"]
stop_tokens:
- "\n}"

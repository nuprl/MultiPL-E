name: HumanEval_56_correct_bracketing
language: sh
prompt: "#!/bin/bash\n# brackets is a string of \"<\" and \">\".\n# return true if\
  \ every opening bracket has a corresponding closing bracket.\n# >>> $(correct_bracketing\
  \ \"<\")\n# \"false\"\n# >>> $(correct_bracketing \"<>\")\n# \"true\"\n# >>> $(correct_bracketing\
  \ \"<<><>>\")\n# \"true\"\n# >>> $(correct_bracketing \"><<>\")\n# \"false\"\n#\n\
  # $1 is a string\ncorrect_bracketing() {\n"
tests: "}\n\ncandidate() {\n    correct_bracketing \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"<>\") = \"true\" ]]\n    [[ $(candidate \"<<><>>\") =\
  \ \"true\" ]]\n    [[ $(candidate \"<><><<><>><>\") = \"true\" ]]\n    [[ $(candidate\
  \ \"<><><<<><><>><>><<><><<>>>\") = \"true\" ]]\n    [[ $(candidate \"<<<><>>>>\"\
  ) = \"false\" ]]\n    [[ $(candidate \"><<>\") = \"false\" ]]\n    [[ $(candidate\
  \ \"<\") = \"false\" ]]\n    [[ $(candidate \"<<<<\") = \"false\" ]]\n    [[ $(candidate\
  \ \">\") = \"false\" ]]\n    [[ $(candidate \"<<>\") = \"false\" ]]\n    [[ $(candidate\
  \ \"<><><<><>><>><<>\") = \"false\" ]]\n    [[ $(candidate \"<><><<><>><>>><>\"\
  ) = \"false\" ]]\n}\n\nrun_test"
completions: ["    local brackets=$1\n    local opening_brackets=$(echo $brackets\
    \ | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo $brackets\
    \ | sed 's/>//g' | sed 's/<//g')\n    local opening_brackets_count=$(echo $opening_brackets\
    \ | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n\
    \    local correct_bracketing_count=$(echo $opening_brackets_count - $closing_brackets_count)\n\
    \    echo $correct_bracketing_count", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g' | sed 's/<//g')\n    local result=$(echo $opening_brackets\
    \ | grep -F -v -e $closing_brackets)\n    echo $result", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | sed 's/<//g' | sed 's/>//g')\n\
    \    local closing_brackets=$(echo $brackets | sed 's/>//g' | sed 's/<//g')\n\
    \    local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \    echo $result", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed -e 's/<//g' -e 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed -e 's/>//g' -e 's/<//g')\n    local opening_brackets_count=$(echo\
    \ $opening_brackets | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets\
    \ | wc -w)\n    if [ $opening_brackets_count -ne $closing_brackets_count ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/<//g' | sed\
    \ 's/>//g')\n    local closing_brackets=$(echo $brackets | sed 's/>//g' | sed\
    \ 's/<//g')\n    local result=$(echo $brackets | sed 's/<//g' | sed 's/>//g' |\
    \ sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g'\
    \ | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n\
    \    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo\
    \ $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result |\
    \ sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g'\
    \ | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n\
    \    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo\
    \ $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result |\
    \ sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g'\
    \ | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n\
    \    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo\
    \ $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result |\
    \ sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g'\
    \ | sed 's/>>//g')\n    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n\
    \    local result=$(echo $result | sed 's/<<//g' | sed 's/>>//g')\n    local result=$(echo\
    \ $result | sed 's/<<//g' | sed 's/>>//g')", "    local brackets=$1\n    local\
    \ opening_brackets=$(echo $brackets | sed -e 's/<//g' -e 's/>//g')\n    local\
    \ closing_brackets=$(echo $brackets | sed -e 's/>//g' -e 's/<//g')\n    local\
    \ result=$(echo $opening_brackets | sed -e 's/\\(.*\\)<\\(.*\\)>/\\1<\\2>/g' |\
    \ sort | uniq -d)\n    echo $result\n    if [ -z \"$result\" ]; then\n       \
    \ echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local brackets=\"\
    $1\"\n    local opening_brackets=$(echo \"$brackets\" | sed 's/<//g' | sed 's/>//g')\n\
    \    local closing_brackets=$(echo \"$brackets\" | sed 's/>//g' | sed 's/<//g')\n\
    \    local result=$(echo \"$opening_brackets\" | sort | uniq -c | sort -n | tail\
    \ -1)\n    local correct=$(echo \"$closing_brackets\" | sort | uniq -c | sort\
    \ -n | head -1)\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n    local correct=$(echo\
    \ \"$correct\" | sed 's/^[ \\t]*//')\n    local correct=$(echo \"$correct\" |\
    \ sed 's/[ \\t]*$//')\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n    local correct=$(echo\
    \ \"$correct\" | sed 's/^[ \\t]*//')\n    local correct=$(echo \"$correct\" |\
    \ sed 's/[ \\t]*$//')\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n    local correct=$(echo\
    \ \"$correct\" | sed 's/^[ \\t]*//')\n    local correct=$(echo \"$correct\" |\
    \ sed 's/[ \\t]*$//')\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n    local correct=$(echo\
    \ \"$correct\" | sed 's/^[ \\t]*//')\n    local correct=$(echo \"$correct\" |\
    \ sed 's/[ \\t]*$//')\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n    local correct=$(echo\
    \ \"$correct\" | sed 's/^[ \\t]*//')\n    local correct=$(echo \"$correct\" |\
    \ sed 's/[ \\t]*$//')\n    local correct=$(echo \"$correct\" | sed 's/^[ \\t]*//')\n\
    \    local correct=$(echo \"$correct\" | sed 's/[ \\t]*$//')\n", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | sed -e 's/<//g' -e 's/>//g')\n\
    \    local closing_brackets=$(echo $brackets | sed -e 's/>//g' -e 's/<//g')\n\
    \    local result=$(echo $opening_brackets | grep -F -v -e $closing_brackets)\n\
    \    echo $result", "    local brackets=\"$1\"\n    local opening_brackets=$(grep\
    \ -E \"^<\" <<< \"$brackets\")\n    local closing_brackets=$(grep -E \">\" <<<\
    \ \"$brackets\")\n    local result=$(echo \"$opening_brackets\" | grep -E \"^<\"\
    \ | grep -E \">\" | wc -l)\n    if [ \"$result\" -eq \"0\" ]; then\n        echo\
    \ \"false\"\n    else\n        echo \"true\"\n    fi", "    local brackets=\"\
    $1\"\n    local opening_brackets=\"$(echo \"$brackets\" | sed -e 's/<//g' -e 's/>//g')\"\
    \n    local closing_brackets=\"$(echo \"$brackets\" | sed -e 's/>//g' -e 's/<//g')\"\
    \n    local result=\"$(echo \"$opening_brackets\" | grep -v \"^$closing_brackets\"\
    )\"\n    echo $result", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/<//g')\n    local closing_brackets=$(echo $brackets | sed\
    \ 's/>//g')\n    local result=$(echo $opening_brackets | grep -Fx $closing_brackets)\n\
    \    echo $result", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed -e 's/<//g' -e 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed -e 's/>//g' -e 's/<//g')\n    local result=$(echo $opening_brackets\
    \ | grep -F -v -e $closing_brackets)\n    echo $result", "    local brackets=$1\n\
    \    local opening_brackets=$(echo $brackets | awk -F '<' '{print $1}')\n    local\
    \ closing_brackets=$(echo $brackets | awk -F '>' '{print $1}')\n    local result=$(echo\
    \ $brackets | awk -F '<' '{print $2}')\n    local opening_brackets_count=$(echo\
    \ $opening_brackets | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets\
    \ | wc -w)\n    local result_count=$(echo $result | wc -w)\n    if [ $opening_brackets_count\
    \ -eq $closing_brackets_count ]; then\n        if [ $opening_brackets_count -eq\
    \ $result_count ]; then\n            echo \"true\"\n        else\n           \
    \ echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi", "   \
    \ local brackets=$1\n    local brackets_count=${#brackets}\n    local i\n    local\
    \ j\n    local brackets_string\n    local brackets_string_count\n    local brackets_string_index\n\
    \    local brackets_string_length\n    local brackets_string_length_index\n  \
    \  local brackets_string_length_count\n    local brackets_string_length_index2\n\
    \    local brackets_string_length_index3\n    local brackets_string_length_index4\n\
    \    local brackets_string_length_index5\n    local brackets_string_length_index6\n\
    \    local brackets_string_length_index7\n    local brackets_string_length_index8\n\
    \    local brackets_string_length_index9\n    local brackets_string_length_index10\n\
    \    local brackets_string_length_index11\n    local brackets_string_length_index12\n\
    \    local brackets_string_length_index13\n    local brackets_string_length_index14\n\
    \    local brackets_string_length_index15\n    local brackets_string_length_index16\n\
    \    local brackets_string_length_index17\n    local brackets_string_length_index18\n\
    \    local brackets_string_length_index19\n    local brackets_string_length_index20\n\
    \    local brackets_string_length_index21\n    local brackets_string_length_index22\n\
    \    local brackets_string_length_index23\n    local brackets_string_length_index24\n\
    \    local brackets_string_length_index25\n    local brackets_string_length_index26\n\
    \    local brackets_string_length_index27\n    local brackets_string_length_index28\n\
    \    local brackets_string_length_index29\n    local brackets_string_length_index30\n\
    \    local brackets_string_length_index31\n    local brackets_string_length_index32\n\
    \    local brackets_string_length_index33\n    local brackets_string_length_index34\n\
    \    local brackets_string_length_index35\n    local brackets_string_length_index36\n\
    \    local brackets_string_length_index37\n    local brackets_string_length_index38\n\
    \    local brackets_string_length_index39\n    local brackets_string_length_index40\n\
    \    local brackets_string_length_index41\n    local brackets_string_length_index42\n\
    \    local brackets_string_length_index43\n    local brackets_string_length_index44\n\
    \    local brackets_string_length_index45\n    local brackets_string_length_index46\n\
    \    local brackets_string_length_index47\n    local brackets_string_length_index48\n\
    \    local brackets_string_length_index49\n    local brackets_string_length_index50\n\
    \    local brackets_", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed -e 's/<//g' -e 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed -e 's/>//g' -e 's/<//g')\n    local result=$(echo $opening_brackets\
    \ | grep -F -v -e $closing_brackets)\n    echo $result", "  local brackets=$1\n\
    \  local opening_brackets=$(echo $brackets | sed 's/<//g')\n  local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g')\n  local result=$(echo $brackets | sed 's/<\\([^>]*\\\
    )>/\\1/g')\n  echo $result | grep -q \"^$opening_brackets$\"", "    local brackets=\"\
    $1\"\n    local opening=\"$(echo \"$brackets\" | sed -e 's/^>//' -e 's/<//g')\"\
    \n    local closing=\"$(echo \"$brackets\" | sed -e 's/^<//' -e 's/>//g')\"\n\
    \    local result=\"$(echo \"$brackets\" | sed -e 's/^>//' -e 's/<//g' -e 's/^<//'\
    \ -e 's/>//g' -e 's/<//g')\"\n    local correct=\"$(echo \"$result\" == \"$brackets\"\
    )\"\n    echo \"$correct\"", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/<//g' | sed 's/>//g')\n    local closing_brackets=$(echo\
    \ $brackets | sed 's/>//g' | sed 's/<//g')\n    local result=$(echo $brackets\
    \ | sed 's/<//g' | sed 's/>//g' | sed 's/&/&&/g' | sed 's/|/||/g' | sed 's/\\\
    |/||/g' | sed 's/\\&/&&/g')\n    local correct=$(echo $result | sed 's/&/&&/g'\
    \ | sed 's/|/||/g' | sed 's/\\|/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g' | sed\
    \ 's/||/|/g')\n    local correct=$(echo $correct | sed 's/&/&&/g' | sed 's/|/||/g'\
    \ | sed 's/\\|/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g' | sed 's/||/|/g')\n \
    \   local correct=$(echo $correct | sed 's/&/&&/g' | sed 's/|/||/g' | sed 's/\\\
    |/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g' | sed 's/||/|/g')\n    local correct=$(echo\
    \ $correct | sed 's/&/&&/g' | sed 's/|/||/g' | sed 's/\\|/||/g' | sed 's/\\&/&&/g'\
    \ | sed 's/&&/&/g' | sed 's/||/|/g')\n    local correct=$(echo $correct | sed\
    \ 's/&/&&/g' | sed 's/|/||/g' | sed 's/\\|/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g'\
    \ | sed 's/||/|/g')\n    local correct=$(echo $correct | sed 's/&/&&/g' | sed\
    \ 's/|/||/g' | sed 's/\\|/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g' | sed 's/||/|/g')\n\
    \    local correct=$(echo $correct | sed 's/&/&&/g' | sed 's/|/||/g' | sed 's/\\\
    |/||/g' | sed 's/\\&/&&/g' | sed 's/&&/&/g' | ", "  local brackets=\"$1\"\n  local\
    \ opening_brackets=$(echo \"$brackets\" | sed 's/<//g' | sed 's/>//g')\n  local\
    \ closing_brackets=$(echo \"$brackets\" | sed 's/>//g' | sed 's/<//g')\n  local\
    \ result=$(echo \"$opening_brackets\" | sed 's/<//g' | sed 's/>//g' | sort | uniq\
    \ -d)\n  echo \"$result\"", "    local brackets=\"$1\"\n    local opening_brackets=$(echo\
    \ \"$brackets\" | sed -e 's/<//g' -e 's/>//g')\n    local closing_brackets=$(echo\
    \ \"$brackets\" | sed -e 's/>//g' -e 's/<//g')\n    local result=$(echo \"$opening_brackets\"\
    \ | grep -v \"^$closing_brackets\" | wc -l)\n    echo $result"]
stop_tokens:
- "\n}"

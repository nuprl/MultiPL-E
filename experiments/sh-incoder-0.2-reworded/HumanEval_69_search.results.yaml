language: sh
name: HumanEval_69_search
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local maxVal\n \
    \   local maxFreq\n    local maxIndex\n    local maxValIndex\n    local maxValIndex2\n\
    \    local maxValIndex3\n    local maxValIndex4\n    local maxValIndex5\n    local\
    \ maxValIndex6\n    local maxValIndex7\n    local maxValIndex8\n    local maxValIndex9\n\
    \    local maxValIndex10\n    local maxValIndex11\n    local maxValIndex12\n \
    \   local maxValIndex13\n    local maxValIndex14\n    local maxValIndex15\n  \
    \  local maxValIndex16\n    local maxValIndex17\n    local maxValIndex18\n   \
    \ local maxValIndex19\n    local maxValIndex20\n    local maxValIndex21\n    local\
    \ maxValIndex22\n    local maxValIndex23\n    local maxValIndex24\n    local maxValIndex25\n\
    \    local maxValIndex26\n    local maxValIndex27\n    local maxValIndex28\n \
    \   local maxValIndex29\n    local maxValIndex30\n    local maxValIndex31\n  \
    \  local maxValIndex32\n    local maxValIndex33\n    local maxValIndex34\n   \
    \ local maxValIndex35\n    local maxValIndex36\n    local maxValIndex37\n    local\
    \ maxValIndex38\n    local maxValIndex39\n    local maxValIndex40\n    local maxValIndex41\n\
    \    local maxValIndex42\n    local maxValIndex43\n    local maxValIndex44\n \
    \   local maxValIndex45\n    local maxValIndex46\n    local maxValIndex47\n  \
    \  local maxValIndex48\n    local maxValIndex49\n    local maxValIndex50\n   \
    \ local maxValIndex51\n    local maxValIndex52\n    local maxValIndex53\n    local\
    \ maxValIndex54\n    local maxValIndex55\n    local maxValIndex56\n    local maxValIndex57\n\
    \    local maxValIndex58\n    local maxValIndex59\n    local maxValIndex60\n \
    \   local maxValIndex61\n    local maxValIndex62\n    local maxValIndex63\n  \
    \  local maxValIndex64\n    local maxValIndex65\n    local maxValIndex66\n   \
    \ local maxValIndex67\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n\
    \    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n\
    \    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n\
    \    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n\
    \    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n\
    \    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n\
    \    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n\
    \    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n\
    \    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n\
    \    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n\
    \    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n\
    \    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n\
    \    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n\
    \    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n\
    \    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n\
    \    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n\
    \    local -a arr66\n    local -a arr67\n    local -a arr68\n    local -a arr69\n\
    \    local -a arr70\n    local -a arr71\n    local -a arr72\n    local \n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest=-1\n\
    \    local frequency=0\n    local i\n    \n    for ((i=0; i<${#list}; i++)); do\n\
    \        local value=${list[i]}\n        if (( frequency < value )); then\n  \
    \          greatest=${value}\n            frequency=${i}\n        fi\n    done\n\
    \    \n    echo \"$greatest\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2dgf4aic.sh: line 23: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxFreq=0\n    local i\n    local j\n    local freq\n    local maxIndex\n\
    \    local maxVal\n    local val\n    local valFreq\n    local valIndex\n    local\
    \ valVal\n    local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n\
    \    local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valFreq\n    local valIndex\n    local valVal\n    local valFreq\n \
    \   local valIndex\n    local valVal\n    local valFreq\n    local valIndex\n\
    \    local valVal\n    local valFreq\n    local valIndex\n    local valVal\n \
    \   local valF\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if (( ${numbers[i]} >\
    \ 0 )); then\n            frequency=$(( ${frequency} + 1 ))\n        fi\n    done\n\
    \    \n    if (( frequency >= ${numbers[0]} )); then\n        greatest=${numbers[0]}\n\
    \    else\n        for ((i=0; i<${#numbers[@]}; i++)); do\n            if (( ${numbers[i]}\
    \ > 0 )); then\n                if (( ${numbers[i]} > ${greatest} )); then\n \
    \                   greatest=${numbers[i]}\n                fi\n            fi\n\
    \        done\n    fi\n    \n    echo \"$greatest\"\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1q1ysq6b.sh: line 25: ((: 5 5 5 5 1 > 0 : syntax error in expression
    (error token is "5 5 5 1 > 0 ")

    /tmp/tmp1q1ysq6b.sh: line 30: ((: frequency >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp1q1ysq6b.sh: line 34: ((: 5 5 5 5 1 > 0 : syntax error in expression (error
    token is "5 5 5 1 > 0 ")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxIndex=0\n  local maxFreq=0\n  local index=0\n  local freq=0\n  local\
    \ i\n  \n  for ((i=0; i<${#list}; i++)); do\n    freq=${#list[$i]}\n    if [ $freq\
    \ -gt $maxFreq ]; then\n      maxFreq=$freq\n      maxIndex=$index\n      max=$list[$index]\n\
    \    fi\n    ((index++))\n  done\n  \n  if [ $maxIndex -eq 0 ]; then\n    return\
    \ -1\n  else\n    return $max\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local maxIndexValue\n    local\
    \ maxIndexFrequency\n    local maxIndexValueFrequency\n    local maxIndexFrequencyValue\n\
    \    local maxIndexValueFrequencyValue\n    local maxIndexFrequencyValueFrequency\n\
    \    local maxIndexValueFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValue\n    local maxIndexFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequency\n    local maxIndexValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequency\n    local\
    \ maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequency\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n         \
    \   if [[ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n  \
    \          fi\n        fi\n    done\n    if [[ ${max} -gt 0 ]]; then\n       \
    \ echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqgdocjlh.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if (( ${#1}[$i]==0 ));\
    \ then\n            echo \"-1\"\n            return\n        fi\n        if ((\
    \ ${#1}[$i]>$freq )); then\n            freq=${#1}[$i]\n            max=$i\n \
    \       fi\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk3zmg6ef.sh: line 20: ((: 9[0]==0 : syntax error: invalid arithmetic
    operator (error token is "[0]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[0]>0 : syntax error: invalid arithmetic operator
    (error token is "[0]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[1]==0 : syntax error: invalid arithmetic operator
    (error token is "[1]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[1]>0 : syntax error: invalid arithmetic operator
    (error token is "[1]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[2]==0 : syntax error: invalid arithmetic operator
    (error token is "[2]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[2]>0 : syntax error: invalid arithmetic operator
    (error token is "[2]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[3]==0 : syntax error: invalid arithmetic operator
    (error token is "[3]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[3]>0 : syntax error: invalid arithmetic operator
    (error token is "[3]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[4]==0 : syntax error: invalid arithmetic operator
    (error token is "[4]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[4]>0 : syntax error: invalid arithmetic operator
    (error token is "[4]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[5]==0 : syntax error: invalid arithmetic operator
    (error token is "[5]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[5]>0 : syntax error: invalid arithmetic operator
    (error token is "[5]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[6]==0 : syntax error: invalid arithmetic operator
    (error token is "[6]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[6]>0 : syntax error: invalid arithmetic operator
    (error token is "[6]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[7]==0 : syntax error: invalid arithmetic operator
    (error token is "[7]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[7]>0 : syntax error: invalid arithmetic operator
    (error token is "[7]>0 ")

    /tmp/tmpk3zmg6ef.sh: line 20: ((: 9[8]==0 : syntax error: invalid arithmetic operator
    (error token is "[8]==0 ")

    /tmp/tmpk3zmg6ef.sh: line 24: ((: 9[8]>0 : syntax error: invalid arithmetic operator
    (error token is "[8]>0 ")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ ((freq+=${#list[$i]}))\n        if (( ${#list[$i]} > max )); then\n        \
    \    max=${#list[$i]}\n        fi\n    done\n    if [[ ${freq} -gt $max ]]; then\n\
    \        echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]\n        then\n\
    \            greatest=$i\n        fi\n        frequency=$(( $frequency + 1 ))\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]\n    then\n        echo \"\
    $greatest\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n\
    \    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n\
    \    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n\
    \    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n\
    \    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n\
    \    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n\
    \    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n\
    \    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n\
    \    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n\
    \    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n\
    \    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n\
    \    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n\
    \    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n\
    \    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n\
    \    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n\
    \    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n\
    \    local -a arr66\n    local -a arr67\n    local -a arr68\n    local -a arr69\n\
    \    local -a arr70\n    local -a arr71\n    local -a arr72\n    local \n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    for (( i=0; i<${#list};\
    \ i++ )); do\n        tmp=${list[i]}\n        if [[ ${tmp} -gt 0 ]]; then\n  \
    \          freq=$(( freq + 1 ))\n            if [[ ${freq} -gt ${tmp} ]]; then\n\
    \                max=${tmp}\n            fi\n        fi\n    done\n    if [[ ${max}\
    \ -gt 0 ]]; then\n        echo \"${max}\"\n    else\n        echo \"-1\"\n   \
    \ fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5d0y97r0.sh: line 24: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ maxIndex\n    local maxVal\n    local maxFreq\n    local maxIndex2\n    local\
    \ maxVal2\n    local maxFreq2\n    local maxIndex3\n    local maxVal3\n    local\
    \ maxFreq3\n    local maxIndex4\n    local maxVal4\n    local maxFreq4\n    local\
    \ maxIndex5\n    local maxVal5\n    local maxFreq5\n    local maxIndex6\n    local\
    \ maxVal6\n    local maxFreq6\n    local maxIndex7\n    local maxVal7\n    local\
    \ maxFreq7\n    local maxIndex8\n    local maxVal8\n    local maxFreq8\n    local\
    \ maxIndex9\n    local maxVal9\n    local maxFreq9\n    local maxIndex10\n   \
    \ local maxVal10\n    local maxFreq10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxFreq11\n    local maxIndex12\n    local maxVal12\n    local maxFreq12\n\
    \    local maxIndex13\n    local maxVal13\n    local maxFreq13\n    local maxIndex14\n\
    \    local maxVal14\n    local maxFreq14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxFreq15\n    local maxIndex16\n    local maxVal16\n    local maxFreq16\n\
    \    local maxIndex17\n    local maxVal17\n    local maxFreq17\n    local maxIndex18\n\
    \    local maxVal18\n    local maxFreq18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxFreq19\n    local maxIndex20\n    local maxVal20\n    local maxFreq20\n\
    \    local maxIndex21\n    local maxVal21\n    local maxFreq21\n    local maxIndex22\n\
    \    local maxVal22\n    local maxFreq22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxFreq23\n    local maxIndex24\n    local maxVal24\n    local maxFreq24\n\
    \    local maxIndex25\n    local maxVal25\n    local maxFreq25\n    local maxIndex26\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n     \
    \   if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${list[i]} -gt ${max} ]];\
    \ then\n                max=${list[i]}\n            fi\n            if [[ ${list[i]}\
    \ -eq ${max} ]]; then\n                freq=$((freq+1))\n            fi\n    \
    \    fi\n    done\n    if [[ ${freq} -gt ${max} ]]; then\n        echo \"${max}\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptyi6ycoe.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for i in $@; do\n        if [ $i -gt 0 ]; then\n            freq=$((freq+1))\n\
    \            if [ $freq -gt $i ]; then\n                max=$i\n            fi\n\
    \        fi\n    done\n    if [ $freq -eq 0 ]; then\n        echo \"-1\"\n   \
    \ else\n        echo \"$max\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local count=0\n    local value=0\n\
    \    local i\n    \n    for i in $list; do\n        ((count++))\n        if ((count\
    \ > maxCount)) ; then\n            maxCount=$count\n            maxValue=$value\n\
    \            max=$i\n        fi\n        value=$((value+i))\n    done\n    \n\
    \    if (( maxCount > 0 )) ; then\n        echo \"$max\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    for ((i=0; i<${#list};\
    \ i++)); do\n        tmp=$(echo \"${list}\" | sed -n \"${i}p\")\n        if [\
    \ -z \"${tmp}\" ]; then\n            echo \"-1\"\n            return -1\n    \
    \    fi\n        ((freq++))\n        if [ \"${freq}\" -gt \"${max}\" ]; then\n\
    \            max=${freq}\n        fi\n    done\n    for ((j=0; j<${#list}; j++));\
    \ do\n        tmp=$(echo \"${list}\" | sed -n \"${j}p\")\n        if [ -z \"${tmp}\"\
    \ ]; then\n            echo \"-1\"\n            return -1\n        fi\n      \
    \  if [ \"${list}\" == \"${tmp}\" ]; then\n            ((freq++))\n          \
    \  if [ \"${freq}\" -gt \"${max}\" ]; then\n                max=${freq}\n    \
    \        fi\n        fi\n    done\n    echo \"${max}\"\n}\n\ncandidate() {\n \
    \   search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max\n\
    \    local count\n    local i\n    local j\n    local freq\n\n    # Initialize\
    \ max to first element of list\n    max=$list[0]\n\n    # Initialize count to\
    \ number of times max appears in list\n    count=0\n\n    # Iterate through list\n\
    \    for ((i=0; i<${#list[@]}; i++)); do\n        # Increment count of max\n \
    \       count=$((count+1))\n\n        # Check if current element is greater than\
    \ max\n        if [[ ${list[i]} -gt $max ]]; then\n            # Update max to\
    \ current element\n            max=${list[i]}\n\n            # Update frequency\
    \ of max\n            freq=$((count-1))\n        fi\n    done\n\n    # Return\
    \ max if count is greater than or equal to frequency\n    if [[ ${count} -gt ${freq}\
    \ ]]; then\n        echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplld1ga4t.sh: line 35: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if [ $i\
    \ -gt $max ]; then\n            freq=$i\n            max=$i\n        elif [ $i\
    \ -eq $max ]; then\n            freq=$(($freq + 1))\n        fi\n    done\n  \
    \  \n    if [ $freq -gt $max ]; then\n        echo \"$max\"\n    else\n      \
    \  echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=-1\n  max=0\n\
    \  for ((i=0; i < ${#1}; i++)); do\n    ((freq[$1])++)\n    ((max=$((max>freq[$1]?max:freq[$1]))))\
    \ \n  done\n  echo $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqytuxq3n.sh: line 20: syntax error near unexpected token `++''

    /tmp/tmpqytuxq3n.sh: line 20: `    ((freq[$1])++)''

    '
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n  \
    \      local freq=${list[$i]}\n        if (( freq > maxfreq )); then\n       \
    \     max=${list[$i]}\n            maxfreq=${freq}\n        fi\n    done\n   \
    \ if [[ ${max} == \"\" ]]; then\n        echo \"-1\"\n    else\n        echo \"\
    ${max}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp54zpms0e.sh: line 22: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max\n\
    \    local i\n    local count\n    local value\n    local frequency\n    \n  \
    \  max=$(( ${#list} + 1 ))\n    \n    for (( i=1; i<=$max; i++ )); do\n      \
    \  value=${list[i]}\n        count=0\n        frequency=0\n        for (( j=0;\
    \ j<$max; j++ )); do\n            if [ $j -gt $i ]; then\n                if [\
    \ \"$value\" = \"${list[j]}\" ]; then\n                    count=$(( count + 1\
    \ ))\n                fi\n            fi\n        done\n        if [ $count -gt\
    \ $frequency ]; then\n            frequency=$count\n            max=$(expr $i\
    \ + 1)\n        fi\n    done\n    \n    if [ $max -gt 0 ]; then\n        echo\
    \ \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=$2\n\
    \    local count=0\n    local maxCount=0\n    local i\n    local j\n    local\
    \ k\n    local freq\n    local temp\n    local temp2\n    local temp3\n    local\
    \ temp4\n    local temp5\n    local temp6\n    local temp7\n    local temp8\n\
    \    local temp9\n    local temp10\n    local temp11\n    local temp12\n    local\
    \ temp13\n    local temp14\n    local temp15\n    local temp16\n    local temp17\n\
    \    local temp18\n    local temp19\n    local temp20\n    local temp21\n    local\
    \ temp22\n    local temp23\n    local temp24\n    local temp25\n    local temp26\n\
    \    local temp27\n    local temp28\n    local temp29\n    local temp30\n    local\
    \ temp31\n    local temp32\n    local temp33\n    local temp34\n    local temp35\n\
    \    local temp36\n    local temp37\n    local temp38\n    local temp39\n    local\
    \ temp40\n    local temp41\n    local temp42\n    local temp43\n    local temp44\n\
    \    local temp45\n    local temp46\n    local temp47\n    local temp48\n    local\
    \ temp49\n    local temp50\n    local temp51\n    local temp52\n    local temp53\n\
    \    local temp54\n    local temp55\n    local temp56\n    local temp57\n    local\
    \ temp58\n    local temp59\n    local temp60\n    local temp61\n    local temp62\n\
    \    local temp63\n    local temp64\n    local temp65\n    local temp66\n    local\
    \ temp67\n    local temp68\n    local temp69\n    local temp70\n    local temp71\n\
    \    local temp72\n    local temp73\n    local temp74\n    local temp75\n    local\
    \ temp76\n    local temp77\n    local temp78\n    local temp79\n    local temp80\n\
    \    local temp81\n    local temp82\n    local temp83\n    local temp84\n    local\
    \ temp85\n    local temp86\n    local temp87\n    local temp88\n    local temp89\n\
    \    local temp90\n    local temp91\n    local temp92\n    local temp93\n    local\
    \ temp94\n    local temp95\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxCount=0\n  local maxVal=0\n  local i\n  local j\n  local val\n  local\
    \ count\n  local countVal\n  local countVal2\n  local countVal3\n  local countVal4\n\
    \  local countVal5\n  local countVal6\n  local countVal7\n  local countVal8\n\
    \  local countVal9\n  local countVal10\n  local countVal11\n  local countVal12\n\
    \  local countVal13\n  local countVal14\n  local countVal15\n  local countVal16\n\
    \  local countVal17\n  local countVal18\n  local countVal19\n  local countVal20\n\
    \  local countVal21\n  local countVal22\n  local countVal23\n  local countVal24\n\
    \  local countVal25\n  local countVal26\n  local countVal27\n  local countVal28\n\
    \  local countVal29\n  local countVal30\n  local countVal31\n  local countVal32\n\
    \  local countVal33\n  local countVal34\n  local countVal35\n  local countVal36\n\
    \  local countVal37\n  local countVal38\n  local countVal39\n  local countVal40\n\
    \  local countVal41\n  local countVal42\n  local countVal43\n  local countVal44\n\
    \  local countVal45\n  local countVal46\n  local countVal47\n  local countVal48\n\
    \  local countVal49\n  local countVal50\n  local countVal51\n  local countVal52\n\
    \  local countVal53\n  local countVal54\n  local countVal55\n  local countVal56\n\
    \  local countVal57\n  local countVal58\n  local countVal59\n  local countVal60\n\
    \  local countVal61\n  local countVal62\n  local countVal63\n  local countVal64\n\
    \  local countVal65\n  local countVal66\n  local countVal67\n  local countVal68\n\
    \  local countVal69\n  local countVal70\n  local countVal71\n  local countVal72\n\
    \  local countVal73\n  local countVal74\n  local countVal75\n  local countVal76\n\
    \  local countVal77\n  local countVal78\n  local countVal79\n\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local val\n    local\
    \ maxval\n    local maxfreq\n    local maxi\n    local maxj\n    local maxk\n\
    \    local maxval2\n    local maxfreq2\n    local maxi1\n    local maxj1\n   \
    \ local maxk1\n    local maxval3\n    local maxfreq3\n    local maxi1\n    local\
    \ maxj1\n    local maxk1\n    local maxval4\n    local maxfreq4\n    local maxi1\n\
    \    local maxj1\n    local maxk1\n    local maxval5\n    local maxfreq5\n   \
    \ local maxi1\n    local maxj1\n    local maxk1\n    local maxval6\n    local\
    \ maxfreq6\n    local maxi1\n    local maxj1\n    local maxk1\n    local maxval7\n\
    \    local maxfreq7\n    local maxi1\n    local maxj1\n    local maxk1\n    local\
    \ maxval8\n    local maxfreq8\n    local maxi1\n    local maxj1\n    local maxk1\n\
    \    local maxval9\n    local maxfreq9\n    local maxi1\n    local maxj1\n   \
    \ local maxk1\n    local maxval10\n    local maxfreq10\n    local maxi1\n    local\
    \ maxj1\n    local maxk1\n    local maxval11\n    local maxfreq11\n    local maxi1\n\
    \    local maxj1\n    local maxk1\n    local maxval12\n    local maxfreq12\n \
    \   local maxi1\n    local maxj1\n    local maxk1\n    local maxval13\n    local\
    \ maxfreq13\n    local maxi1\n    local maxj1\n    local maxk1\n    local maxval14\n\
    \    local maxfreq14\n    local maxi1\n    local maxj1\n    local maxk1\n    local\
    \ maxval15\n    local maxfreq15\n    local maxi1\n    local maxj1\n    local maxk1\n\
    \    local maxval16\n    local maxfreq16\n    local maxi1\n    local maxj1\n \
    \   local maxk1\n    local maxval17\n    local maxfreq17\n    local maxi1\n  \
    \  local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local freq=0\n    local i\n    local j\n    local k\n\
    \    local count\n    local maxCount\n    local maxFreq\n    local maxIndex\n\
    \    local maxVal\n    local maxValCount\n    local maxValFreq\n    local maxValIndex\n\
    \    local maxValVal\n    local maxValValCount\n    local maxValValFreq\n    local\
    \ maxValValIndex\n    local maxValValVal\n    local maxValValValCount\n    local\
    \ maxValValValFreq\n    local maxValValValIndex\n    local maxValValValVal\n \
    \   local maxValValValCount\n    local maxValValValFreq\n    local maxValValValIndex\n\
    \    local maxValValValVal\n    local maxValValValCount\n    local maxValValValFreq\n\
    \    local maxValValValIndex\n    local maxValValValVal\n    local maxValValValCount\n\
    \    local maxValValValFreq\n    local maxValValValIndex\n    local maxValValValVal\n\
    \    local maxValValValCount\n    local maxValValValFreq\n    local maxValValValIndex\n\
    \    local maxValValValVal\n    local maxValValValCount\n    local maxValValValFreq\n\
    \    local maxValValValIndex\n    local maxValValValVal\n    local maxValValValCount\n\
    \    local maxValValValFreq\n    local maxValValValIndex\n    local maxValValValVal\n\
    \    local maxValValValCount\n    local maxValValValFreq\n    local maxValValValIndex\n\
    \    local maxValValValVal\n    local maxValValValCount\n    local maxValValValFreq\n\
    \    local maxValValValIndex\n    local maxValValValVal\n    local maxValValValCount\n\
    \    local maxValValValFreq\n    local maxValValValIndex\n    local maxValValValVal\n\
    \    local maxValValValCount\n    local maxValValValFreq\n    local maxValValValIndex\n\
    \    local maxValValValVal\n    local maxValValValCount\n    local maxValValValFreq\n\
    \    local maxValValValIndex\n    local maxValValValVal\n    local max\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local maxIndex\n\
    \    local maxVal\n    local maxFreq\n    local maxCount\n    local maxCountIndex\n\
    \    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local\
    \ maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n\
    \    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local\
    \ maxCountCount\n    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n\
    \    local maxCountCount\n    local maxCountIndex\n    local maxCountVal\n   \
    \ local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n    local\
    \ maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n\
    \    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local\
    \ maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n\
    \    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local\
    \ maxCountCount\n    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n\
    \    local maxCountCount\n    local maxCountIndex\n    local maxCountVal\n   \
    \ local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n    local\
    \ maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n\
    \    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local\
    \ maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local maxCountCount\n\
    \    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n    local\
    \ maxCountCount\n    local maxCountIndex\n    local maxCountVal\n    local maxCountFreq\n\
    \    local maxCountCount\n    local maxCountIndex\n    local maxCountVal\n   \
    \ local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n    local\
    \ maxCountVal\n    local maxCountFreq\n    local maxCountCount\n    local maxCountIndex\n\
    \    local maxCountVal\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ maxIndex\n    local maxFreq\n    local maxVal\n    local maxIndexVal\n    local\
    \ maxIndexFreq\n    local maxValFreq\n    local maxValIndex\n    local maxValIndexFreq\n\
    \    local maxValFreqIndex\n    local maxValFreqIndexFreq\n    local maxValFreqIndexFreqIndex\n\
    \    local maxValFreqIndexFreqIndexFreq\n    local maxValFreqIndexFreqIndexFreqIndex\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreq\n    local maxValFreqIndexFreqIndexFreqIndexFreqIndex\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreq\n    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqFreq\n\
    \    local maxValFreqIndexFreqIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqF\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxNum=0\n    local num\n    local count\n    local i\n    local j\n\
    \    local temp\n    local tempNum\n    local tempCount\n    local tempMax\n \
    \   local tempMaxNum\n    local tempMaxCount\n    local tempMaxCount2\n    local\
    \ tempMaxCount3\n    local tempMaxCount4\n    local tempMaxCount5\n    local tempMaxCount6\n\
    \    local tempMaxCount7\n    local tempMaxCount8\n    local tempMaxCount9\n \
    \   local tempMaxCount10\n    local tempMaxCount11\n    local tempMaxCount12\n\
    \    local tempMaxCount13\n    local tempMaxCount14\n    local tempMaxCount15\n\
    \    local tempMaxCount16\n    local tempMaxCount17\n    local tempMaxCount18\n\
    \    local tempMaxCount19\n    local tempMaxCount20\n    local tempMaxCount21\n\
    \    local tempMaxCount22\n    local tempMaxCount23\n    local tempMaxCount24\n\
    \    local tempMaxCount25\n    local tempMaxCount26\n    local tempMaxCount27\n\
    \    local tempMaxCount28\n    local tempMaxCount29\n    local tempMaxCount30\n\
    \    local tempMaxCount31\n    local tempMaxCount32\n    local tempMaxCount33\n\
    \    local tempMaxCount34\n    local tempMaxCount35\n    local tempMaxCount36\n\
    \    local tempMaxCount37\n    local tempMaxCount38\n    local tempMaxCount39\n\
    \    local tempMaxCount40\n    local tempMaxCount41\n    local tempMaxCount42\n\
    \    local tempMaxCount43\n    local tempMaxCount44\n    local tempMaxCount45\n\
    \    local tempMaxCount46\n    local tempMaxCount47\n    local tempMaxCount48\n\
    \    local tempMaxCount49\n    local tempMaxCount50\n    local tempMaxCount51\n\
    \    local tempMaxCount52\n    local tempMaxCount53\n    local tempMaxCount54\n\
    \    local tempMaxCount55\n    local tempMaxCount56\n    local tempMaxCount57\n\
    \    local tempMaxCount58\n    local tempMaxCount59\n    local tempMaxCount60\n\
    \    local tempMaxCount61\n    local tempMaxCount62\n    local tempMaxCount63\n\
    \    local tempMaxCount64\n    local tempMaxCount65\n\n}\n\ncandidate() {\n  \
    \  search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxIndex=0\n  local maxFreq=0\n  local i\n  local j\n  local freq\n \
    \ \n  for ((i=0; i<${#list}; i++)); do\n    freq=$(echo \"${list}\" | tr \" \"\
    \ \"\\n\" | sort | uniq | wc -l)\n    if [[ ${freq} -gt ${maxFreq} ]]; then\n\
    \      max=${list[i]}\n      maxIndex=${i}\n      maxFreq=${freq}\n    fi\n  done\n\
    \  \n  if [[ ${maxFreq} -gt ${max} ]]; then\n    echo \"${max}\"\n  else\n   \
    \ echo \"-1\"\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpinqr7psc.sh: line 33: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxFreq=0\n    local maxIndex=0\n    local index=0\n    local freq=0\n\
    \    local i\n    \n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]}\
    \ -gt 0 ]]; then\n            freq=$((${freq}+1))\n        fi\n    done\n    \n\
    \    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]]; then\n\
    \            if ((${freq} >= ${list[i]})); then\n                max=${list[i]}\n\
    \                maxFreq=${freq}\n                maxIndex=${i}\n            fi\n\
    \        fi\n    done\n    \n    if [[ ${max} -gt 0 ]]; then\n        echo \"\
    ${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8zi3_5ej.sh: line 25: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmp8zi3_5ej.sh: line 31: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local list=\"\
    $1\"\n    local -a arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n\
    \    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n\
    \    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    \n    for ((i=0; i<${#list}; i++)); do\n        freq=$(echo \"${list[i]}\"\
    \ | wc -w)\n        if (( freq > maxfreq )) ; then\n            max=$(echo \"\
    ${list[i]}\" | cut -d \" \" -f 1)\n            maxfreq=$freq\n        fi\n   \
    \ done\n    \n    if [[ ${maxfreq} -ge ${max} ]]; then\n        echo \"${max}\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local max=0\n\
    \    local maxStr=\"\"\n    local maxFreq=0\n    local maxStrFreq=\"\"\n    local\
    \ count=0\n    local countStr=\"\"\n    local countFreq=0\n    local countStrFreq=\"\
    \"\n    local i\n    local j\n    local k\n    local freq\n    local strFreq\n\
    \    local maxFreqStr=\"\"\n    local maxStrFreqStr=\"\"\n    local maxStrFreqFreq=\"\
    \"\n    local maxStrFreqFreqStr=\"\"\n    local maxStrFreqFreqFreq=\"\"\n    local\
    \ maxStrFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreq=\"\"\n    local\
    \ maxStrFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreq=\"\"\n\
    \    local maxStrFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreqFreqStr=\"\"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq=\"\
    \"\n    local maxStrFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqStr=\"\"\n    local\
    \ maxStrFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq=\"\"\n    local maxStrFreqFreqFreqF\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local max\n  \n  for i in $list; do\n\
    \    frequency=$(echo $i | wc -w)\n    if [ $frequency -gt $max ]; then\n    \
    \  greatest=$i\n      max=$frequency\n    fi\n  done\n  \n  if [ $max -eq 0 ];\
    \ then\n    return -1\n  fi\n  \n  for i in $list; do\n    frequency=$(echo $i\
    \ | wc -w)\n    if [ $frequency -ge $max ]; then\n      greatest=$i\n    fi\n\
    \  done\n  \n  echo $greatest\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzckwynuq.sh: line 25: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 25: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 25: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 25: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 25: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 31: [: -eq: unary operator expected

    /tmp/tmpzckwynuq.sh: line 37: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 37: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 37: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 37: [: 1: unary operator expected

    /tmp/tmpzckwynuq.sh: line 37: [: 1: unary operator expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local tmp\n\n  \
    \  greatest=-1\n    frequency=0\n    i=0\n    while [ $i -lt ${#list} ]; do\n\
    \        value=${list[i]}\n        ((frequency++))\n        if [ $value -gt $greatest\
    \ ]; then\n            greatest=$value\n        fi\n        ((i++))\n    done\n\
    \n    if [ $greatest -eq 0 ]; then\n        echo \"-1\"\n    else\n        max=0\n\
    \        maxCount=0\n        maxIndex=0\n        maxValue=${list[0]}\n       \
    \ for ((j=0; j<${#list}; j++)) ; do\n            value=${list[j]}\n          \
    \  if [ $value -eq $greatest ]; then\n                if [ $frequency -gt $maxCount\
    \ ]; then\n                    maxCount=$frequency\n                    maxIndex=$j\n\
    \                    maxValue=${list[j]}\n                fi\n            fi\n\
    \        done\n        echo \"${list[maxIndex+1]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplir26vp1.sh: line 34: [: too many arguments

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 34: [: -gt: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: too many arguments

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    /tmp/tmplir26vp1.sh: line 49: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local val\n    local\
    \ tmp\n    local maxVal\n    local maxFreq\n    local maxIndex\n    local maxValIndex\n\
    \    local maxValFreq\n    local maxValIndexFreq\n    local maxValIndexFreqIndex\n\
    \    local maxValIndexFreqIndexFreq\n    local maxValIndexFreqIndexFreqIndex\n\
    \    local maxValIndexFreqIndexFreqIndexFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreq\n   \
    \ local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxNumber=\"\"\n    local maxFrequency=0\n    local maxIndex=0\n  \
    \  local index=0\n    local frequency=0\n    local number\n    local i\n    \n\
    \    for number in $numbers; do\n        if [ $number -gt $max ]; then\n     \
    \       max=$(echo $number | cut -d \" \" -f 1)\n            maxNumber=$(echo\
    \ $number | cut -d \" \" -f 2)\n            maxFrequency=$(echo $number | cut\
    \ -d \" \" -f 3)\n        fi\n    done\n    \n    for number in $numbers; do\n\
    \        if [ $number -eq $max ]; then\n            frequency=$(echo $number |\
    \ cut -d \" \" -f 3)\n        fi\n    done\n    \n    for number in $numbers;\
    \ do\n        if [ $frequency -ge $number ]; then\n            index=$(echo $number\
    \ | cut -d \" \" -f 1)\n        fi\n    done\n    \n    if [ $index -eq 0 ]; then\n\
    \        echo \"-1\"\n    else\n        echo \"$maxNumber\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j k l m n o p q r s t\
    \ u v w x y z\n    local -a arr\n    arr=( $1 )\n    local max\n    max=$( echo\
    \ $( echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1 ) ) # get the greatest\
    \ number\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[$i]} -eq\
    \ $max ]]; then\n            (( ++freq[$max] ))\n        else\n            ((\
    \ freq[$arr[$i]] ))\n        fi\n    done\n    for (( j=0; j<${#arr[@]}; j++ ));\
    \ do\n        if [[ ${arr[$j]} -eq $max ]]; then\n            (( ++freq[$max]\
    \ ))\n        else\n            (( freq[$arr[$j]] ))\n        fi\n    done\n \
    \   for (( k=0; k<${#arr[@]}; k++ )); do\n        if [[ ${arr[$k]} -eq $max ]];\
    \ then\n            (( ++freq[$max] ))\n        else\n            (( freq[$arr[$k]]\
    \ ))\n        fi\n    done\n    for (( l=0; l<${#arr[@]}; l++ )); do\n       \
    \ if [[ ${arr[$l]} -eq $max ]]; then\n            (( ++freq[$max] ))\n       \
    \ else\n            (( freq[$arr[$l]] ))\n        fi\n    done\n    for (( m=0;\
    \ m<${#arr[@]}; m++ )); do\n        if [[ ${arr[$m]} -eq $max ]]; then\n     \
    \       (( ++freq[$max] ))\n        else\n            (( freq[$arr[$m]] ))\n \
    \       fi\n    done\n    for (( n=0; n<${#arr[@]}; n++ )); do\n        if [[\
    \ ${arr[$n]} -eq $max ]]; then\n            (( ++freq[$max] ))\n        else\n\
    \            (( freq[$arr[$n]] ))\n        fi\n    done\n    for (( o=0; o<${#arr[@]};\
    \ o++ )); do\n        if [[ ${arr[$o]} -eq $max ]]; then\n            (( ++freq[$max]\
    \ ))\n        else\n            (( freq[$arr[$o]] ))\n        fi\n    done\n \
    \   for \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp59uial6q.sh: line 70: syntax error near unexpected token `newline''

    /tmp/tmp59uial6q.sh: line 70: `    for ''

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for i in $1 \n    do\n        if [ $i -gt 0 ]\n        then\n\
    \            freq=$((freq+1))\n            if [ $freq -gt $i ]\n            then\n\
    \                max=$i\n            fi\n        fi\n    done\n    if [ $freq\
    \ -eq 0 ]\n    then\n        echo \"-1\"\n    else\n        echo $max\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local freq=0\n\
    \    local max=0\n    local maxStr=\"\"\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local \n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local maxVal\n \
    \   local maxFreq\n    local val\n    local freqVal\n    local freqFreq\n    local\
    \ maxValFreq\n    local maxFreqVal\n    local maxFreqFreq\n    local maxValFreqFreq\n\
    \    local maxFreqValFreq\n    local maxValFreqFreqFreq\n    local maxFreqValFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreq\n    local maxFreqValFreqFreqFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreqFreqFreq\n    local maxFreqValFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreqFreqFreqFreqFreq\n    local maxFreqValFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n    local maxFreqValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n    local\
    \ maxFreqValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n    local\
    \ maxValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxFreqValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxFreqValFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqF\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local list=\"\
    $1\"\n    local -a arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n\
    \    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n\
    \    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local i\n  local freq\n  local j\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local tmp\n\n  \
    \  IFS=' ' read -r -a array <<< \"$list\"\n    greatest=${array[0]}\n    frequency=${array[0]}\n\
    \    maxIndex=0\n    maxValue=${array[0]}\n    maxFrequency=0\n    for (( i=1;\
    \ i<${#array[@]}; i++ )); do\n        if (( ${array[$i]} > ${maxValue} )); then\n\
    \            greatest=${array[$i]}\n            maxValue=${array[$i]}\n      \
    \      maxIndex=$i\n        fi\n        if (( ${array[$i]} >= ${frequency} ));\
    \ then\n            frequency=${array[$i]}\n        fi\n    done\n    if (( ${frequency}\
    \ > ${maxFrequency} )); then\n        greatest=${array[$maxIndex]}\n        maxFrequency=${frequency}\n\
    \    fi\n    echo \"$greatest\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if (( ${#1}[$i]>max ));\
    \ then\n            freq=${#1}[$i]\n            max=${#1}[$i]\n        fi\n  \
    \  done\n    if (( freq>0 )); then\n        echo \"$max\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4u13ho8u.sh: line 20: ((: 9[0]>max : syntax error: invalid arithmetic
    operator (error token is "[0]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[1]>max : syntax error: invalid arithmetic
    operator (error token is "[1]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[2]>max : syntax error: invalid arithmetic
    operator (error token is "[2]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[3]>max : syntax error: invalid arithmetic
    operator (error token is "[3]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[4]>max : syntax error: invalid arithmetic
    operator (error token is "[4]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[5]>max : syntax error: invalid arithmetic
    operator (error token is "[5]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[6]>max : syntax error: invalid arithmetic
    operator (error token is "[6]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[7]>max : syntax error: invalid arithmetic
    operator (error token is "[7]>max ")

    /tmp/tmp4u13ho8u.sh: line 20: ((: 9[8]>max : syntax error: invalid arithmetic
    operator (error token is "[8]>max ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local list=\"\
    $1\"\n    local -a arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n\
    \    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n\
    \    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max\n\
    \  local count\n  local i\n  max=$(( ${#list} + 1 ))\n  for i in $(seq 0 $max);\
    \ do\n    count=0\n    for j in $(seq 0 $max); do\n      if [[ $i == $j ]]; then\n\
    \        continue\n      fi\n      if [[ $list == *$i* ]]; then\n        count=$((\
    \ count + 1 ))\n      fi\n    done\n    if [[ $count -gt $i ]]; then\n      max=$i\n\
    \    fi\n  done\n  if [[ $max -eq 0 ]]; then\n    return -1\n  fi\n  echo $max\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=($1)\n    freq=-1\n    max=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( freq > 0 )); then\n            if (( freq >= i )); then\n     \
    \           freq=$i\n                max=$i\n            fi\n        else\n  \
    \          freq=$i\n            max=$i\n        fi\n    done\n    echo \"$max\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxCount\n    local maxValue\n    local min\n    local minCount\n  \
    \  local minValue\n    local value\n    local count\n    local valueCount\n  \
    \  local valueMax\n    local valueMin\n    local valueMinCount\n    local valueMinCountMax\n\
    \    local valueMinCountMin\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCountMinMax\n    local valueMinCountMinMax\n\
    \    local valueMinCountMinMax\n    local valueMinCount\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( ${freq[$i]} >= ${freq[$max]} )) ; then\n          \
    \  max=i\n        fi\n    done\n    if [[ $max -eq 0 ]] ; then\n        echo \"\
    -1\"\n    else\n        echo \"${arr[$max]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp91oj457e.sh: line 22: ((: >=  : syntax error: operand expected
    (error token is ">=  ")

    /tmp/tmp91oj457e.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp91oj457e.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp91oj457e.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp91oj457e.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmul3gz0v.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]; then\n  \
    \          greatest=$i\n        fi\n        frequency=$(( $frequency + 1 ))\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]; then\n        echo \"$greatest\"\
    \n    else\n        echo \"$frequency\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local maxIndexValue\n    local maxIndexFrequency\n\
    \    local maxIndexValueFrequency\n    local maxIndexFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequency\n    local maxIndexFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequency\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n    local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \    local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local value\n    local count\n\
    \    local i\n    \n    for (( i=0; i<${#list}; i++ )); do\n        value=${list[i]}\n\
    \        count=0\n        for (( j=0; j<${#list}; j++ )); do\n            if [[\
    \ ${list[j]} -eq ${value} ]]; then\n                (( count++ ))\n          \
    \  fi\n        done\n        if (( count > maxCount )); then\n            maxCount=${count}\n\
    \            maxValue=${value}\n        fi\n    done\n    \n    if (( maxCount\
    \ > 0 )); then\n        echo \"${maxValue}\"\n    else\n        echo \"-1\"\n\
    \    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpmdq3lppz.sh: line 28: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local tmp\n    local tmpIndex\n    local tmpFrequency\n\
    \    \n    greatest=-1\n    frequency=0\n    \n    for i in $list; do\n      \
    \  if [ $i -gt 0 ]; then\n            frequency=$((frequency + 1))\n        fi\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]; then\n        greatest=$frequency\n\
    \        max=$i\n        maxIndex=$i\n        maxFrequency=$frequency\n    fi\n\
    \    \n    for i in $list; do\n        if [ $i -gt 0 ]; then\n            tmp=$i\n\
    \            tmpIndex=$i\n            tmpFrequency=$frequency\n            for\
    \ j in $list; do\n                if [ $j -gt 0 ]; then\n                    if\
    \ [ $j -eq $i ]; then\n                        tmpFrequency=$((tmpFrequency +\
    \ frequency))\n                    else\n                        tmpFrequency=$((tmpFrequency\
    \ + 1))\n                    fi\n                fi\n            done\n      \
    \      if [ $tmpFrequency -gt $greatest ]; then\n                greatest=$tmpFrequency\n\
    \                max=$tmp\n                maxIndex=$tmpIndex\n              \
    \  maxFrequency=$tmpFrequency\n            fi\n        fi\n    done\n    \n  \
    \  return $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((${freq}+1))\n         \
    \   if [[ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n  \
    \          fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n       \
    \ echo \"-1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz0mzer7b.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxval=0\n    local maxfreq=0\n    local i\n    local j\n    local\
    \ val\n    local freq\n    local count\n    local maxcount\n    local maxval\n\
    \    local maxfreq\n    local max\n    local maxcount\n    local maxval\n    local\
    \ maxfreq\n    local max\n    local maxcount\n    local maxval\n    local maxfreq\n\
    \    local max\n    local maxcount\n    local maxval\n    local maxfreq\n    local\
    \ max\n    local maxcount\n    local maxval\n    local maxfreq\n    local max\n\
    \    local maxcount\n    local maxval\n    local maxfreq\n    local max\n    local\
    \ maxcount\n    local maxval\n    local maxfreq\n    local max\n    local maxcount\n\
    \    local maxval\n    local maxfreq\n    local max\n    local maxcount\n    local\
    \ maxval\n    local maxfreq\n    local max\n    local maxcount\n    local maxval\n\
    \    local maxfreq\n    local max\n    local maxcount\n    local maxval\n    local\
    \ maxfreq\n    local max\n    local maxcount\n    local maxval\n    local maxfreq\n\
    \    local max\n    local maxcount\n    local maxval\n    local maxfreq\n    local\
    \ max\n    local maxcount\n    local maxval\n    local maxfreq\n    local max\n\
    \    local maxcount\n    local maxval\n    local maxfreq\n    local max\n    local\
    \ maxcount\n    local maxval\n    local maxfreq\n    local max\n    local maxcount\n\
    \    local maxval\n    local maxfreq\n    local max\n    local maxcount\n    local\
    \ maxval\n    local maxfreq\n    local max\n    local maxcount\n    local maxval\n\
    \    local maxfreq\n    local max\n    local maxcount\n    local maxval\n    local\
    \ maxfreq\n    local max\n    local maxcount\n    local maxval\n    local maxfreq\n\
    \    local max\n    local maxcount\n    local maxval\n    local maxfreq\n    local\
    \ max\n    local maxcount\n    local maxval\n    local maxfreq\n    local max\n\
    \    local maxcount\n    local maxval\n    local maxfreq\n    local max\n    local\
    \ maxcount\n    local maxval\n    local max\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local freq=0\n  local i\n  for i in $list; do\n    ((freq++))\n    ((max=$((max>freq?max:freq))));\n\
    \  done\n  ((max=$((max>freq?max:freq))));\n  ((max=$((max>0?max:-1))));\n  echo\
    \ $max;\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=1; i<=$max; i++ )); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n     \
    \       if [[ ${freq[$i]} -gt ${freq[$max]} ]]; then\n                max=$i\n\
    \            fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n     \
    \   echo -1\n    else\n        echo ${arr[$max]}\n    fi\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest=-1\n\
    \    local frequency=0\n    local integer=0\n    local max=0\n    local maxIndex=0\n\
    \    local index=0\n    local i\n    \n    for (( i=0; i<${#list}; i++ )); do\n\
    \        integer=${list[i]}\n        if (( integer > max )); then\n          \
    \  greatest=${integer}\n            max=${integer}\n            maxIndex=${i}\n\
    \        elif (( integer == max )); then\n            frequency=${frequency}+1\n\
    \        fi\n    done\n    \n    if (( frequency >= max )); then\n        greatest=${max}\n\
    \        maxIndex=${maxIndex}\n    fi\n    \n    return $greatest\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1o49bojj.sh: line 27: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmp1o49bojj.sh: line 31: ((: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    for i in $numbers\n    do\n     \
    \   if [ $i -gt 0 ]\n        then\n            frequency=$(grep -c \"$i\" <<<\
    \ $numbers)\n            if [ $frequency -gt $i ]\n            then\n        \
    \        greatest=$i\n            fi\n        fi\n    done\n    \n    if [ $greatest\
    \ -eq 0 ]\n    then\n        echo \"-1\"\n    else\n        echo \"$greatest\"\
    \n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w1nelv8.sh: line 33: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=1; i<=$max; i++ )); do\n        if [[ ${freq[$i]} -gt $freq[$max] ]]; then\n\
    \            max=i\n        fi\n    done\n    echo \"${arr[max]}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg6cta1l3.sh: line 22: [[: [4]: syntax error: operand expected (error
    token is "[4]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmpg6cta1l3.sh: line 22: [[: [1]: syntax error: operand expected (error token
    is "[1]")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ max=$2\n    local -n val=$3\n    local -n count=$4\n    local -n maxCount=$5\n\
    \    local -n maxVal=$6\n    local -n maxCountVal=$7\n    local -n maxCountVal2=$8\n\
    \    local -n maxCountVal3=$9\n    local -n maxCountVal4=$10\n    local -n maxCountVal5=$11\n\
    \    local -n maxCountVal6=$12\n    local -n maxCountVal7=$13\n    local -n maxCountVal8=$14\n\
    \    local -n maxCountVal9=$15\n    local -n maxCountVal10=$16\n    local -n maxCountVal11=$17\n\
    \    local -n maxCountVal12=$18\n    local -n maxCountVal13=$19\n    local -n\
    \ maxCountVal14=$20\n    local -n maxCountVal15=$21\n    local -n maxCountVal16=$22\n\
    \    local -n maxCountVal17=$23\n    local -n maxCountVal18=$24\n    local -n\
    \ maxCountVal19=$25\n    local -n maxCountVal20=$26\n    local -n maxCountVal21=$27\n\
    \    local -n maxCountVal22=$28\n    local -n maxCountVal23=$29\n    local -n\
    \ maxCountVal24=$30\n    local -n maxCountVal25=$31\n    local -n maxCountVal26=$32\n\
    \    local -n maxCountVal27=$33\n    local -n maxCountVal28=$34\n    local -n\
    \ maxCountVal29=$35\n    local -n maxCountVal30=$36\n    local -n maxCountVal31=$37\n\
    \    local -n maxCountVal32=$38\n    local -n maxCountVal33=$39\n    local -n\
    \ maxCountVal34=$40\n    local -n maxCountVal35=$41\n    local -n maxCountVal36=$42\n\
    \    local -n maxCountVal37=$43\n    local -n maxCountVal38=$44\n    local -n\
    \ maxCountVal39=$45\n    local -n maxCountVal40=$46\n    local -n maxCountVal41=$47\n\
    \    local -n maxCountVal42=$48\n    \n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkx300l7b.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpkx300l7b.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpkx300l7b.sh: line 25: local: `5 5 5 5 10'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 26: local: `5 5 5 5 11'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 27: local: `5 5 5 5 12'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 28: local: `5 5 5 5 13'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 29: local: `5 5 5 5 14'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 30: local: `5 5 5 5 15'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 31: local: `5 5 5 5 16'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 32: local: `5 5 5 5 17'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 33: local: `5 5 5 5 18'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 34: local: `5 5 5 5 19'': invalid variable name for
    name reference

    /tmp/tmpkx300l7b.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 36: local: `1'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 37: local: `2'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 38: local: `3'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 39: local: `4'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 40: local: `5'': invalid variable name for name reference

    /tmp/tmpkx300l7b.sh: line 4'
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${#1} == $i ]];\
    \ then\n            freq=$((${freq}+1))\n        else\n            if (( ${freq}\
    \ >= $1 )); then\n                max=$((${max}+1))\n            fi\n        fi\n\
    \    done\n    if (( ${freq} >= $1 )); then\n        max=$((${max}+1))\n    fi\n\
    \    echo \"${max}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 23: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp8t_ql4rf.sh: line 28: ((: 0 >= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if [ \"\
    $i\" -gt \"$max\" ]; then\n            freq=$((freq+1))\n            max=$i\n\
    \        elif [ \"$i\" -eq \"$max\" ]; then\n            freq=$((freq+1))\n  \
    \      fi\n    done\n    \n    if [ \"$freq\" -gt \"$max\" ]; then\n        echo\
    \ \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i = 0; i <= max; i++ )); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n  \
    \          if [[ ${freq[$i]} -gt ${arr[$i]} ]]; then\n                max=$i\n\
    \            fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n     \
    \   echo \"-1\"\n    else\n        echo \"${arr[$max]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxfreq=0\n  local i\n  local j\n  local k\n  local freq\n  local val\n\
    \  \n  for ((i=0; i<${#list}; i++)); do\n    val=${list[i]}\n    freq=${#list[i]}\n\
    \    \n    if [[ ${freq} -gt ${maxfreq} ]]; then\n      max=${val}\n      maxfreq=${freq}\n\
    \    fi\n  done\n  \n  if [[ ${maxfreq} -gt ${max} ]]; then\n    return ${max}\n\
    \  else\n    return -1\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfshh_ec.sh: line 35: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local val\n    local i\n    local\
    \ j\n    local k\n    local freq\n    local count\n    local count2\n    local\
    \ count3\n    local count4\n    local count5\n    local count6\n    local count7\n\
    \    local count8\n    local count9\n    local count10\n    local count11\n  \
    \  local count12\n    local count13\n    local count14\n    local count15\n  \
    \  local count16\n    local count17\n    local count18\n    local count19\n  \
    \  local count20\n    local count21\n    local count22\n    local count23\n  \
    \  local count24\n    local count25\n    local count26\n    local count27\n  \
    \  local count28\n    local count29\n    local count30\n    local count31\n  \
    \  local count32\n    local count33\n    local count34\n    local count35\n  \
    \  local count36\n    local count37\n    local count38\n    local count39\n  \
    \  local count40\n    local count41\n    local count42\n    local count43\n  \
    \  local count44\n    local count45\n    local count46\n    local count47\n  \
    \  local count48\n    local count49\n    local count50\n    local count51\n  \
    \  local count52\n    local count53\n    local count54\n    local count55\n  \
    \  local count56\n    local count57\n    local count58\n    local count59\n  \
    \  local count60\n    local count61\n    local count62\n    local count63\n  \
    \  local count64\n    local count65\n    local count66\n    local count67\n  \
    \  local count68\n    local count69\n    local count70\n    local count71\n  \
    \  local count72\n    local count73\n    local count74\n    local count75\n  \
    \  local count76\n    local count77\n    local count78\n    local count79\n  \
    \  local count80\n    local count81\n    local count82\n    local count83\n  \
    \  local count84\n    local count85\n    local count86\n    local count87\n  \
    \  local count88\n    local count89\n    local count90\n    local count91\n  \
    \  local count92\n    local count93\n    local count94\n\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $(sort <<<\"${arr[*]}\" | uniq -c) )\n    max=${freq[0]}\n\
    \    for (( i=1; i<${#freq[@]}; i++ )); do\n        if [[ ${freq[$i]} -gt $max\
    \ ]]; then\n            max=${freq[$i]}\n        fi\n    done\n    echo \"${max}\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxFreq=0\n    local i\n    local j\n    local k\n    local freq\n\
    \    local temp\n    local temp2\n    local temp3\n    local temp4\n    local\
    \ temp5\n    local temp6\n    local temp7\n    local temp8\n    local temp9\n\
    \    local temp10\n    local temp11\n    local temp12\n    local temp13\n    local\
    \ temp14\n    local temp15\n    local temp16\n    local temp17\n    local temp18\n\
    \    local temp19\n    local temp20\n    local temp21\n    local temp22\n    local\
    \ temp23\n    local temp24\n    local temp25\n    local temp26\n    local temp27\n\
    \    local temp28\n    local temp29\n    local temp30\n    local temp31\n    local\
    \ temp32\n    local temp33\n    local temp34\n    local temp35\n    local temp36\n\
    \    local temp37\n    local temp38\n    local temp39\n    local temp40\n    local\
    \ temp41\n    local temp42\n    local temp43\n    local temp44\n    local temp45\n\
    \    local temp46\n    local temp47\n    local temp48\n    local temp49\n    local\
    \ temp50\n    local temp51\n    local temp52\n    local temp53\n    local temp54\n\
    \    local temp55\n    local temp56\n    local temp57\n    local temp58\n    local\
    \ temp59\n    local temp60\n    local temp61\n    local temp62\n    local temp63\n\
    \    local temp64\n    local temp65\n    local temp66\n    local temp67\n    local\
    \ temp68\n    local temp69\n    local temp70\n    local temp71\n    local temp72\n\
    \    local temp73\n    local temp74\n    local temp75\n    local temp76\n    local\
    \ temp77\n    local temp78\n    local temp79\n    local temp80\n    local temp81\n\
    \    local temp82\n    local temp83\n    local temp84\n    local temp85\n    local\
    \ temp86\n    local temp87\n    local temp88\n    local temp89\n    local temp90\n\
    \    local temp91\n    local temp92\n    local temp93\n    local temp94\n    local\
    \ temp95\n    local temp96\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j k l m n o p q r s t\
    \ u v w x y z\n    local -a arr\n    arr=( $1 )\n    local max\n    local freq\n\
    \    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n\
    \    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n\
    \    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n\
    \    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n\
    \    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n\
    \    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n\
    \    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n\
    \    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n\
    \    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n\
    \    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n\
    \    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n\
    \    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n\
    \    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n\
    \    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n\
    \    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n\
    \    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n\
    \    local -a arr66\n    local -a arr67\n    local -a arr68\n\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n     \
    \   local val=${list[i]}\n        if (( val > 0 )); then\n            freq=$((\
    \ freq + 1 ))\n            if (( freq > max )); then\n                max=$val\n\
    \            fi\n        fi\n    done\n    if (( max > 0 )); then\n        echo\
    \ $max\n    else\n        echo -1\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzr52y9fi.sh: line 22: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n     \
    \   if [[ ${list[i]} -gt 0 ]]; then\n            freq=$(( freq + 1 ))\n      \
    \      if [[ ${freq} -gt ${list[i]} ]]; then\n                max=$(( ${list[i]}\
    \ ))\n            fi\n        fi\n    done\n    if [[ ${max} -gt 0 ]]; then\n\
    \        echo \"${max}\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu26_2wlt.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxCount=0\n    local maxVal=0\n    local\
    \ i\n    local j\n    local k\n    local count\n    local val\n    local count2\n\
    \    local val2\n    local count3\n    local val3\n    local count4\n    local\
    \ val4\n    local count5\n    local val5\n    local count6\n    local val6\n \
    \   local count7\n    local val7\n    local count8\n    local val8\n    local\
    \ count9\n    local val9\n    local count10\n    local val10\n    local count11\n\
    \    local val11\n    local count12\n    local val12\n    local count13\n    local\
    \ val13\n    local count14\n    local val14\n    local count15\n    local val15\n\
    \    local count16\n    local val16\n    local count17\n    local val17\n    local\
    \ count18\n    local val18\n    local count19\n    local val19\n    local count20\n\
    \    local val20\n    local count21\n    local val21\n    local count22\n    local\
    \ val22\n    local count23\n    local val23\n    local count24\n    local val24\n\
    \    local count25\n    local val25\n    local count26\n    local val26\n    local\
    \ count27\n    local val27\n    local count28\n    local val28\n    local count29\n\
    \    local val29\n    local count30\n    local val30\n    local count31\n    local\
    \ val31\n    local count32\n    local val32\n    local count33\n    local val33\n\
    \    local count34\n    local val34\n    local count35\n    local val35\n    local\
    \ count36\n    local val36\n    local count37\n    local val37\n    local count38\n\
    \    local val38\n    local count39\n    local val39\n    local count40\n    local\
    \ val40\n    local count41\n    local val41\n    local count42\n    local val42\n\
    \    local count43\n    local val43\n    local count44\n    local val44\n    local\
    \ count45\n    local val45\n    local count46\n    local val46\n    local count47\n\
    \    local val47\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local k\n    local count\n\
    \    local val\n    local freq\n    local num\n    local tmp\n    local num2\n\
    \    local num3\n    local num4\n    local num5\n    local num6\n    local num7\n\
    \    local num8\n    local num9\n    local num10\n    local num11\n    local num12\n\
    \    local num13\n    local num14\n    local num15\n    local num16\n    local\
    \ num17\n    local num18\n    local num19\n    local num20\n    local num21\n\
    \    local num22\n    local num23\n    local num24\n    local num25\n    local\
    \ num26\n    local num27\n    local num28\n    local num29\n    local num30\n\
    \    local num31\n    local num32\n    local num33\n    local num34\n    local\
    \ num35\n    local num36\n    local num37\n    local num38\n    local num39\n\
    \    local num40\n    local num41\n    local num42\n    local num43\n    local\
    \ num44\n    local num45\n    local num46\n    local num47\n    local num48\n\
    \    local num49\n    local num50\n    local num51\n    local num52\n    local\
    \ num53\n    local num54\n    local num55\n    local num56\n    local num57\n\
    \    local num58\n    local num59\n    local num60\n    local num61\n    local\
    \ num62\n    local num63\n    local num64\n    local num65\n    local num66\n\
    \    local num67\n    local num68\n    local num69\n    local num70\n    local\
    \ num71\n    local num72\n    local num73\n    local num74\n    local num75\n\
    \    local num76\n    local num77\n    local num78\n    local num79\n    local\
    \ num80\n    local num81\n    local num82\n    local num83\n    local num84\n\
    \    local num85\n    local num86\n    local num87\n    local num88\n    local\
    \ num89\n    local num90\n    local num91\n    local num92\n    local num93\n\
    \    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi7v7nw4a.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    IFS=$'\\n' read -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if (( ${array[$i]} > max )); then\n            freq=${array[$i]}\n\
    \            max=${array[$i]}\n        fi\n    done\n    echo \"$max\"\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcpzgb8d8.sh: line 21: ((: 5 5 5 5 1 > max : syntax error in expression
    (error token is "5 5 5 1 > max ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=0\n\
    \    max=0\n    for i in $1 \n    do\n        if [ $i -gt $max ]\n        then\n\
    \            freq=$i\n            max=$i\n        elif [ $i -eq $max ]\n     \
    \   then\n            freq=$freq+1\n        fi\n    done\n    if [ $freq -gt $max\
    \ ]\n    then\n        echo \"-1\"\n    else\n        echo \"$max\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3bodwalb.sh: line 30: [: 5+1+1+1: integer expression expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local \n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local i freq max\n\
    \    freq=()\n    max=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${freq[$i]}\
    \ -eq 0 ]]; then\n            freq[$i]=1\n        else\n            freq[$i]=$((freq[$i]+1))\n\
    \        fi\n        if [[ ${freq[$i]} -gt $n ]]; then\n            freq[$i]=$n\n\
    \        fi\n        if [[ ${freq[$i]} -gt $max ]]; then\n            max=${freq[$i]}\n\
    \        fi\n    done\n    if [[ ${freq[$i]} -gt $max ]]; then\n        echo \"\
    -1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpivg06fr1.sh: line 20: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -gt\
    \ 0 ]]; then\n            freq=$((${freq}+1))\n        fi\n    done\n    for ((i=0;\
    \ i<${#list}; i++)); do\n        if [[ ${list[i]} -gt 0 ]]; then\n           \
    \ if [[ ${freq} -gt ${list[i]} ]]; then\n                freq=${list[i]}\n   \
    \         fi\n        fi\n    done\n    for ((i=0; i<${#list}; i++)); do\n   \
    \     if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${freq} -gt ${list[i]}\
    \ ]]; then\n                if [[ ${max} -lt ${list[i]} ]]; then\n           \
    \         max=${list[i]}\n                    maxIndex=${i}\n                \
    \    maxFreq=${freq}\n                fi\n            fi\n        fi\n    done\n\
    \    if [[ ${max} -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo\
    \ \"${max}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpew__shug.sh: line 24: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpew__shug.sh: line 29: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpew__shug.sh: line 36: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n\n    for ((i=0; i<${#list};\
    \ i++)); do\n        ((freq++))\n        tmp=${list[i]}\n        for ((j=0; j<i;\
    \ j++)); do\n            if [[ ${list[j]} -eq ${tmp} ]]; then\n              \
    \  ((freq--))\n                break\n            fi\n        done\n        if\
    \ ((freq > max)); then\n            max=freq\n        fi\n    done\n    if ((max\
    \ > 0)); then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    /tmp/tmpsl7dh3n3.sh: line 27: [[: 5 5 5 5 1: syntax error in expression (error
    token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local valueCount\n\
    \n    list=\"$list\"\n    greatest=-1\n    frequency=0\n    max=0\n    maxFrequency=0\n\
    \    maxIndex=0\n    maxValue=0\n    valueCount=0\n\n    for ((i=0; i<${#list};\
    \ i++)); do\n        value=${list[i]}\n        if (( ${frequency} <= ${value}\
    \ )) ; then\n            frequency=${value}\n        fi\n        if (( ${frequency}\
    \ > ${maxFrequency} )) ; then\n            greatest=${value}\n            maxFrequency=${frequency}\n\
    \            maxIndex=${i}\n        fi\n        if (( ${frequency} > ${maxFrequency}\
    \ )) ; then\n            greatest=${value}\n            maxFrequency=${frequency}\n\
    \            maxIndex=${i}\n        fi\n    done\n\n    if (( ${frequency} > ${maxFrequency}\
    \ )) ; then\n        greatest=${list[i]}\n    fi\n\n    return ${greatest}\n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <= 5 5 5 5 1 : syntax error in expression
    (error token is "5 5 5 1 ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    /tmp/tmp1_0kh1ma.sh: line 39: ((: 0 <=  : syntax error: operand expected (error
    token is "<=  ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $(sort <<<\"${arr[*]}\" | uniq -c) )\n    max=\"\
    ${freq[0]}\"\n    for (( i=1; i<${#freq[@]}; i++ )); do\n        if [[ ${freq[$i]}\
    \ -gt $max ]]; then\n            max=${freq[$i]}\n        fi\n    done\n    echo\
    \ \"${max}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local numbers=$1\n  local greatest\n\
    \  local frequency\n  local i\n  \n  for i in $numbers\n  do\n    greatest=$i\n\
    \    frequency=0\n    for j in $numbers\n    do\n      if [ \"$i\" -eq \"$j\"\
    \ ]\n      then\n        continue\n      fi\n      if [ \"$i\" -gt \"$j\" ]\n\
    \      then\n        frequency=$((frequency+1))\n      fi\n    done\n    if [\
    \ \"$frequency\" -gt \"$greatest\" ]\n    then\n      greatest=$frequency\n  \
    \  fi\n  done\n  \n  if [ \"$greatest\" -eq -1 ]\n  then\n    return -1\n  fi\n\
    \  \n  echo $greatest\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if (( ${#1}[$i]>max ));\
    \ then\n            freq=${#1}[$i]\n            max=$i\n        fi\n    done\n\
    \    if (( freq>=0 )); then\n        echo \"${#1}[$max]\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqpf55uo.sh: line 20: ((: 9[0]>max : syntax error: invalid arithmetic
    operator (error token is "[0]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[1]>max : syntax error: invalid arithmetic
    operator (error token is "[1]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[2]>max : syntax error: invalid arithmetic
    operator (error token is "[2]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[3]>max : syntax error: invalid arithmetic
    operator (error token is "[3]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[4]>max : syntax error: invalid arithmetic
    operator (error token is "[4]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[5]>max : syntax error: invalid arithmetic
    operator (error token is "[5]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[6]>max : syntax error: invalid arithmetic
    operator (error token is "[6]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[7]>max : syntax error: invalid arithmetic
    operator (error token is "[7]>max ")

    /tmp/tmprqpf55uo.sh: line 20: ((: 9[8]>max : syntax error: invalid arithmetic
    operator (error token is "[8]>max ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    IFS=$'\\\
    n' read -a arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n            echo \"-1\"\n            return\n        fi\n  \
    \      if [[ ${#arr[@]} -eq 1 ]]; then\n            if [[ ${arr[0]} -eq ${i} ]];\
    \ then\n                freq=1\n            else\n                freq=0\n   \
    \         fi\n        else\n            if [[ ${arr[$((${#arr[@]} - 1))} == ${i}\
    \ ]]; then\n                freq=$((${freq}+1))\n            else\n          \
    \      freq=0\n            fi\n        fi\n        if [[ ${freq} -gt ${max} ]];\
    \ then\n            max=${i}\n        fi\n    done\n    echo \"${max}\"\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpov6lzpop.sh: line 24: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        if (( ${freq[$i]} >= ${freq[$max]}\
    \ )) ; then\n            max=i\n        fi\n    done\n    echo \"${arr[$max]}\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected
    (error token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    /tmp/tmp78jl2x2j.sh: line 22: ((: >=  : syntax error: operand expected (error
    token is ">=  ")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for i in $1 \n    do\n        if [ $i -gt $max ]; then\n     \
    \       freq=$i\n            max=$i\n        fi\n    done\n    if [ $freq -gt\
    \ $max ]; then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local n=$1\n  local max=0\n  local\
    \ maxfreq=0\n  local i\n  local j\n  local k\n  local freq\n  local x\n  local\
    \ y\n  local z\n  local w\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local w\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ w\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local w\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local w\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local count=0\n    local i\n    local j\n    local\
    \ tmp\n    \n    for (( i=0; i<${#list}; i++ )); do\n        tmp=${list[i]}\n\
    \        if [[ ${tmp} -gt 0 ]]; then\n            count=$((${count}+1))\n    \
    \        if [[ ${count} -gt ${max} ]]; then\n                max=${count}\n  \
    \              maxIndex=${i}\n            fi\n        fi\n    done\n    \n   \
    \ if [[ ${max} -gt 0 ]]; then\n        echo \"${list[maxIndex]}\"\n    else\n\
    \        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7m4i79ud.sh: line 26: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=-1\n  max=0\n\
    \  for ((i=0; i < ${#1}; i++)); do\n    freq=$((${freq}+${#1}[i]))\n    if [[\
    \ ${#1}[i] -gt $max ]]; then\n      max=${#1}[i]\n    fi\n  done\n  if [[ ${freq}\
    \ -gt $max ]]; then\n    echo \"${max}\"\n  else\n    echo \"-1\"\n  fi\n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8otuic1t.sh: line 20: -1+9[i]: syntax error: invalid arithmetic
    operator (error token is "[i]")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxIndex\n    local maxValue\n    local value\n    local tmp\n    \n\
    \    greatest=-1\n    frequency=0\n    i=0\n    j=0\n    max=-1\n    maxFrequency=0\n\
    \    maxIndex=0\n    maxValue=-1\n    \n    while [ $i -lt ${#list} ]; do\n  \
    \      value=${list[i]}\n        ((frequency+=1))\n        if [[ $value -gt $max\
    \ ]]; then\n            greatest=$value\n            max=$value\n            maxFrequency=$frequency\n\
    \            maxIndex=$i\n        fi\n        ((i++))\n    done\n    \n    if\
    \ [[ $greatest == -1 ]]; then\n        echo \"-1\"\n    else\n        echo \"\
    ${list[maxIndex]} (${maxFrequency})\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpscy73t5u.sh: line 40: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if (( freq\
    \ > $i )); then\n            freq=$i\n            max=$i\n        fi\n    done\n\
    \    \n    if (( freq > 0 )); then\n        echo \"$max\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i < ${#list}; i++)); do\n     \
    \   if [[ ${list[i]} -gt 0 ]]; then\n            freq=$((freq+1))\n          \
    \  if [[ ${freq} -gt ${list[i]} ]]; then\n                max=${list[i]}\n   \
    \         fi\n        fi\n    done\n    if [[ ${max} -eq 0 ]]; then\n        echo\
    \ \"-1\"\n    else\n        echo \"${max}\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf77wz4a1.sh: line 21: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local maxVal\n \
    \   local maxFreq\n    local maxIndex\n    local maxValIndex\n    local maxValFreq\n\
    \    local maxValIndexFreq\n    local maxValIndexFreqIndex\n    local maxValIndexFreqIndexFreq\n\
    \    local maxValIndexFreqIndexFreqIndex\n    local maxValIndexFreqIndexFreqIndexFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreq\n    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValIndexFreqIndexFreqIndexFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxval=0\n  local val\n  local count\n  local i\n  \n  for val in $list;\
    \ do\n    count=0\n    for ((i=0; i<${#list}; i++)); do\n      if [[ ${list[i]}\
    \ == $val ]]; then\n        count=$((count+1))\n      fi\n    done\n    if [[\
    \ $count -gt $maxval ]]; then\n      maxval=$count\n      max=$val\n    fi\n \
    \ done\n  \n  if [[ $maxval -gt 0 ]]; then\n    echo \"$max\"\n  else\n    echo\
    \ \"-1\"\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxNumber\n    local number\n    local temp\n    local tempFrequency\n\
    \    local tempNumber\n    local tempString\n    local tempStringFrequency\n \
    \   local tempStringNumber\n    local tempStringNumberFrequency\n    local tempStringNumberString\n\
    \    local tempStringNumberStringFrequency\n    local tempStringNumberStringString\n\
    \    local tempStringNumberStringStringFrequency\n    local tempStringNumberStringStringNumber\n\
    \    local tempStringNumberStringStringNumberFrequency\n    local tempStringNumberStringStringNumberString\n\
    \    local tempStringNumberStringStringNumberStringFrequency\n    local tempStringNumberStringStringNumberStringString\n\
    \    local tempStringNumberStringStringNumberStringStringFrequency\n    local\
    \ tempStringNumberStringStringNumberStringStringNumber\n    local tempStringNumberStringStringNumberStringStringNumberFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberString\n    local tempStringNumberStringStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumber\n    local\
    \ tempStringNumberStringStringNumberStringNumberStringNumberFrequency\n    local\
    \ tempStringNumberStringStringNumberStringNumberStringNumberString\n    local\
    \ tempStringNumberStringStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberString\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberStringFrequency\n\
    \    local tempStringNumberStringStringNumberStringNumberStringNumberStringNumberStringNumberStringNumberString\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max\n\
    \  local freq\n  local i\n  max=\"-1\"\n  freq=\"-1\"\n  for i in $list; do\n\
    \    if [ \"$freq\" == \"-1\" ]; then\n      freq=\"$(grep -c \"$i\" <<< \"$list\"\
    )\"\n    fi\n    if [ \"$freq\" -gt \"$i\" ]; then\n      max=\"$i\"\n      freq=\"\
    $freq\"\n    fi\n  done\n  echo \"$max\"\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local val\n    local freq\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local k\n    local freq\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=\"\
    ${list}\"\n    local count=0\n    local i\n    local j\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $list; do\n        if [ \"$i\" -gt \"$greatest\" ]; then\n \
    \           greatest=\"$i\"\n        fi\n        if [ \"$i\" -eq \"$greatest\"\
    \ ]; then\n            frequency=$((frequency+1))\n        fi\n    done\n    \n\
    \    if [ \"$greatest\" -eq 0 ]; then\n        echo \"-1\"\n    else\n       \
    \ echo \"$greatest\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j\n    local max\n   \
    \ local freq\n    local input\n    local output\n    local temp\n    local count\n\
    \    local maxCount\n    local maxFreq\n    local maxIndex\n    local maxVal\n\
    \    local minVal\n    local minIndex\n    local minFreq\n    local minVal\n \
    \   local tempVal\n    local tempIndex\n    local tempCount\n    local tempFreq\n\
    \    local tempIndex2\n    local tempVal2\n    local tempCount2\n    local tempFreq2\n\
    \    local tempIndex3\n    local tempVal3\n    local tempCount3\n    local tempFreq3\n\
    \    local tempIndex4\n    local tempVal4\n    local tempCount4\n    local tempFreq4\n\
    \    local tempIndex5\n    local tempVal5\n    local tempCount5\n    local tempFreq5\n\
    \    local tempIndex6\n    local tempVal6\n    local tempCount6\n    local tempFreq6\n\
    \    local tempIndex7\n    local tempVal7\n    local tempCount7\n    local tempFreq7\n\
    \    local tempIndex8\n    local tempVal8\n    local tempCount8\n    local tempFreq8\n\
    \    local tempIndex9\n    local tempVal9\n    local tempCount9\n    local tempFreq9\n\
    \    local tempIndex10\n    local tempVal10\n    local tempCount10\n    local\
    \ tempFreq10\n    local tempIndex11\n    local tempVal11\n    local tempCount11\n\
    \    local tempFreq11\n    local tempIndex12\n    local tempVal12\n    local tempCount12\n\
    \    local tempFreq12\n    local tempIndex13\n    local tempVal13\n    local tempCount13\n\
    \    local tempFreq13\n    local tempIndex14\n    local tempVal14\n    local tempCount14\n\
    \    local tempFreq14\n    local tempIndex15\n    local tempVal15\n    local tempCount15\n\
    \    local tempFreq15\n    local tempIndex16\n    local tempVal16\n    local tempCount16\n\
    \    local tempFreq16\n    local tempIndex17\n    local tempVal17\n    local tempCount17\n\
    \    local tempFreq17\n    local tempIndex18\n    local tempVal18\n    local tempCount18\n\
    \    local \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local f=$2\n \
    \   local s=$3\n    local t=$4\n    local i=$5\n    local j=$6\n    local k=$7\n\
    \    local l=$8\n    local m=$9\n    local n=$n\n    local f=$f\n    local s=$s\n\
    \    local t=$t\n    local i=$i\n    local j=$j\n    local k=$k\n    local l=$l\n\
    \    local m=$m\n    local n=$n\n    local f=$f\n    local s=$s\n    local t=$t\n\
    \    local i=$i\n    local j=$j\n    local k=$k\n    local l=$l\n    local m=$m\n\
    \    local n=$n\n    local f=$f\n    local s=$s\n    local t=$t\n    local i=$i\n\
    \    local j=$j\n    local k=$k\n    local l=$l\n    local m=$m\n    local n=$n\n\
    \    local f=$f\n    local s=$s\n    local t=$t\n    local i=$i\n    local j=$j\n\
    \    local k=$k\n    local l=$l\n    local m=$m\n    local n=$n\n    local f=$f\n\
    \    local s=$s\n    local t=$t\n    local i=$i\n    local j=$j\n    local k=$k\n\
    \    local l=$l\n    local m=$m\n    local n=$n\n    local f=$f\n    local s=$s\n\
    \    local t=$t\n    local i=$i\n    local j=$j\n    local k=$k\n    local l=$l\n\
    \    local m=$m\n    local n=$n\n    local f=$f\n    local s=$s\n    local t=$t\n\
    \    local i=$i\n    local j=$j\n    local k=$k\n    local l=$l\n    local m=$m\n\
    \    local n=$n\n    local f=$f\n    local s=$s\n    local t=$t\n    local i=$i\n\
    \    local j=$j\n    local k=$k\n    local l=$l\n    local m=$m\n    local n=$n\n\
    \    local f=$f\n    local s=$s\n    local t=$t\n    local \n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxNum=0\n    local num\n    local numCount\n    local numCount2\n\
    \    local numCount3\n    local numCount4\n    local numCount5\n    local numCount6\n\
    \    local numCount7\n    local numCount8\n    local numCount9\n    local numCount10\n\
    \    local numCount11\n    local numCount12\n    local numCount13\n    local numCount14\n\
    \    local numCount15\n    local numCount16\n    local numCount17\n    local numCount18\n\
    \    local numCount19\n    local numCount20\n    local numCount21\n    local numCount22\n\
    \    local numCount23\n    local numCount24\n    local numCount25\n    local numCount26\n\
    \    local numCount27\n    local numCount28\n    local numCount29\n    local numCount30\n\
    \    local numCount31\n    local numCount32\n    local numCount33\n    local numCount34\n\
    \    local numCount35\n    local numCount36\n    local numCount37\n    local numCount38\n\
    \    local numCount39\n    local numCount40\n    local numCount41\n    local numCount42\n\
    \    local numCount43\n    local numCount44\n    local numCount45\n    local numCount46\n\
    \    local numCount47\n    local numCount48\n    local numCount49\n    local numCount50\n\
    \    local numCount51\n    local numCount52\n    local numCount53\n    local numCount54\n\
    \    local numCount55\n    local numCount56\n    local numCount57\n    local numCount58\n\
    \    local numCount59\n    local numCount60\n    local numCount61\n    local numCount62\n\
    \    local numCount63\n    local numCount64\n    local numCount65\n    local numCount66\n\
    \    local numCount67\n    local numCount68\n    local numCount69\n    local numCount70\n\
    \    local numCount71\n    local numCount72\n    local numCount73\n    local numCount74\n\
    \    local numCount75\n    local numCount76\n    local numCount77\n    local numCount78\n\
    \    local numCount79\n    local numCount80\n    local numCount81\n    local numCount82\n\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max\n\
    \    local count\n    local i\n    local j\n    local maxVal\n    local maxCount\n\
    \    local maxIndex\n    local maxValIndex\n    local maxValIndexCount\n    local\
    \ maxValIndexCount2\n    local maxValIndexCount3\n    local maxValIndexCount4\n\
    \    local maxValIndexCount5\n    local maxValIndexCount6\n    local maxValIndexCount7\n\
    \    local maxValIndexCount8\n    local maxValIndexCount9\n    local maxValIndexCount10\n\
    \    local maxValIndexCount11\n    local maxValIndexCount12\n    local maxValIndexCount13\n\
    \    local maxValIndexCount14\n    local maxValIndexCount15\n    local maxValIndexCount16\n\
    \    local maxValIndexCount17\n    local maxValIndexCount18\n    local maxValIndexCount19\n\
    \    local maxValIndexCount20\n    local maxValIndexCount21\n    local maxValIndexCount22\n\
    \    local maxValIndexCount23\n    local maxValIndexCount24\n    local maxValIndexCount25\n\
    \    local maxValIndexCount26\n    local maxValIndexCount27\n    local maxValIndexCount28\n\
    \    local maxValIndexCount29\n    local maxValIndexCount30\n    local maxValIndexCount31\n\
    \    local maxValIndexCount32\n    local maxValIndexCount33\n    local maxValIndexCount34\n\
    \    local maxValIndexCount35\n    local maxValIndexCount36\n    local maxValIndexCount37\n\
    \    local maxValIndexCount38\n    local maxValIndexCount39\n    local maxValIndexCount40\n\
    \    local maxValIndexCount41\n    local maxValIndexCount42\n    local maxValIndexCount43\n\
    \    local maxValIndexCount44\n    local maxValIndexCount45\n    local maxValIndexCount46\n\
    \    local maxValIndexCount47\n    local maxValIndexCount48\n    local maxValIndexCount49\n\
    \    local maxValIndexCount50\n    local maxValIndexCount51\n    local maxValIndexCount52\n\
    \    local maxValIndexCount53\n    local maxValIndexCount54\n    local maxValIndexCount55\n\
    \    local maxValIndexCount56\n    local maxValIndexCount57\n    local maxValIndexCount58\n\
    \    local maxValIndexCount\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local maxValue=0\n    local maxIndex=0\n    local index=0\n\
    \    local value=0\n    local count=0\n    local i=0\n    \n    for ((i=0; i<${#list};\
    \ i++)); do\n        if [[ ${list[i]} -gt 0 ]]; then\n            value=${list[i]}\n\
    \            count=${#list}\n        fi\n    done\n    \n    for ((i=0; i<${#list};\
    \ i++)); do\n        if [[ ${list[i]} -eq 0 ]]; then\n            value=-1\n \
    \           count=-1\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${list[i]} -gt\
    \ ${value} ]]; then\n                value=${list[i]}\n                count=${#list}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -eq 0 ]]; then\n            value=-1\n        \
    \    count=-1\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++)); do\n\
    \        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${list[i]} -gt ${value}\
    \ ]]; then\n                value=${list[i]}\n                count=${#list}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -eq 0 ]]; then\n            value=-1\n        \
    \    count=-1\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++)); do\n\
    \        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${list[i]} -gt ${value}\
    \ ]]; then\n                value=${list[i]}\n                count=${#list}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ do\n        if [[ ${list[i]} -eq 0 ]]; then\n            value=-1\n        \
    \    count=-1\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++)); do\n\
    \        if [[ ${list[i]} -gt 0 ]]; then\n            if [[ ${list[i]} -gt ${value}\
    \ ]]; then\n                value=${list[i]}\n                count=${#list}\n\
    \            fi\n        fi\n    done\n    \n    for ((i=0; i<${#list}; i++));\
    \ \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2k3poepe.sh: line 98: syntax error near unexpected token `}''

    /tmp/tmp2k3poepe.sh: line 98: `}''

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=0\n    frequency=0\n   \
    \ \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]; then\n   \
    \         greatest=$i\n        fi\n        if [ $i -eq $greatest ]; then\n   \
    \         frequency=$(( frequency + 1 ))\n        fi\n    done\n    \n    if [\
    \ $frequency -gt $greatest ]; then\n        echo \"$greatest\"\n    else\n   \
    \     echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=($1)\n    freq=-1\n    max=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( freq == -1 )); then\n            freq=$i\n        elif (( freq\
    \ > $i )); then\n            freq=$i\n            max=$i\n        fi\n    done\n\
    \    if (( freq > 0 )); then\n        echo \"$max\"\n    else\n        echo \"\
    -1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max\n\
    \  local count\n  local i\n  max=$(( ${#list} + 1 ))\n  for i in $(seq 1 $max);\
    \ do\n    count=0\n    for j in $(seq 0 $(( ${#list} - 1 ))); do\n      if [[\
    \ ${list} == *${list}${list}* ]]; then\n        (( count++ ))\n      fi\n    done\n\
    \    if [[ ${count} -gt $i ]]; then\n      max=$i\n    fi\n  done\n  if [[ ${max}\
    \ -eq 0 ]]; then\n    return -1\n  fi\n  echo \"${list}\"\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxIndex=0\n    local maxFreq=0\n    local\
    \ i\n    local j\n    local k\n    local freq\n    local num\n    local numIndex\n\
    \    local numFreq\n    local numVal\n    local numValIndex\n    local numValFreq\n\
    \    local numValIndex\n    local numValFreq\n    local numValIndex\n    local\
    \ numValFreq\n    local numValIndex\n    local numValFreq\n    local numValIndex\n\
    \    local numValFreq\n    local numValIndex\n    local numValFreq\n    local\
    \ numValIndex\n    local numValFreq\n    local numValIndex\n    local numValFreq\n\
    \    local numValIndex\n    local numValFreq\n    local numValIndex\n    local\
    \ numValFreq\n    local numValIndex\n    local numValFreq\n    local numValIndex\n\
    \    local numValFreq\n    local numValIndex\n    local numValFreq\n    local\
    \ numValIndex\n    local numValFreq\n    local numValIndex\n    local numValFreq\n\
    \    local numValIndex\n    local numValFreq\n    local numValIndex\n    local\
    \ numValFreq\n    local numValIndex\n    local numValFreq\n    local numValIndex\n\
    \    local numValFreq\n    local numValIndex\n    local numValFreq\n    local\
    \ numValIndex\n    local numValFreq\n    local numValIndex\n    local numValFreq\n\
    \    local numValIndex\n    local numValFreq\n    local numValIndex\n    local\
    \ numValFreq\n    local numValIndex\n    local numValFreq\n    local numValIndex\n\
    \    local numValFreq\n    local numValIndex\n    local numValFreq\n    local\
    \ numValIndex\n    local numValFreq\n    local numValIndex\n    local numValFreq\n\
    \    local numValIndex\n    local numValFreq\n    local numValIndex\n    local\
    \ numValFreq\n    local numValIndex\n    local numValFreq\n    local numValIndex\n\
    \    local numValFreq\n    local numValIndex\n    local numValFreq\n    \n}\n\n\
    candidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local count\n    local freq\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local k\n    local freq\n\
    \    local val\n    local tmp\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n    \
    \    val=${arr[i]}\n        ((freq[$val]++))\n        if ((freq[$val]>maxfreq));\
    \ then\n            max=val\n            maxfreq=freq[$val]\n        fi\n    done\n\
    \n    if ((maxfreq==0)); then\n        echo \"-1\"\n    else\n        echo \"\
    ${max}\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzj29ehqh.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxVal=0\n    local val\n    local count\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxCount\n\
    \    local maxNumber\n    local maxFrequency\n    local maxIndex\n    local maxIndexCount\n\
    \    local maxIndexNumber\n    local maxIndexFrequency\n    local maxIndexNumberCount\n\
    \    local maxIndexNumberFrequency\n    local maxIndexNumberFrequencyCount\n \
    \   local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n    local maxIndexNumberFrequencyCount\n\
    \    local maxIndexNumberFrequencyCount\n\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ max=$2\n    local -n val=$3\n    local -n count=0\n    local -n maxCount=0\n\
    \    local -n maxVal=0\n    local -n maxFreq=0\n    local -n maxIndex=0\n    local\
    \ -n maxCountIndex=0\n    local -n maxValIndex=0\n    local -n maxFreqIndex=0\n\
    \    local -n maxCountValIndex=0\n    local -n maxFreqValIndex=0\n    local -n\
    \ maxCountValFreqIndex=0\n    local -n maxFreqValFreqIndex=0\n    local -n maxCountValFreqValIndex=0\n\
    \    local -n maxFreqValFreqValIndex=0\n    local -n maxCountValFreqValFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqIndex=0\n    local -n maxCountValFreqValFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqIndex=0\n    local -n maxCountValFreqValFreqFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqFreqIndex=0\n    local -n maxCountValFreqValFreqFreqFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqFreqFreqIndex=0\n    local -n maxCountValFreqValFreqFreqFreqFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqFreqFreqFreqIndex=0\n    local -n maxCountValFreqValFreqFreqFreqFreqFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqFreqFreqFreqFreqIndex=0\n    local -n maxCountValFreqValFreqFreqFreqFreqFreqFreqFreqIndex=0\n\
    \    local -n maxFreqValFreqValFreqFreqFreqFreqFreqFreqFreqIndex=0\n    local\
    \ -n maxCountValFreqValFreqFreqFreqFreqFreqFreqFreqFreqIndex=0\n    local -n maxFreqValFreqValFreqFreqFreq\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplrrxybic.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmplrrxybic.sh: line 17: local: `'': not a valid identifier

    /tmp/tmplrrxybic.sh: line 18: local: `'': not a valid identifier

    /tmp/tmplrrxybic.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmplrrxybic.sh: line 40: local: `0'': invalid variable name for name reference

    /tm'
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local k\n    local count\n\
    \    local val\n    local maxVal\n    local maxCountVal\n    local maxCountVal2\n\
    \    local maxCountVal3\n    local maxCountVal4\n    local maxCountVal5\n    local\
    \ maxCountVal6\n    local maxCountVal7\n    local maxCountVal8\n    local maxCountVal9\n\
    \    local maxCountVal10\n    local maxCountVal11\n    local maxCountVal12\n \
    \   local maxCountVal13\n    local maxCountVal14\n    local maxCountVal15\n  \
    \  local maxCountVal16\n    local maxCountVal17\n    local maxCountVal18\n   \
    \ local maxCountVal19\n    local maxCountVal20\n    local maxCountVal21\n    local\
    \ maxCountVal22\n    local maxCountVal23\n    local maxCountVal24\n    local maxCountVal25\n\
    \    local maxCountVal26\n    local maxCountVal27\n    local maxCountVal28\n \
    \   local maxCountVal29\n    local maxCountVal30\n    local maxCountVal31\n  \
    \  local maxCountVal32\n    local maxCountVal33\n    local maxCountVal34\n   \
    \ local maxCountVal35\n    local maxCountVal36\n    local maxCountVal37\n    local\
    \ maxCountVal38\n    local maxCountVal39\n    local maxCountVal40\n    local maxCountVal41\n\
    \    local maxCountVal42\n    local maxCountVal43\n    local maxCountVal44\n \
    \   local maxCountVal45\n    local maxCountVal46\n    local maxCountVal47\n  \
    \  local maxCountVal48\n    local maxCountVal49\n    local maxCountVal50\n   \
    \ local maxCountVal51\n    local maxCountVal52\n    local maxCountVal53\n    local\
    \ maxCountVal54\n    local maxCountVal55\n    local maxCountVal56\n    local maxCountVal57\n\
    \    local maxCountVal58\n    local maxCountVal59\n    local maxCountVal60\n \
    \   local maxCountVal61\n    local maxCountVal62\n    local maxCountVal63\n  \
    \  local maxCountVal64\n    local maxCountVal65\n    local maxCountVal66\n   \
    \ local maxCountVal67\n\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwcq30x66.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local i\n    local j\n    local\
    \ freq\n    local num\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    \    local tmp\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=-1\n    frequency=0\n  \
    \  \n    for i in $numbers\n    do\n        if [ $i -gt $greatest ]; then\n  \
    \          greatest=$i\n        fi\n        frequency=$(( frequency + 1 ))\n \
    \   done\n    \n    if [ $frequency -gt $greatest ]; then\n        echo \"$greatest\"\
    \n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n  \
    \  [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"\
    -1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local freq=0\n  local i\n  for i in $list; do\n    ((freq++))\n    ((max=$((max>freq?max:freq))))\
    \ \n  done\n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq)))) \n  ((max=$((max>freq?max:freq))))\
    \ \n  ((max=$((max>freq?max:freq)))) \n  ((\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmykpdm6u.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmykpdm6u.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ arr2=$2\n    local -n max=$3\n    local -n max2=$4\n    local -n val\n    local\
    \ -n val2\n    local -n i\n    local -n j\n    local -n count\n    local -n count2\n\
    \    local -n count3\n    local -n count4\n    local -n count5\n    local -n count6\n\
    \    local -n count7\n    local -n count8\n    local -n count9\n    local -n count10\n\
    \    local -n count11\n    local -n count12\n    local -n count13\n    local -n\
    \ count14\n    local -n count15\n    local -n count16\n    local -n count17\n\
    \    local -n count18\n    local -n count19\n    local -n count20\n    local -n\
    \ count21\n    local -n count22\n    local -n count23\n    local -n count24\n\
    \    local -n count25\n    local -n count26\n    local -n count27\n    local -n\
    \ count28\n    local -n count29\n    local -n count30\n    local -n count31\n\
    \    local -n count32\n    local -n count33\n    local -n count34\n    local -n\
    \ count35\n    local -n count36\n    local -n count37\n    local -n count38\n\
    \    local -n count39\n    local -n count40\n    local -n count41\n    local -n\
    \ count42\n    local -n count43\n    local -n count44\n    local -n count45\n\
    \    local -n count46\n    local -n count47\n    local -n count48\n    local -n\
    \ count49\n    local -n count50\n    local -n count51\n    local -n count52\n\
    \    local -n count53\n    local -n count54\n    local -n count55\n    local -n\
    \ count56\n    local -n count57\n    local -n count58\n    local -n count59\n\
    \    local -n count60\n    local -n count61\n    local -n count62\n    local -n\
    \ count63\n    local -n count64\n    local -n count65\n}\n\ncandidate() {\n  \
    \  search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplv3ude0e.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmplv3ude0e.sh: line 17: local: `'': not a valid identifier

    /tmp/tmplv3ude0e.sh: line 18: local: `'': not a valid identifier

    /tmp/tmplv3ude0e.sh: line 19: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == $i ]]; then\n\
    \            freq=$((${freq}+1))\n        else\n            if ((${freq} >= ${#1}))\n\
    \            then\n                max=$((${max}+1))\n            fi\n       \
    \ fi\n    done\n    echo \"${max}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxCount=0\n    local i\n    local j\n    local count\n    local temp\n\
    \    local freq\n    local num\n    local nums\n    local numsCount\n    local\
    \ numsCount2\n    local numsCount3\n    local numsCount4\n    local numsCount5\n\
    \    local numsCount6\n    local numsCount7\n    local numsCount8\n    local numsCount9\n\
    \    local numsCount10\n    local numsCount11\n    local numsCount12\n    local\
    \ numsCount13\n    local numsCount14\n    local numsCount15\n    local numsCount16\n\
    \    local numsCount17\n    local numsCount18\n    local numsCount19\n    local\
    \ numsCount20\n    local numsCount21\n    local numsCount22\n    local numsCount23\n\
    \    local numsCount24\n    local numsCount25\n    local numsCount26\n    local\
    \ numsCount27\n    local numsCount28\n    local numsCount29\n    local numsCount30\n\
    \    local numsCount31\n    local numsCount32\n    local numsCount33\n    local\
    \ numsCount34\n    local numsCount35\n    local numsCount36\n    local numsCount37\n\
    \    local numsCount38\n    local numsCount39\n    local numsCount40\n    local\
    \ numsCount41\n    local numsCount42\n    local numsCount43\n    local numsCount44\n\
    \    local numsCount45\n    local numsCount46\n    local numsCount47\n    local\
    \ numsCount48\n    local numsCount49\n    local numsCount50\n    local numsCount51\n\
    \    local numsCount52\n    local numsCount53\n    local numsCount54\n    local\
    \ numsCount55\n    local numsCount56\n    local numsCount57\n    local numsCount58\n\
    \    local numsCount59\n    local numsCount60\n    local numsCount61\n    local\
    \ numsCount62\n    local numsCount63\n    local numsCount64\n    local numsCount65\n\
    \    local numsCount66\n    local numsCount\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxIndex=0\n    local maxFreq=0\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local freq\n    local j\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    local j\n    local tmp\n    local tmp2\n    local tmp3\n   \
    \ local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxFreq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n  \
    \      local freq=$(echo \"${list}\" | tr \" \" \"\\n\" | grep -c \"^${list[i]}$\"\
    )\n        if (( freq > maxFreq )); then\n            max=${list[i]}\n       \
    \     maxFreq=${freq}\n        fi\n    done\n    echo \"${max}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    IFS=$'\\n' read -a array <<< \"$1\"\n    for i in \"${array[@]}\"\
    ; do\n        if (( freq > 0 )); then\n            if (( freq >= i )); then\n\
    \                freq=$i\n                max=$i\n            fi\n        else\n\
    \            freq=$i\n            max=$i\n        fi\n    done\n    echo \"$max\"\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#list}; i++)); do\n        tmp=$(echo \"${list}\" | sed -n \"${i}p\")\n\
    \        if [ \"${tmp}\" == \"${list}\" ]; then\n            echo \"${list}\"\n\
    \            return -1\n        fi\n        if [ \"${tmp}\" -gt \"${max}\" ];\
    \ then\n            max=${tmp}\n        fi\n    done\n    \n    for ((j=0; j<${#list};\
    \ j++)); do\n        tmp=$(echo \"${list}\" | sed -n \"${j}p\")\n        if [\
    \ \"${tmp}\" -gt \"${max}\" ]; then\n            max=${tmp}\n        fi\n    done\n\
    \    \n    for ((j=0; j<${#list}; j++)); do\n        tmp=$(echo \"${list}\" |\
    \ sed -n \"${j}p\")\n        if [ \"${tmp}\" -gt \"${max}\" ]; then\n        \
    \    freq=$((${freq}+1))\n        fi\n    done\n    \n    echo \"${max}\"\n  \
    \  echo \"${freq}\"\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    /tmp/tmpmftxrlj0.sh: line 29: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for i in\
    \ $list; do\n        if [[ $i -gt 0 ]]; then\n            freq=$((freq+1))\n \
    \       fi\n    done\n    \n    for i in $list; do\n        if [[ $i -gt 0 ]];\
    \ then\n            tmp=$i\n            for j in $list; do\n                if\
    \ [[ $j -gt 0 ]]; then\n                    if [[ $j -eq $i ]]; then\n       \
    \                 tmp=$((tmp+j))\n                    fi\n                fi\n\
    \            done\n            if [[ $tmp -gt $max ]]; then\n                max=$tmp\n\
    \            fi\n        fi\n    done\n    \n    if [[ $freq -gt $max ]]; then\n\
    \        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local i\n    local j\n    local k\n    local tmp\n    \n    for ((i=0; i<${#list};\
    \ i++)); do\n        freq=0\n        for ((j=0; j<${#list}; j++)); do\n      \
    \      if [[ ${list[j]} == ${list[i]} ]]; then\n                freq=$((freq +\
    \ 1))\n            fi\n        done\n        if [[ ${freq} -gt ${maxFreq} ]];\
    \ then\n            max=${list[i]}\n            maxIndex=${i}\n            maxFreq=${freq}\n\
    \        fi\n    done\n    \n    if [[ ${maxIndex} -eq 0 ]]; then\n        echo\
    \ -1\n    else\n        echo ${max}\n    fi\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local numbers=$1\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local max\n  local maxIndex\n  local\
    \ maxFrequency\n  local maxValue\n  local maxIndexValue\n  local maxIndexFrequency\n\
    \  local maxIndexValueFrequency\n  local maxIndexFrequencyValue\n  local maxIndexFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValue\n  local maxIndexFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValue\n  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n  local\
    \ maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValue\n\
    \  local maxIndexFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequencyValueFrequency\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local val\n    local\
    \ tmp\n    local maxVal\n    local maxFreq\n    local maxIndex\n    local maxValIndex\n\
    \    local maxValIndex2\n    local maxValIndex3\n    local maxValIndex4\n    local\
    \ maxValIndex5\n    local maxValIndex6\n    local maxValIndex7\n    local maxValIndex8\n\
    \    local maxValIndex9\n    local maxValIndex10\n    local maxValIndex11\n  \
    \  local maxValIndex12\n    local maxValIndex13\n    local maxValIndex14\n   \
    \ local maxValIndex15\n    local maxValIndex16\n    local maxValIndex17\n    local\
    \ maxValIndex18\n    local maxValIndex19\n    local maxValIndex20\n    local maxValIndex21\n\
    \    local maxValIndex22\n    local maxValIndex23\n    local maxValIndex24\n \
    \   local maxValIndex25\n    local maxValIndex26\n    local maxValIndex27\n  \
    \  local maxValIndex28\n    local maxValIndex29\n    local maxValIndex30\n   \
    \ local maxValIndex31\n    local maxValIndex32\n    local maxValIndex33\n    local\
    \ maxValIndex34\n    local maxValIndex35\n    local maxValIndex36\n    local maxValIndex37\n\
    \    local maxValIndex38\n    local maxValIndex39\n    local maxValIndex40\n \
    \   local maxValIndex41\n    local maxValIndex42\n    local maxValIndex43\n  \
    \  local maxValIndex44\n    local maxValIndex45\n    local maxValIndex46\n   \
    \ local maxValIndex47\n    local maxValIndex48\n    local maxValIndex49\n    local\
    \ maxValIndex50\n    local maxValIndex51\n    local maxValIndex52\n    local maxValIndex53\n\
    \    local maxValIndex54\n    local maxValIndex55\n    local maxValIndex56\n \
    \   local maxValIndex57\n    local maxValIndex58\n    local maxValIndex59\n  \
    \  local maxValIndex60\n    local maxValIndex61\n    local maxValIndex62\n   \
    \ local maxValIndex63\n    local maxValIndex64\n    local maxValIndex65\n    local\
    \ maxValIndex66\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if (( freq\
    \ > $i )); then\n            freq=$i\n            max=$i\n        fi\n    done\n\
    \    \n    if (( freq > 0 )); then\n        echo \"$max\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i j k l m n o p q r s t\
    \ u v w x y z\n    local -n arr=$1\n    local max=0\n    local maxval=0\n    local\
    \ freq=0\n    local maxfreq=0\n    local maxval2=0\n    local maxfreq2=0\n   \
    \ local maxval3=0\n    local maxfreq3=0\n    local maxval4=0\n    local maxfreq4=0\n\
    \    local maxval5=0\n    local maxfreq5=0\n    local maxval6=0\n    local maxfreq6=0\n\
    \    local maxval7=0\n    local maxfreq7=0\n    local maxval8=0\n    local maxfreq8=0\n\
    \    local maxval9=0\n    local maxfreq9=0\n    local maxval10=0\n    local maxfreq10=0\n\
    \    local maxval11=0\n    local maxfreq11=0\n    local maxval12=0\n    local\
    \ maxfreq12=0\n    local maxval13=0\n    local maxfreq13=0\n    local maxval14=0\n\
    \    local maxfreq14=0\n    local maxval15=0\n    local maxfreq15=0\n    local\
    \ maxval16=0\n    local maxfreq16=0\n    local maxval17=0\n    local maxfreq17=0\n\
    \    local maxval18=0\n    local maxfreq18=0\n    local maxval19=0\n    local\
    \ maxfreq19=0\n    local maxval20=0\n    local maxfreq20=0\n    local maxval21=0\n\
    \    local maxfreq21=0\n    local maxval22=0\n    local maxfreq22=0\n    local\
    \ maxval23=0\n    local maxfreq23=0\n    local maxval24=0\n    local maxfreq24=0\n\
    \    local maxval25=0\n    local maxfreq25=0\n    local maxval26=0\n    local\
    \ maxfreq26=0\n    local maxval27=0\n    local maxfreq27=0\n    local maxval28=0\n\
    \    local maxfreq28=0\n    local maxval29=0\n    local maxfreq29=0\n    local\
    \ maxval30=0\n    local maxfreq30=0\n    local maxval31=0\n    local maxfreq31=0\n\
    \    local maxval32=0\n    local maxfreq32=0\n    local maxval33=0\n    local\
    \ maxfreq33=0\n    local maxval34=0\n    local maxfreq34=0\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp9l7sna9.sh: line 17: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxVal=0\n    local i\n    local count\n    local\
    \ val\n    \n    for i in $list; do\n        count=$(echo $list | wc -w)\n   \
    \     val=$(echo $list | cut -d \" \" -f $i)\n        if [ $count -gt $maxCount\
    \ ]; then\n            max=$val\n            maxCount=$count\n        fi\n   \
    \ done\n    \n    if [ $maxCount -gt $maxVal ]; then\n        echo $max\n    else\n\
    \        echo -1\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local k\n    local freq\n\
    \    local val\n    local count\n    local maxcount\n    local maxval\n    local\
    \ maxfreq\n    local maxj\n    local maxk\n    local maxval\n    local maxcount\n\
    \    local maxj\n    local maxk\n    local maxval\n    local maxcount\n    local\
    \ maxj\n    local maxk\n    local maxval\n    local maxcount\n    local maxj\n\
    \    local maxk\n    local maxval\n    local maxcount\n    local maxj\n    local\
    \ maxk\n    local maxval\n    local maxcount\n    local maxj\n    local maxk\n\
    \    local maxval\n    local maxcount\n    local maxj\n    local maxk\n    local\
    \ maxval\n    local maxcount\n    local maxj\n    local maxk\n    local maxval\n\
    \    local maxcount\n    local maxj\n    local maxk\n    local maxval\n    local\
    \ maxcount\n    local maxj\n    local maxk\n    local maxval\n    local maxcount\n\
    \    local maxj\n    local maxk\n    local maxval\n    local maxcount\n    local\
    \ maxj\n    local maxk\n    local maxval\n    local maxcount\n    local maxj\n\
    \    local maxk\n    local maxval\n    local maxcount\n    local maxj\n    local\
    \ maxk\n    local maxval\n    local maxcount\n    local maxj\n    local maxk\n\
    \    local maxval\n    local maxcount\n    local maxj\n    local maxk\n    local\
    \ maxval\n    local maxcount\n    local maxj\n    local maxk\n    local maxval\n\
    \    local maxcount\n    local maxj\n    local maxk\n    local maxval\n    local\
    \ maxcount\n    local maxj\n    local maxk\n    local maxval\n    local maxcount\n\
    \    local maxj\n    local maxk\n    local maxval\n    local maxcount\n    local\
    \ maxj\n    local maxk\n    local maxval\n    local maxcount\n    local maxj\n\
    \    local maxk\n    local maxval\n    local maxcount\n    local maxj\n    local\
    \ maxk\n    local maxval\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz64ivbne.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local i freq max\n  freq=-1\n  max=0\n\
    \  for i in $1 \n  do\n    if [ $freq -eq 0 ]\n    then\n      freq=$i\n     \
    \ max=$i\n    elif [ $freq -gt $i ]\n    then\n      freq=$i\n      max=$i\n \
    \   fi\n  done\n  echo $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxCount=0\n    local number\n    local count\n    local i\n    \n\
    \    for number in $numbers; do\n        count=0\n        for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n            if [[ ${numbers[i]} == $number ]]; then\n           \
    \     ((count++))\n            fi\n        done\n        if ((count > maxCount))\
    \ ; then\n            max=${number}\n            maxCount=${count}\n        fi\n\
    \    done\n    \n    if [[ $maxCount -gt $max ]]; then\n        echo $max\n  \
    \  else\n        echo -1\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local k\n    local max\n \
    \   local maxFrequency\n    local maxNumber\n    local maxNumberFrequency\n  \
    \  local maxNumbers\n    local maxNumbersFrequency\n    local maxNumbersLength\n\
    \    local maxNumbersLengthFrequency\n    local maxNumbersLengthLength\n    local\
    \ maxNumbersLengthLengthFrequency\n    local maxNumbersLengthLengthLength\n  \
    \  local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLength\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    local maxNumbersLengthLengthLengthFrequency\n\
    \    local maxNumbersLengthLengthLengthFrequency\n    \n}\n\ncandidate() {\n \
    \   search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == $i ]]; then\n\
    \            freq=$((${#1}-i))\n        else\n            if (( ${#1}-$i > max\
    \ )); then\n                max=$((${#1}-$i))\n            fi\n        fi\n  \
    \  done\n    if (( freq > 0 )); then\n        echo \"$max\"\n    else\n      \
    \  echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxFrequency\n\
    \    local maxNumber\n    local number\n    local numberCount\n    local numberFrequency\n\
    \    local numberString\n    local numberStringCount\n    local numberStringFrequency\n\
    \    local numberStringString\n    local numberStringStringCount\n    local numberStringStringFrequency\n\
    \    local numberStringStringString\n    local numberStringStringStringCount\n\
    \    local numberStringStringStringFrequency\n    local numberStringStringStringString\n\
    \    local numberStringStringStringStringCount\n    local numberStringStringStringStringFrequency\n\
    \    local numberStringStringStringStringString\n    local numberStringStringStringStringStringCount\n\
    \    local numberStringStringStringStringStringFrequency\n    local numberStringStringStringStringStringString\n\
    \    local numberStringStringStringStringStringStringCount\n    local numberStringStringStringStringStringStringFrequency\n\
    \    local numberStringStringStringStringStringStringString\n    local numberStringStringStringStringStringStringCount\n\
    \    local numberStringStringStringStringStringStringFrequency\n    local numberStringStringStringStringStringStringString\n\
    \    local numberStringStringStringStringStringStringCount\n    local numberStringStringStringStringStringStringFrequency\n\
    \    local numberStringStringStringStringStringStringStringString\n    local numberStringStringStringStringStringStringStringCount\n\
    \    local numberStringStringStringStringStringStringStringFrequency\n    local\
    \ numberStringStringStringStringStringStringStringString\n    local numberStringStringStringStringStringStringStringCount\n\
    \    local numberStringStringStringStringStringStringStringFrequency\n    local\
    \ numberStringStringStringStringStringStringStringStringString\n    local numberStringStringStringStringStringStringStringStringCount\n\
    \    local numberStringStringStringStringStringStringStringStringFrequency\n \
    \   local numberStringStringStringStringStringStringStringStringString\n    local\
    \ numberStringStringStringStringStringStringStringStringCount\n    local numberStringStringStringStringStringStringStringStringFrequency\n\
    \    local numberStringStringStringStringStringStringStringStringString\n    local\
    \ numberStringStringStringStringStringStringStringStringCount\n    local numberStringStringStringStringStringStringStringStringFrequency\n\
    \    local numberStringStringStringStringStringStringStringStringString\n    local\
    \ numberStringStringStringStringStringStringStringStringStringCount\n    local\
    \ numberStringStringStringStringStringStringStringStringFrequency\n    local numberStringStringStringStringStringStringStringStringStringString\n\
    \    local numberString\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxCount=0\n  local maxFreq=0\n  local i\n  local j\n  local freq\n \
    \ local tmp\n  \n  for i in $list; do\n    freq=$(echo \"$list\" | grep -c \"\
    $i\")\n    if [ \"$freq\" -gt \"$maxFreq\" ]; then\n      maxFreq=\"$freq\"\n\
    \      max=\"$i\"\n      maxCount=\"$freq\"\n    fi\n  done\n  \n  if [ \"$maxCount\"\
    \ -gt \"$maxFreq\" ]; then\n    echo \"$max\"\n  else\n    echo \"-1\"\n  fi\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=$1\n  local max=0\n \
    \ local maxCount=0\n  local maxVal=0\n  local i\n  local j\n  local val\n  local\
    \ count\n  local maxValCount\n  \n  for i in $list; do\n    count=0\n    for j\
    \ in $list; do\n      if [ \"$i\" -eq \"$j\" ]; then\n        count=`expr $count\
    \ + 1`\n      else\n        break\n      fi\n    done\n    if [ \"$count\" -gt\
    \ \"$maxCount\" ]; then\n      maxCount=$count\n      maxVal=$i\n      maxValCount=$count\n\
    \    fi\n  done\n  \n  if [ \"$maxCount\" -gt \"$maxValCount\" ]; then\n    return\
    \ $maxVal\n  else\n    return -1\n  fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    local -a\
    \ arr\n    arr=( $1 )\n    freq=( $2 )\n    max=$(( ${#arr[@]} - 1 ))\n    for\
    \ (( i=1; i<=$max; i++ )); do\n        if [[ ${freq[$i]} -gt $freq[$max] ]]; then\n\
    \            max=i\n        fi\n    done\n    echo \"${arr[$max]}\"\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphezsjtnl.sh: line 22: [[: [4]: syntax error: operand expected (error
    token is "[4]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [4]: syntax error: operand expected (error token
    is "[4]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [5]: syntax error: operand expected (error token
    is "[5]")

    /tmp/tmphezsjtnl.sh: line 22: [[: [1]: syntax error: operand expected (error token
    is "[1]")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local arr=( $n\
    \ )\n    local max=0\n    local maxfreq=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local freq\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local val\n    local\
    \ tmp\n    \n    for ((i=0; i<${#list}; i++)); do\n        val=\"${list[i]}\"\n\
    \        if [[ ${val} -gt 0 ]]; then\n            freq=$((${freq}+1))\n      \
    \      if [[ ${freq} -gt ${val} ]]; then\n                max=\"${val}\"\n   \
    \         fi\n        fi\n    done\n    \n    if [[ ${max} == 0 ]]; then\n   \
    \     echo \"-1\"\n    else\n        for ((j=0; j<${#list}; j++)); do\n      \
    \      val=\"${list[j]}\"\n            if [[ ${val} -eq ${max} ]]; then\n    \
    \            tmp=\"${list[j]}\"\n                k=0\n                while [[\
    \ ${list[k]} -eq ${tmp} ]] && [[ ${k} -lt ${#list} ]] && [[ ${list[k]} -gt 0 ]];\
    \ then\n                    k=$((k+1))\n                done\n               \
    \ if [[ ${k} -eq ${#list} ]]; then\n                    echo \"${list[j]}\"\n\
    \                else\n                    echo \"${list[j]}\"\n             \
    \   fi\n            fi\n        done\n    fi\n}\n\ncandidate() {\n    search \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp52ux1554.sh: line 43: syntax error near unexpected token `then''

    /tmp/tmp52ux1554.sh: line 43: `                while [[ ${list[k]} -eq ${tmp}
    ]] && [[ ${k} -lt ${#list} ]] && [[ ${list[k]} -gt 0 ]]; then''

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local greatest=-1\n\
    \    local frequency=0\n    local i\n    \n    for i in $list; do\n        if\
    \ [ $i -gt $greatest ]; then\n            greatest=$i\n        fi\n        frequency=$((frequency+1))\n\
    \    done\n    \n    if [ $frequency -gt $greatest ]; then\n        greatest=$frequency\n\
    \    fi\n    \n    return $greatest\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local -n arr=$1\n  local -n max=$2\n\
    \  local -n val=$3\n  local -n count=$4\n  local -n maxCount=0\n  local -n maxVal=0\n\
    \  local -n maxFreq=0\n  local -n maxCountVal=0\n  local -n maxCountFreq=0\n \
    \ local -n maxCountValFreq=0\n  local -n maxCountValFreqFreq=0\n  local -n maxCountValFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n  local -n maxCountValFreqFreqFreqFreqFreqFreqFreqFreqFreq=0\n\
    \  local -n maxCountVal\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzuk7pjfq.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpzuk7pjfq.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpzuk7pjfq.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpzuk7pjfq.sh: line 19: local: `'': not a valid identifier

    /tmp/tmpzuk7pjfq.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: line 40: local: `0'': invalid variable name for name reference

    /tmp/tmpzuk7pjfq.sh: l'
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local k\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local n=$1\n  local -a arr\n  local\
    \ max\n  local freq\n  arr=( $n )\n  max=0\n  freq=0\n  for i in \"${arr[@]}\"\
    ; do\n    (( freq++ ))\n    (( max < i )) && max=$i\n  done\n  (( freq > max ))\
    \ && return -1\n  echo $max\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    \n    for i in $list; do\n        if (( $i\
    \ > 0 )); then\n            freq=$(( $freq + 1 ))\n            if (( $freq > $max\
    \ )); then\n                max=$i\n            fi\n        fi\n    done\n   \
    \ \n    if (( $max > 0 )); then\n        echo $max\n    else\n        echo -1\n\
    \    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for ((i=0; i<${#list}; i++)); do\n       \
    \ local val=${list[i]}\n        if (( freq > val )); then\n            freq=${val}\n\
    \            max=${i}\n        fi\n    done\n    if [[ ${max} == 0 ]]; then\n\
    \        echo \"-1\"\n    else\n        echo \"${list[max]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6tcodew1.sh: line 22: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=$2\n\
    \    local freq\n    local i\n    local j\n    local k\n    local maxfreq\n  \
    \  local maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local maxi\n\
    \    local maxj\n    local maxk\n    local maxfreq\n    local maxi\n    local\
    \ maxj\n    local maxk\n    local maxfreq\n    local maxi\n    local maxj\n  \
    \  local maxk\n    local maxfreq\n    local maxi\n    local maxj\n    local maxk\n\
    \    local maxfreq\n    local maxi\n    local maxj\n    local maxk\n    local\
    \ maxfreq\n    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n\
    \    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local\
    \ maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local maxi\n  \
    \  local maxj\n    local maxk\n    local maxfreq\n    local maxi\n    local maxj\n\
    \    local maxk\n    local maxfreq\n    local maxi\n    local maxj\n    local\
    \ maxk\n    local maxfreq\n    local maxi\n    local maxj\n    local maxk\n  \
    \  local maxfreq\n    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n\
    \    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local\
    \ maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local maxi\n  \
    \  local maxj\n    local maxk\n    local maxfreq\n    local maxi\n    local maxj\n\
    \    local maxk\n    local maxfreq\n    local maxi\n    local maxj\n    local\
    \ maxk\n    local maxfreq\n    local maxi\n    local maxj\n    local maxk\n  \
    \  local maxfreq\n    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n\
    \    local maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local\
    \ maxi\n    local maxj\n    local maxk\n    local maxfreq\n    local maxi\n  \
    \  local maxj\n    local maxk\n    local maxfreq\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local greatest\n\
    \  local frequency\n  local i\n  local j\n  local max\n  \n  for i in \"${list}\"\
    ; do\n    greatest=$i\n    frequency=0\n    for j in \"${list}\"; do\n      if\
    \ [ \"$i\" -eq \"$j\" ]; then\n        continue\n      fi\n      if [ \"$i\" -gt\
    \ \"$j\" ]; then\n        greatest=$j\n        frequency=$((frequency + 1))\n\
    \      fi\n    done\n    if [ \"$greatest\" -gt 0 ]; then\n      if [ \"$frequency\"\
    \ -gt \"$greatest\" ]; then\n        greatest=$i\n      fi\n    fi\n  done\n \
    \ if [ \"$greatest\" -eq 0 ]; then\n    return -1\n  fi\n  echo \"$greatest\"\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjdottg_a.sh: line 27: [: 5 5 5 5 1: integer expression expected

    /tmp/tmpjdottg_a.sh: line 30: [: 5 5 5 5 1: integer expression expected

    /tmp/tmpjdottg_a.sh: line 35: [: 5 5 5 5 1: integer expression expected

    /tmp/tmpjdottg_a.sh: line 41: [: 5 5 5 5 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxIndex=0\n    local count=0\n    local index=0\n    local item\n\
    \    for (( index=0; index<${#list}; index++ )); do\n        item=\"${list[index]}\"\
    \n        if [[ ${item} -gt 0 ]]; then\n            (( count+=1 ))\n         \
    \   if [[ ${count} -gt ${item} ]]; then\n                max=${item}\n       \
    \         maxIndex=${index}\n            fi\n        fi\n    done\n    if [[ ${maxIndex}\
    \ -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo \"${max}\"\n   \
    \ fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp74fezjhe.sh: line 24: [[: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local greatest\n\
    \    local frequency\n    local i\n    local j\n    local max\n    local maxIndex\n\
    \    local maxFrequency\n    local maxValue\n    local number\n    local value\n\
    \    local count\n    local maxCount\n    local maxCountIndex\n    local maxCountFrequency\n\
    \    local maxCountValue\n    local countValue\n    local maxCountValueIndex\n\
    \    local maxCountValueFrequency\n    local maxCountValueValue\n    local maxCountValueValueIndex\n\
    \    local maxCountValueValueFrequency\n    local maxCountValueValueValue\n  \
    \  local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n    local\
    \ maxCountValueValueValue\n    local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n\
    \    local maxCountValueValueValue\n    local maxCountValueValueIndex\n    local\
    \ maxCountValueValueFrequency\n    local maxCountValueValueValue\n    local maxCountValueValueIndex\n\
    \    local maxCountValueValueFrequency\n    local maxCountValueValueValue\n  \
    \  local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n    local\
    \ maxCountValueValueValue\n    local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n\
    \    local maxCountValueValueValue\n    local maxCountValueValueIndex\n    local\
    \ maxCountValueValueFrequency\n    local maxCountValueValueValue\n    local maxCountValueValueIndex\n\
    \    local maxCountValueValueFrequency\n    local maxCountValueValueValue\n  \
    \  local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n    local\
    \ maxCountValueValueValue\n    local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n\
    \    local maxCountValueValueValue\n    local maxCountValueValueIndex\n    local\
    \ maxCountValueValueFrequency\n    local maxCountValueValueValue\n    local maxCountValueValueIndex\n\
    \    local maxCountValueValueFrequency\n    local maxCountValueValueValue\n  \
    \  local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n    local\
    \ maxCountValueValueValue\n    local maxCountValueValueIndex\n    local maxCountValueValueFrequency\n\
    \    local maxCountValueValueValue\n    local maxCountValueValueIndex\n    local\
    \ maxCountValueValueFrequency\n    local maxCountValueValueValue\n    local maxCountValueValueIndex\n\
    \    local maxCountValueValueFrequency\n    local maxCountValueValueValue\n\n\
    }\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    IFS=' '\
    \ read -a array <<< \"$1\"\n    for ((i=0; i<${#array[@]}; i++)); do\n       \
    \ if (( ${array[$i]} > 0 )); then\n            freq[$i]=$(( ${freq[$i]} + 1 ))\n\
    \        fi\n    done\n    for ((i=0; i<${#freq[@]}; i++)); do\n        if ((\
    \ ${freq[$i]} >= ${array[$i]} )); then\n            max=${array[$i]}\n       \
    \ fi\n    done\n    if (( ${#freq[@]} > 0 )); then\n        echo \"$max\"\n  \
    \  else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local n=$1\n    local s=$2\n \
    \   local max\n    local i\n    local j\n    local k\n    local freq\n    local\
    \ maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n\
    \    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n   \
    \ local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local\
    \ maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n\
    \    local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n  \
    \  local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n    local\
    \ maxval\n    local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n\
    \    local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n   \
    \ local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n    local\
    \ maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n\
    \    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n   \
    \ local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local\
    \ maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n\
    \    local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n  \
    \  local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n    local\
    \ maxval\n    local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n\
    \    local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n   \
    \ local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n    local\
    \ maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n\
    \    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n   \
    \ local maxfreq\n    local maxnum\n    local maxval\n    local maxfreq\n    local\
    \ maxnum\n    local maxval\n    local maxfreq\n    local maxnum\n    local maxval\n\
    \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxfreq=0\n    local maxval=0\n    local val\n    local freq\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\
    \ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxIndex=0\n  local maxFreq=0\n  local i\n  \n  for ((i=0; i<${#list};\
    \ i++)); do\n    local freq=${list[i]}\n    if (( freq > maxFreq )); then\n  \
    \    maxFreq=${freq}\n      maxIndex=${i}\n      max=${list[i]}\n    fi\n  done\n\
    \  \n  if (( maxIndex == 0 )); then\n    return -1\n  else\n    return $max\n\
    \  fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt3d6i7yt.sh: line 24: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local i freq max\n    freq=-1\n\
    \    max=0\n    for ((i=0; i<${#1}; i++)); do\n        if [[ ${#1} == $i ]]; then\n\
    \            freq=$((${#1}-i))\n        else\n            if (( ${#1}-$i > $freq\
    \ )) ; then\n                freq=$((${#1}-$i))\n            fi\n        fi\n\
    \        if (( ${#1}-$i > $max )) ; then\n            max=$((${#1}-$i))\n    \
    \    fi\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    search \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"\
    2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7\
    \ 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n   \
    \ [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"\
    8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10\
    \ 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local greatest\n\
    \    local frequency\n    local i\n    \n    greatest=\"-1\"\n    frequency=\"\
    -1\"\n    \n    for i in $list; do\n        if [ \"$i\" -gt \"$greatest\" ]; then\n\
    \            greatest=\"$i\"\n        fi\n        if [ \"$i\" -eq \"$i\" ]; then\n\
    \            frequency=\"$((frequency + 1))\"\n        fi\n    done\n    \n  \
    \  if [ \"$greatest\" -eq \"-1\" ]; then\n        echo \"$frequency\"\n    else\n\
    \        echo \"$greatest\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local numbers=$1\n    local max=0\n\
    \    local maxIndex=0\n    local maxFreq=0\n    local index=0\n    local freq=0\n\
    \    local num\n\n    while read -r num; do\n        if (( freq > maxFreq )) ;\
    \ then\n            maxFreq=freq\n            maxIndex=index\n        fi\n   \
    \     freq=$(( freq + 1 ))\n        (( index = index + 1 ))\n    done <<< \"$numbers\"\
    \n\n    if (( maxFreq > 0 )); then\n        echo \"$max\"\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4\
    \ 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local str=$1\n    local arr=(\
    \ $str )\n    local max=0\n    local maxFreq=0\n    local i\n    local j\n   \
    \ local k\n    local freq\n    local count\n    local maxCount\n    local maxVal\n\
    \    local maxFreqVal\n    local maxValCount\n    local maxValFreq\n    local\
    \ maxValCountFreq\n    local maxValFreqVal\n    local maxValFreqValCount\n   \
    \ local maxValFreqValCountFreq\n    local maxValFreqValCountFreqFreq\n    local\
    \ maxValFreqValCountFreqFreqFreq\n    local maxValFreqValCountFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreq\n    local maxValFreqValCountFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreq\n    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreq\n    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n  \
    \  local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreqFreq\n\
    \    local maxValFreqValCountFreqFreqFreqFreqFreqFreqFreqFreqF\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    for (( i=0; i<${#list}; i++ )); do\n     \
    \   local val=${list[i]}\n        if (( val > 0 )); then\n            freq=$((\
    \ freq + 1 ))\n            if (( freq > max )); then\n                max=$val\n\
    \            fi\n        fi\n    done\n    if (( freq > 0 )); then\n        echo\
    \ \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo6bzoshn.sh: line 22: ((: 5 5 5 5 1: syntax error in expression
    (error token is "5 5 5 1")

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ tmp98\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\"\
    ) = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8\
    \ 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039549
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n  local list=\"$1\"\n  local max=0\n\
    \  local maxfreq=0\n  local maxnum=\"\"\n  local num=\"\"\n  local freq=0\n  local\
    \ i\n  \n  for (( i=0; i<${#list}; i++ )); do\n    num=${list[i]}\n    freq=${#list}\n\
    \    \n    if [[ ${freq} -gt ${maxfreq} ]]; then\n      maxfreq=${freq}\n    \
    \  maxnum=${num}\n    fi\n  done\n  \n  if [[ ${maxfreq} -gt ${#list} ]]; then\n\
    \    return -1\n  fi\n  \n  echo \"${maxnum}\"\n}\n\ncandidate() {\n    search\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate\
    \ \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3\
    \ 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8\
    \ 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4\
    \ 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 2
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local freq\n    local tmp\n\
    \    \n    for i in $list; do\n        ((freq[$i])++))\n    done\n    \n    for\
    \ i in $list; do\n        if ((freq[$i]>maxfreq)); then\n            max=i\n \
    \           maxfreq=freq[$i]\n        fi\n    done\n    \n    if ((maxfreq>0));\
    \ then\n        echo \"$max\"\n    else\n        echo \"-1\"\n    fi\n}\n\ncandidate()\
    \ {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5\
    \ 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjyyrg0bl.sh: line 25: syntax error near unexpected token `++''

    /tmp/tmpjyyrg0bl.sh: line 25: `        ((freq[$i])++))''

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=$1\n    local max=0\n\
    \    local maxCount=0\n    local maxVal=0\n    local val\n    local count\n  \
    \  local i\n    \n    for val in $list; do\n        count=$(echo $list | grep\
    \ -c \"$val\")\n        if [ \"$count\" -gt \"$maxCount\" ]; then\n          \
    \  maxCount=$count\n            maxVal=$val\n        fi\n    done\n    \n    if\
    \ [ \"$maxCount\" -gt \"$max\" ]; then\n        max=$maxCount\n        maxVal=$maxVal\n\
    \    fi\n    \n    if [ \"$max\" -eq 0 ]; then\n        echo \"-1\"\n    else\n\
    \        echo \"$maxVal\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[\
    \ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8\
    \ 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10\
    \ 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n \
    \   [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") =\
    \ \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10\
    \ 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"\
    1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2\
    \ 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate\
    \ \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"\
    5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local list=\"$1\"\n    local max=0\n\
    \    local freq=0\n    local i\n    local j\n    local tmp\n    \n    for i in\
    \ $list; do\n        if [ $i -gt $max ]; then\n            freq=$i\n         \
    \   max=$i\n        fi\n    done\n    \n    for i in $list; do\n        if [ $i\
    \ -eq $max ]; then\n            freq=$freq+1\n        fi\n    done\n    \n   \
    \ if [ $freq -gt $max ]; then\n        echo \"$max\"\n    else\n        echo \"\
    -1\"\n    fi\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4\
    \ 4\") = \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n\
    \    [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8\
    \ 8 10 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7\
    \ 9\") = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcbjk90v4.sh: line 36: [: 5+1+1+1+1: integer expression expected

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local -n\
    \ max=$2\n    local -n val=$3\n    local -n count=0\n    local -n maxCount=0\n\
    \    local -n maxVal=0\n    local -n maxCountVal=0\n    local -n maxValVal=0\n\
    \    local -n maxCountValVal=0\n    local -n maxValValVal=0\n    local -n maxCountValValVal=0\n\
    \    local -n maxValValValVal=0\n    local -n maxCountValValValVal=0\n    local\
    \ -n maxValValValValVal=0\n    local -n maxCountValValValValVal=0\n    local -n\
    \ maxValValValValValVal=0\n    local -n maxCountValValValValValVal=0\n    local\
    \ -n maxValValValValValValVal=0\n    local -n maxCountValValValValValValVal=0\n\
    \    local -n maxValValValValValValValVal=0\n    local -n maxCountValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValValValVal=0\n    local -n maxCountValValValValValValValValValValValValVal=0\n\
    \    local -n maxValValValValValValValValValValValValVal=0\n}\n\ncandidate() {\n\
    \    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 5 5 5 1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n    [[ $(candidate\
    \ \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\") = \"8\" ]]\n \
    \   [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"2 7 8 8 4 8\
    \ 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate \"3 2 8\
    \ 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"6 9 6\
    \ 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3\
    \ 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"\
    4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\"\
    \ ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\"\
    \ ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\")\
    \ = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9\
    \ 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10\
    \ 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5\
    \ 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy4dz__4n.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    /tmp/tmpy4dz__4n.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpy4dz__4n.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpy4dz__4n.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 34: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 35: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 36: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 37: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 38: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 39: local: `0'': invalid variable name for name reference

    /tmp/tmpy4dz__4n.sh: line 40: local: `0'': invalid variable name for name reference

    /tm'
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxfreq=0\n    local i\n    local j\n    local k\n    local freq\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp\n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") =\
    \ \"4\" ]]\n    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8\
    \ 8 8 8 8 8 8\") = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10\
    \ 5 8 5 3 10\") = \"1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"6 9 7 5 8 7 5 3 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8\
    \ 4 6 10 4 2 1 10 2 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5\
    \ 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8\
    \ 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5\
    \ 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8\
    \ 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9\
    \ 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5\
    \ 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"\
    2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpal4jm03z.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550
- exit_code: 1
  program: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
    \ the greatest integer that is greater than \n# zero, and has a frequency greater\
    \ than or equal to the value of the integer itself. \n# The frequency of an integer\
    \ is the number of times it appears in the list.\n# If no such a value exist,\
    \ return -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search\
    \ \"1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n\
    # $1 is a space-separated list\nsearch() {\n    local -n arr=$1\n    local max=0\n\
    \    local maxIndex=0\n    local freq=0\n    local i\n    local j\n    local k\n\
    \    local num\n    local num2\n    local num3\n    local num4\n    local num5\n\
    \    local num6\n    local num7\n    local num8\n    local num9\n    local num10\n\
    \    local num11\n    local num12\n    local num13\n    local num14\n    local\
    \ num15\n    local num16\n    local num17\n    local num18\n    local num19\n\
    \    local num20\n    local num21\n    local num22\n    local num23\n    local\
    \ num24\n    local num25\n    local num26\n    local num27\n    local num28\n\
    \    local num29\n    local num30\n    local num31\n    local num32\n    local\
    \ num33\n    local num34\n    local num35\n    local num36\n    local num37\n\
    \    local num38\n    local num39\n    local num40\n    local num41\n    local\
    \ num42\n    local num43\n    local num44\n    local num45\n    local num46\n\
    \    local num47\n    local num48\n    local num49\n    local num50\n    local\
    \ num51\n    local num52\n    local num53\n    local num54\n    local num55\n\
    \    local num56\n    local num57\n    local num58\n    local num59\n    local\
    \ num60\n    local num61\n    local num62\n    local num63\n    local num64\n\
    \    local num65\n    local num66\n    local num67\n    local num68\n    local\
    \ num69\n    local num70\n    local num71\n    local num72\n    local num73\n\
    \    local num74\n    local num75\n    local num76\n    local num77\n    local\
    \ num78\n    local num79\n    local num80\n    local num81\n    local num82\n\
    \    local num83\n    local num84\n    local num85\n    local num86\n    local\
    \ num87\n    local num88\n    local num89\n    local num90\n    local num91\n\
    \    local num92\n    local num93\n    local num94\n    local num95\n    local\
    \ \n}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n\
    \    [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\"\
    ) = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
    1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[\
    \ $(candidate \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3\
    \ 7 5 10 10 3 6 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2\
    \ 1 1 5\") = \"4\" ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6\
    \ 4 10\") = \"2\" ]]\n    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\"\
    \ ]]\n    [[ $(candidate \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10\
    \ 2 8 10 9 4\") = \"4\" ]]\n    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7\
    \ 8 8 3 1 4 2 2 10 7\") = \"4\" ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8\
    \ 10 3 8 2 6 2 3 1\") = \"2\" ]]\n    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10\
    \ 10 6 8 4 10 7 7 10 8\") = \"-1\" ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n\
    \    [[ $(candidate \"9 7 7 2 4 7 2 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"5 4 10 2 1 1 10 3 6 1 8\") = \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1\
    \ 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\") = \"1\" ]]\n    [[ $(candidate \"3 10 10 9\
    \ 2\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo2b21cds.sh: line 16: local: `5 5 5 5 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660039550

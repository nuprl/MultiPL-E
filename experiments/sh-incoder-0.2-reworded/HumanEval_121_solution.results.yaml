language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $((i %\
    \ 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    \    local number\n    local odds_index\n    local evens_index\n    local number\n\
    \    local odds_index\n    local evens_index\n    local number\n    local odds_index\n\
    \    local evens_index\n    local number\n    local odds_index\n    local evens_index\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq 3 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ $((j %\
    \ 2)) == 0 ]]; then\n        sum=$((sum + ${numbers[$j]}))\n      fi\n    done\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnvi5o64a.sh: line 21: sum + 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local \n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_length\n    local evens_sum_length\n    local odds_sum_sum\n\
    \    local evens_sum_sum\n    local odds_sum_sum_index\n    local evens_sum_sum_index\n\
    \    local odds_sum_sum_length\n    local evens_sum_sum_length\n    local odds_sum_sum_sum\n\
    \    local evens_sum_sum_sum\n    local odds_sum_sum_sum_index\n    local evens_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_length\n    local evens_sum_sum_sum_length\n    local\
    \ odds_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_length\n\
    \    local evens_sum_sum_sum_sum_length\n    local odds_sum_sum_sum_sum_sum\n\
    \    local evens_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_sum_length\n\
    \    local evens_sum_sum_sum_sum_sum_length\n    local odds_sum_sum_sum_sum_sum_sum\n\
    \    local evens_sum_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_sum_sum_length\n\
    \    local evens_sum_sum_sum_sum_sum_sum_length\n    local odds_sum_sum_sum_sum_sum_sum_sum\n\
    \    local evens_sum_sum_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_sum_sum_sum_length\n\
    \    local evens_sum_sum_sum_sum_sum_sum_sum_length\n    local odds_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local evens_sum_sum_sum_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_sum_sum_sum_index\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_sum2\n\
    \    local evens_sum2\n    local odds_sum3\n    local evens_sum3\n    local odds_sum4\n\
    \    local evens_sum4\n    local odds_sum5\n    local evens_sum5\n    local odds_sum6\n\
    \    local evens_sum6\n    local odds_sum7\n    local evens_sum7\n    local odds_sum8\n\
    \    local evens_sum8\n    local odds_sum9\n    local evens_sum9\n    local odds_sum10\n\
    \    local evens_sum10\n    local odds_sum11\n    local evens_sum11\n    local\
    \ odds_sum12\n    local evens_sum12\n    local odds_sum13\n    local evens_sum13\n\
    \    local odds_sum14\n    local evens_sum14\n    local odds_sum15\n    local\
    \ evens_sum15\n    local odds_sum16\n    local evens_sum16\n    local odds_sum17\n\
    \    local evens_sum17\n    local odds_sum18\n    local evens_sum18\n    local\
    \ odds_sum19\n    local evens_sum19\n    local odds_sum20\n    local evens_sum20\n\
    \    local odds_sum21\n    local evens_sum21\n    local odds_sum22\n    local\
    \ evens_sum22\n    local odds_sum23\n    local evens_sum23\n    local odds_sum24\n\
    \    local evens_sum24\n    local odds_sum25\n    local evens_sum25\n    local\
    \ odds_sum26\n    local evens_sum26\n    local odds_sum27\n    local evens_sum27\n\
    \    local odds_sum28\n    local evens_sum28\n    local odds_sum29\n    local\
    \ evens_sum29\n    local odds_sum30\n    local evens_sum30\n    local odds_sum31\n\
    \    local evens_sum31\n    local odds_sum32\n    local evens_sum32\n    local\
    \ odds_sum33\n    local evens_sum33\n\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ $((j %\
    \ 2)) == 0 ]]; then\n        sum=$((sum + ${numbers[j]}))\n      fi\n    done\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqb0m8k61.sh: line 21: sum + 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_pos\n    local\
    \ evens_pos\n    local odds_pos2\n    local evens_pos2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_pos4\n    local evens_pos4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_pos6\n    local evens_pos6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_pos8\n    local evens_pos8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_pos10\n    local evens_pos10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_pos12\n    local evens_pos12\n\
    \    local odds_pos13\n    local evens_pos13\n    local odds_pos14\n    local\
    \ evens_pos14\n    local odds_pos15\n    local evens_pos15\n    local odds_pos16\n\
    \    local evens_pos16\n    local odds_pos17\n    local evens_pos17\n    local\
    \ odds_pos18\n    local evens_pos18\n    local odds_pos19\n    local evens_pos19\n\
    \    local odds_pos20\n    local evens_pos20\n    local odds_pos21\n    local\
    \ evens_pos21\n    local odds_pos22\n    local evens_pos22\n    local odds_pos23\n\
    \    local evens_pos23\n    local odds_pos24\n    local evens_pos24\n    local\
    \ odds_pos25\n    local evens_pos25\n    local odds_pos26\n    local evens_pos26\n\
    \    local odds_pos27\n    local evens_pos27\n    local odds_pos28\n    local\
    \ evens_pos28\n    local odds_pos29\n    local evens_pos29\n    local odds_pos30\n\
    \    local evens_pos30\n    local odds_pos31\n    local evens_pos31\n    local\
    \ odds_pos32\n    local evens_pos32\n    local odds_pos33\n    local evens_pos33\n\
    \    local odds_pos34\n    local evens_pos34\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local number_index\n    local number_length\n    local number_length_index\n\
    \    local number_length_index2\n    local number_length_index3\n    local number_length_index4\n\
    \    local number_length_index5\n    local number_length_index6\n    local number_length_index7\n\
    \    local number_length_index8\n    local number_length_index9\n    local number_length_index10\n\
    \    local number_length_index11\n    local number_length_index12\n    local number_length_index13\n\
    \    local number_length_index14\n    local number_length_index15\n    local number_length_index16\n\
    \    local number_length_index17\n    local number_length_index18\n    local number_length_index19\n\
    \    local number_length_index20\n    local number_length_index21\n    local number_length_index22\n\
    \    local number_length_index23\n    local number_length_index24\n    local number_length_index25\n\
    \    local number_length_index26\n    local number_length_index27\n    local number_length_index28\n\
    \    local number_length_index29\n    local number_length_index30\n    local number_length_index31\n\
    \    local number_length_index32\n    local number_length_index33\n    local number_length_index34\n\
    \    local number_length_index35\n    local number_length_index36\n    local number_length_index37\n\
    \    local number_length_index38\n    local number_length_index39\n    local number_length_index40\n\
    \    local number_length_index41\n    local number_length_index42\n    local number_length_index43\n\
    \    local number_length_index44\n    local number_length_index45\n    local number_length_index46\n\
    \    local number_length_index47\n    local number_length_index48\n    local number_length_index49\n\
    \    local number_length_index50\n    local number_length_index51\n    local number_length_index52\n\
    \    local number_length_index53\n    local number_length_index54\n    local number_length_index55\n\
    \    local number_length_index56\n    local number_length_index57\n    local number_length_index58\n\
    \    local number_length_index59\n    local number_length_index60\n    local number_length_index61\n\
    \    local number_length_index62\n    local number_length_index63\n    local number_length_index64\n\
    \    local number_length_index65\n    local number_\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local number_index\n    local odds\n    local evens\n   \
    \ local evens_index\n    local odds_index\n    local number_count\n    local odds_count\n\
    \    local evens_count\n    local evens_count_index\n    local odds_count_index\n\
    \    local number_count_index\n    local number_odds\n    local number_evens\n\
    \    local number_evens_index\n    local number_odds_index\n    local number_evens_count_index\n\
    \    local number_odds_count_index\n    local number_evens_count_index\n    local\
    \ number_odds_count_index\n    local number_evens_count_index\n    local number_odds_count_index\n\
    \    local number_evens_count_index\n    local number_odds_count_index\n    local\
    \ number_evens_count_index\n    local number_odds_count_index\n    local number_evens_count_index\n\
    \    local number_odds_count_index\n    local number_evens_count_index\n    local\
    \ number_odds_count_index\n    local number_evens_count_index\n    local number_odds_count_index\n\
    \    local number_evens_count_index\n    local number_odds_count_index\n    local\
    \ number_evens_count_index\n    local number_odds_count_index\n    local number_evens_count_index\n\
    \    local number_odds_count_index\n    local number_evens_count_index\n    local\
    \ number_odds_count_index\n    local number_evens_count_index\n    local number_odds_count_index\n\
    \    local number_evens_count_index\n    local number_odds_count_index\n    local\
    \ number_evens_count_index\n    local number_odds_count_index\n    local number_evens_count_index\n\
    \    local number_odds_count_index\n    local number_evens_count_index\n    local\
    \ number_odds_count_index\n    local number_evens_count_index\n    local number_odds_count_index\n\
    \    local number_evens_count_index\n    local number_odds_count_index\n    local\
    \ number_evens_count_index\n    local number_odds_count_index\n    local number_evens_count_index\n\
    \    local number_odds_count_index\n    local number_evens_count_index\n    local\
    \ number_odds_count_index\n    local number_evens_count_index\n    local number_odds_count_index\n\
    \    local number_evens_count_index\n    local number_\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ $i -lt ${#numbers}\
    \ ]; do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            sum=$(( $sum +\
    \ ${numbers[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptfux9vpe.sh: line 18: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i} % 2 )) ]\n    then\n      sum=$(( sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i} % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local even_index\n    local odd_index\n    local number\n\
    \    local index\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local odds_length\n    local evens_length\n    local odds_number\n\
    \    local evens_number\n    local odds_value\n    local evens_value\n    local\
    \ odds_string\n    local evens_string\n    local odds_string_index\n    local\
    \ evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_length\n    local evens_string_length\n\
    \    local odds_string_value\n    local evens_string_value\n    local odds_string_index\n\
    \    local evens_string_index\n    local odds_string_\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq $i ]]; then\n        ((sum+=${numbers[$j]}))\n      fi\n    done\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $i -eq $((i%2)) ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $((i%2)) ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local odds\n    local evens\n    local odds_index\n    local\
    \ even_index\n    local number\n    local odds\n    local evens\n    local odds_index\n\
    \    local even_index\n    local number\n    local odds\n    local evens\n   \
    \ local odds_index\n    local even_index\n    local number\n    local odds\n \
    \   local evens\n    local odds_index\n    local even_index\n    local number\n\
    \    local odds\n    local evens\n    local odds_index\n    local even_index\n\
    \    local number\n    local odds\n    local evens\n    local odds_index\n   \
    \ local even_index\n    local number\n    local odds\n    local evens\n    local\
    \ odds_index\n    local even_index\n    local number\n    local odds\n    local\
    \ evens\n    local odds_index\n    local even_index\n    local number\n    local\
    \ odds\n    local evens\n    local odds_index\n    local even_index\n    local\
    \ number\n    local odds\n    local evens\n    local odds_index\n    local even_index\n\
    \    local number\n    local odds\n    local evens\n    local odds_index\n   \
    \ local even_index\n    local number\n    local odds\n    local evens\n    local\
    \ odds_index\n    local even_index\n    local number\n    local odds\n    local\
    \ evens\n    local odds_index\n    local even_index\n    local number\n    local\
    \ odds\n    local evens\n    local odds_index\n    local even_index\n    local\
    \ number\n    local odds\n    local evens\n    local odds_index\n    local even_index\n\
    \    local number\n    local odds\n    local evens\n    local odds_index\n   \
    \ local even_index\n    local number\n    local odds\n    local evens\n    local\
    \ odds_index\n    local even_index\n    local number\n    local odds\n    local\
    \ evens\n    local odds_index\n    local even_index\n    local number\n    local\
    \ odds\n    local evens\n    local odds_index\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( $i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local odds_length\n    local evens_length\n    local odds_number\n\
    \    local evens_number\n    local odds_sum\n    local evens_sum\n    local odds_number_index\n\
    \    local evens_number_index\n    local odds_number_length\n    local evens_number_length\n\
    \    local odds_number_sum\n    local evens_number_sum\n    local odds_number_sum_index\n\
    \    local evens_number_sum_index\n    local odds_number_sum_index\n    local\
    \ evens_number_sum_index\n    local odds_number_sum_index\n    local evens_number_sum_index\n\
    \    local odds_number_sum_index\n    local evens_number_sum_index\n    local\
    \ odds_number_sum_index\n    local evens_number_sum_index\n    local odds_number_sum_index\n\
    \    local evens_number_sum_index\n    local odds_number_sum_index\n    local\
    \ evens_number_sum_index\n    local odds_number_sum_index\n    local evens_number_sum_index\n\
    \    local odds_number_sum_index\n    local evens_number_sum_index\n    local\
    \ odds_number_sum_index\n    local evens_number_sum_index\n    local odds_number_sum_index\n\
    \    local evens_number_sum_index\n    local odds_number_sum_index\n    local\
    \ evens_number_sum_index\n    local odds_number_sum_index\n    local evens_number_sum_index\n\
    \    local odds_number_sum_index\n    local evens_number_sum_index\n    local\
    \ odds_number_sum_index\n    local evens_number_sum_index\n    local odds_number_sum_index\n\
    \    local evens_number_sum_index\n    local odds_number_sum_index\n    local\
    \ evens_number_sum_index\n    local odds_number_sum_index\n    local evens_number_sum_index\n\
    \    local odds_number_sum_index\n    local evens_number_sum_index\n    local\
    \ odds_number_sum_index\n    local evens_number_sum_index\n    local odds_number_sum_index\n\
    \    local evens_number_sum_index\n    local odds_number_sum_index\n    local\
    \ evens_number_sum_index\n    local odds_number_sum_index\n    local evens_number_sum_index\n\
    \    local odds_number_sum_index\n    local evens_number_sum_index\n    \n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_odds\n    local evens_odds\n \
    \   local odds_evens\n    local evens_evens\n    local odds_odds_index\n    local\
    \ evens_odds_index\n    local odds_evens_index\n    local odds_odds_length\n \
    \   local evens_odds_length\n    local odds_evens_length\n    local odds_odds_sum\n\
    \    local evens_odds_sum\n    local odds_evens_sum\n    local odds_odds_odds\n\
    \    local evens_odds_odds\n    local odds_evens_odds\n    local odds_odds_evens\n\
    \    local evens_odds_evens\n    local odds_evens_evens\n    local odds_odds_odds_index\n\
    \    local evens_odds_odds_index\n    local odds_evens_odds_index\n    local odds_odds_evens_index\n\
    \    local odds_evens_evens_index\n    local odds_odds_odds_length\n    local\
    \ evens_odds_odds_length\n    local odds_evens_odds_length\n    local odds_odds_evens_length\n\
    \    local odds_evens_evens_length\n    local odds_odds_odds_sum\n    local evens_odds_odds_sum\n\
    \    local odds_evens_odds_sum\n    local odds_odds_evens_sum\n    local evens_odds_evens_sum\n\
    \    local odds_evens_evens_sum\n    local odds_odds_odds_odds\n    local evens_odds_odds_odds\n\
    \    local odds_evens_odds_odds\n    local odds_odds_evens_odds\n    local evens_odds_evens_odds\n\
    \    local odds_evens_evens_odds\n    local odds_odds_odds_evens\n    local evens_odds_odds_evens\n\
    \    local odds_evens_odds_evens\n    local odds_odds_evens_evens\n    local evens_odds_evens_evens\n\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while read -r number;\
    \ do\n        if (( i % 2 == 0 )); then\n            sum=$(( $sum + $number ))\n\
    \        fi\n        i=$(( $i + 1 ))\n    done <<< \"$numbers\"\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg49ufm85.sh: line 18: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 0 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 1 ]\n   \
    \ then\n      sum=$((sum+i))\n    elif [ $i -eq 2 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 4 ]\n\
    \    then\n      sum=$((sum+i))\n    elif [ $i -eq 5 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 6 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 7 ]\n\
    \    then\n      sum=$((sum+i))\n    elif [ $i -eq 8 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 9 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 10 ]\n\
    \    then\n      sum=$((sum+i))\n    elif [ $i -eq 11 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 12 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 13\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 14 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 15 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 16\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 17 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 18 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 19\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 20 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 21 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 22\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 23 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 24 ]\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyvytt0wz.sh: line 92: syntax error near unexpected token `}''

    /tmp/tmpyvytt0wz.sh: line 92: `}''

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    local j=$((i+1))\n\
    \    if [ $j -gt $((${#numbers} - 1)) ]\n    then\n      j=$((${#numbers} - 1))\n\
    \    fi\n    if [ $i -eq 0 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 0 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 1 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 2 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 3 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 4 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 5 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 6 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 7 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 8 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 9 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 10 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 11 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 12 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 13 ]\n    then\n      sum=$((sum + $j))\n    elif [ $((${#numbers}\
    \ - $i)) -eq 14 ]\n    then\n      sum=$((sum + $j))\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpka0o1q8c.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpka0o1q8c.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))) \n    do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]\n      then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmproyvmf9i.sh: line 21: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmproyvmf9i.sh: line 23: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i % 2)) == 0 ]]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local summed\n\
    \    local num\n    local nums\n    local nums_len\n    local nums_len2\n    local\
    \ nums_len3\n    local nums_len4\n    local nums_len5\n    local nums_len6\n \
    \   local nums_len7\n    local nums_len8\n    local nums_len9\n    local nums_len10\n\
    \    local nums_len11\n    local nums_len12\n    local nums_len13\n    local nums_len14\n\
    \    local nums_len15\n    local nums_len16\n    local nums_len17\n    local nums_len18\n\
    \    local nums_len19\n    local nums_len20\n    local nums_len21\n    local nums_len22\n\
    \    local nums_len23\n    local nums_len24\n    local nums_len25\n    local nums_len26\n\
    \    local nums_len27\n    local nums_len28\n    local nums_len29\n    local nums_len30\n\
    \    local nums_len31\n    local nums_len32\n    local nums_len33\n    local nums_len34\n\
    \    local nums_len35\n    local nums_len36\n    local nums_len37\n    local nums_len38\n\
    \    local nums_len39\n    local nums_len40\n    local nums_len41\n    local nums_len42\n\
    \    local nums_len43\n    local nums_len44\n    local nums_len45\n    local nums_len46\n\
    \    local nums_len47\n    local nums_len48\n    local nums_len49\n    local nums_len50\n\
    \    local nums_len51\n    local nums_len52\n    local nums_len53\n    local nums_len54\n\
    \    local nums_len55\n    local nums_len56\n    local nums_len57\n    local nums_len58\n\
    \    local nums_len59\n    local nums_len60\n    local nums_len61\n    local nums_len62\n\
    \    local nums_len63\n    local nums_len64\n    local nums_len65\n    local num\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    (( sum+=( $((\
    \ i%2 )) )) ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwomv_320.sh: line 17: syntax error near unexpected token `)''

    /tmp/tmpwomv_320.sh: line 17: `    (( sum+=( $(( i%2 )) )) ))''

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local odd=0\n    local even=0\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i % 2)) -eq 0 ]]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    local j=$((i+1))\n\
    \    if [ $((j%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local \n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsf3cg6uy.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpsf3cg6uy.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ sum=$((sum+i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq $i ]]; then\n        ((sum+=${numbers[$j]}))\n      fi\n    done\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp_6zrkamq.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_position\n    local evens_position\n    local odds_position_index\n   \
    \ local evens_position_index\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count_index\n    local evens_position_count_index\n \
    \   local odds_position_count_value\n    local evens_position_count_value\n  \
    \  local odds_position_count_index\n    local evens_position_count_index\n   \
    \ local odds_position_count_value\n    local evens_position_count_value\n    local\
    \ odds_position_count_index\n    local evens_position_count_index\n    local odds_position_count_value\n\
    \    local evens_position_count_value\n    local odds_position_count_index\n \
    \   local evens_position_count_index\n    local odds_position_count_value\n  \
    \  local evens_position_count_value\n    local odds_position_count_index\n   \
    \ local evens_position_count_index\n    local odds_position_count_value\n    local\
    \ evens_position_count_value\n    local odds_position_count_index\n    local evens_position_count_index\n\
    \    local odds_position_count_value\n    local evens_position_count_value\n \
    \   local odds_position_count_index\n    local evens_position_count_index\n  \
    \  local odds_position_count_value\n    local evens_position_count_value\n   \
    \ local odds_position_count_index\n    local evens_position_count_index\n    local\
    \ odds_position_count_value\n    local evens_position_count_value\n    local odds_position_count_index\n\
    \    local evens_position_count_index\n    local odds_position_count_value\n \
    \   local evens_position_count_value\n    local odds_position_count_index\n  \
    \  local evens_position_count_index\n    local odds_position_count_value\n   \
    \ local evens_position_count_value\n    local odds_position_count_index\n    local\
    \ evens_position_count_index\n    local odds_position_count_value\n    local evens_position_count_value\n\
    \    local odds_position_count_index\n    local evens_position_count_index\n \
    \   local odds_position_count_value\n    local evens_position_count_value\n  \
    \  local odds_position_count_index\n    local evens_position_count_index\n   \
    \ local odds_position_count_value\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_count\n    local evens_count\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_count\n    local evens_count\n\
    \    local odds_value\n    local evens_value\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_count\n\
    \    local evens_count\n    local odds_value\n    local evens_value\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_value\n    local\
    \ evens_value\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_value\n    local evens_value\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_value\n    local evens_value\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_value\n    local evens_value\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_count\n    local evens_count\n    local odds_value\n\
    \    local evens_value\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_count\n    local evens_count\n\
    \    local odds_value\n    local evens_value\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $i -eq $((i%2)) ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq 0 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 1 ]; then\n    \
    \  sum=$((sum+i))\n    elif [ $i -eq 2 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 3 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 4 ]; then\n    \
    \  sum=$((sum+i))\n    elif [ $i -eq 5 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 6 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 7 ]; then\n    \
    \  sum=$((sum+i))\n    elif [ $i -eq 8 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 9 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 10 ]; then\n   \
    \   sum=$((sum+i))\n    elif [ $i -eq 11 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 12 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 13 ]; then\n  \
    \    sum=$((sum+i))\n    elif [ $i -eq 14 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 15 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 16 ]; then\n  \
    \    sum=$((sum+i))\n    elif [ $i -eq 17 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 18 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 19 ]; then\n  \
    \    sum=$((sum+i))\n    elif [ $i -eq 20 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 21 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 22 ]; then\n  \
    \    sum=$((sum+i))\n    elif [ $i -eq 23 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 24 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 25 ]; then\n  \
    \    sum=$((sum+i))\n    elif [ $i -eq 26 ]; then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 27 ]; then\n      sum=$((sum+i))\n    elif [ $i -eq 28 ]; then\n  \
    \    sum=$((sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdprsc3qi.sh: line 74: unexpected EOF while looking for matching
    `)''

    /tmp/tmpdprsc3qi.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i}+1 )) ]\n    then\n      sum=$(( ${sum} + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    local j=$((i+1))\n\
    \    if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+$j))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_value\n\
    \    local evens_sum_value\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_value\n    local evens_sum_value\n\
    \    local odds_\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local oddCount\n    local evenCount\n  \
    \  local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    local oddCount\n    local evenCount\n\
    \    local oddSum\n    local evenSum\n    \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq 3 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local nums\n    local nums_i\n    local nums_j\n    local nums_k\n    local\
    \ nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n \
    \   local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n   \
    \ local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_sum2\n\
    \    local evens_sum2\n    local odds_sum3\n    local evens_sum3\n    local odds_sum4\n\
    \    local evens_sum4\n    local odds_sum5\n    local evens_sum5\n    local odds_sum6\n\
    \    local evens_sum6\n    local odds_sum7\n    local evens_sum7\n    local odds_sum8\n\
    \    local evens_sum8\n    local odds_sum9\n    local evens_sum9\n    local odds_sum10\n\
    \    local evens_sum10\n    local odds_sum11\n    local evens_sum11\n    local\
    \ odds_sum12\n    local evens_sum12\n    local odds_sum13\n    local evens_sum13\n\
    \    local odds_sum14\n    local evens_sum14\n    local odds_sum15\n    local\
    \ evens_sum15\n    local odds_sum16\n    local evens_sum16\n    local odds_sum17\n\
    \    local evens_sum17\n    local odds_sum18\n    local evens_sum18\n    local\
    \ odds_sum19\n    local evens_sum19\n    local odds_sum20\n    local evens_sum20\n\
    \    local odds_sum21\n    local evens_sum21\n    local odds_sum22\n    local\
    \ evens_sum22\n    local odds_sum23\n    local evens_sum23\n    local odds_sum24\n\
    \    local evens_sum24\n    local odds_sum25\n    local evens_sum25\n    local\
    \ odds_sum26\n    local evens_sum26\n    local odds_sum27\n    local evens_sum27\n\
    \    local odds_sum28\n    local evens_sum28\n    local odds_sum29\n    local\
    \ evens_sum29\n    local odds_sum30\n    local evens_sum30\n    local odds_sum31\n\
    \    local evens_sum31\n    local odds_sum32\n    local evens_sum32\n    local\
    \ odds_sum33\n    local evens_sum33\n\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ $i -lt ${#numbers}\
    \ ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq 0 ]; then\n            sum=$((\
    \ $sum + ${numbers[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmk1r819x.sh: line 17: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i % 2)) -eq 0 ]]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local even_index\n    local odd_index\n    local number\n\
    \    local number_index\n    local number_count\n    local number_sum\n    local\
    \ number_odd\n    local number_even\n    local number_even_index\n    local number_odd_index\n\
    \    local number_odd\n    local number_even\n    local number_even_index\n  \
    \  local number_odd\n    local number_even\n    local number_even_index\n    local\
    \ number_odd\n    local number_even\n    local number_even_index\n    local number_odd\n\
    \    local number_even\n    local number_even_index\n    local number_odd\n  \
    \  local number_even\n    local number_even_index\n    local number_odd\n    local\
    \ number_even\n    local number_even_index\n    local number_odd\n    local number_even\n\
    \    local number_even_index\n    local number_odd\n    local number_even\n  \
    \  local number_even_index\n    local number_odd\n    local number_even\n    local\
    \ number_even_index\n    local number_odd\n    local number_even\n    local number_even_index\n\
    \    local number_odd\n    local number_even\n    local number_even_index\n  \
    \  local number_odd\n    local number_even\n    local number_even_index\n    local\
    \ number_odd\n    local number_even\n    local number_even_index\n    local number_odd\n\
    \    local number_even\n    local number_even_index\n    local number_odd\n  \
    \  local number_even\n    local number_even_index\n    local number_odd\n    local\
    \ number_even\n    local number_even_index\n    local number_odd\n    local number_even\n\
    \    local number_even_index\n    local number_odd\n    local number_even\n  \
    \  local number_even_index\n    local number_odd\n    local number_even\n    local\
    \ number_even_index\n    local number_odd\n    local number_even\n    local number_even_index\n\
    \    local number_odd\n    local number_even\n    local number_even_index\n  \
    \  local number_odd\n    local number_even\n    local number_even_index\n    local\
    \ number_odd\n    local number_even\n    local number_even_index\n    local number_odd\n\
    \    local number_even\n    local number_even_index\n    local number_odd\n  \
    \  local number_even\n    local number_even_index\n    local number_odd\n    local\
    \ number_even\n    local number_even_index\n    local number_odd\n    local number_even\n\
    \    local number_even_index\n    local \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(echo $i | sed 's/ //g')\n    do\n      if [ $j -gt $((${#numbers}-1))\
    \ ]\n      then\n        sum=$((sum + $j))\n      fi\n    done\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local \n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local nums\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_odds_even\n    local nums_odds_odd\n    local nums_evens_even\n\
    \    local nums_evens_odd\n    local nums_odds_evens_even\n    local nums_odds_odds_even\n\
    \    local nums_evens_evens_odd\n    local nums_evens_odds_even\n    local nums_odds_evens_evens_odd\n\
    \    local nums_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_even\n    local\
    \ nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local odds\n    local evens\n\
    \n    for (( i=1; i<${#numbers}; i++ )); do\n        odds=$(echo $numbers | sed\
    \ -n 's/^\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\\
    +\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\\
    )\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\\
    (.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\\
    s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\\
    )\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\\
    (.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\\
    s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\\
    )\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\\
    (.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\\
    s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\\
    )\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\\
    (.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\s\\+\\(.*\\)\\\
    s\\+\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") =\
    \ \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3uztbr47.sh: line 25: unexpected EOF while looking for matching
    `''''

    /tmp/tmp3uztbr47.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( $i % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} - 1 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos2\n\
    \    local evens_pos2\n    local odds_neg2\n    local evens_neg2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_neg3\n    local evens_neg3\n    local odds_pos4\n\
    \    local evens_pos4\n    local odds_neg4\n    local evens_neg4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_neg5\n    local evens_neg5\n    local odds_pos6\n\
    \    local evens_pos6\n    local odds_neg6\n    local evens_neg6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_neg7\n    local evens_neg7\n    local odds_pos8\n\
    \    local evens_pos8\n    local odds_neg8\n    local evens_neg8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_neg9\n    local evens_neg9\n    local odds_pos10\n\
    \    local evens_pos10\n    local odds_neg10\n    local evens_neg10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_neg11\n    local evens_neg11\n\
    \    local odds_pos12\n    local evens_pos12\n    local odds_neg12\n    local\
    \ evens_neg12\n    local odds_pos13\n    local evens_pos13\n    local odds_neg13\n\
    \    local evens_neg13\n    local odds_pos14\n    local evens_pos14\n    local\
    \ odds_neg14\n    local evens_neg14\n    local odds_pos15\n    local evens_pos15\n\
    \    local odds_neg15\n    local evens_neg15\n    local odds_pos16\n    local\
    \ evens_pos16\n    local odds_neg16\n    local evens_neg16\n    local odds_pos17\n\
    \    local evens_pos17\n    local odds_neg17\n    local evens_neg17\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_index2\n    local evens_index2\n    local\
    \ odds_index3\n    local evens_index3\n    local odds_index4\n    local evens_index4\n\
    \    local odds_index5\n    local evens_index5\n    local odds_index6\n    local\
    \ evens_index6\n    local odds_index7\n    local evens_index7\n    local odds_index8\n\
    \    local evens_index8\n    local odds_index9\n    local evens_index9\n    local\
    \ odds_index10\n    local evens_index10\n    local odds_index11\n    local evens_index11\n\
    \    local odds_index12\n    local evens_index12\n    local odds_index13\n   \
    \ local evens_index13\n    local odds_index14\n    local evens_index14\n    local\
    \ odds_index15\n    local evens_index15\n    local odds_index16\n    local evens_index16\n\
    \    local odds_index17\n    local evens_index17\n    local odds_index18\n   \
    \ local evens_index18\n    local odds_index19\n    local evens_index19\n    local\
    \ odds_index20\n    local evens_index20\n    local odds_index21\n    local evens_index21\n\
    \    local odds_index22\n    local evens_index22\n    local odds_index23\n   \
    \ local evens_index23\n    local odds_index24\n    local evens_index24\n    local\
    \ odds_index25\n    local evens_index25\n    local odds_index26\n    local evens_index26\n\
    \    local odds_index27\n    local evens_index27\n    local odds_index28\n   \
    \ local evens_index28\n    local odds_index29\n    local evens_index29\n    local\
    \ odds_index30\n    local evens_index30\n    local odds_index31\n    local evens_index31\n\
    \    local odds_index32\n    local evens_index32\n    local odds_index33\n   \
    \ local evens_index33\n    local odds_index34\n    local evens_\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} - 1 )) ]\n    then\n      sum=$(( $sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local nums\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_odds_evens\n    local nums_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens\n    local nums_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens\n    local nums_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens\n    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n    local\
    \ nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n    local\
    \ nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n   \
    \ local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds\n\
    \    local nums_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens\n\
    \    local nums_odds_evens_odds_even\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} - 1 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_count\n\
    \    local evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_value\n    local evens_value\n\
    \    local odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 == 0 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ $i -lt ${#numbers}\
    \ ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq 0 ]; then\n            sum=$((\
    \ ${sum} + ${numbers[$i]} ))\n        fi\n        i=$(( ${i} + 1 ))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4dgw4ei0.sh: line 17: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} - 1 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${i}+1 )) ]\n    then\n      sum=$(( ${sum} + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local num\n    local nums\n\
    \    local nums_len\n    local nums_len2\n    local nums_len3\n    local nums_len4\n\
    \    local nums_len5\n    local nums_len6\n    local nums_len7\n    local nums_len8\n\
    \    local nums_len9\n    local nums_len10\n    local nums_len11\n    local nums_len12\n\
    \    local nums_len13\n    local nums_len14\n    local nums_len15\n    local nums_len16\n\
    \    local nums_len17\n    local nums_len18\n    local nums_len19\n    local nums_len20\n\
    \    local nums_len21\n    local nums_len22\n    local nums_len23\n    local nums_len24\n\
    \    local nums_len25\n    local nums_len26\n    local nums_len27\n    local nums_len28\n\
    \    local nums_len29\n    local nums_len30\n    local nums_len31\n    local nums_len32\n\
    \    local nums_len33\n    local nums_len34\n    local nums_len35\n    local nums_len36\n\
    \    local nums_len37\n    local nums_len38\n    local nums_len39\n    local nums_len40\n\
    \    local nums_len41\n    local nums_len42\n    local nums_len43\n    local nums_len44\n\
    \    local nums_len45\n    local nums_len46\n    local nums_len47\n    local nums_len48\n\
    \    local nums_len49\n    local nums_len50\n    local nums_len51\n    local nums_len52\n\
    \    local nums_len53\n    local nums_len54\n    local nums_len55\n    local nums_len56\n\
    \    local nums_len57\n    local nums_len58\n    local nums_len59\n    local nums_len60\n\
    \    local nums_len61\n    local nums_len62\n    local nums_len63\n    local nums_len64\n\
    \    local nums_len65\n    local nums_len66\n    local nums_len\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) == 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n\n    count=0\n    for ((i=0;\
    \ i<${#numbers[@]}; i++)); do\n        if [[ ${numbers[$i]} -eq 0 ]]; then\n \
    \           ((count++))\n            continue\n        fi\n        odd=0\n   \
    \     even=0\n        for ((j=0; j<${#numbers[@]}; j++)); do\n            if [[\
    \ ${numbers[$j]} -eq 0 ]]; then\n                ((count++))\n               \
    \ continue\n            fi\n            if [[ ${numbers[$j]} -eq $((${numbers[$i]}\
    \ / 2)) ]]; then\n                ((odd++))\n            else\n              \
    \  ((even++))\n            fi\n        done\n        if [[ ${odd} -eq 1 ]]; then\n\
    \            ((sum+=${numbers[$i]}))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpisnh0gzx.sh: line 24: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpisnh0gzx.sh: line 31: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpisnh0gzx.sh: line 35: 5 8 7 1 / 2: syntax error in expression (error token
    is "8 7 1 / 2")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_position\n    local evens_position\n    local odds_position_index\n   \
    \ local evens_position_index\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    local odds_position_count\n    local evens_position_count\n\
    \    local odds_position_count\n    local evens_position_count\n    local odds_position_count\n\
    \    local evens_position_count\n    \n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( sum + $i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [[ $((i%2)) -eq 0 ]]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local num\n    local num2\n    local num3\n    local num4\n\
    \    local num5\n    local num6\n    local num7\n    local num8\n    local num9\n\
    \    local num10\n    local num11\n    local num12\n    local num13\n    local\
    \ num14\n    local num15\n    local num16\n    local num17\n    local num18\n\
    \    local num19\n    local num20\n    local num21\n    local num22\n    local\
    \ num23\n    local num24\n    local num25\n    local num26\n    local num27\n\
    \    local num28\n    local num29\n    local num30\n    local num31\n    local\
    \ num32\n    local num33\n    local num34\n    local num35\n    local num36\n\
    \    local num37\n    local num38\n    local num39\n    local num40\n    local\
    \ num41\n    local num42\n    local num43\n    local num44\n    local num45\n\
    \    local num46\n    local num47\n    local num48\n    local num49\n    local\
    \ num50\n    local num51\n    local num52\n    local num53\n    local num54\n\
    \    local num55\n    local num56\n    local num57\n    local num58\n    local\
    \ num59\n    local num60\n    local num61\n    local num62\n    local num63\n\
    \    local num64\n    local num65\n    local num66\n    local num67\n    local\
    \ num68\n    local num69\n    local num70\n    local num71\n    local num72\n\
    \    local num73\n    local num74\n    local num75\n    local num76\n    local\
    \ num77\n    local num78\n    local num79\n    local num80\n    local num81\n\
    \    local num82\n    local num83\n    local num84\n    local num85\n    local\
    \ num86\n    local num87\n    local num88\n    local num89\n    local num90\n\
    \    local num91\n    local num92\n    local num93\n    local num94\n    local\
    \ num95\n    local num96\n    local num97\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq 3 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_length_index\n    local evens_length_index\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_length_index\n    local evens_length_index\n\
    \    local odds_sum_index\n    local evens_sum_index\n    local odds_length_index\n\
    \    local evens_length_index\n    local odds_sum_index\n    local evens_sum_index\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local number_index\n    local number_odd\n    local number_even\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(echo $i | sed 's/ //g')\n    do\n      if [[ $j -gt\
    \ $((${#i}-1)) ]]\n      then\n        sum=$((sum+$j))\n      fi\n    done\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n\n    # Loop through each number in the list\n\
    \    for ((i=0; i<${#numbers}; i++)); do\n        # Check if the current number\
    \ is even\n        if [[ ${numbers[i]} -eq 0 ]]; then\n            # If the current\
    \ number is even, add it to the sum\n            sum=$((sum+${numbers[i]}))\n\
    \        else\n            # If the current number is odd, increment the count\
    \ variable\n            count=$((count+1))\n            # If the count is even,\
    \ add it to the sum\n            if [[ ${count} -eq 0 ]]; then\n             \
    \   sum=$((sum+${numbers[i]}))\n            fi\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzbeby8_2.sh: line 24: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpzbeby8_2.sh: line 26: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local odd=0\n    local even=0\n  \
    \  local i\n    local j\n    local k\n    local count\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local number\n\
    \    local odd\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) == 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local even_index\n    local odd_index\n  \
    \  local number\n    local odds\n    local evens\n\n    numbers=$(echo $numbers\
    \ | sed 's/ /\\n/g')\n    numbers=$(echo $numbers | sed 's/^/1/g')\n    numbers=$(echo\
    \ $numbers | sed 's/$/\\n/g')\n\n    odds=$(echo $numbers | sed 's/^/1/g' | sed\
    \ 's/$/\\n/g')\n    evens=$(echo $numbers | sed 's/^/1/g' | sed 's/$/\\n/g' |\
    \ sed 's/ /\\n/g')\n\n    for ((i=0; i<${#odds}; i++)); do\n        odd=$(echo\
    \ $odds | sed 's/^/1/g' | sed 's/$/\\n/g' | sed 's/ /\\n/g' | sed 's/^/'$i'/'\
    \ | sed 's/$/\\n/g')\n        even=$(echo $evens | sed 's/^/'$i'/' | sed 's/$/\\\
    n/g')\n        even_index=$(echo $even | sed 's/^/1/g' | sed 's/$/\\n/g')\n  \
    \      odd_index=$(echo $odd | sed 's/^/1/g' | sed 's/$/\\n/g')\n        ((odd+even+even_index+odd_index))\n\
    \    done\n\n    sum=$((odd+even+even_index+odd_index))\n    echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphobx9zze.sh: line 38: ((: 01115


    08: value too great for base (error token is "08")

    /tmp/tmphobx9zze.sh: line 38: ((: 11115


    18


    17


    11


    1: syntax error in expression (error token is "18


    17


    11


    1")

    /tmp/tmphobx9zze.sh: line 38: ((: 21115


    28


    27


    21


    2: syntax error in expression (error token is "28


    27


    21


    2")

    /tmp/tmphobx9zze.sh: line 38: ((: 31115


    38


    37


    31


    3: syntax error in expression (error token is "38


    37


    31


    3")

    /tmp/tmphobx9zze.sh: line 38: ((: 41115


    48


    47


    41


    4: syntax error in expression (error token is "48


    47


    41


    4")

    /tmp/tmphobx9zze.sh: line 38: ((: 51115


    58


    57


    51


    5: syntax error in expression (error token is "58


    57


    51


    5")

    /tmp/tmphobx9zze.sh: line 38: ((: 61115


    68


    67


    61


    6: syntax error in expression (error token is "68


    67


    61


    6")

    /tmp/tmphobx9zze.sh: line 38: ((: 71115


    78


    77


    71


    7: syntax error in expression (error token is "78


    77


    71


    7")

    /tmp/tmphobx9zze.sh: line 38: ((: 81115


    88


    87


    81


    8: syntax error in expression (error token is "88


    87


    81


    8")

    /tmp/tmphobx9zze.sh: line 41: 81115


    88


    87


    81


    8: syntax error in expression (error token is "88


    87


    81


    8")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local sumEvens\n\
    \    local sumOdds\n    local oddsCount\n    local evensCount\n    local sumEvensCount\n\
    \    local sumOddsCount\n    local oddsSum\n    local evensSum\n    local sumEvensSum\n\
    \    local sumOddsSum\n    local oddsCountSum\n    local evensCountSum\n    local\
    \ sumEvensCountSum\n    local sumOddsCountSum\n    local oddsSumSum\n    local\
    \ evensSumSum\n    local sumEvensSumSum\n    local sumOddsSumSum\n    local oddsCountSumSum\n\
    \    local evensCountSumSum\n    local sumEvensCountSumSum\n    local sumOddsCountSumSum\n\
    \    local oddsSumSumSum\n    local evensSumSumSum\n    local sumEvensSumSumSum\n\
    \    local sumOddsSumSumSum\n    local oddsCountSumSumSum\n    local evensCountSumSumSum\n\
    \    local sumEvensCountSumSumSum\n    local sumOddsCountSumSumSum\n    local\
    \ oddsSumSumSumSum\n    local evensSumSumSumSum\n    local sumEvensSumSumSumSum\n\
    \    local sumOddsSumSumSumSum\n    local oddsCountSumSumSumSum\n    local evensCountSumSumSumSum\n\
    \    local sumEvensCountSumSumSumSum\n    local sumOddsCountSumSumSumSum\n   \
    \ local oddsSumSumSumSumSum\n    local evensSumSumSumSumSum\n    local sumEvensSumSumSumSum\n\
    \    local sumOddsSumSumSumSum\n    local oddsCountSumSumSumSumSum\n    local\
    \ evensCountSumSumSumSumSum\n    local sumEvensCountSumSumSumSum\n    local sumOddsCountSumSumSumSum\n\
    \    local oddsSumSumSumSumSum\n    local evensSumSumSumSumSum\n    local sumEvensSumSumSumSum\n\
    \    local sumOddsSumSumSumSum\n    local oddsCountSumSumSumSumSum\n    local\
    \ evensCountSumSumSumSumSum\n    local \n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local odds\n    local evens\n\
    \    local count2\n    local odds2\n    local evens2\n    local count3\n    local\
    \ odds3\n    local evens3\n    local count4\n    local odds4\n    local evens4\n\
    \    local count5\n    local odds5\n    local evens5\n    local count6\n    local\
    \ odds6\n    local evens6\n    local count7\n    local odds7\n    local evens7\n\
    \    local count8\n    local odds8\n    local evens8\n    local count9\n    local\
    \ odds9\n    local evens9\n    local count10\n    local odds10\n    local evens10\n\
    \    local count11\n    local odds11\n    local evens11\n    local count12\n \
    \   local odds12\n    local evens12\n    local count13\n    local odds13\n   \
    \ local evens13\n    local count14\n    local odds14\n    local evens14\n    local\
    \ count15\n    local odds15\n    local evens15\n    local count16\n    local odds16\n\
    \    local evens16\n    local count17\n    local odds17\n    local evens17\n \
    \   local count18\n    local odds18\n    local evens18\n    local count19\n  \
    \  local odds19\n    local evens19\n    local count20\n    local odds20\n    local\
    \ evens20\n    local count21\n    local odds21\n    local evens21\n    local count22\n\
    \    local odds22\n    local evens22\n    local count23\n    local odds23\n  \
    \  local evens23\n    local count24\n    local odds24\n    local evens24\n   \
    \ local count25\n    local odds25\n    local evens25\n    local count26\n    local\
    \ odds26\n    local evens26\n    local count27\n    local odds27\n    local evens27\n\
    \    local count28\n    local odds28\n    local evens28\n    local count29\n \
    \   local odds29\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local odd\n\
    \    local even\n    local count\n    local sum2\n    local sum3\n    local sum4\n\
    \    local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n\n    odds=$(echo\
    \ $numbers | sed 's/ /\\n/g' | grep -Eo \"^[0-9]+$\" | sort -n)\n    evens=$(echo\
    \ $numbers | sed 's/ /\\n/g' | grep -Eo \"^[0-9]+$\" | sort -n | sed 's/^/1\\\
    n/')\n    odds_index=$(echo $odds | awk '{print $1}')\n    evens_index=$(echo\
    \ $evens | awk '{print $1}')\n\n    for (( i=0; i<${#odds}; i++ )); do\n     \
    \   odds_value=$(echo $odds | awk \"NR==$i\")\n        evens_value=$(echo $evens\
    \ | awk \"NR==$i\")\n        if [[ $odds_value -eq $evens_value ]]; then\n   \
    \         sum=$((sum + $odds_value))\n        fi\n    done\n\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzmya9zwo.sh: line 36: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq $i ]]; then\n        sum=$((sum + ${numbers[$j]}))\n      fi\n    done\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt0z610sn.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpt0z610sn.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpt0z610sn.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmpt0z610sn.sh: line 20: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odds_length\n    local evens_length\n\
    \    local odds_sum\n    local evens_sum\n    local odd\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_count\n    local evens_count\n    local odds_sum\n\
    \    local evens_sum\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_count\n    local evens_count\n    local odds_sum\n\
    \    local evens_sum\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_count\n    local\
    \ evens_count\n    local odds_sum\n    local evens_sum\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_count\n    local evens_count\n    local odds_sum\n    local evens_sum\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_count\n    local evens_count\n    local odds_sum\n\
    \    local evens_sum\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_pos2\n    local evens_pos2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_pos4\n    local evens_pos4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_pos6\n    local evens_pos6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_pos8\n    local evens_pos8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_pos10\n    local evens_pos10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_pos12\n    local evens_pos12\n\
    \    local odds_pos13\n    local evens_pos13\n    local odds_pos14\n    local\
    \ evens_pos14\n    local odds_pos15\n    local evens_pos15\n    local odds_pos16\n\
    \    local evens_pos16\n    local odds_pos17\n    local evens_pos17\n    local\
    \ odds_pos18\n    local evens_pos18\n    local odds_pos19\n    local evens_pos19\n\
    \    local odds_pos20\n    local evens_pos20\n    local odds_pos21\n    local\
    \ evens_pos21\n    local odds_pos22\n    local evens_pos22\n    local odds_pos23\n\
    \    local evens_pos23\n    local odds_pos24\n    local evens_pos24\n    local\
    \ odds_pos25\n    local evens_pos25\n    local odds_pos26\n    local evens_pos26\n\
    \    local odds_pos27\n    local evens_pos27\n    local odds_pos28\n    local\
    \ evens_pos28\n    local odds_pos29\n    local evens_pos29\n    local odds_pos30\n\
    \    local evens_pos30\n    local odds_pos31\n    local evens_pos31\n    local\
    \ odds_pos32\n    local evens_pos32\n    local odds_pos33\n    local evens_pos33\n\
    \    local odds_pos34\n    local evens_\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 1 $((${#numbers} - $i + 1))) \n    do\n      if\
    \ [[ $((j % 2)) == 0 ]]\n      then\n        sum=$((sum + $numbers[j]))\n    \
    \  fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaf1_yl8s.sh: line 23: sum + 5 8 7 1[j]: syntax error in expression
    (error token is "8 7 1[j]")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 != 0 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    ((\
    \ i % 2 != 0 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local odds_length\n    local evens_length\n    local\
    \ odds_sum\n    local evens_sum\n\n    odds_length=${#numbers[@]}\n    evens_length=${#numbers[@]}\n\
    \    odds_sum=0\n    evens_sum=0\n\n    for (( i=0; i<${#numbers[@]}; i++ ));\
    \ do\n        odd=${numbers[$((i+1))]}\n        even=${numbers[$i]}\n        if\
    \ [[ $((i+1)) == $odds_length ]]; then\n            odds_sum=$((odds_sum+odd))\n\
    \        else\n            odds_sum=$((odds_sum+odd))\n            evens_sum=$((evens_sum+even))\n\
    \        fi\n    done\n\n    odds=${numbers[@]:0:$((odds_length-1))}\n    evens=${numbers[@]:$((odds_length)):$((evens_length-1))}\n\
    \n    for (( i=0; i<${#odds[@]}; i++ )); do\n        odds_index=${i}\n       \
    \ evens_index=${i}\n        for (( j=0; j<${#evens[@]}; j++ )); do\n         \
    \   if [[ $((j+1)) == $evens_length ]]; then\n                evens_sum=$((evens_sum+evens[$j]))\n\
    \            else\n                evens_sum=$((evens_sum+evens[$j]))\n      \
    \          odds_sum=$((odds_sum+odds[$odds_index]))\n            fi\n        done\n\
    \    done\n\n    echo $((odds_sum+evens_sum))\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local odds_pos\n\
    \    local evens_pos\n    local odds_neg\n    local evens_neg\n    local odds_pos2\n\
    \    local evens_pos2\n    local odds_neg2\n    local evens_neg2\n    local odds_pos3\n\
    \    local evens_pos3\n    local odds_neg3\n    local evens_neg3\n    local odds_pos4\n\
    \    local evens_pos4\n    local odds_neg4\n    local evens_neg4\n    local odds_pos5\n\
    \    local evens_pos5\n    local odds_neg5\n    local evens_neg5\n    local odds_pos6\n\
    \    local evens_pos6\n    local odds_neg6\n    local evens_neg6\n    local odds_pos7\n\
    \    local evens_pos7\n    local odds_neg7\n    local evens_neg7\n    local odds_pos8\n\
    \    local evens_pos8\n    local odds_neg8\n    local evens_neg8\n    local odds_pos9\n\
    \    local evens_pos9\n    local odds_neg9\n    local evens_neg9\n    local odds_pos10\n\
    \    local evens_pos10\n    local odds_neg10\n    local evens_neg10\n    local\
    \ odds_pos11\n    local evens_pos11\n    local odds_neg11\n    local evens_neg11\n\
    \    local odds_pos12\n    local evens_pos12\n    local odds_neg12\n    local\
    \ evens_neg12\n    local odds_pos13\n    local evens_pos13\n    local odds_neg13\n\
    \    local evens_neg13\n    local odds_pos14\n    local evens_pos14\n    local\
    \ odds_neg14\n    local evens_neg14\n    local odds_pos15\n    local evens_pos15\n\
    \    local odds_neg15\n    local evens_neg15\n    local odds_pos16\n    local\
    \ evens_pos16\n    local odds_neg16\n    local evens_neg16\n    local odds_pos17\n\
    \    local evens_pos17\n    local odds_neg17\n    local evens_neg17\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_value_index\n    local evens_value_index\n    local\
    \ odds_value_index\n    local odds_value_index\n    local odds_value_index\n \
    \   local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local \n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq 3 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( sum + i ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $((i %\
    \ 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers; do\n    if\
    \ [ $i -eq 3 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $i -eq $((i%2)) ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ local j\n    for j in $(seq 0 $((${#numbers} - 1))); do\n      if [[ ${numbers[$j]}\
    \ -eq ${numbers[$((j + 1))]} ]]; then\n        sum=$((sum + ${numbers[$j]}))\n\
    \      fi\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsf3cg6uy.sh: line 20: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpsf3cg6uy.sh: line 21: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local num\n\
    \    local nums\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_odds_even\n    local nums_odds_odd\n   \
    \ local nums_evens_even\n    local nums_evens_odd\n    local nums_odds_evens_even\n\
    \    local nums_odds_odds_even\n    local nums_evens_evens_odd\n    local nums_evens_odds_even\n\
    \    local nums_odds_evens_evens_odd\n    local nums_evens_odds_evens_odd\n  \
    \  local nums_odds_evens_evens_odds_even\n    local nums_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odd\n    local nums_evens_odds_evens_odds_evens_odd\n\
    \    local nums_odds_evens_evens_odds_evens_odds_even\n    local nums_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odd\n    local nums_evens_odds_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_even\n    local\
    \ nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [ $i -eq\
    \ $(( ${i} % 2 )) ]\n    then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    local j=$((i+1))\n\
    \    if [ $((j%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $numbers\n  do\n   \
    \ if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660041435
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers\n  do\n    if [[ $i -eq\
    \ 0 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 1 ]]\n    then\n  \
    \    sum=$((sum+i))\n    elif [[ $i -eq 2 ]]\n    then\n      sum=$((sum+i))\n\
    \    elif [[ $i -eq 3 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 4\
    \ ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 5 ]]\n    then\n    \
    \  sum=$((sum+i))\n    elif [[ $i -eq 6 ]]\n    then\n      sum=$((sum+i))\n \
    \   elif [[ $i -eq 7 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 8\
    \ ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 9 ]]\n    then\n    \
    \  sum=$((sum+i))\n    elif [[ $i -eq 10 ]]\n    then\n      sum=$((sum+i))\n\
    \    elif [[ $i -eq 11 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq\
    \ 12 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 13 ]]\n    then\n\
    \      sum=$((sum+i))\n    elif [[ $i -eq 14 ]]\n    then\n      sum=$((sum+i))\n\
    \    elif [[ $i -eq 15 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq\
    \ 16 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 17 ]]\n    then\n\
    \      sum=$((sum+i))\n    elif [[ $i -eq 18 ]]\n    then\n      sum=$((sum+i))\n\
    \    elif [[ $i -eq 19 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq\
    \ 20 ]]\n    then\n      sum=$((sum+i))\n    elif [[ $i -eq 21 ]]\n    then\n\
    \      sum=$((sum+i))\n    elif [[ $i -eq 22 ]]\n    then\n      sum=$((sum+i))\n\
    \    elif [[ $i -eq 23 ]]\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp27std6f9.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmp27std6f9.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660041435

language: sh
name: HumanEval_20_find_closest_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ smallest_value\n    local largest_value\n\n    smallest=$(( ${numbers[0]} ))\n\
    \    largest=$(( ${numbers[-1]} ))\n    smallest_index=0\n    largest_index=$((\
    \ ${#numbers} - 1 ))\n\n    while [ $smallest_index -lt $largest_index ]; do\n\
    \        smallest_value=$(( ${numbers[$smallest_index]} ))\n        largest_value=$((\
    \ ${numbers[$largest_index]} ))\n        if [ $smallest_value -lt $largest ];\
    \ then\n            largest=$smallest_value\n            largest_index=$smallest_index\n\
    \        elif [ $smallest_value -gt $largest ]; then\n            smallest=$smallest_value\n\
    \            smallest_index=$largest_index\n        fi\n    done\n    echo \"\
    $smallest $largest\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5wwgmxwz.sh: line 19: 1.0 2.0 3.9 4.0 5.0 2.2 : syntax error: invalid
    arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ")

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local element\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \    local min_index\n    local max_index\n    local min_index\n    local max_index\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local element\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    \    local tmp\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local result\n\
    \n    smallest=$2\n    largest=$3\n\n    # Sort elements by magnitude\n    IFS=$'\\\
    n' read -r -a elements <<< \"$elements\"\n    sort -n <<< \"$elements\"\n\n  \
    \  # Find smallest and largest\n    for ((i=0; i<${#elements[@]}; i++)); do\n\
    \        element=${elements[i]}\n        if [[ $element == \"$smallest\" ]]; then\n\
    \            smallest=$element\n        elif [[ $element == \"$largest\" ]]; then\n\
    \            largest=$element\n        fi\n    done\n\n    # Find closest to smallest\
    \ and largest\n    for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[i]}\n\
    \        if [[ $element == \"$smallest\" ]]; then\n            result=( $element\
    \ )\n        elif [[ $element == \"$largest\" ]]; then\n            result=( $element\
    \ )\n        elif [[ $element > \"$smallest\" ]]; then\n            result=( $element\
    \ )\n        elif [[ $element < \"$largest\" ]]; then\n            result=( $element\
    \ )\n        fi\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local elements=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local elements_count=\n    local elements_count=\n\
    \    local elements_count=\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_number_index=0\n    local largest_number_index=0\n\
    \    local smallest_number_string=\"\"\n    local largest_number_string=\"\"\n\
    \n    while read -r number; do\n        smallest_number_string=\"$smallest_number_string\
    \ \\\"$number\\\"\"\n        largest_number_string=\"$largest_number_string \\\
    \"$number\\\"\"\n    done <<< \"$numbers\"\n\n    smallest_number_index=$(( ${#smallest_number_string}\
    \ - 1 ))\n    largest_number_index=$(( ${#largest_number_string} - 1 ))\n\n  \
    \  smallest_number_string=${smallest_number_string::$smallest_number_index}\n\
    \    largest_number_string=${largest_number_string::$largest_number_index}\n\n\
    \    smallest_number=${smallest_number_string::$smallest_number_index}\n    largest_number=${largest_number_string::$largest_number_index}\n\
    \n    smallest_number_index=$(( ${#smallest_number_string} - 1 ))\n    largest_number_index=$((\
    \ ${#largest_number_string} - 1 ))\n\n    smallest_number_string=${smallest_number_string::$smallest_number_index}\n\
    \    largest_number_string=${largest_number_string::$largest_number_index}\n\n\
    \    smallest_number=${smallest_number_string::$smallest_number_index}\n    largest_number=${largest_number_string::$largest_number_index}\n\
    \n    echo \"$smallest_number\"\n    echo \"$largest_number\"\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local closest\n    local smallest\n    local largest\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=0\n    local largest_index=0\n \
    \   local element\n    local elements_array=( $elements )\n    local index\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    local element\n \
    \   local element\n    local element\n    local element\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local output\n    local number\n\
    \    local number1\n    local number2\n    local number3\n    local number4\n\
    \    local number5\n    local number6\n    local number7\n    local number8\n\
    \    local number9\n    local number10\n    local number11\n    local number12\n\
    \    local number13\n    local number14\n    local number15\n    local number16\n\
    \    local number17\n    local number18\n    local number19\n    local number20\n\
    \    local number21\n    local number22\n    local number23\n    local number24\n\
    \    local number25\n    local number26\n    local number27\n    local number28\n\
    \    local number29\n    local number30\n    local number31\n    local number32\n\
    \    local number33\n    local number34\n    local number35\n    local number36\n\
    \    local number37\n    local number38\n    local number39\n    local number40\n\
    \    local number41\n    local number42\n    local number43\n    local number44\n\
    \    local number45\n    local number46\n    local number47\n    local number48\n\
    \    local number49\n    local number50\n    local number51\n    local number52\n\
    \    local number53\n    local number54\n    local number55\n    local number56\n\
    \    local number57\n    local number58\n    local number59\n    local number60\n\
    \    local number61\n    local number62\n    local number63\n    local number64\n\
    \    local number65\n    local number66\n    local number67\n    local number68\n\
    \    local number69\n    local number70\n    local number71\n    local number72\n\
    \    local number73\n    local number74\n    local number75\n    local number76\n\
    \    local number77\n    local number78\n    local number79\n    local number80\n\
    \    local number81\n    local number82\n    local number83\n    local number84\n\
    \    local number85\n    local number86\n    local number87\n    local number88\n\
    \    local number89\n    local number90\n    local number91\n    local number92\n\
    \    local number93\n    local number94\n    local number95\n    local number96\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array=( $elements )\n    local min_index\n    local max_index\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local elements_array\n    local\
    \ elements_array_index\n    local elements_array_length\n    local elements_array_element\n\
    \    local elements_array_element_index\n    local elements_array_element_length\n\
    \    local elements_array_element_element_index\n    local elements_array_element_element_length\n\
    \    local elements_array_element_element_element_index\n    local elements_array_element_element_element_length\n\
    \    local elements_array_element_element_element_element_index\n    local elements_array_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_index\n    local\
    \ elements_array_element_element_element_element_element_element_length\n    local\
    \ elements_array_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_element_element_length\n\
    \    local elements_array_element_element_element_element_element_element_element_element_element_element_element_element_element_index\n\
    \    local elements_array_element_element_element_element_element_element_element_element_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ i\n    local j\n    local result\n\n    smallest=$(bc <<< \"$numbers[0]\")\n\
    \    largest=$(bc <<< \"$numbers[-1]\")\n    smallest_index=0\n    largest_index=$((${#numbers}-1))\n\
    \    for (( i=0; i<${#numbers}; i++ )); do\n        local number=$(bc <<< \"$numbers[i]\"\
    )\n        if (( number < smallest )); then\n            smallest=$number\n  \
    \          smallest_index=$i\n        fi\n        if (( number > largest )); then\n\
    \            largest=$number\n            largest_index=$i\n        fi\n    done\n\
    \    result=()\n    for (( j=0; j<${#numbers}; j++ )); do\n        if (( smallest_index\
    \ == j )); then\n            result+=(\"$(bc <<< \"$numbers[$j]\")\")\n      \
    \  elif (( largest_index == j )); then\n            result+=(\"$(bc <<< \"$numbers[$j]\"\
    )\")\n        else\n            result+=(\"$(bc <<< \"$numbers[$j]\")\")\n   \
    \         result+=(\"$(bc <<< \"$numbers[$j+1]\")\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standar'
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local result\n    local i\n    local\
    \ j\n    local elements\n    local element\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_string\n    local element_string_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_index2\n    local element_string_length_index3\n    local\
    \ element_string_length_index4\n    local element_string_length_index5\n    local\
    \ element_string_length_index6\n    local element_string_length_index7\n    local\
    \ element_string_length_index8\n    local element_string_length_index9\n    local\
    \ element_string_length_index10\n    local element_string_length_index11\n   \
    \ local element_string_length_index12\n    local element_string_length_index13\n\
    \    local element_string_length_index14\n    local element_string_length_index15\n\
    \    local element_string_length_index16\n    local element_string_length_index17\n\
    \    local element_string_length_index18\n    local element_string_length_index19\n\
    \    local element_string_length_index20\n    local element_string_length_index21\n\
    \    local element_string_length_index22\n    local element_string_length_index23\n\
    \    local element_string_length_index24\n    local element_string_length_index25\n\
    \    local element_string_length_index26\n    local element_string_length_index27\n\
    \    local element_string_length_index28\n    local element_string_length_index29\n\
    \    local element_string_length_index30\n    local element_string_length_index31\n\
    \    local element_string_length_index32\n    local element_string_length_index33\n\
    \    local element_string_length_index34\n    local element_string_length_index35\n\
    \    local element_string_length_index36\n    local element_string_length_index37\n\
    \    local element_string_length_index38\n    local element_string_length_index39\n\
    \    local element_string_length_index40\n    local element_string_length_index41\n\
    \    local element_string_length_index42\n    local element_string_length_index43\n\
    \    local element_string_length_index44\n    local element_string_length_index45\n\
    \    local element_string_length_index46\n    local element_string_length_index47\n\
    \    local element_string_length_index48\n    local element_string_length_index49\n\
    \    local element_string_length_index50\n    local element_string_length_index51\n\
    \    local element_string_length_index52\n    local element_string_length_index53\n\
    \    local element_string_length_index54\n    local element_string_length_index55\n\
    \    local element_string_length_index56\n    local element_string_length_index57\n\
    \    local element_\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest\n\
    \    local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local result\n\
    \    local elements_string\n    local elements_string2\n    local elements_string3\n\
    \    local elements_string4\n    local elements_string5\n    local elements_string6\n\
    \    local elements_string7\n    local elements_string8\n    local elements_string9\n\
    \    local elements_string10\n    local elements_string11\n    local elements_string12\n\
    \    local elements_string13\n    local elements_string14\n    local elements_string15\n\
    \    local elements_string16\n    local elements_string17\n    local elements_string18\n\
    \    local elements_string19\n    local elements_string20\n    local elements_string21\n\
    \    local elements_string22\n    local elements_string23\n    local elements_string24\n\
    \    local elements_string25\n    local elements_string26\n    local elements_string27\n\
    \    local elements_string28\n    local elements_string29\n    local elements_string30\n\
    \    local elements_string31\n    local elements_string32\n    local elements_string33\n\
    \    local elements_string34\n    local elements_string35\n    local elements_string36\n\
    \    local elements_string37\n    local elements_string38\n    local elements_string39\n\
    \    local elements_string40\n    local elements_string41\n    local elements_string42\n\
    \    local elements_string43\n    local elements_string44\n    local elements_string45\n\
    \    local elements_string46\n    local elements_string47\n    local elements_string48\n\
    \    local elements_string49\n    local elements_string50\n    local elements_string51\n\
    \    local elements_string52\n    local elements_string53\n    local elements_string54\n\
    \    local elements_string55\n    local elements_string56\n    local elements_string57\n\
    \    local elements_string58\n    local elements_string59\n    local elements_string60\n\
    \    local elements_string61\n    local elements_string62\n    local elements_string63\n\
    \    local elements_string64\n    local elements_string65\n    local elements_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    local\
    \ smallest_element_distance=${smallest_element}\n    local largest_element_distance=${largest_element}\n\
    \    local smallest_element_string=${smallest_element}\n    local largest_element_string=${largest_element}\n\
    \    local smallest_element_string_index=0\n    local largest_element_string_index=0\n\
    \    local smallest_element_string_distance=${smallest_element_string}\n    local\
    \ largest_element_string_distance=${largest_element_string}\n    local smallest_element_string_array=(${smallest_element_string//\\\
    \"/})\n    local largest_element_string_array=(${largest_element_string//\\\"\
    /})\n    local smallest_element_string_array_index=0\n    local largest_element_string_array_index=0\n\
    \    local smallest_element_string_array_distance=${smallest_element_string_array[0]}\n\
    \    local largest_element_string_array_distance=${largest_element_string_array[0]}\n\
    \    local smallest_element_string_array_string=${smallest_element_string_array[0]}\n\
    \    local largest_element_string_array_string=${largest_element_string_array[0]}\n\
    \    local smallest_element_string_array_string_index=0\n    local largest_element_string_array_string_index=0\n\
    \    local smallest_element_string_array_string_distance=${smallest_element_string_array_string}\n\
    \    local largest_element_string_array_string_distance=${largest_element_string_array_string}\n\
    \    local smallest_element_string_array_string_array=(${smallest_element_string_array_string//\\\
    \"/})\n    local largest_element_string_array_string_array=(${largest_element_string_array_string//\\\
    \"/})\n    local smallest_element_string_array_string_array_index=0\n    local\
    \ largest_element_string_array_string_array_index=0\n    local smallest_element_string_array_string_array_distance=${smallest_element_string_array_string_array[0]}\n\
    \    local largest_element_string_array_string_array_distance=${largest_element_string_array_string_array[0]}\n\
    \    local smallest_element_string_array_string_array_string=${smallest_element_string_array_string_array[0]}\n\
    \    local largest_element_string_array_string_array_string=${largest_element_string_array_string_array[0]}\n\
    \    local smallest_element_string_array_string_array_string_index=0\n    local\
    \ largest_element_string_array_string_array_string_index=0\n    local smallest_element_string_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n\n    smallest_element_index=0\n\
    \    largest_element_index=0\n    smallest_element_value=$(echo $elements | awk\
    \ '{print $1}' | sort -n | head -1)\n    largest_element_value=$(echo $elements\
    \ | awk '{print $1}' | sort -n | tail -1)\n\n    for element_index in $(seq 0\
    \ $((${#elements} - 1))); do\n        element=$(echo $elements | awk \"{print\
    \ \\$${element_index}}\"\n        element_value=$(echo $element | awk '{print\
    \ $1}')\n        if [ \"$element_value\" = \"$smallest_element_value\" ]; then\n\
    \            smallest_element_index=$element_index\n            smallest_element_value=$element_value\n\
    \        fi\n        if [ \"$element_value\" = \"$largest_element_value\" ]; then\n\
    \            largest_element_index=$element_index\n            largest_element_value=$element_value\n\
    \        fi\n    done\n\n    smallest_element=$(echo $elements | awk \"{print\
    \ \\$${smallest_element_index}}\"\n    largest_element=$(echo $elements | awk\
    \ \"{print \\$${largest_element_index}}\"\n\n    echo $smallest_element\n    echo\
    \ $largest_element\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzk2jdfwd.sh: line 41: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzk2jdfwd.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_distance=0\n    local second_smallest_element_distance=0\n\
    \    local smallest_element_string=$(echo \"$smallest_element\" | sed 's/ /\"\
    ,\"/g')\n    local second_smallest_element_string=$(echo \"$second_smallest_element\"\
    \ | sed 's/ /\",\"/g')\n    local smallest_element_string_array=($smallest_element_string)\n\
    \    local second_smallest_element_string_array=($second_smallest_element_string)\n\
    \    local smallest_element_string_array_index=0\n    local second_smallest_element_string_array_index=1\n\
    \    local smallest_element_string_distance=0\n    local second_smallest_element_string_distance=0\n\
    \    local smallest_element_float=$(echo \"$smallest_element\" | sed 's/ /\",\"\
    /g' | sed 's/\"//g')\n    local second_smallest_element_float=$(echo \"$second_smallest_element\"\
    \ | sed 's/ /\",\"/g' | sed 's/\"//g')\n    local smallest_element_float_array=($smallest_element_float)\n\
    \    local second_smallest_element_float_array=($second_smallest_element_float)\n\
    \    local smallest_element_float_array_index=0\n    local second_smallest_element_float_array_index=1\n\
    \    local smallest_element_float_distance=0\n    local second_smallest_element_float_distance=0\n\
    \    local smallest_element_int=$(echo \"$smallest_element\" | sed 's/ /\",\"\
    /g' | sed 's/\"//g' | sed 's/ //g')\n    local second_smallest_element_int=$(echo\
    \ \"$second_smallest_element\" | sed 's/ /\",\"/g' | sed 's/\"//g' | sed 's/ //g')\n\
    \    local smallest_element_int_array=($smallest_element_int)\n    local second_smallest_element_int_array=($second_smallest_element_int)\n\
    \    local smallest_element_int_array_index=0\n    local second_smallest_element_int_array_index=1\n\
    \    local smallest_element_int_distance=0\n    local second_smallest_element_int_distance=0\n\
    \    local smallest_element_bool=$(echo \"$smallest_element\" | sed 's/ /\",\"\
    /g' | sed 's/\"//g' | sed 's/ //g' | sed 's/ //g')\n    local second_smalle\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_value\n    local\
    \ element_value_as_float\n    local element_value_as_int\n    local element_value_as_string\n\
    \    local element_value_as_string_index\n    local element_value_as_string_length\n\
    \    local element_value_as_string_length_index\n    local element_value_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_float\n    local element_value_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_index\n    local element_value_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_int\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_float\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string\n    local\
    \ element_value_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_int\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_float\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_index\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length\n\
    \    local element_value_as_string_length_index_as_string_length_index_as_string_length_index_as_string_length_index_as_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element=$4\n    local largest_element=$5\n\
    \    local smallest_index=$6\n    local largest_index=$7\n    local smallest_diff=$8\n\
    \    local largest_diff=$9\n    local smallest_diff_index=$10\n    local largest_diff_index=$11\n\
    \    local smallest_diff_index=$12\n    local largest_diff_index=$13\n    local\
    \ smallest_diff_index=$14\n    local largest_diff_index=$15\n    local smallest_diff_index=$16\n\
    \    local largest_diff_index=$17\n    local smallest_diff_index=$18\n    local\
    \ largest_diff_index=$19\n    local smallest_diff_index=$20\n    local largest_diff_index=$21\n\
    \    local smallest_diff_index=$22\n    local largest_diff_index=$23\n    local\
    \ smallest_diff_index=$24\n    local largest_diff_index=$25\n    local smallest_diff_index=$26\n\
    \    local largest_diff_index=$27\n    local smallest_diff_index=$28\n    local\
    \ largest_diff_index=$29\n    local smallest_diff_index=$30\n    local largest_diff_index=$31\n\
    \    local smallest_diff_index=$32\n    local largest_diff_index=$33\n    local\
    \ smallest_diff_index=$34\n    local largest_diff_index=$35\n    local smallest_diff_index=$36\n\
    \    local largest_diff_index=$37\n    local smallest_diff_index=$38\n    local\
    \ largest_diff_index=$39\n    local smallest_diff_index=$40\n    local largest_diff_index=$41\n\
    \    local smallest_diff_index=$42\n    local largest_diff_index=$43\n    local\
    \ smallest_diff_index=$44\n    local largest_diff_index=$45\n    local smallest_diff_index=$46\n\
    \    local largest_diff_index=$47\n    local smallest_diff_index=$48\n    local\
    \ largest_diff_index=$49\n    local smallest_diff_index=$50\n    local largest_diff_index=$51\n\
    \    local smallest_diff_index=$52\n    local largest_diff_index=$53\n    local\
    \ smallest_diff_index=$54\n    local largest_diff_index=$55\n    local smallest_diff_index=$56\n\
    \    local largest_diff_index=$57\n    local smallest_diff_index=$58\n    \n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local output\n\n    smallest=$(echo $numbers | awk '{print\
    \ $1}' | sort -n | head -1)\n    largest=$(echo $numbers | awk '{print $1}' |\
    \ sort -n | tail -1)\n    output=$(echo $numbers | awk '{print $1}' | sort -n\
    \ | awk '{print $2}' | sort -n | head -1)\n    output=$(echo $numbers | awk '{print\
    \ $1}' | sort -n | awk '{print $2}' | sort -n | tail -1)\n    output=$(echo $numbers\
    \ | awk '{print $1}' | sort -n | awk '{print $2}' | sort -n | awk '{print $3}'\
    \ | sort -n | head -1)\n    output=$(echo $numbers | awk '{print $1}' | sort -n\
    \ | awk '{print $2}' | sort -n | awk '{print $3}' | sort -n | tail -1)\n    output=$(echo\
    \ $numbers | awk '{print $1}' | sort -n | awk '{print $2}' | sort -n | awk '{print\
    \ $3}' | sort -n | awk '{print $4}' | sort -n | head -1)\n    output=$(echo $numbers\
    \ | awk '{print $1}' | sort -n | awk '{print $2}' | sort -n | awk '{print $3}'\
    \ | sort -n | awk '{print $4}' | sort -n | tail -1)\n    output=$(echo $numbers\
    \ | awk '{print $1}' | sort -n | awk '{print $2}' | sort -n | awk '{print $3}'\
    \ | sort -n | awk '{print $4}' | sort -n | awk '{print $5}' | sort -n | head -1)\n\
    \    output=$(echo $numbers | awk '{print $1}' | sort -n | awk '{print $2}' |\
    \ sort -n | awk '{print $3}' | sort -n | awk '{print $4}' | sort -n | awk '{print\
    \ $5}' | sort -n | tail -1)\n    output=$(echo $numbers | awk '{print $1}' | sort\
    \ -n | awk '{print $2}' | sort -n | awk '{print $3}' | sort -n | awk '{print $4}'\
    \ | sort -n | awk '{print $5}' | sort -n | awk '{print $6}' | sort -n | head -1)\n\
    \    output=$(echo $numbers | awk '{print $1}' | sort -n | awk '{print $2}' |\
    \ sort -n | awk '{print $3}' | \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_21oisug.sh: line 27: unexpected EOF while looking for matching
    `)''

    /tmp/tmp_21oisug.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local output\n\
    \n    smallest=$2\n    largest=$3\n    output=()\n    for element in $elements;\
    \ do\n        i=$(( ${#elements} - 1 ))\n        j=$(( ${#elements} - 1 ))\n \
    \       while (( ${i} > 0 )); do\n            if [[ ${elements[$i]} -gt ${elements[$j]}\
    \ ]]; then\n                j=$i\n            else\n                i=$(( ${i}\
    \ - 1 ))\n            fi\n        done\n        output+=(\"\\\"${elements[$i]}\\\
    \"\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_element\n    local largest_element\n \
    \   local i\n    local j\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local elements\n    local smallest_element\n    local\
    \ largest_element\n    local smallest_element\n    local largest_element\n   \
    \ local element\n    local elements\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local elements\n    local smallest_element\n    local largest_element\n   \
    \ local smallest_element\n    local largest_element\n    local element\n    local\
    \ elements\n    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local elements\n    local smallest_element\n    local\
    \ largest_element\n    local smallest_element\n    local largest_element\n   \
    \ local element\n    local elements\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local elements\n    local smallest_element\n    local largest_element\n   \
    \ local smallest_element\n    local largest_element\n    local element\n    local\
    \ elements\n    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local elements\n    local smallest_element\n    local\
    \ largest_element\n    local smallest_element\n    local largest_element\n   \
    \ local element\n    local elements\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local elements\n    local smallest_element\n    local largest_element\n   \
    \ local smallest_element\n    local largest_element\n    local element\n    local\
    \ elements\n    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local diff\n    local diff1\n    local diff2\n   \
    \ local diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local element2\n    local element3\n    local element4\n    local element5\n\
    \    local element6\n    local element7\n    local element8\n    local element9\n\
    \    local element10\n    local element11\n    local element12\n    local element13\n\
    \    local element14\n    local element15\n    local element16\n    local element17\n\
    \    local element18\n    local element19\n    local element20\n    local element21\n\
    \    local element22\n    local element23\n    local element24\n    local element25\n\
    \    local element26\n    local element27\n    local element28\n    local element29\n\
    \    local element30\n    local element31\n    local element32\n    local element33\n\
    \    local element34\n    local element35\n    local element36\n    local element37\n\
    \    local element38\n    local element39\n    local element40\n    local element41\n\
    \    local element42\n    local element43\n    local element44\n    local element45\n\
    \    local element46\n    local element47\n    local element48\n    local element49\n\
    \    local element50\n    local element51\n    local element52\n    local element53\n\
    \    local element54\n    local element55\n    local element56\n    local element57\n\
    \    local element58\n    local element59\n    local element60\n    local element61\n\
    \    local element62\n    local element63\n    local element64\n    local element65\n\
    \    local element66\n    local element67\n    local element68\n    local element69\n\
    \    local element70\n    local element71\n    local element72\n    local element73\n\
    \    local element74\n    local element75\n    local element76\n    local element77\n\
    \    local element78\n    local element79\n    local element80\n    local element81\n\
    \    local element82\n    local element83\n    local element84\n    local element85\n\
    \    local element86\n    local element87\n    local element88\n    local element89\n\
    \    local element90\n    local element91\n    local element92\n    local element93\n\
    \    local element94\n    local element95\n    local element96\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local l=\n    local m\n    local n\n    local x\n    local y\n    local\
    \ z\n    local closest\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local smallest_element_index\n    local smallest_element_value\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value_index\n    local smallest_element_value_index\n    local\
    \ smallest_element_value\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array=( $elements )\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array=( $elements )\n    local elements_array_length=${#elements_array[@]}\n\
    \    local elements_array_element\n    local elements_array_element_length\n \
    \   local elements_array_element_index\n    local elements_array_element_value\n\
    \    local elements_array_element_value_length\n    local elements_array_element_value_length_index\n\
    \    local elements_array_element_value_length_value\n    local elements_array_element_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_index\n    local elements_array_element_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length\n   \
    \ local elements_array_element_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_length_index\n\
    \    local elements_array_element_value_length_value_length_value_length_value_length_value_length_value_length_value_length_value_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local largest\n    local elements\n\
    \    local smallest\n    local largest\n    local elements\n    local smallest\n\
    \    local largest\n    local elements\n    local smallest\n    local largest\n\
    \    local elements\n    local smallest\n    local lar\n}\n\ncandidate() {\n \
    \   find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_string\n    local element_string_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local element\n    local smallest_element\n    local\
    \ largest_element\n    local elements_array\n    local element_array\n    local\
    \ element\n    local i\n    local j\n    local k\n    local element\n    local\
    \ element_array\n    local element\n    local elements_array\n    local element_array\n\
    \    local element\n    local elements_array\n    local element_array\n    local\
    \ element\n    local elements_array\n    local element_array\n    local element\n\
    \    local elements_array\n    local element_array\n    local element\n    local\
    \ elements_array\n    local element_array\n    local element\n    local elements_array\n\
    \    local element_array\n    local element\n    local elements_array\n    local\
    \ element_array\n    local element\n    local elements_array\n    local element_array\n\
    \    local element\n    local elements_array\n    local element_array\n    local\
    \ element\n    local elements_array\n    local element_array\n    local element\n\
    \    local elements_array\n    local element_array\n    local element\n    local\
    \ elements_array\n    local element_array\n    local element\n    local elements_array\n\
    \    local element_array\n    local element\n    local elements_array\n    local\
    \ element_array\n    local element\n    local elements_array\n    local element_array\n\
    \    local element\n    local elements_array\n    local element_array\n    local\
    \ element\n    local elements_array\n    local element_array\n    local element\n\
    \    local elements_array\n    local element_array\n    local element\n    local\
    \ elements_array\n    local element_array\n    local element\n    local elements_array\n\
    \    local element_array\n    local element\n    local elements_array\n    local\
    \ element_array\n    local element\n    local elements_array\n    local element_array\n\
    \    local element\n    local elements_array\n    local element_array\n    local\
    \ element\n    local elements_array\n    local element_array\n    local element\n\
    \    local elements_array\n    local element_array\n    local element\n    local\
    \ elements_array\n    local element_array\n    local element\n    local elements_array\n\
    \    local element_array\n    local element\n    local elements_array\n    local\
    \ element_array\n    local element\n    local elements_array\n    local element_array\n\
    \    local element\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element=$4\n    local largest_element=$5\n\
    \    local smallest_distance=$6\n    local largest_distance=$7\n\n    local smallest_elements=()\n\
    \    local largest_elements=()\n\n    local smallest_distances=()\n    local largest_distances=()\n\
    \n    local smallest_elements_string=\"\"\n    local largest_elements_string=\"\
    \"\n\n    local smallest_distances_string=\"\"\n    local largest_distances_string=\"\
    \"\n\n    local smallest_elements_number=\"\"\n    local largest_elements_number=\"\
    \"\n\n    local smallest_distances_number=\"\"\n    local largest_distances_number=\"\
    \"\n\n    local smallest_elements_string2=\"\"\n    local largest_elements_string2=\"\
    \"\n\n    local smallest_distances_string2=\"\"\n    local largest_distances_string2=\"\
    \"\n\n    local smallest_elements_number2=\"\"\n    local largest_elements_number2=\"\
    \"\n\n    local smallest_distances_number2=\"\"\n    local largest_distances_number2=\"\
    \"\n\n    local smallest_elements_string3=\"\"\n    local largest_elements_string3=\"\
    \"\n\n    local smallest_distances_string3=\"\"\n    local largest_distances_string3=\"\
    \"\n\n    local smallest_elements_number3=\"\"\n    local largest_elements_number3=\"\
    \"\n\n    local smallest_distances_number3=\"\"\n    local largest_distances_number3=\"\
    \"\n\n    local smallest_elements_string4=\"\"\n    local largest_elements_string4=\"\
    \"\n\n    local smallest_distances_string4=\"\"\n    local largest_distances_string4=\"\
    \"\n\n    local smallest_elements_number4=\"\"\n    local largest_elements_number4=\"\
    \"\n\n    local smallest_distances_number4=\"\"\n    local largest_distances_number4=\"\
    \"\n\n    local smallest_elements_string5=\"\"\n    local largest_elements_string5=\"\
    \"\n\n    local smallest_distances_string5=\"\"\n    local largest_distances_string5=\"\
    \"\n\n    local smallest_elements_number5=\"\"\n    local largest_elements_number5=\"\
    \"\n\n    local smallest_distances_number5=\"\"\n    local largest_distances_number5=\"\
    \"\n\n    local smallest_elements_string6=\"\"\n    local largest_elements_string6=\"\
    \"\n\n    local smallest_distances_string6=\"\"\n    local largest_\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local i\n    local j\n    local k\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_index2\n    local elements_array_index3\n    local elements_array_index4\n\
    \    local elements_array_index5\n    local elements_array_index6\n    local elements_array_index7\n\
    \    local elements_array_index8\n    local elements_array_index9\n    local elements_array_index10\n\
    \    local elements_array_index11\n    local elements_array_index12\n    local\
    \ elements_array_index13\n    local elements_array_index14\n    local elements_array_index15\n\
    \    local elements_array_index16\n    local elements_array_index17\n    local\
    \ elements_array_index18\n    local elements_array_index19\n    local elements_array_index20\n\
    \    local elements_array_index21\n    local elements_array_index22\n    local\
    \ elements_array_index23\n    local elements_array_index24\n    local elements_array_index25\n\
    \    local elements_array_index26\n    local elements_array_index27\n    local\
    \ elements_array_index28\n    local elements_array_index29\n    local elements_array_index30\n\
    \    local elements_array_index31\n    local elements_array_index32\n    local\
    \ elements_array_index33\n    local elements_array_index34\n    local elements_array_index35\n\
    \    local elements_array_index36\n    local elements_array_index37\n    local\
    \ elements_array_index38\n    local elements_array_index39\n    local elements_array_index40\n\
    \    local elements_array_index41\n    local elements_array_index42\n    local\
    \ elements_array_index43\n    local elements_array_index44\n    local elements_array_index45\n\
    \    local elements_array_index46\n    local elements_array_index47\n    local\
    \ elements_array_index48\n    local elements_array_index49\n    local elements_array_index50\n\
    \    local elements_array_index51\n    local elements_array_index52\n    local\
    \ elements_array_index53\n    local elements_array_index54\n    local elements_array_index55\n\
    \    local elements_array_index56\n    local elements_array_index57\n    local\
    \ elements_array_index58\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=0\n    local largest_index=0\n \
    \   local number\n    local index\n    local result\n    local i\n\n    for ((\
    \ i = 0; i < ${#numbers}; i++ )); do\n        number=${numbers[i]}\n        if\
    \ [ -z \"$smallest\" ]; then\n            smallest=$number\n            smallest_index=$i\n\
    \        elif [ -z \"$largest\" ]; then\n            largest=$number\n       \
    \     largest_index=$i\n        elif [ \"$number\" -gt \"$largest\" ]; then\n\
    \            largest=$number\n            largest_index=$i\n        elif [ \"\
    $number\" -lt \"$smallest\" ]; then\n            smallest=$number\n          \
    \  smallest_index=$i\n        fi\n    done\n\n    if [ \"$smallest_index\" -eq\
    \ \"$largest_index\" ]; then\n        result=\"\\\"$smallest\\\"\"\n    else\n\
    \        result=\"\\\"$smallest\\\" \\\"$largest\\\"\"\n    fi\n\n    echo \"\
    $result\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local smallest_diffn\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local output\n    local i\n    local j\n    local k\n\
    \    local diff\n    local diff1\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_value_count\n\
    \    local element_value\n    local element_value_index\n    local element_value_count\n\
    \    local element_value_count\n    local element_value\n    local element_value_index\n\
    \    local element_value_count\n    local element_value_count\n    local element_value\n\
    \    local element_value_index\n    local element_value_count\n    local element_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local min=$2\n  local\
    \ max=$3\n  local output\n  local element\n  local min_index\n  local max_index\n\
    \  local i\n  local j\n  local diff\n  local diff_index\n  local diff_value\n\
    \  local diff_value_index\n  local diff_value_index2\n  local diff_value_index3\n\
    \  local diff_value_index4\n  local diff_value_index5\n  local diff_value_index6\n\
    \  local diff_value_index7\n  local diff_value_index8\n  local diff_value_index9\n\
    \  local diff_value_index10\n  local diff_value_index11\n  local diff_value_index12\n\
    \  local diff_value_index13\n  local diff_value_index14\n  local diff_value_index15\n\
    \  local diff_value_index16\n  local diff_value_index17\n  local diff_value_index18\n\
    \  local diff_value_index19\n  local diff_value_index20\n  local diff_value_index21\n\
    \  local diff_value_index22\n  local diff_value_index23\n  local diff_value_index24\n\
    \  local diff_value_index25\n  local diff_value_index26\n  local diff_value_index27\n\
    \  local diff_value_index28\n  local diff_value_index29\n  local diff_value_index30\n\
    \  local diff_value_index31\n  local diff_value_index32\n  local diff_value_index33\n\
    \  local diff_value_index34\n  local diff_value_index35\n  local diff_value_index36\n\
    \  local diff_value_index37\n  local diff_value_index38\n  local diff_value_index39\n\
    \  local diff_value_index40\n  local diff_value_index41\n  local diff_value_index42\n\
    \  local diff_value_index43\n  local diff_value_index44\n  local diff_value_index45\n\
    \  local diff_value_index46\n  local diff_value_index47\n  local diff_value_index48\n\
    \  local diff_value_index49\n  local diff_value_index50\n  local diff_value_index51\n\
    \  local diff_value_index52\n  local diff_value_index53\n  local diff_value_index54\n\
    \  local diff_value_index55\n  local diff_value_index56\n  local diff_value_index57\n\
    \  local diff_value_index58\n  local diff_value_index59\n  local diff_value_index60\n\
    \  local diff_value_index61\n  local diff_value_index62\n  local diff_value_index63\n\
    \  local diff_value_index64\n  local diff_value_index65\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local elements_array\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local largest_element_index\n    local smallest_element_value\n    local\
    \ largest_element_value\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_index\n    local largest_element_index\n    local smallest_element_value\n\
    \    local largest_element_value\n    local smallest_element_index\n    local\
    \ largest_element_index\n    local smallest_element_value\n    local largest_element_value\n\
    \    local smallest_element_index\n    local largest_element_index\n    local\
    \ smallest_element_value\n    local largest_element_value\n    local smallest_element_index\n\
    \    local large\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_value\n\n    smallest=$2\n\
    \    largest=$3\n    smallest_index=0\n    largest_index=0\n\n    while [ $smallest_index\
    \ -lt $#elements ]; do\n        element_value=$( echo \"$elements[$smallest_index]\"\
    \ | tr -d '[\" ]')\n        element_index=$( echo \"$elements[$smallest_index]\"\
    \ | tr -d '[\" ]' | sed 's/^[^0-9]*//g' )\n        if [ \"$smallest\" -gt \"$element_value\"\
    \ ]; then\n            smallest=$element_value\n            smallest_index=$element_index\n\
    \        fi\n        element_value=$( echo \"$elements[$largest_index]\" | tr\
    \ -d '[\" ]')\n        element_index=$( echo \"$elements[$largest_index]\" | tr\
    \ -d '[\" ]' | sed 's/^[^0-9]*//g' )\n        if [ \"$largest\" -lt \"$element_value\"\
    \ ]; then\n            largest=$element_value\n            largest_index=$element_index\n\
    \        fi\n    done\n    echo \"$smallest_index\"\n    echo \"$largest_index\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdron8r13.sh: line 25: [: 1elements: integer expression expected

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_string\n    local\
    \ element_string_index\n    local element_string_length\n    local element_string_length_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n    local\
    \ element_string_length_index\n    local element_string_length_index\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local smallest_element_index\n    local largest_element\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local elements_array\n    local\
    \ element_array\n    local element_string\n    local element_string_index\n  \
    \  local element_string_index2\n    local element_string_index3\n    local element_string_index4\n\
    \    local element_string_index5\n    local element_string_index6\n    local element_string_index7\n\
    \    local element_string_index8\n    local element_string_index9\n    local element_string_index10\n\
    \    local element_string_index11\n    local element_string_index12\n    local\
    \ element_string_index13\n    local element_string_index14\n    local element_string_index15\n\
    \    local element_string_index16\n    local element_string_index17\n    local\
    \ element_string_index18\n    local element_string_index19\n    local element_string_index20\n\
    \    local element_string_index21\n    local element_string_index22\n    local\
    \ element_string_index23\n    local element_string_index24\n    local element_string_index25\n\
    \    local element_string_index26\n    local element_string_index27\n    local\
    \ element_string_index28\n    local element_string_index29\n    local element_string_index30\n\
    \    local element_string_index31\n    local element_string_index32\n    local\
    \ element_string_index33\n    local element_string_index34\n    local element_string_index35\n\
    \    local element_string_index36\n    local element_string_index37\n    local\
    \ element_string_index38\n    local element_string_index39\n    local element_string_index40\n\
    \    local element_string_index41\n    local element_string_index42\n    local\
    \ element_string_index43\n    local element_string_index44\n    local element_string_index45\n\
    \    local element_string_index46\n    local element_string_index47\n    local\
    \ element_string_index48\n    local element_string_index49\n    local element_string_index50\n\
    \    local element_string_index51\n    local element_string_index52\n    local\
    \ element_string_index53\n    local element_string_index54\n    local element_string_index55\n\
    \    local element_string_index56\n    local element_string_index57\n    local\
    \ element_string_index58\n    local element_string_index59\n    local element_string_index60\n\
    \    local element_string_index61\n    local element_string_index62\n    local\
    \ element_string_index63\n    local element_string_index64\n    local element_string_index65\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local numbers=$1\n  local smallest_number=$2\n\
    \  local largest_number=$3\n  local smallest_element\n  local largest_element\n\
    \  local smallest_distance\n  local largest_distance\n  local i\n  local j\n \
    \ local distance\n\n  smallest_distance=$(( ${smallest_number} - ${largest_number}\
    \ ))\n  largest_distance=$(( ${largest_number} - ${smallest_number} ))\n\n  smallest_element=$(echo\
    \ $numbers | awk '{ print $1 }')\n  largest_element=$(echo $numbers | awk '{ print\
    \ $1 }')\n\n  smallest_distance=$(( ${smallest_distance} + ${smallest_number}\
    \ ))\n  largest_distance=$(( ${largest_distance} + ${largest_number} ))\n\n  smallest_distance=$((\
    \ ${smallest_distance} + ${smallest_number} ))\n  largest_distance=$(( ${largest_distance}\
    \ + ${largest_number} ))\n\n  smallest_distance=$(( ${smallest_distance} + ${smallest_number}\
    \ ))\n  largest_distance=$(( ${largest_distance} + ${largest_number} ))\n\n  smallest_distance=$((\
    \ ${smallest_distance} + ${smallest_number} ))\n  largest_distance=$(( ${largest_distance}\
    \ + ${largest_number} ))\n\n  smallest_distance=$(( ${smallest_distance} + ${smallest_number}\
    \ ))\n  largest_distance=$(( ${largest_distance} + ${largest_number} ))\n\n  smallest_distance=$((\
    \ ${smallest_distance} + ${smallest_number} ))\n  largest_distance=$(( ${largest_distance}\
    \ + ${largest_number} ))\n\n  smallest_distance=$(( ${smallest_distance} + ${smallest_number}\
    \ ))\n  largest_distance=$(( ${largest_distance} + ${largest_number} ))\n\n  smallest_distance=$((\
    \ ${smallest_distance} + ${smallest_number} ))\n  largest_distance=$(( ${largest_distance}\
    \ + ${largest_number} ))\n\n  smallest_distance=$(( ${smallest_distance} + ${smallest_number}\
    \ ))\n  largest_distance=$(( ${largest_distance} + ${largest_number} ))\n\n  smallest_distance=$((\
    \ ${smallest_distance} + ${smallest_number} ))\n  largest_distance=$(( ${largest_distance}\
    \ + ${largest_number} ))\n\n  smallest_distance=$(( ${\n}\n\ncandidate() {\n \
    \   find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp121tgdgw.sh: line 58: unexpected EOF while looking for matching
    `)''

    /tmp/tmp121tgdgw.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local element\n    local i\n    local\
    \ j\n    local min_index\n    local max_index\n    local diff\n    local diff_index\n\
    \    local diff_value\n    local diff_value_index\n    local diff_value_index2\n\
    \    local diff_value_index3\n    local diff_value_index4\n    local diff_value_index5\n\
    \    local diff_value_index6\n    local diff_value_index7\n    local diff_value_index8\n\
    \    local diff_value_index9\n    local diff_value_index10\n    local diff_value_index11\n\
    \    local diff_value_index12\n    local diff_value_index13\n    local diff_value_index14\n\
    \    local diff_value_index15\n    local diff_value_index16\n    local diff_value_index17\n\
    \    local diff_value_index18\n    local diff_value_index19\n    local diff_value_index20\n\
    \    local diff_value_index21\n    local diff_value_index22\n    local diff_value_index23\n\
    \    local diff_value_index24\n    local diff_value_index25\n    local diff_value_index26\n\
    \    local diff_value_index27\n    local diff_value_index28\n    local diff_value_index29\n\
    \    local diff_value_index30\n    local diff_value_index31\n    local diff_value_index32\n\
    \    local diff_value_index33\n    local diff_value_index34\n    local diff_value_index35\n\
    \    local diff_value_index36\n    local diff_value_index37\n    local diff_value_index38\n\
    \    local diff_value_index39\n    local diff_value_index40\n    local diff_value_index41\n\
    \    local diff_value_index42\n    local diff_value_index43\n    local diff_value_index44\n\
    \    local diff_value_index45\n    local diff_value_index46\n    local diff_value_index47\n\
    \    local diff_value_index48\n    local diff_value_index49\n    local diff_value_index50\n\
    \    local diff_value_index51\n    local diff_value_index52\n    local diff_value_index53\n\
    \    local diff_value_index54\n    local diff_value_index55\n    local diff_value_index56\n\
    \    local diff_value_index57\n    local diff_value_index58\n    local diff_value_index59\n\
    \    local diff_value_index60\n    local diff_value_index61\n    local diff_value_index62\n\
    \    local diff_value_index63\n    local diff_value_index64\n    local diff_value_index65\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=$4\n    local max_index=$5\n    local element\n\
    \    local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ i\n    local j\n    local k\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local max\n    local element\n    local elements_array\n \
    \   local min_index\n    local max_index\n    local min\n    local max\n    local\
    \ element\n    local elements_array\n    local min_index\n    local max_index\n\
    \    local min\n    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local result\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ smallest_number\n    local largest_number\n    local index\n    local number\n\
    \    local result\n    local element\n    local elements=$(echo $numbers | tr\
    \ ' ' ',')\n    local count\n    local count2\n    local count3\n    local count4\n\
    \    local count5\n    local count6\n    local count7\n    local count8\n    local\
    \ count9\n    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count\n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local element\n    local element2\n    local i\n   \
    \ local j\n    local min\n    local max\n    local min2\n    local max2\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_string\n    local element_string_index\n\
    \    local element_string_length\n    local element_string_length_index\n    local\
    \ element_string_length_value\n    local element_string_length_value_diff\n  \
    \  local element_string_length_value_diff_index\n    local element_string_length_value_diff_value\n\
    \    local element_string_length_value_diff_value_diff\n    local element_string_length_value_diff_value_diff_index\n\
    \    local element_string_length_value_diff_value_diff_value\n    local element_string_length_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_index\n    local\
    \ element_string_length_value_diff_value_diff_value_diff_value\n    local element_string_length_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_index\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_index\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff_value_diff\n\
    \    local element_string_length_value_diff_value_diff_value_diff_value_diff_value_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local output\n    local number\n\
    \    local number1\n    local number2\n    local diff\n    local diff1\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff89\n    local diff90\n    local diff91\n    local\
    \ diff92\n    local diff93\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ result=\n    local number\n    local closest\n    local smallest\n    local\
    \ largest\n    local number\n    local i\n    local j\n    local result\n    local\
    \ number\n    local i\n    local j\n    local result\n    local number\n    local\
    \ i\n    local j\n    local result\n    local number\n    local i\n    local j\n\
    \    local result\n    local number\n    local i\n    local j\n    local result\n\
    \    local number\n    local i\n    local j\n    local result\n    local number\n\
    \    local i\n    local j\n    local result\n    local number\n    local i\n \
    \   local j\n    local result\n    local number\n    local i\n    local j\n  \
    \  local result\n    local number\n    local i\n    local j\n    local result\n\
    \    local number\n    local i\n    local j\n    local result\n    local number\n\
    \    local i\n    local j\n    local result\n    local number\n    local i\n \
    \   local j\n    local result\n    local number\n    local i\n    local j\n  \
    \  local result\n    local number\n    local i\n    local j\n    local result\n\
    \    local number\n    local i\n    local j\n    local result\n    local number\n\
    \    local i\n    local j\n    local result\n    local number\n    local i\n \
    \   local j\n    local result\n    local number\n    local i\n    local j\n  \
    \  local result\n    local number\n    local i\n    local j\n    local result\n\
    \    local number\n    local i\n    local j\n    local result\n    local number\n\
    \    local i\n    local j\n    local result\n    local number\n    local i\n \
    \   local j\n    local result\n    local number\n    local i\n    local j\n  \
    \  local result\n    local number\n    local i\n    local j\n    local result\n\
    \    local number\n    local i\n    local j\n    local result\n    local number\n\
    \    local i\n    local j\n    local result\n    local number\n    local i\n \
    \   local j\n    local result\n    local number\n    local i\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local smallest_diff=99999999\n    local largest_diff=99999999\n    local\
    \ smallest_element\n    local largest_element\n    local index\n    local diff\n\
    \    local element\n\n    for index in \"${!numbers[@]}\"; do\n        element=${numbers[index]}\n\
    \        diff=$(( ${element} - $smallest ))\n        if [[ $diff -lt 0 ]]; then\n\
    \            smallest_diff=$diff\n            smallest_element=${element}\n  \
    \          smallest_index=${index}\n        fi\n        diff=$(( ${element} -\
    \ $largest ))\n        if [[ $diff -gt 0 ]]; then\n            largest_diff=$diff\n\
    \            largest_element=${element}\n            largest_index=${index}\n\
    \        fi\n    done\n\n    echo ${numbers[$smallest_index]} ${numbers[$largest_index]}\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsiyq9vl8.sh: line 26: 1.0 2.0 3.9 4.0 5.0 2.2 -  : syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 -  ")

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element=$2\n\
    \    local largest_element=$3\n    local smallest_element_index=0\n    local largest_element_index=0\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ smallest_element_value_index\n    local largest_element_value_index\n    local\
    \ element\n    local element_value\n    local element_value_index\n    local element_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_index\n    local element_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local numbers=$1\n  local smallest=$2\n \
    \ local largest=$3\n  local output\n  local i\n  local j\n  local smallest_index\n\
    \  local largest_index\n  local smallest_value\n  local largest_value\n  local\
    \ diff\n\n  output=$( IFS=$'\\n'; echo \"$smallest\" \"$largest\" )\n  smallest_index=$(\
    \ echo $output | awk '{print $1}' | sort -n | tail -1 )\n  largest_index=$( echo\
    \ $output | awk '{print $1}' | sort -n | head -1 )\n  smallest_value=$( echo $output\
    \ | awk '{print $2}' )\n  largest_value=$( echo $output | awk '{print $2}' )\n\
    \  diff=$( echo \"$smallest_value - $largest_value\" | bc )\n\n  for i in $(seq\
    \ 0 $(( $#numbers - 1 ))); do\n    smallest_index=$(( $smallest_index + 1 ))\n\
    \    largest_index=$(( $largest_index + 1 ))\n    smallest_value=$( echo $output\
    \ | awk '{print $1}' | sed -n \"${smallest_index}p\" )\n    largest_value=$( echo\
    \ $output | awk '{print $1}' | sed -n \"${largest_index}p\" )\n    diff=$( echo\
    \ \"$smallest_value - $largest_value\" | bc )\n    if [ $diff -le 0 ]; then\n\
    \      output=$( IFS=$'\\n'; echo \"$smallest_value\" \"$largest_value\" )\n \
    \     smallest_index=$( echo $output | awk '{print $1}' | sort -n | tail -1 )\n\
    \      largest_index=$( echo $output | awk '{print $1}' | sort -n | head -1 )\n\
    \      smallest_value=$( echo $output | awk '{print $2}' )\n      largest_value=$(\
    \ echo $output | awk '{print $2}' )\n      diff=$( echo \"$smallest_value - $largest_value\"\
    \ | bc )\n    fi\n  done\n\n  output=$( IFS=$'\\n'; echo \"$smallest\" \"$largest\"\
    \ )\n  smallest_index=$( echo $output | awk '{print $1}' | sort -n | tail -1 )\n\
    \  largest_index=$( echo $output | awk '{print $1}' | sort -n | head -1 )\n  smallest_value=$(\
    \ echo $output | awk '{print $2}' )\n  largest_value=$( echo $output \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp38rq5vcb.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmp38rq5vcb.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local element\n    local i\n    local\
    \ j\n    local diff\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff96\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local diff\n    local diff1\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local diff93\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n\n    while read -r number; do\n        smallest_diff=\n\
    \        largest_diff=\n        smallest_num=\n        largest_num=\n        smallest_element=\n\
    \        largest_element=\n        for (( i = 0; i < ${#numbers}; i++ )); do\n\
    \            (( diff += ( ${numbers[i]} - ${number} ) ))\n            if (( diff\
    \ < smallest_diff )); then\n                smallest_diff=\n                smallest_num=\n\
    \                smallest_element=\n            fi\n            if (( diff > largest_diff\
    \ )); then\n                largest_diff=\n                largest_num=\n    \
    \            largest_element=\n            fi\n        done\n        smallest+=\"\
    ${smallest_num}\"\n        largest+=\"${largest_num}\"\n    done <<< \"$numbers\"\
    \n\n    echo \"$smallest\"\n    echo \"$largest\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3itnjo72.sh: line 30: ((: diff += ( 1.0 2.0 3.9 4.0 5.0 2.2 - 1.0
    2.0 3.9 4.0 5.0 2.2 ) : syntax error: invalid arithmetic operator (error token
    is ".0 2.0 3.9 4.0 5.0 2.2 - 1.0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 3.9 4.0 5.0 2.2 ) : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ) ")

    /tmp/tmp3itnjo72.sh: line 30: ((: diff += (  - 1.0 2.0 '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local elements\n    local smallest_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element_index\n  local largest_element_index\n\
    \  local element\n  local element_index\n  local element_count\n  local element_count\n\
    \  local smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local largest_element_count\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element_index\n  local largest_element_index\n  local element\n\
    \  local element_index\n  local element_count\n  local element_count\n  local\
    \ smallest_element_count\n  local largest_element_count\n  local smallest_element_count\n\
    \  local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local element2\n    local element3\n\
    \    local element4\n    local element5\n    local element6\n    local element7\n\
    \    local element8\n    local element9\n    local element10\n    local element11\n\
    \    local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n    local element95\n\
    \    local element96\n    local element97\n    local element98\n    local element99\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local closest=\n  local\
    \ closest2=\n  local closest3=\n  local closest4=\n  local closest5=\n  local\
    \ closest6=\n  local closest7=\n  local closest8=\n  local closest9=\n  local\
    \ closest10=\n  local closest11=\n  local closest12=\n  local closest13=\n  local\
    \ closest14=\n  local closest15=\n  local closest16=\n  local closest17=\n  local\
    \ closest18=\n  local closest19=\n  local closest20=\n  local closest21=\n  local\
    \ closest22=\n  local closest23=\n  local closest24=\n  local closest25=\n  local\
    \ closest26=\n  local closest27=\n  local closest28=\n  local closest29=\n  local\
    \ closest30=\n  local closest31=\n  local closest32=\n  local closest33=\n  local\
    \ closest34=\n  local closest35=\n  local closest36=\n  local closest37=\n  local\
    \ closest38=\n  local closest39=\n  local closest40=\n  local closest41=\n  local\
    \ closest42=\n  local closest43=\n  local closest44=\n  local closest45=\n  local\
    \ closest46=\n  local closest47=\n  local closest48=\n  local closest49=\n  local\
    \ closest50=\n  local closest51=\n  local closest52=\n  local closest53=\n  local\
    \ closest54=\n  local closest55=\n  local closest56=\n  local closest57=\n  local\
    \ closest58=\n  local closest59=\n  local closest60=\n  local closest61=\n  local\
    \ closest62=\n  local closest63=\n  local closest64=\n  local closest65=\n  local\
    \ closest66=\n  local closest67=\n  local closest68=\n  local closest69=\n  local\
    \ closest70=\n  local closest71=\n  local closest72=\n  local closest73=\n  local\
    \ closest74=\n  local closest75=\n  local closest76=\n  local closest77=\n  local\
    \ closest78=\n  local closest79=\n  local closest80=\n  local closest81=\n  local\
    \ closest82=\n  local closest83=\n  local closest84=\n  local closest85=\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local number\n    local i\n    local\
    \ j\n    local smallest_index\n    local largest_index\n    local smallest_value\n\
    \    local largest_value\n    local smallest_string\n    local largest_string\n\
    \    local smallest_float\n    local largest_float\n    local smallest_int\n \
    \   local largest_int\n    local smallest_string\n    local largest_string\n \
    \   local smallest_float\n    local largest_float\n    local smallest_int\n  \
    \  local largest_int\n    local smallest_string\n    local largest_string\n  \
    \  local smallest_float\n    local largest_float\n    local smallest_int\n   \
    \ local largest_int\n    local smallest_string\n    local largest_string\n   \
    \ local smallest_float\n    local largest_float\n    local smallest_int\n    local\
    \ largest_int\n    local smallest_string\n    local largest_string\n    local\
    \ smallest_float\n    local largest_float\n    local smallest_int\n    local largest_int\n\
    \    local smallest_string\n    local largest_string\n    local smallest_float\n\
    \    local largest_float\n    local smallest_int\n    local largest_int\n    local\
    \ smallest_string\n    local largest_string\n    local smallest_float\n    local\
    \ largest_float\n    local smallest_int\n    local largest_int\n    local smallest_string\n\
    \    local largest_string\n    local smallest_float\n    local largest_float\n\
    \    local smallest_int\n    local largest_int\n    local smallest_string\n  \
    \  local largest_string\n    local smallest_float\n    local largest_float\n \
    \   local smallest_int\n    local largest_int\n    local smallest_string\n   \
    \ local largest_string\n    local smallest_float\n    local largest_float\n  \
    \  local smallest_int\n    local largest_int\n    local smallest_string\n    local\
    \ largest_string\n    local smallest_float\n    local largest_float\n    local\
    \ smallest_int\n    local largest_int\n    local smallest_string\n    local largest_string\n\
    \    local smallest_float\n    local largest_float\n    local smallest_int\n \
    \   local largest_int\n    local smallest_string\n    local largest_string\n \
    \   local smallest_float\n    local large\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local elements_array=($elements)\n    local smallest_array=($smallest)\n\
    \    local largest_array=($largest)\n    local smallest_element\n    local largest_element\n\
    \    local smallest_index\n    local largest_index\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance_index\n    local largest_distance_index\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_index\n    local largest_distance_index\n    local smallest_distance_index\n\
    \    local largest_distance_index\n    local smallest_distance_index\n    local\
    \ largest_distance_index\n    local smallest_distance\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element=$4\n    local largest_element=$5\n\
    \    local smallest_distance=$6\n    local largest_distance=$7\n\n    local smallest_elements=()\n\
    \    local largest_elements=()\n\n    local smallest_distances=()\n    local largest_distances=()\n\
    \n    local smallest_distances_sorted=()\n    local largest_distances_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_sorted=()\n    local largest_elements_sorted=()\n\
    \n    local smallest_elements_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local smallest_element_index=0\n\
    \    local smallest_element_index2=0\n    local smallest_element_index3=0\n  \
    \  local smallest_element_index4=0\n    local smallest_element_index5=0\n    local\
    \ smallest_element_index6=0\n    local smallest_element_index7=0\n    local smallest_element_index8=0\n\
    \    local smallest_element_index9=0\n    local smallest_element_index10=0\n \
    \   local smallest_element_index11=0\n    local smallest_element_index12=0\n \
    \   local smallest_element_index13=0\n    local smallest_element_index14=0\n \
    \   local smallest_element_index15=0\n    local smallest_element_index16=0\n \
    \   local smallest_element_index17=0\n    local smallest_element_index18=0\n \
    \   local smallest_element_index19=0\n    local smallest_element_index20=0\n \
    \   local smallest_element_index21=0\n    local smallest_element_index22=0\n \
    \   local smallest_element_index23=0\n    local smallest_element_index24=0\n \
    \   local smallest_element_index25=0\n    local smallest_element_index26=0\n \
    \   local smallest_element_index27=0\n    local smallest_element_index28=0\n \
    \   local smallest_element_index29=0\n    local smallest_element_index30=0\n \
    \   local smallest_element_index31=0\n    local smallest_element_index32=0\n \
    \   local smallest_element_index33=0\n    local smallest_element_index34=0\n \
    \   local smallest_element_index35=0\n    local smallest_element_index36=0\n \
    \   local smallest_element_index37=0\n    local smallest_element_index38=0\n \
    \   local smallest_element_index39=0\n    local smallest_element_index40=0\n \
    \   local smallest_element_index41=0\n    local smallest_element_index42=0\n \
    \   local smallest_element_index43=0\n    local smallest_element_index44=0\n \
    \   local smallest_element_index45=0\n    local smallest_element_index46=0\n \
    \   local smallest_element_index47=0\n    local smallest_element_index48=0\n \
    \   local smallest_element_index49=0\n    local smallest_element_index50=0\n \
    \   local smallest_element_index51=0\n    local smallest_element_index52=0\n \
    \   local smallest_element_index53=0\n    local smallest_element_index54=0\n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local index=0\n    local elements=\n    local element\n\
    \    local i\n    local j\n    local k\n    local diff\n    local diff2\n    local\
    \ diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest\n\
    \    local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local element\n    local element2\n    local element3\n\
    \    local element4\n    local element5\n    local element6\n    local element7\n\
    \    local element8\n    local element9\n    local element10\n    local element11\n\
    \    local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n    local element95\n\
    \    local element96\n    local element97\n    local element98\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local i\n    local j\n    local elements\n    local element\n \
    \   local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \    local element\n    local elements\n    local element\n    local elements\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    for\
    \ (( i=1; i<${#elements_array[@]}; i++ )); do\n        if [[ ${elements_array[i]}\
    \ < ${smallest_element} ]]; then\n            smallest_element=${elements_array[i]}\n\
    \            smallest_element_index=${i}\n        fi\n        if [[ ${elements_array[i]}\
    \ > ${largest_element} ]]; then\n            largest_element=${elements_array[i]}\n\
    \            largest_element_index=${i}\n        fi\n    done\n    local smallest_element_string=${elements_array[smallest_element_index]}\n\
    \    local largest_element_string=${elements_array[largest_element_index]}\n \
    \   local smallest_element_string_index=0\n    local largest_element_string_index=0\n\
    \    for (( i=1; i<${#elements_array[@]}; i++ )); do\n        if [[ ${elements_array[i]}\
    \ == ${smallest_element} ]]; then\n            smallest_element_string=${elements_array[i]}\n\
    \            smallest_element_string_index=${i}\n        fi\n        if [[ ${elements_array[i]}\
    \ == ${largest_element} ]]; then\n            largest_element_string=${elements_array[i]}\n\
    \            largest_element_string_index=${i}\n        fi\n    done\n    local\
    \ smallest_element_string=${elements_array[smallest_element_string_index]}\n \
    \   local largest_element_string=${elements_array[largest_element_string_index]}\n\
    \    local smallest_element_string_index=0\n    local largest_element_string_index=0\n\
    \    for (( i=1; i<${#elements_array[@]}; i++ )); do\n        if [[ ${elements_array[i]}\
    \ == ${smallest_element} ]]; then\n            smallest_element_string=${elements_array[i]}\n\
    \            smallest_element_string_index=${i}\n        fi\n        if [[ ${elements_array[i]}\
    \ == ${largest_element} ]]; then\n            largest_element_string=${elements_array[i]}\n\
    \            largest_element_string_index=${i}\n        fi\n    done\n    local\
    \ smallest_element_string=${elements_array[smallest_element_string_index]}\n \
    \   local largest_element_string=${elements_array[largest_element_string_index]}\n\
    \    local smallest_element_string_index=0\n    local largest_element_string_index=0\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local result\n\n    IFS=' ' read -r -a elements <<< \"$elements\"\
    \n    for ((i=0; i<${#elements[@]}; i++)); do\n        element=${elements[$i]}\n\
    \        smallest=$(( ${smallest:-0} > ${element} ? ${smallest} : ${element} ))\n\
    \        largest=$(( ${largest:-0} < ${element} ? ${largest} : ${element} ))\n\
    \    done\n    smallest=$(( ${smallest:-0} > ${largest} ? ${smallest} : ${largest}\
    \ ))\n    largest=$(( ${largest:-0} < ${smallest} ? ${largest} : ${smallest} ))\n\
    \n    for ((j=0; j<${#elements[@]}; j++)); do\n        element=${elements[$j]}\n\
    \        result=$(( ${closest:-0} > ${element} ? ${closest} : ${element} ))\n\
    \        closest=$(( ${closest:-0} > ${result} ? ${closest} : ${result} ))\n \
    \   done\n    echo \"$smallest\"\n    echo \"$largest\"\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzfvmarq4.sh: line 23: 0 > 1.0 ?  : 1.0 : syntax error: invalid
    arithmetic operator (error token is ".0 ?  : 1.0 ")

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local i\n    local j\n    local smallest_diff\n    local\
    \ largest_diff\n    local smallest_string\n    local largest_string\n    local\
    \ number\n    local number_string\n    local number_string2\n    local number_string3\n\
    \    local number_string4\n    local number_string5\n    local number_string6\n\
    \    local number_string7\n    local number_string8\n    local number_string9\n\
    \    local number_string10\n    local number_string11\n    local number_string12\n\
    \    local number_string13\n    local number_string14\n    local number_string15\n\
    \    local number_string16\n    local number_string17\n    local number_string18\n\
    \    local number_string19\n    local number_string20\n    local number_string21\n\
    \    local number_string22\n    local number_string23\n    local number_string24\n\
    \    local number_string25\n    local number_string26\n    local number_string27\n\
    \    local number_string28\n    local number_string29\n    local number_string30\n\
    \    local number_string31\n    local number_string32\n    local number_string33\n\
    \    local number_string34\n    local number_string35\n    local number_string36\n\
    \    local number_string37\n    local number_string38\n    local number_string39\n\
    \    local number_string40\n    local number_string41\n    local number_string42\n\
    \    local number_string43\n    local number_string44\n    local number_string45\n\
    \    local number_string46\n    local number_string47\n    local number_string48\n\
    \    local number_string49\n    local number_string50\n    local number_string51\n\
    \    local number_string52\n    local number_string53\n    local number_string54\n\
    \    local number_string55\n    local number_string56\n    local number_string57\n\
    \    local number_string58\n    local number_string59\n    local number_string60\n\
    \    local number_string61\n    local number_string62\n    local number_string63\n\
    \    local number_string64\n    local number_string65\n    local number_string66\n\
    \    local number_string67\n    local number_string68\n    local number_string69\n\
    \    local number_string70\n    local number_string71\n    local number_string72\n\
    \    local number_string73\n    local number_string\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_value_length\n    local element_value_length_index\n    local\
    \ element_value_length_value\n    local element_value_length_value_index\n   \
    \ local element_value_length_value_index\n    local element_value_length_value_length\n\
    \    local element_value_length_value_length_index\n    local element_value_length_value_length_value\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local element_value_length_value_length_value_index\n    local element_value_length_value_length_value_index\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local element_index\n    local element_value\n    local element_value_index\n\
    \    local element_value_index2\n    local element_value_index3\n    local element_value_index4\n\
    \    local element_value_index5\n    local element_value_index6\n    local element_value_index7\n\
    \    local element_value_index8\n    local element_value_index9\n    local element_value_index10\n\
    \    local element_value_index11\n    local element_value_index12\n    local element_value_index13\n\
    \    local element_value_index14\n    local element_value_index15\n    local element_value_index16\n\
    \    local element_value_index17\n    local element_value_index18\n    local element_value_index19\n\
    \    local element_value_index20\n    local element_value_index21\n    local element_value_index22\n\
    \    local element_value_index23\n    local element_value_index24\n    local element_value_index25\n\
    \    local element_value_index26\n    local element_value_index27\n    local element_value_index28\n\
    \    local element_value_index29\n    local element_value_index30\n    local element_value_index31\n\
    \    local element_value_index32\n    local element_value_index33\n    local element_value_index34\n\
    \    local element_value_index35\n    local element_value_index36\n    local element_value_index37\n\
    \    local element_value_index38\n    local element_value_index39\n    local element_value_index40\n\
    \    local element_value_index41\n    local element_value_index42\n    local element_value_index43\n\
    \    local element_value_index44\n    local element_value_index45\n    local element_value_index46\n\
    \    local element_value_index47\n    local element_value_index48\n    local element_value_index49\n\
    \    local element_value_index50\n    local element_value_index51\n    local element_value_index52\n\
    \    local element_value_index53\n    local element_value_index54\n    local element_value_index55\n\
    \    local element_value_index56\n    local element_value_index57\n    local element_value_index58\n\
    \    local element_value_index59\n    local element_value_index60\n    local element_value_index61\n\
    \    local element_value_index62\n    local element_value_index63\n    local element_value_index64\n\
    \    local element_value_index65\n    local element_value_index66\n    local element_value_index67\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local numbers=\n    local number\n\
    \    local i\n    local j\n    local k\n    local result\n    local element\n\
    \    local element2\n    local element3\n    local element4\n    local element5\n\
    \    local element6\n    local element7\n    local element8\n    local element9\n\
    \    local element10\n    local element11\n    local element12\n    local element13\n\
    \    local element14\n    local element15\n    local element16\n    local element17\n\
    \    local element18\n    local element19\n    local element20\n    local element21\n\
    \    local element22\n    local element23\n    local element24\n    local element25\n\
    \    local element26\n    local element27\n    local element28\n    local element29\n\
    \    local element30\n    local element31\n    local element32\n    local element33\n\
    \    local element34\n    local element35\n    local element36\n    local element37\n\
    \    local element38\n    local element39\n    local element40\n    local element41\n\
    \    local element42\n    local element43\n    local element44\n    local element45\n\
    \    local element46\n    local element47\n    local element48\n    local element49\n\
    \    local element50\n    local element51\n    local element52\n    local element53\n\
    \    local element54\n    local element55\n    local element56\n    local element57\n\
    \    local element58\n    local element59\n    local element60\n    local element61\n\
    \    local element62\n    local element63\n    local element64\n    local element65\n\
    \    local element66\n    local element67\n    local element68\n    local element69\n\
    \    local element70\n    local element71\n    local element72\n    local element73\n\
    \    local element74\n    local element75\n    local element76\n    local element77\n\
    \    local element78\n    local element79\n    local element80\n    local element81\n\
    \    local element82\n    local element83\n    local element84\n    local element85\n\
    \    local element86\n    local element87\n    local element88\n    local element89\n\
    \    local element90\n    local element91\n    local element92\n    local element93\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=$4\n    local max_index=$5\n    local min_index=$6\n\
    \    local max_index=$7\n    local min_index=$8\n    local max_index=$9\n    local\
    \ min_index=$10\n    local max_index=$11\n    local min_index=$12\n    local max_index=$13\n\
    \    local min_index=$14\n    local max_index=$15\n    local min_index=$16\n \
    \   local max_index=$17\n    local min_index=$18\n    local max_index=$19\n  \
    \  local min_index=$20\n    local max_index=$21\n    local min_index=$22\n   \
    \ local max_index=$23\n    local min_index=$24\n    local max_index=$25\n    local\
    \ min_index=$26\n    local max_index=$27\n    local min_index=$28\n    local max_index=$29\n\
    \    local min_index=$30\n    local max_index=$31\n    local min_index=$32\n \
    \   local max_index=$33\n    local min_index=$34\n    local max_index=$35\n  \
    \  local min_index=$36\n    local max_index=$37\n    local min_index=$38\n   \
    \ local max_index=$39\n    local min_index=$40\n    local max_index=$41\n    local\
    \ min_index=$42\n    local max_index=$43\n    local min_index=$44\n    local max_index=$45\n\
    \    local min_index=$46\n    local max_index=$47\n    local min_index=$48\n \
    \   local max_index=$49\n    local min_index=$50\n    local max_index=$51\n  \
    \  local min_index=$52\n    local max_index=$53\n    local min_index=$54\n   \
    \ local max_index=$55\n    local min_index=$56\n    local max_index=$57\n    local\
    \ min_index=$58\n    local max_index=$59\n    local min_index=$60\n    local max_index=$61\n\
    \    local min_index=$62\n    local max_index=$63\n    local min_index=$64\n \
    \   local max_index=$65\n    local min_index=$66\n    local max_index=$67\n  \
    \  local min_index=$68\n    local max_index=$69\n    local min_index=$70\n   \
    \ local max_index=$71\n    local min_index=$72\n    local max_index=$73\n    local\
    \ min_index\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local result=\n    local elements=\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_string\n    local\
    \ element_string_with_quotes\n    local element_string_without_quotes\n    local\
    \ element_string_with_quotes_no_space\n    local element_string_without_quotes_no_space\n\
    \    local element_string_with_quotes_no_space_no_space\n    local element_string_without_quotes_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space\n    local element_string_without_quotes_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space\n  \
    \  local element_string_without_quotes_no_space_no_space_no_space_no_space\n \
    \   local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_without_quotes_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space_no_space\n\
    \    local element_string_with_quotes_no_space_no_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local output\n    local i\n    local j\n    local diff\n\
    \    local diff1\n    local diff2\n    local diff3\n    local diff4\n    local\
    \ diff5\n    local diff6\n    local diff7\n    local diff8\n    local diff9\n\
    \    local diff10\n    local diff11\n    local diff12\n    local diff13\n    local\
    \ diff14\n    local diff15\n    local diff16\n    local diff17\n    local diff18\n\
    \    local diff19\n    local diff20\n    local diff21\n    local diff22\n    local\
    \ diff23\n    local diff24\n    local diff25\n    local diff26\n    local diff27\n\
    \    local diff28\n    local diff29\n    local diff30\n    local diff31\n    local\
    \ diff32\n    local diff33\n    local diff34\n    local diff35\n    local diff36\n\
    \    local diff37\n    local diff38\n    local diff39\n    local diff40\n    local\
    \ diff41\n    local diff42\n    local diff43\n    local diff44\n    local diff45\n\
    \    local diff46\n    local diff47\n    local diff48\n    local diff49\n    local\
    \ diff50\n    local diff51\n    local diff52\n    local diff53\n    local diff54\n\
    \    local diff55\n    local diff56\n    local diff57\n    local diff58\n    local\
    \ diff59\n    local diff60\n    local diff61\n    local diff62\n    local diff63\n\
    \    local diff64\n    local diff65\n    local diff66\n    local diff67\n    local\
    \ diff68\n    local diff69\n    local diff70\n    local diff71\n    local diff72\n\
    \    local diff73\n    local diff74\n    local diff75\n    local diff76\n    local\
    \ diff77\n    local diff78\n    local diff79\n    local diff80\n    local diff81\n\
    \    local diff82\n    local diff83\n    local diff84\n    local diff85\n    local\
    \ diff86\n    local diff87\n    local diff88\n    local diff89\n    local diff90\n\
    \    local diff91\n    local diff92\n    local diff93\n    local diff94\n    local\
    \ diff95\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local result\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    local largest\n    local element\n    local element\n\
    \    local elements\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local elements\n    local smallest\n    local largest\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    local largest\n    local element\n    local element\n\
    \    local elements\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local elements\n    local smallest\n    local largest\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    local largest\n    local element\n    local element\n\
    \    local elements\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local elements\n    local smallest\n    local largest\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    local largest\n    local element\n    local element\n\
    \    local elements\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local elements\n    local smallest\n    local largest\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    local largest\n    local element\n    local element\n\
    \    local elements\n    local smallest\n    local largest\n    local element\n\
    \    local element\n    local elements\n    local smallest\n    local largest\n\
    \    local element\n    local element\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local elements\n\
    \    local smallest\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_diff=1000000000000\n\
    \    local max_diff=1000000000000\n    local element\n    local element2\n   \
    \ local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local elements=\n    local i=\n\
    \    local j=\n    local k=\n    local element\n\n    while read -r element; do\n\
    \        (( i++ ))\n        (( j++ ))\n        (( k++ ))\n        if (( i < $numbers\
    \ )); then\n            closest=$element\n            smallest=$element\n    \
    \    elif (( j < $numbers )); then\n            closest=$element\n           \
    \ largest=$element\n        elif (( k == $numbers )); then\n            closest=$element\n\
    \            smallest=$element\n            largest=$element\n        fi\n   \
    \ done <<< \"$numbers\"\n\n    echo \"$smallest $largest\"\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnoykhtxf.sh: line 25: ((: i < 1.0 2.0 3.9 4.0 5.0 2.2 : syntax
    error: invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ")

    /tmp/tmpnoykhtxf.sh: line 28: ((: j < 1.0 2.0 3.9 4.0 5.0 2.2 : syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ")

    /tmp/tmpnoykhtxf.sh: line 31: ((: k == 1.0 2.0 3.9 4.0 5.0 2.2 : syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2 ")

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$(echo\
    \ $numbers | awk '{print $1}')\n    local largest=$(echo $numbers | awk '{print\
    \ $2}')\n    local smallest_index=0\n    local largest_index=0\n    local smallest_diffn\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closestIndex=0\n    local element\n    local elementIndex\n    local\
    \ elementValue\n    local elementValueIndex\n    local elementValueIndex2\n  \
    \  local elementValue2\n    local elementValue2Index\n    local elementValue2Index2\n\
    \    local elementValue2Index3\n    local elementValue3\n    local elementValue3Index\n\
    \    local elementValue3Index2\n    local elementValue3Index3\n    local elementValue3Index4\n\
    \    local elementValue4\n    local elementValue4Index\n    local elementValue4Index2\n\
    \    local elementValue4Index3\n    local elementValue4Index4\n    local elementValue5\n\
    \    local elementValue5Index\n    local elementValue5Index2\n    local elementValue5Index3\n\
    \    local elementValue5Index4\n    local elementValue6\n    local elementValue6Index\n\
    \    local elementValue6Index2\n    local elementValue6Index3\n    local elementValue6Index4\n\
    \    local elementValue7\n    local elementValue7Index\n    local elementValue7Index2\n\
    \    local elementValue7Index3\n    local elementValue7Index4\n    local elementValue8\n\
    \    local elementValue8Index\n    local elementValue8Index2\n    local elementValue8Index3\n\
    \    local elementValue8Index4\n    local elementValue9\n    local elementValue9Index\n\
    \    local elementValue9Index2\n    local elementValue9Index3\n    local elementValue9Index4\n\
    \    local elementValue10\n    local elementValue10Index\n    local elementValue10Index2\n\
    \    local elementValue10Index3\n    local elementValue10Index4\n    local elementValue11\n\
    \    local elementValue11Index\n    local elementValue11Index2\n    local elementValue11Index3\n\
    \    local elementValue11Index4\n    local elementValue12\n    local elementValue12Index\n\
    \    local elementValue12Index2\n    local elementValue12Index3\n    local elementValue12Index4\n\
    \    local elementValue13\n    local elementValue13Index\n    local elementValue13Index2\n\
    \    local elementValue13Index3\n    local elementValue13Index4\n    local elementValue14\n\
    \    local elementValue14Index\n    local elementValue14Index2\n    local elementValue14Index3\n\
    \    local element\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_index2\n    local elements_array_index3\n    local elements_array_index4\n\
    \    local elements_array_index5\n    local elements_array_index6\n    local elements_array_index7\n\
    \    local elements_array_index8\n    local elements_array_index9\n    local elements_array_index10\n\
    \    local elements_array_index11\n    local elements_array_index12\n    local\
    \ elements_array_index13\n    local elements_array_index14\n    local elements_array_index15\n\
    \    local elements_array_index16\n    local elements_array_index17\n    local\
    \ elements_array_index18\n    local elements_array_index19\n    local elements_array_index20\n\
    \    local elements_array_index21\n    local elements_array_index22\n    local\
    \ elements_array_index23\n    local elements_array_index24\n    local elements_array_index25\n\
    \    local elements_array_index26\n    local elements_array_index27\n    local\
    \ elements_array_index28\n    local elements_array_index29\n    local elements_array_index30\n\
    \    local elements_array_index31\n    local elements_array_index32\n    local\
    \ elements_array_index33\n    local elements_array_index34\n    local elements_array_index35\n\
    \    local elements_array_index36\n    local elements_array_index37\n    local\
    \ elements_array_index38\n    local elements_array_index39\n    local elements_array_index40\n\
    \    local elements_array_index41\n    local elements_array_index42\n    local\
    \ elements_array_index43\n    local elements_array_index44\n    local elements_array_index45\n\
    \    local elements_array_index46\n    local elements_array_index47\n    local\
    \ elements_array_index48\n    local elements_array_index49\n    local elements_array_index50\n\
    \    local elements_array_index51\n    local elements_array_index52\n    local\
    \ elements_array_index53\n    local elements_array_index54\n    local elements_array_index55\n\
    \    local elements_array_index56\n    local elements_array_index57\n    local\
    \ elements_array_index58\n    local elements_array_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local diff\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local element\n    local element2\n    local element3\n\
    \    local element4\n    local element5\n    local element6\n    local element7\n\
    \    local element8\n    local element9\n    local element10\n    local element11\n\
    \    local element12\n    local element13\n    local element14\n    local element15\n\
    \    local element16\n    local element17\n    local element18\n    local element19\n\
    \    local element20\n    local element21\n    local element22\n    local element23\n\
    \    local element24\n    local element25\n    local element26\n    local element27\n\
    \    local element28\n    local element29\n    local element30\n    local element31\n\
    \    local element32\n    local element33\n    local element34\n    local element35\n\
    \    local element36\n    local element37\n    local element38\n    local element39\n\
    \    local element40\n    local element41\n    local element42\n    local element43\n\
    \    local element44\n    local element45\n    local element46\n    local element47\n\
    \    local element48\n    local element49\n    local element50\n    local element51\n\
    \    local element52\n    local element53\n    local element54\n    local element55\n\
    \    local element56\n    local element57\n    local element58\n    local element59\n\
    \    local element60\n    local element61\n    local element62\n    local element63\n\
    \    local element64\n    local element65\n    local element66\n    local element67\n\
    \    local element68\n    local element69\n    local element70\n    local element71\n\
    \    local element72\n    local element73\n    local element74\n    local element75\n\
    \    local element76\n    local element77\n    local element78\n    local element79\n\
    \    local element80\n    local element81\n    local element82\n    local element83\n\
    \    local element84\n    local element85\n    local element86\n    local element87\n\
    \    local element88\n    local element89\n    local element90\n    local element91\n\
    \    local element92\n    local element93\n    local element94\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_diff_index=0\n\
    \    local largest_diff_index=0\n    local smallest_diff_index2=0\n    local largest_diff_index2=0\n\
    \    local smallest_diff_index3=0\n    local largest_diff_index3=0\n    local\
    \ smallest_diff_index4=0\n    local largest_diff_index4=0\n    local smallest_diff_index5=0\n\
    \    local largest_diff_index5=0\n    local smallest_diff_index6=0\n    local\
    \ largest_diff_index6=0\n    local smallest_diff_index7=0\n    local largest_diff_index7=0\n\
    \    local smallest_diff_index8=0\n    local largest_diff_index8=0\n    local\
    \ smallest_diff_index9=0\n    local largest_diff_index9=0\n    local smallest_diff_index10=0\n\
    \    local largest_diff_index10=0\n    local smallest_diff_index11=0\n    local\
    \ largest_diff_index11=0\n    local smallest_diff_index12=0\n    local largest_diff_index12=0\n\
    \    local smallest_diff_index13=0\n    local largest_diff_index13=0\n    local\
    \ smallest_diff_index14=0\n    local largest_diff_index14=0\n    local smallest_diff_index15=0\n\
    \    local largest_diff_index15=0\n    local smallest_diff_index16=0\n    local\
    \ largest_diff_index16=0\n    local smallest_diff_index17=0\n    local largest_diff_index17=0\n\
    \    local smallest_diff_index18=0\n    local largest_diff_index18=0\n    local\
    \ smallest_diff_index19=0\n    local largest_diff_index19=0\n    local smallest_diff_index20=0\n\
    \    local largest_diff_index20=0\n    local smallest_diff_index21=0\n    local\
    \ largest_diff_index21=0\n    local smallest_diff_index22=0\n    local largest_diff_index22=0\n\
    \    local smallest_diff_index23=0\n    local largest_diff_index23=0\n    local\
    \ smallest_diff_index24=0\n    local largest_diff_index24=0\n    local smallest_diff_index25=0\n\
    \    local largest_diff_index25=0\n    local smallest_diff_index26=0\n    local\
    \ largest_diff_index\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local second_smallest_element=${elements_array[1]}\n\
    \    local smallest_element_index=0\n    local second_smallest_element_index=1\n\
    \    local smallest_element_distance=${smallest_element}\n    local second_smallest_element_distance=${second_smallest_element}\n\
    \    local smallest_element_distance_diff=${smallest_element_distance}\n    local\
    \ second_smallest_element_distance_diff=${second_smallest_element_distance}\n\
    \    local smallest_element_distance_diff_index=0\n    local second_smallest_element_distance_diff_index=1\n\
    \    local smallest_element_distance_diff_index=0\n    local second_smallest_element_distance_diff_index=1\n\
    \    while [ $smallest_element_distance_diff -gt 0 ]; do\n        smallest_element_distance_diff_index=$((smallest_element_distance_diff_index+1))\n\
    \        smallest_element_distance_diff=${elements_array[$smallest_element_distance_diff_index]}\n\
    \    done\n    while [ $second_smallest_element_distance_diff -gt 0 ]; do\n  \
    \      second_smallest_element_distance_diff_index=$((second_smallest_element_distance_diff_index+1))\n\
    \        second_smallest_element_distance_diff=${elements_array[$second_smallest_element_distance_diff_index]}\n\
    \    done\n    while [ $smallest_element_distance_diff_index -gt 0 ]; do\n   \
    \     smallest_element_distance_diff=${elements_array[$smallest_element_distance_diff_index]}\n\
    \        smallest_element_distance_diff_index=$((smallest_element_distance_diff_index-1))\n\
    \    done\n    while [ $second_smallest_element_distance_diff_index -gt 0 ]; do\n\
    \        second_smallest_element_distance_diff=${elements_array[$second_smallest_element_distance_diff_index]}\n\
    \        second_smallest_element_distance_diff_index=$((second_smallest_element_distance_diff_index-1))\n\
    \    done\n    local smallest_element_distance_diff_index=0\n    local second_smallest_element_distance_diff_index=1\n\
    \    local smallest_element_distance_diff_index=0\n    local second_smallest_element_distance_diff_index=1\n\
    \    while [ $smallest_element_distance_diff -gt 0 ]; do\n        smallest_element_distance_diff_index=$((smallest_element_distance_diff_index+1))\n\
    \        smallest_element_distance_diff=${elements_array[$smallest_element_distance_diff_index]}\n\
    \    done\n    while [ $second_smallest_element_distance_diff -gt 0 ]; do\n  \
    \      second_smallest_element_distance_diff_index=$((second_smallest_element_distance_diff_index+1))\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ibic6yq.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp2ibic6yq.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local result\n    local i\n    local j\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n\n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array\n    local i\n    local j\n    local diff\n    local\
    \ diff_index\n    local diff_value\n    local diff_value_index\n    local diff_value_index2\n\
    \    local diff_value_index3\n    local diff_value_index4\n    local diff_value_index5\n\
    \    local diff_value_index6\n    local diff_value_index7\n    local diff_value_index8\n\
    \    local diff_value_index9\n    local diff_value_index10\n    local diff_value_index11\n\
    \    local diff_value_index12\n    local diff_value_index13\n    local diff_value_index14\n\
    \    local diff_value_index15\n    local diff_value_index16\n    local diff_value_index17\n\
    \    local diff_value_index18\n    local diff_value_index19\n    local diff_value_index20\n\
    \    local diff_value_index21\n    local diff_value_index22\n    local diff_value_index23\n\
    \    local diff_value_index24\n    local diff_value_index25\n    local diff_value_index26\n\
    \    local diff_value_index27\n    local diff_value_index28\n    local diff_value_index29\n\
    \    local diff_value_index30\n    local diff_value_index31\n    local diff_value_index32\n\
    \    local diff_value_index33\n    local diff_value_index34\n    local diff_value_index35\n\
    \    local diff_value_index36\n    local diff_value_index37\n    local diff_value_index38\n\
    \    local diff_value_index39\n    local diff_value_index40\n    local diff_value_index41\n\
    \    local diff_value_index42\n    local diff_value_index43\n    local diff_value_index44\n\
    \    local diff_value_index45\n    local diff_value_index46\n    local diff_value_index47\n\
    \    local diff_value_index48\n    local diff_value_index49\n    local diff_value_index50\n\
    \    local diff_value_index51\n    local diff_value_index52\n    local diff_value_index53\n\
    \    local diff_value_index54\n    local diff_value_index55\n    local diff_value_index56\n\
    \    local diff_value_index57\n    local diff_value_index58\n    local diff_value_index59\n\
    \    local diff_value_index60\n    local diff_value_index61\n    local diff_value_index62\n\
    \    local diff_value_index63\n    local diff_value_index64\n    local diff\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local element\n    local element_index\n    local element_count\n    local\
    \ element_count2\n    local element_count3\n    local element_count4\n    local\
    \ element_count5\n    local element_count6\n    local element_count7\n    local\
    \ element_count8\n    local element_count9\n    local element_count10\n    local\
    \ element_count11\n    local element_count12\n    local element_count13\n    local\
    \ element_count14\n    local element_count15\n    local element_count16\n    local\
    \ element_count17\n    local element_count18\n    local element_count19\n    local\
    \ element_count20\n    local element_count21\n    local element_count22\n    local\
    \ element_count23\n    local element_count24\n    local element_count25\n    local\
    \ element_count26\n    local element_count27\n    local element_count28\n    local\
    \ element_count29\n    local element_count30\n    local element_count31\n    local\
    \ element_count32\n    local element_count33\n    local element_count34\n    local\
    \ element_count35\n    local element_count36\n    local element_count37\n    local\
    \ element_count38\n    local element_count39\n    local element_count40\n    local\
    \ element_count41\n    local element_count42\n    local element_count43\n    local\
    \ element_count44\n    local element_count45\n    local element_count46\n    local\
    \ element_count47\n    local element_count48\n    local element_count49\n    local\
    \ element_count50\n    local element_count51\n    local element_count52\n    local\
    \ element_count53\n    local element_count54\n    local element_count55\n    local\
    \ element_count56\n    local element_count57\n    local element_count58\n    local\
    \ element_count59\n    local element_count60\n    local element_count61\n    local\
    \ element_count62\n    local element_count63\n    local element_count64\n    local\
    \ element_count65\n    local element_count66\n    local element_count67\n    local\
    \ element_count68\n    local element_count69\n    local element_count70\n    local\
    \ element_count71\n    local element_count72\n    local element_count73\n    local\
    \ element_count74\n    local element_count75\n    local element_count76\n    local\
    \ element_count77\n    local element_count78\n    local element_count\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest\n  local\
    \ largest\n  local i\n  local j\n  local elements\n  local element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n  local smallest_element\n  local largest_element\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element\n\
    \  local largest_element\n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_index\n    local element_value\n    local element_value_as_string\n\
    \    local element_value_as_number\n    local element_value_as_number_index\n\
    \    local element_value_as_number_value\n    local element_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number\n    local element_value_as_number_value_as_number_index\n\
    \    local element_value_as_number_value_as_number_value\n    local element_value_as_number_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number_value_as_number\n    local\
    \ element_value_as_number_value_as_number_value_as_number_index\n    local element_value_as_number_value_as_number_value_as_number_value\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_index\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_index\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_index\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_string\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_value_as_number_index\n\
    \    local element_value_as_number_value_as_number_value_as_number_value_as_number_value_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local index=0\n    local smallest_index=\n\
    \    local largest_index=\n    while [ $index -lt ${#numbers} ]; do\n        local\
    \ current=$( echo \"${numbers[$index]}\" | tr -d '[[:space:]]' )\n        local\
    \ smallest_diff=$( echo \"${closest[$smallest_index]}\" | tr -d '[[:space:]]'\
    \ )\n        local largest_diff=$( echo \"${closest[$largest_index]}\" | tr -d\
    \ '[[:space:]]' )\n        if [ \"$smallest_diff\" == \"$current\" ]; then\n \
    \           smallest=\"$current\"\n            smallest_index=$index\n       \
    \ fi\n        if [ \"$largest_diff\" == \"$current\" ]; then\n            largest=\"\
    $current\"\n            largest_index=$index\n        fi\n        ((index++))\n\
    \    done\n    echo \"${closest[@]}\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local output\n\n    smallest=$(bc\
    \ <<< \"$numbers[0]\")\n    largest=$(bc <<< \"$numbers[-1]\")\n    for ((i=1;\
    \ i<${#numbers[@]}; i++)); do\n        smallest=$(bc <<< \"$smallest < $numbers[i]\"\
    )\n        largest=$(bc <<< \"$largest > $numbers[i]\")\n    done\n    smallest=$(bc\
    \ <<< \"$smallest < $largest\")\n    largest=$(bc <<< \"$smallest > $largest\"\
    )\n    for ((i=1; i<${#numbers[@]}; i++)); do\n        if (( smallest > numbers[i]\
    \ )); then\n            smallest=$numbers[i]\n        fi\n        if (( largest\
    \ < numbers[i] )); then\n            largest=$numbers[i]\n        fi\n    done\n\
    \    output=$(echo \"$smallest $largest\")\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=0\n    local largest_index=0\n \
    \   local smallest_diff=\n    local largest_diff=\n    local smallest_string=\n\
    \    local largest_string=\n    local smallest_string_index=\n    local largest_string_index=\n\
    \    local smallest_string_diff=\n    local largest_string_diff=\n    local smallest_string_string=\n\
    \    local largest_string_string=\n    local smallest_string_string_index=\n \
    \   local largest_string_string_index=\n    local smallest_string_string_diff=\n\
    \    local largest_string_string_diff=\n    local smallest_string_string_string=\n\
    \    local largest_string_string_string=\n    local smallest_string_string_string_index=\n\
    \    local largest_string_string_string_index=\n    local smallest_string_string_string_diff=\n\
    \    local largest_string_string_string_diff=\n    local smallest_string_string_string_string=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_string_string=\n    local smallest_string_string_string_string_index=\n\
    \    local largest_string_string_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_number_index=0\n    local largest_number_index=0\n\
    \    local smallest_number_string=$(echo $smallest_number | sed 's/ /\",\"/g')\n\
    \    local largest_number_string=$(echo $largest_number | sed 's/ /\",\"/g')\n\
    \    local smallest_number_array=($smallest_number_string)\n    local largest_number_array=($largest_number_string)\n\
    \    local smallest_number_length=${#smallest_number_array[@]}\n    local largest_number_length=${#largest_number_array[@]}\n\
    \    local smallest_number_string=$(echo $smallest_number | sed 's/ /\",\"/g')\n\
    \    local largest_number_string=$(echo $largest_number | sed 's/ /\",\"/g')\n\
    \    local smallest_number_array=($smallest_number_string)\n    local largest_number_array=($largest_number_string)\n\
    \    local smallest_number_length=${#smallest_number_array[@]}\n    local largest_number_length=${#largest_number_array[@]}\n\
    \    local smallest_number_string=$(echo $smallest_number | sed 's/ /\",\"/g')\n\
    \    local largest_number_string=$(echo $largest_number | sed 's/ /\",\"/g')\n\
    \    local smallest_number_array=($smallest_number_string)\n    local largest_number_array=($largest_number_string)\n\
    \    local smallest_number_length=${#smallest_number_array[@]}\n    local largest_number_length=${#largest_number_array[@]}\n\
    \    local smallest_number_string=$(echo $smallest_number | sed 's/ /\",\"/g')\n\
    \    local largest_number_string=$(echo $largest_number | sed 's/ /\",\"/g')\n\
    \    local smallest_number_array=($smallest_number_string)\n    local largest_number_array=($largest_number_string)\n\
    \    local smallest_number_length=${#smallest_number_array[@]}\n    local largest_number_length=${#largest_number_array[@]}\n\
    \    local smallest_number_string=$(echo $smallest_number | sed 's/ /\",\"/g')\n\
    \    local largest_number_string=$(echo $largest_number | sed 's/ /\",\"/g')\n\
    \    local smallest_number_array=($smallest_number_string)\n    local largest_number_array=($largest_number_string)\n\
    \    local smallest_number_length=${#smallest_number_array[@]}\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local elements\n    local smallest\n\
    \    local largest\n    local element\n    local element\n    local result\n \
    \   local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local result\n    local result\n\
    \    local result\n    local result\n    local result\n    local result\n    local\
    \ result\n    local result\n    local result\n    local \n}\n\ncandidate() {\n\
    \    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local element\n    local i\n    local j\n    local\
    \ smallest_index\n    local largest_index\n    local smallest_value\n    local\
    \ largest_value\n    local smallest_element\n    local largest_element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n    local element\n    local\
    \ element\n    local element\n    local element\n\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest\n \
    \   local closest2\n    local i\n    local j\n    local closest1\n    local closest2\n\
    \    local smallest\n    local largest\n    local number\n    local number1\n\
    \    local number2\n    local number3\n    local number4\n    local number5\n\
    \    local number6\n    local number7\n    local number8\n    local number9\n\
    \    local number10\n    local number11\n    local number12\n    local number13\n\
    \    local number14\n    local number15\n    local number16\n    local number17\n\
    \    local number18\n    local number19\n    local number20\n    local number21\n\
    \    local number22\n    local number23\n    local number24\n    local number25\n\
    \    local number26\n    local number27\n    local number28\n    local number29\n\
    \    local number30\n    local number31\n    local number32\n    local number33\n\
    \    local number34\n    local number35\n    local number36\n    local number37\n\
    \    local number38\n    local number39\n    local number40\n    local number41\n\
    \    local number42\n    local number43\n    local number44\n    local number45\n\
    \    local number46\n    local number47\n    local number48\n    local number49\n\
    \    local number50\n    local number51\n    local number52\n    local number53\n\
    \    local number54\n    local number55\n    local number56\n    local number57\n\
    \    local number58\n    local number59\n    local number60\n    local number61\n\
    \    local number62\n    local number63\n    local number64\n    local number65\n\
    \    local number66\n    local number67\n    local number68\n    local number69\n\
    \    local number70\n    local number71\n    local number72\n    local number73\n\
    \    local number74\n    local number75\n    local number76\n    local number77\n\
    \    local number78\n    local number79\n    local number80\n    local number81\n\
    \    local number82\n    local number83\n    local number84\n    local number85\n\
    \    local number86\n    local number87\n    local number88\n    local number89\n\
    \    local number90\n    local number91\n    local number92\n    local number93\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local elements\n    local closest\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local k\n\
    \    local elements\n    local closest\n    local smallest\n    local largest\n\
    \    local element\n    local i\n    local j\n    local k\n    local elements\n\
    \    local closest\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local k\n    local elements\n    local closest\n\
    \    local smallest\n    local largest\n    local element\n    local i\n    local\
    \ j\n    local k\n    local elements\n    local closest\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local k\n\
    \    local elements\n    local closest\n    local smallest\n    local largest\n\
    \    local element\n    local i\n    local j\n    local k\n    local elements\n\
    \    local closest\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local k\n    local elements\n    local closest\n\
    \    local smallest\n    local largest\n    local element\n    local i\n    local\
    \ j\n    local k\n    local elements\n    local closest\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local k\n\
    \    local elements\n    local closest\n    local smallest\n    local largest\n\
    \    local element\n    local i\n    local j\n    local k\n    local elements\n\
    \    local closest\n    local smallest\n    local largest\n    local element\n\
    \    local i\n    local j\n    local k\n    local elements\n    local closest\n\
    \    local smallest\n    local largest\n    local element\n    local i\n    local\
    \ j\n    local k\n    local elements\n    local closest\n    local smallest\n\
    \    local largest\n    local element\n    local i\n    local j\n    local k\n\
    \    local elements\n    local closest\n    local smallest\n    local largest\n\
    \    local element\n    local i\n    local j\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local min=\"\
    $(echo \"$numbers\" | awk '{print $1}' | sort -n | head -1)\"\n    local max=\"\
    $(echo \"$numbers\" | awk '{print $1}' | sort -n | tail -1)\"\n    local output\n\
    \    for number in $numbers\n    do\n        local diff=\"$(( $(echo \"$number\
    \ $max\" | awk '{print $1 - $2}') ))\"\n        if [ \"$diff\" -le 0 ]\n     \
    \   then\n            output=\"$number\"\n            break\n        elif [ \"\
    $diff\" -gt 0 ]\n        then\n            output=\"$min\"\n            break\n\
    \        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_count\n\
    \    local element\n    local element_value\n    local element_count\n    local\
    \ element\n    local element_value\n    local element_count\n    local element\n\
    \    local element_value\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_count\n    local element\n    local element_value\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_count\n\
    \    local element\n    local element_value\n    local element_count\n    local\
    \ element\n    local element_value\n    local element_count\n    local element\n\
    \    local element_value\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_count\n    local element\n    local element_value\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_count\n\
    \    local element\n    local element_value\n    local element_count\n    local\
    \ element\n    local element_value\n    local element_count\n    local element\n\
    \    local element_value\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_count\n    local element\n    local element_value\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_count\n\
    \    local element\n    local element_value\n    local element_count\n    local\
    \ element\n    local element_value\n    local element_count\n    local element\n\
    \    local element_value\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_count\n    local element\n    local element_value\n\
    \    local element_count\n    local element\n    local element_value\n    local\
    \ element_count\n    local element\n    local element_value\n    local element_count\n\
    \    local element\n    local element_value\n    local element_count\n    local\
    \ element\n    local element_value\n    local element_count\n    local element\n\
    \    local element_value\n    local element_count\n    local element\n    local\
    \ element_value\n    local element_count\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element3\n    local element4\n    local element5\n    local element6\n\
    \    local element7\n    local element8\n    local element9\n    local element10\n\
    \    local element11\n    local element12\n    local element13\n    local element14\n\
    \    local element15\n    local element16\n    local element17\n    local element18\n\
    \    local element19\n    local element20\n    local element21\n    local element22\n\
    \    local element23\n    local element24\n    local element25\n    local element26\n\
    \    local element27\n    local element28\n    local element29\n    local element30\n\
    \    local element31\n    local element32\n    local element33\n    local element34\n\
    \    local element35\n    local element36\n    local element37\n    local element38\n\
    \    local element39\n    local element40\n    local element41\n    local element42\n\
    \    local element43\n    local element44\n    local element45\n    local element46\n\
    \    local element47\n    local element48\n    local element49\n    local element50\n\
    \    local element51\n    local element52\n    local element53\n    local element54\n\
    \    local element55\n    local element56\n    local element57\n    local element58\n\
    \    local element59\n    local element60\n    local element61\n    local element62\n\
    \    local element63\n    local element64\n    local element65\n    local element66\n\
    \    local element67\n    local element68\n    local element69\n    local element70\n\
    \    local element71\n    local element72\n    local element73\n    local element74\n\
    \    local element75\n    local element76\n    local element77\n    local element78\n\
    \    local element79\n    local element80\n    local element81\n    local element82\n\
    \    local element83\n    local element84\n    local element85\n    local element86\n\
    \    local element87\n    local element88\n    local element89\n    local element90\n\
    \    local element91\n    local element92\n    local element93\n    local element94\n\
    \    local element95\n    local element96\n    local element97\n    local element98\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    local\
    \ smallest_element_distance=${smallest_element}\n    local largest_element_distance=${largest_element}\n\
    \    local smallest_element_distance_index=0\n    local largest_element_distance_index=0\n\
    \    local smallest_element_distance_difference=${smallest_element}\n    local\
    \ largest_element_distance_difference=${largest_element}\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index=0\n\
    \    local largest_element_distance_difference_index=0\n    local smallest_element_distance_difference_index\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local element2\n\
    \    local element2_index\n    local index\n    local element1\n    local element1_index\n\
    \    local index2\n    local index1\n    local element1_value\n    local element2_value\n\
    \    local element1_value2\n    local element2_value2\n    local element1_value3\n\
    \    local element2_value3\n    local element1_value4\n    local element2_value4\n\
    \    local element1_value5\n    local element2_value5\n    local element1_value6\n\
    \    local element2_value6\n    local element1_value7\n    local element2_value7\n\
    \    local element1_value8\n    local element2_value8\n    local element1_value9\n\
    \    local element2_value9\n    local element1_value10\n    local element2_value10\n\
    \    local element1_value11\n    local element2_value11\n    local element1_value12\n\
    \    local element2_value12\n    local element1_value13\n    local element2_value13\n\
    \    local element1_value14\n    local element2_value14\n    local element1_value15\n\
    \    local element2_value15\n    local element1_value16\n    local element2_value16\n\
    \    local element1_value17\n    local element2_value17\n    local element1_value18\n\
    \    local element2_value18\n    local element1_value19\n    local element2_value19\n\
    \    local element1_value20\n    local element2_value20\n    local element1_value21\n\
    \    local element2_value21\n    local element1_value22\n    local element2_value22\n\
    \    local element1_value23\n    local element2_value23\n    local element1_value24\n\
    \    local element2_value24\n    local element1_value25\n    local element2_value25\n\
    \    local element1_value26\n    local element2_value26\n    local element1_value27\n\
    \    local element2_value27\n    local element1_value28\n    local element2_value28\n\
    \    local element1_value29\n    local element2_value29\n    local element1_value30\n\
    \    local element2_value30\n    local element1_value31\n    local element2_value31\n\
    \    local element1_value32\n    local element2_value32\n    local element\n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local numbers=$1\n  local closest=\n  local\
    \ closest2=\n  local closest3=\n  local closest4=\n  local closest5=\n  local\
    \ closest6=\n  local closest7=\n  local closest8=\n  local closest9=\n  local\
    \ closest10=\n  local closest11=\n  local closest12=\n  local closest13=\n  local\
    \ closest14=\n  local closest15=\n  local closest16=\n  local closest17=\n  local\
    \ closest18=\n  local closest19=\n  local closest20=\n  local closest21=\n  local\
    \ closest22=\n  local closest23=\n  local closest24=\n  local closest25=\n  local\
    \ closest26=\n  local closest27=\n  local closest28=\n  local closest29=\n  local\
    \ closest30=\n  local closest31=\n  local closest32=\n  local closest33=\n  local\
    \ closest34=\n  local closest35=\n  local closest36=\n  local closest37=\n  local\
    \ closest38=\n  local closest39=\n  local closest40=\n  local closest41=\n  local\
    \ closest42=\n  local closest43=\n  local closest44=\n  local closest45=\n  local\
    \ closest46=\n  local closest47=\n  local closest48=\n  local closest49=\n  local\
    \ closest50=\n  local closest51=\n  local closest52=\n  local closest53=\n  local\
    \ closest54=\n  local closest55=\n  local closest56=\n  local closest57=\n  local\
    \ closest58=\n  local closest59=\n  local closest60=\n  local closest61=\n  local\
    \ closest62=\n  local closest63=\n  local closest64=\n  local closest65=\n  local\
    \ closest66=\n  local closest67=\n  local closest68=\n  local closest69=\n  local\
    \ closest70=\n  local closest71=\n  local closest72=\n  local closest73=\n  local\
    \ closest74=\n  local closest75=\n  local closest76=\n  local closest77=\n  local\
    \ closest78=\n  local closest79=\n  local closest80=\n  local closest81=\n  local\
    \ closest82=\n  local closest83=\n  local closest84=\n  local closest85=\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local smallest_index\n    local largest_index\n    local element\n    local\
    \ index\n    local i\n    local j\n    local elements\n    local element\n   \
    \ local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local element\n    local index\n    local i\n  \
    \  local j\n    local elements\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local smallest_index\n    local largest_index\n    local element\n    local\
    \ index\n    local i\n    local j\n    local elements\n    local element\n   \
    \ local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local element\n    local index\n    local i\n  \
    \  local j\n    local elements\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local smallest_index\n    local largest_index\n    local element\n    local\
    \ index\n    local i\n    local j\n    local elements\n    local element\n   \
    \ local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local element\n    local index\n    local i\n  \
    \  local j\n    local elements\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local i\n    local j\n    local elements\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local smallest_index\n    local largest_index\n    local \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=\"$1\"\n    local min=\"\
    $(echo \"$numbers\" | awk '{print $1}')\"\n    local max=\"$(echo \"$numbers\"\
    \ | awk '{print $2}')\"\n    local output\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local numbers=\n    local i=\n \
    \   local j=\n    local k=\n    local element\n    local element2\n    local smallest_diff\n\
    \    local largest_diff\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element2\n    local largest_element2\n    local smallest_element3\n\
    \    local largest_element3\n    local smallest_element4\n    local largest_element4\n\
    \    local smallest_element5\n    local largest_element5\n    local smallest_element6\n\
    \    local largest_element6\n    local smallest_element7\n    local largest_element7\n\
    \    local smallest_element8\n    local largest_element8\n    local smallest_element9\n\
    \    local largest_element9\n    local smallest_element10\n    local largest_element10\n\
    \    local smallest_element11\n    local largest_element11\n    local smallest_element12\n\
    \    local largest_element12\n    local smallest_element13\n    local largest_element13\n\
    \    local smallest_element14\n    local largest_element14\n    local smallest_element15\n\
    \    local largest_element15\n    local smallest_element16\n    local largest_element16\n\
    \    local smallest_element17\n    local largest_element17\n    local smallest_element18\n\
    \    local largest_element18\n    local smallest_element19\n    local largest_element19\n\
    \    local smallest_element20\n    local largest_element20\n    local smallest_element21\n\
    \    local largest_element21\n    local smallest_element22\n    local largest_element22\n\
    \    local smallest_element23\n    local largest_element23\n    local smallest_element24\n\
    \    local largest_element24\n    local smallest_element25\n    local largest_element25\n\
    \    local smallest_element26\n    local largest_element26\n    local smallest_element27\n\
    \    local largest_element27\n    local smallest_element28\n    local largest_element28\n\
    \    local smallest_element29\n    local largest_element29\n    local smallest_element30\n\
    \    local largest_element30\n    local smallest_element31\n    local largest_element31\n\
    \    local smallest_element32\n    local largest_element32\n    local smallest_\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local elements_array=( $elements )\n    local elements_array_length=${#elements_array[@]}\n\
    \    local index\n    local elements_array_element\n    local elements_array_element_length\n\
    \    local element_length\n    local element_length_index\n    local element_length_index2\n\
    \    local element_length_index3\n    local element_length_index4\n    local element_length_index5\n\
    \    local element_length_index6\n    local element_length_index7\n    local element_length_index8\n\
    \    local element_length_index9\n    local element_length_index10\n    local\
    \ element_length_index11\n    local element_length_index12\n    local element_length_index13\n\
    \    local element_length_index14\n    local element_length_index15\n    local\
    \ element_length_index16\n    local element_length_index17\n    local element_length_index18\n\
    \    local element_length_index19\n    local element_length_index20\n    local\
    \ element_length_index21\n    local element_length_index22\n    local element_length_index23\n\
    \    local element_length_index24\n    local element_length_index25\n    local\
    \ element_length_index26\n    local element_length_index27\n    local element_length_index28\n\
    \    local element_length_index29\n    local element_length_index30\n    local\
    \ element_length_index31\n    local element_length_index32\n    local element_length_index33\n\
    \    local element_length_index34\n    local element_length_index35\n    local\
    \ element_length_index36\n    local element_length_index37\n    local element_length_index38\n\
    \    local element_length_index39\n    local element_length_index40\n    local\
    \ element_length_index41\n    local element_length_index42\n    local element_length_index43\n\
    \    local element_length_index44\n    local element_length_index45\n    local\
    \ element_length_index46\n    local element_length_index47\n    local element_length_index48\n\
    \    local element_length_index49\n    local element_length_index50\n    local\
    \ element_length_index51\n    local element_length_index52\n    local element_length_index53\n\
    \    local element_length_index54\n    local element_length_index55\n    local\
    \ element_length_index56\n    local element_length_index57\n    local element_length_index58\n\
    \    local element_length_index59\n    local element_length_index60\n    local\
    \ element_length_index61\n    local element_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements_array\n    local elements_array_index\n    local\
    \ elements_array_element\n    local elements_array_element_index\n    local elements_array_element_value\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_array_element_value_as_number\n    local elements_array_element_value_as_string\n\
    \    local elements_\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closestIndex=0\n    local element\n    local elementIndex=0\n    local\
    \ elementLength=${#elements}\n    local elementValue\n    local elementValueIndex\n\
    \    local elementValueLength\n    local elementValueValue\n    local elementValueValueIndex\n\
    \    local elementValueValueLength\n    local elementValueValueValue\n    local\
    \ elementValueValueValueIndex\n    local elementValueValueValueLength\n    local\
    \ elementValueValueValueValue\n    local elementValueValueValueValueIndex\n  \
    \  local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \    local elementValueValueValueValue\n    local elementValueValueValueValueIndex\n\
    \    local elementValueValueValueValueLength\n    local elementValueValueValueValue\n\
    \    local elementValueValueValueValueIndex\n    local elementValueValueValueValueLength\n\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local element\n    local result\n\
    \    local smallest_element\n    local largest_element\n    local smallest_index\n\
    \    local largest_index\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_distance_index\n    local largest_distance_index\n    local\
    \ smallest_distance_value\n    local largest_distance_value\n    local smallest_distance_element\n\
    \    local largest_distance_element\n    local smallest_distance_element_index\n\
    \    local largest_distance_element_index\n    local smallest_distance_element_value\n\
    \    local largest_distance_element_value\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    local largest_distance_element_value_index\n    local smallest_distance_element_value_index\n\
    \    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local element\n\
    \    local min_index\n    local max_index\n    local element\n    local min\n\
    \    local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n    local\
    \ element\n    local min\n    local max\n    local element\n    local min\n  \
    \  local max\n    local element\n    local min\n    local max\n    local element\n\
    \    local min\n    local max\n    local element\n    local min\n    local max\n\
    \    local element\n    local min\n    local max\n    local element\n    local\
    \ min\n    local max\n    local element\n    local min\n    local max\n\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ element\n    local element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_element\n    local largest_element\n\
    \    local smallest_distance\n    local largest_distance\n    local smallest_element\n\
    \    local largest_element\n    local smallest_distance\n    local largest_distance\n\
    \    local smallest_element\n    local largest_element\n    local smallest_distance\n\
    \    local largest_distance\n    local smallest_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local i\n    local j\n    local output\n\n    smallest=$(bc\
    \ <<< \"scale=2; $numbers[0]\")\n    largest=$(bc <<< \"scale=2; $numbers[-1]\"\
    )\n\n    for ((i=1; i<${#numbers[@]}; i++)); do\n        smallest=$(bc <<< \"\
    scale=2; $numbers[$i]\")\n        for ((j=i+1; j<${#numbers[@]}; j++)); do\n \
    \           largest=$(bc <<< \"scale=2; $numbers[$j]\")\n            if [ \"$smallest\"\
    \ -gt \"$largest\" ]; then\n                smallest=$largest\n            fi\n\
    \            if [ \"$largest\" -gt \"$smallest\" ]; then\n                largest=$smallest\n\
    \            fi\n        done\n        output+=(\"$smallest\")\n        output+=(\"\
    $largest\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=$(echo\
    \ $numbers | awk '{print $1}' | sort -n | head -1)\n    local largest=$(echo $numbers\
    \ | awk '{print $1}' | sort -n | tail -1)\n    local result=$(echo $numbers |\
    \ awk '{print $1}' | sort -n | head -2)\n    while read -r line; do\n        if\
    \ [ \"$line\" == \"$smallest\" ]; then\n            smallest=$result\n       \
    \ elif [ \"$line\" == \"$largest\" ]; then\n            largest=$result\n    \
    \    else\n            result=$(echo $line | awk '{print $1}' | sort -n | head\
    \ -2)\n        fi\n    done <<< \"$numbers\"\n    echo \"$smallest $largest\"\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local results=()\n    local element\n    local i\n\
    \    local j\n    local smallest_index\n    local largest_index\n    local element\n\
    \    local smallest_value\n    local largest_value\n    local diff\n    local\
    \ diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local diff_index\n    local diff_value\n    local diff_index\n    local diff_value\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local elements=\n    local i=\n\
    \    local j=\n    local element\n    local diff\n    local diff1\n    local diff2\n\
    \    local diff3\n    local diff4\n    local diff5\n    local diff6\n    local\
    \ diff7\n    local diff8\n    local diff9\n    local diff10\n    local diff11\n\
    \    local diff12\n    local diff13\n    local diff14\n    local diff15\n    local\
    \ diff16\n    local diff17\n    local diff18\n    local diff19\n    local diff20\n\
    \    local diff21\n    local diff22\n    local diff23\n    local diff24\n    local\
    \ diff25\n    local diff26\n    local diff27\n    local diff28\n    local diff29\n\
    \    local diff30\n    local diff31\n    local diff32\n    local diff33\n    local\
    \ diff34\n    local diff35\n    local diff36\n    local diff37\n    local diff38\n\
    \    local diff39\n    local diff40\n    local diff41\n    local diff42\n    local\
    \ diff43\n    local diff44\n    local diff45\n    local diff46\n    local diff47\n\
    \    local diff48\n    local diff49\n    local diff50\n    local diff51\n    local\
    \ diff52\n    local diff53\n    local diff54\n    local diff55\n    local diff56\n\
    \    local diff57\n    local diff58\n    local diff59\n    local diff60\n    local\
    \ diff61\n    local diff62\n    local diff63\n    local diff64\n    local diff65\n\
    \    local diff66\n    local diff67\n    local diff68\n    local diff69\n    local\
    \ diff70\n    local diff71\n    local diff72\n    local diff73\n    local diff74\n\
    \    local diff75\n    local diff76\n    local diff77\n    local diff78\n    local\
    \ diff79\n    local diff80\n    local diff81\n    local diff82\n    local diff83\n\
    \    local diff84\n    local diff85\n    local diff86\n    local diff87\n    local\
    \ diff88\n    local diff89\n    local diff90\n    local diff91\n    local diff92\n\
    \    local diff93\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_sorted=$(echo\
    \ $elements | tr \" \" \"\\n\")\n    local smallest_element=$(echo $elements_sorted\
    \ | head -1)\n    local smallest_element_index=$(echo $elements_sorted | wc -l\
    \ | xargs)\n    local smallest_element_value=$(echo $elements_sorted | head -$smallest_element_index)\n\
    \    local smallest_element_index=$(($smallest_element_index+1))\n    local smallest_element_value2=$smallest_element_value\n\
    \    local smallest_element_value3=$smallest_element_value\n    local smallest_element_value4=$smallest_element_value\n\
    \    local smallest_element_value5=$smallest_element_value\n    local smallest_element_value6=$smallest_element_value\n\
    \    local smallest_element_value7=$smallest_element_value\n    local smallest_element_value8=$smallest_element_value\n\
    \    local smallest_element_value9=$smallest_element_value\n    local smallest_element_value10=$smallest_element_value\n\
    \    local smallest_element_value11=$smallest_element_value\n    local smallest_element_value12=$smallest_element_value\n\
    \    local smallest_element_value13=$smallest_element_value\n    local smallest_element_value14=$smallest_element_value\n\
    \    local smallest_element_value15=$smallest_element_value\n    local smallest_element_value16=$smallest_element_value\n\
    \    local smallest_element_value17=$smallest_element_value\n    local smallest_element_value18=$smallest_element_value\n\
    \    local smallest_element_value19=$smallest_element_value\n    local smallest_element_value20=$smallest_element_value\n\
    \    local smallest_element_value21=$smallest_element_value\n    local smallest_element_value22=$smallest_element_value\n\
    \    local smallest_element_value23=$smallest_element_value\n    local smallest_element_value24=$smallest_element_value\n\
    \    local smallest_element_value25=$smallest_element_value\n    local smallest_element_value26=$smallest_element_value\n\
    \    local smallest_element_value27=$smallest_element_value\n    local smallest_element_value28=$smallest_element_value\n\
    \    local smallest_element_value29=$smallest_element_value\n    local smallest_element_value30=$smallest_element_value\n\
    \    local smallest_element_value31=$smallest_element_value\n    local smallest_element_value32=$smallest_element_value\n\
    \    local smallest_element_value33=$smallest_element_value\n    local smallest_element_value34\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_diff=0\n    local max_diff=0\n    local\
    \ element\n    local element2\n    local i\n    local j\n    local diff\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_index2=0\n\
    \    local max_index2=0\n    local min_index3=0\n    local max_index3=0\n    local\
    \ min_index4=0\n    local max_index4=0\n    local min_index5=0\n    local max_index5=0\n\
    \    local min_index6=0\n    local max_index6=0\n    local min_index7=0\n    local\
    \ max_index7=0\n    local min_index8=0\n    local max_index8=0\n    local min_index9=0\n\
    \    local max_index9=0\n    local min_index10=0\n    local max_index10=0\n  \
    \  local min_index11=0\n    local max_index11=0\n    local min_index12=0\n   \
    \ local max_index12=0\n    local min_index13=0\n    local max_index13=0\n    local\
    \ min_index14=0\n    local max_index14=0\n    local min_index15=0\n    local max_index15=0\n\
    \    local min_index16=0\n    local max_index16=0\n    local min_index17=0\n \
    \   local max_index17=0\n    local min_index18=0\n    local max_index18=0\n  \
    \  local min_index19=0\n    local max_index19=0\n    local min_index20=0\n   \
    \ local max_index20=0\n    local min_index21=0\n    local max_index21=0\n    local\
    \ min_index22=0\n    local max_index22=0\n    local min_index23=0\n    local max_index23=0\n\
    \    local min_index24=0\n    local max_index24=0\n    local min_index25=0\n \
    \   local max_index25=0\n    local min_index26=0\n    local max_index26=0\n  \
    \  local min_index27=0\n    local max_index27=0\n    local min_index28=0\n   \
    \ local max_index28=0\n    local min_index29=0\n    local max_index29=0\n    local\
    \ min_index30=0\n    local max_index30=0\n    local min_index31=0\n    local max_index31=0\n\
    \    local min_index32=0\n    local max_index32=0\n    local min_index33=0\n \
    \   local max_index33=0\n    local min_index34=0\n    local max_index34=0\n  \
    \  local min_index35=0\n    local max_index35=0\n    local min_index36=0\n}\n\n\
    candidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_num=\n    local largest_num=\n\
    \    local smallest_diff=\n    local largest_diff=\n    local smallest_element=\n\
    \    local largest_element=\n    local elements=\n    local element\n    local\
    \ i\n    local j\n    local k\n    local diff\n    local diff2\n    local diff3\n\
    \    local diff4\n    local diff5\n    local diff6\n    local diff7\n    local\
    \ diff8\n    local diff9\n    local diff10\n    local diff11\n    local diff12\n\
    \    local diff13\n    local diff14\n    local diff15\n    local diff16\n    local\
    \ diff17\n    local diff18\n    local diff19\n    local diff20\n    local diff21\n\
    \    local diff22\n    local diff23\n    local diff24\n    local diff25\n    local\
    \ diff26\n    local diff27\n    local diff28\n    local diff29\n    local diff30\n\
    \    local diff31\n    local diff32\n    local diff33\n    local diff34\n    local\
    \ diff35\n    local diff36\n    local diff37\n    local diff38\n    local diff39\n\
    \    local diff40\n    local diff41\n    local diff42\n    local diff43\n    local\
    \ diff44\n    local diff45\n    local diff46\n    local diff47\n    local diff48\n\
    \    local diff49\n    local diff50\n    local diff51\n    local diff52\n    local\
    \ diff53\n    local diff54\n    local diff55\n    local diff56\n    local diff57\n\
    \    local diff58\n    local diff59\n    local diff60\n    local diff61\n    local\
    \ diff62\n    local diff63\n    local diff64\n    local diff65\n    local diff66\n\
    \    local diff67\n    local diff68\n    local diff69\n    local diff70\n    local\
    \ diff71\n    local diff72\n    local diff73\n    local diff74\n    local diff75\n\
    \    local diff76\n    local diff77\n    local diff78\n    local diff79\n    local\
    \ diff80\n    local diff81\n    local diff82\n    local diff83\n    local diff84\n\
    \    local diff85\n    local diff86\n    \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local element\n    local element2\n    local element3\n    local element4\n\
    \    local element5\n    local element6\n    local element7\n    local element8\n\
    \    local element9\n    local element10\n    local element11\n    local element12\n\
    \    local element13\n    local element14\n    local element15\n    local element16\n\
    \    local element17\n    local element18\n    local element19\n    local element20\n\
    \    local element21\n    local element22\n    local element23\n    local element24\n\
    \    local element25\n    local element26\n    local element27\n    local element28\n\
    \    local element29\n    local element30\n    local element31\n    local element32\n\
    \    local element33\n    local element34\n    local element35\n    local element36\n\
    \    local element37\n    local element38\n    local element39\n    local element40\n\
    \    local element41\n    local element42\n    local element43\n    local element44\n\
    \    local element45\n    local element46\n    local element47\n    local element48\n\
    \    local element49\n    local element50\n    local element51\n    local element52\n\
    \    local element53\n    local element54\n    local element55\n    local element56\n\
    \    local element57\n    local element58\n    local element59\n    local element60\n\
    \    local element61\n    local element62\n    local element63\n    local element64\n\
    \    local element65\n    local element66\n    local element67\n    local element68\n\
    \    local element69\n    local element70\n    local element71\n    local element72\n\
    \    local element73\n    local element74\n    local element75\n    local element76\n\
    \    local element77\n    local element78\n    local element79\n    local element80\n\
    \    local element81\n    local element82\n    local element83\n    local element84\n\
    \    local element85\n    local element86\n    local element87\n    local element88\n\
    \    local element89\n    local element90\n    local element91\n    local element92\n\
    \    local element93\n    local element94\n    local element95\n    local \n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 2
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local min=$2\n  \
    \  local max=$3\n    local closest=$4\n    local closest2=$5\n\n    local index=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_diff=999999999999\n\
    \    local max_diff=-1\n    local numbers_array=($numbers)\n\n    while [ $index\
    \ -lt ${#numbers_array[@]} ]; do\n        local number=${numbers_array[$index]}\n\
    \        local diff=$(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($(($\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp06w5upn6.sh: line 26: unexpected EOF while looking for matching
    `)''

    /tmp/tmp06w5upn6.sh: line 43: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local i\n    local j\n    local diff\n    local diff_index\n    local diff_value\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local diff_value_index\n    local diff_value_index\n\
    \    local diff_value_index\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \n    smallest_element=$(echo $numbers | awk '{print $1 < $smallest_number ? $1\
    \ : $smallest_number}')\n    largest_element=$(echo $numbers | awk '{print $1\
    \ > $largest_number ? $1 : $largest_number}')\n\n    echo $smallest_element\n\
    \    echo $largest_element\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'awk: cmd. line:1: {print $1 > $largest_number ? $1 : $largest_number}

    awk: cmd. line:1:                             ^ syntax error

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest\n \
    \   local smallest\n    local largest\n    local i\n    local j\n    local k\n\
    \    local output\n    local number\n    local number1\n    local number2\n  \
    \  local number3\n    local number4\n    local number5\n    local number6\n  \
    \  local number7\n    local number8\n    local number9\n    local number10\n \
    \   local number11\n    local number12\n    local number13\n    local number14\n\
    \    local number15\n    local number16\n    local number17\n    local number18\n\
    \    local number19\n    local number20\n    local number21\n    local number22\n\
    \    local number23\n    local number24\n    local number25\n    local number26\n\
    \    local number27\n    local number28\n    local number29\n    local number30\n\
    \    local number31\n    local number32\n    local number33\n    local number34\n\
    \    local number35\n    local number36\n    local number37\n    local number38\n\
    \    local number39\n    local number40\n    local number41\n    local number42\n\
    \    local number43\n    local number44\n    local number45\n    local number46\n\
    \    local number47\n    local number48\n    local number49\n    local number50\n\
    \    local number51\n    local number52\n    local number53\n    local number54\n\
    \    local number55\n    local number56\n    local number57\n    local number58\n\
    \    local number59\n    local number60\n    local number61\n    local number62\n\
    \    local number63\n    local number64\n    local number65\n    local number66\n\
    \    local number67\n    local number68\n    local number69\n    local number70\n\
    \    local number71\n    local number72\n    local number73\n    local number74\n\
    \    local number75\n    local number76\n    local number77\n    local number78\n\
    \    local number79\n    local number80\n    local number81\n    local number82\n\
    \    local number83\n    local number84\n    local number85\n    local number86\n\
    \    local number87\n    local number88\n    local number89\n    local number90\n\
    \    local number91\n    local number92\n    local number93\n    local number94\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_index\n    local largest_index\n\
    \    local element\n    local index\n    local result\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local \n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_value\n    local element_index\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local elements_array=($elements)\n\
    \    local smallest_element=${elements_array[0]}\n    local largest_element=${elements_array[0]}\n\
    \    local smallest_element_index=0\n    local largest_element_index=0\n    local\
    \ smallest_element_string=\"\"\n    local largest_element_string=\"\"\n    local\
    \ smallest_element_float=1.0\n    local largest_element_float=1.0\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n    local largest_element_float_value=\"\"\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n    local largest_element_float_value=\"\"\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n    local largest_element_float_value=\"\"\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n    local largest_element_float_value=\"\"\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n    local largest_element_float_value=\"\"\n    local smallest_element_string_index=0\n\
    \    local largest_element_string_index=0\n    local smallest_element_float_index=0\n\
    \    local largest_element_float_index=0\n    local smallest_element_string_value=\"\
    \"\n    local largest_element_string_value=\"\"\n    local smallest_element_float_value=\"\
    \"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element_index\n    local largest_element_index\n\
    \    local smallest_element_value\n    local largest_element_value\n    local\
    \ element\n    local element_value\n    local element_index\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local element_count\n    local element_count\n    local element_count\n    local\
    \ element_count\n    local element_count\n    local element_count\n    local element_count\n\
    \    local element_count\n    local element_count\n    local element_count\n \
    \   local element_count\n    local element_count\n    local element_count\n  \
    \  local element_count\n    local element_count\n    local element_count\n   \
    \ local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local index=0\n    local number\n    local element\n    local element_index\n\
    \    local element_number\n    local element_number_index\n    local element_number_string\n\
    \    local element_number_string_length\n    local element_number_string_length_index\n\
    \    local element_number_string_length_index+1\n    local element_number_string_length_index+2\n\
    \    local element_number_string_length_index+3\n    local element_number_string_length_index+4\n\
    \    local element_number_string_length_index+5\n    local element_number_string_length_index+6\n\
    \    local element_number_string_length_index+7\n    local element_number_string_length_index+8\n\
    \    local element_number_string_length_index+9\n    local element_number_string_length_index+10\n\
    \    local element_number_string_length_index+11\n    local element_number_string_length_index+12\n\
    \    local element_number_string_length_index+13\n    local element_number_string_length_index+14\n\
    \    local element_number_string_length_index+15\n    local element_number_string_length_index+16\n\
    \    local element_number_string_length_index+17\n    local element_number_string_length_index+18\n\
    \    local element_number_string_length_index+19\n    local element_number_string_length_index+20\n\
    \    local element_number_string_length_index+21\n    local element_number_string_length_index+22\n\
    \    local element_number_string_length_index+23\n    local element_number_string_length_index+24\n\
    \    local element_number_string_length_index+25\n    local element_number_string_length_index+26\n\
    \    local element_number_string_length_index+27\n    local element_number_string_length_index+28\n\
    \    local element_number_string_length_index+29\n    local element_number_string_length_index+30\n\
    \    local element_number_string_length_index+31\n    local element_number_string_length_index+32\n\
    \    local element_number_string_length_index+33\n    local element_number_string_length_index+34\n\
    \    local element_number_string_length_index+35\n    local element_number_string_length_index+36\n\
    \    local element_number_string_length_index+37\n    local element_number_string_length_index+38\n\
    \    local element_number_string_length_index+39\n    local element_number_string_length_index+40\n\
    \    local element_number_string_length_index+41\n    local element_number_string_length_index+42\n\
    \    local element_number_string_length_index+43\n    local element_\n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4nwqbjdd.sh: line 25: local: `element_number_string_length_index+1'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 26: local: `element_number_string_length_index+2'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 27: local: `element_number_string_length_index+3'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 28: local: `element_number_string_length_index+4'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 29: local: `element_number_string_length_index+5'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 30: local: `element_number_string_length_index+6'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 31: local: `element_number_string_length_index+7'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 32: local: `element_number_string_length_index+8'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 33: local: `element_number_string_length_index+9'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 34: local: `element_number_string_length_index+10'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 35: local: `element_number_string_length_index+11'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 36: local: `element_number_string_length_index+12'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 37: local: `element_number_string_length_index+13'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 38: local: `element_number_string_length_index+14'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 39: local: `element_number_string_length_index+15'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 40: local: `element_number_string_length_index+16'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 41: local: `element_number_string_length_index+17'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 42: local: `element_number_string_length_index+18'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 43: local: `element_number_string_length_index+19'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 44: local: `element_number_string_length_index+20'':
    not a valid identifier

    /tmp/tmp4nwqbjdd.sh: line 45: local: '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local diff\n    local diff2\n    local diff3\n\
    \    local diff4\n    local diff5\n    local diff6\n    local diff7\n    local\
    \ diff8\n    local diff9\n    local diff10\n    local diff11\n    local diff12\n\
    \    local diff13\n    local diff14\n    local diff15\n    local diff16\n    local\
    \ diff17\n    local diff18\n    local diff19\n    local diff20\n    local diff21\n\
    \    local diff22\n    local diff23\n    local diff24\n    local diff25\n    local\
    \ diff26\n    local diff27\n    local diff28\n    local diff29\n    local diff30\n\
    \    local diff31\n    local diff32\n    local diff33\n    local diff34\n    local\
    \ diff35\n    local diff36\n    local diff37\n    local diff38\n    local diff39\n\
    \    local diff40\n    local diff41\n    local diff42\n    local diff43\n    local\
    \ diff44\n    local diff45\n    local diff46\n    local diff47\n    local diff48\n\
    \    local diff49\n    local diff50\n    local diff51\n    local diff52\n    local\
    \ diff53\n    local diff54\n    local diff55\n    local diff56\n    local diff57\n\
    \    local diff58\n    local diff59\n    local diff60\n    local diff61\n    local\
    \ diff62\n    local diff63\n    local diff64\n    local diff65\n    local diff66\n\
    \    local diff67\n    local diff68\n    local diff69\n    local diff70\n    local\
    \ diff71\n    local diff72\n    local diff73\n    local diff74\n    local diff75\n\
    \    local diff76\n    local diff77\n    local diff78\n    local diff79\n    local\
    \ diff80\n    local diff81\n    local diff82\n    local diff83\n    local diff84\n\
    \    local diff85\n    local diff86\n    local diff87\n    local diff88\n    local\
    \ diff89\n    local diff90\n    local diff91\n    local diff92\n    local diff93\n\
    \    local diff94\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"\
    3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_index=0\n    local largest_index=0\n\
    \    local element\n    local elements_array\n    local element_array\n    local\
    \ element_index\n    local element_value\n    local element_value_index\n    local\
    \ element_value_index\n    local element_value_array\n    local element_value_array\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local element_value_array_index\n    local element_value_array_index\n\
    \    local element_value_array_index\n    local element_value_array_index\n  \
    \  local element_value_array_index\n    local element_value_array_index\n    local\
    \ element_value_array_index\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=0\n    local largest_index=0\n \
    \   local number\n    local index\n    local result\n    local count\n\n    IFS=$'\\\
    n' read -r -a numbers <<< \"$numbers\"\n\n    for (( index=0; index<${#numbers[@]};\
    \ index++ )); do\n        number=${numbers[$index]}\n        result=\n       \
    \ count=0\n        while [[ $count -lt 2 ]]; do\n            smallest=${numbers[$smallest_index]}\n\
    \            largest=${numbers[$largest_index]}\n            if [ \"$number\"\
    \ -gt \"$largest\" ]; then\n                largest=$number\n            fi\n\
    \            if [ \"$number\" -lt \"$smallest\" ]; then\n                smallest=$number\n\
    \            fi\n            (( count++ ))\n            (( smallest_index++ ))\n\
    \            (( largest_index++ ))\n        done\n        if [ \"$smallest_index\"\
    \ -eq \"$index\" ]; then\n            result=\"$smallest\"\n        fi\n     \
    \   if [ \"$largest_index\" -eq \"$index\" ]; then\n            result=\"$largest\"\
    \n        fi\n        echo \"$result\"\n    done\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwien1p5y.sh: line 30: [: 1.0 2.0 3.9 4.0 5.0 2.2: integer expression
    expected

    /tmp/tmpwien1p5y.sh: line 33: [: 1.0 2.0 3.9 4.0 5.0 2.2: integer expression expected

    /tmp/tmpwien1p5y.sh: line 30: [: 1.0 2.0 3.9 4.0 5.0 2.2: integer expression expected

    /tmp/tmpwien1p5y.sh: line 33: [: 1.0 2.0 3.9 4.0 5.0 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local smallest_index=\n    local\
    \ largest_index=\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    local index\n    local\
    \ element\n    local index\n    local element\n    local index\n    local element\n\
    \    local index\n    local element\n    local index\n    local element\n    local\
    \ index\n    local element\n    local index\n    local element\n    local index\n\
    \    local element\n    local index\n    local element\n    \n}\n\ncandidate()\
    \ {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_index\n    local element\n\
    \    local index\n    local min_index\n    local max_\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=${elements[0]}\n\
    \    local largest=${elements[0]}\n    local smallest_index=0\n    local largest_index=0\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_element=${elements[0]}\n\
    \    local smallest_diff=${smallest}\n    local largest_diff=${largest}\n    local\
    \ smallest_element=${elements[0]}\n    local largest_\n}\n\ncandidate() {\n  \
    \  find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\"\
    ) = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local diff\n    local diff1\n    local diff2\n    local diff3\n\
    \    local diff4\n    local diff5\n    local diff6\n    local diff7\n    local\
    \ diff8\n    local diff9\n    local diff10\n    local diff11\n    local diff12\n\
    \    local diff13\n    local diff14\n    local diff15\n    local diff16\n    local\
    \ diff17\n    local diff18\n    local diff19\n    local diff20\n    local diff21\n\
    \    local diff22\n    local diff23\n    local diff24\n    local diff25\n    local\
    \ diff26\n    local diff27\n    local diff28\n    local diff29\n    local diff30\n\
    \    local diff31\n    local diff32\n    local diff33\n    local diff34\n    local\
    \ diff35\n    local diff36\n    local diff37\n    local diff38\n    local diff39\n\
    \    local diff40\n    local diff41\n    local diff42\n    local diff43\n    local\
    \ diff44\n    local diff45\n    local diff46\n    local diff47\n    local diff48\n\
    \    local diff49\n    local diff50\n    local diff51\n    local diff52\n    local\
    \ diff53\n    local diff54\n    local diff55\n    local diff56\n    local diff57\n\
    \    local diff58\n    local diff59\n    local diff60\n    local diff61\n    local\
    \ diff62\n    local diff63\n    local diff64\n    local diff65\n    local diff66\n\
    \    local diff67\n    local diff68\n    local diff69\n    local diff70\n    local\
    \ diff71\n    local diff72\n    local diff73\n    local diff74\n    local diff75\n\
    \    local diff76\n    local diff77\n    local diff78\n    local diff79\n    local\
    \ diff80\n    local diff81\n    local diff82\n    local diff83\n    local diff84\n\
    \    local diff85\n    local diff86\n    local diff87\n    local diff88\n    local\
    \ diff89\n    local diff90\n    local diff91\n    local diff92\n    local diff93\n\
    \    local diff94\n    local diff\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local elements=\n    local element\n\
    \    local i\n    local j\n    local k\n    local diff\n    local diff1\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff89\n    local diff90\n    local diff91\n    local\
    \ diff92\n    local diff93\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") =\
    \ \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local min=$2\n \
    \   local max=$3\n    local min_index=0\n    local max_index=0\n    local min_diff=$((\
    \ ${#elements} + 1 ))\n    local max_diff=$(( ${#elements} + 1 ))\n    local element\n\
    \    local elements_array\n    local index\n    local diff\n    local elements_array_index\n\
    \    local elements_array_index2\n    local elements_array_index3\n    local elements_array_index4\n\
    \    local elements_array_index5\n    local elements_array_index6\n    local elements_array_index7\n\
    \    local elements_array_index8\n    local elements_array_index9\n    local elements_array_index10\n\
    \    local elements_array_index11\n    local elements_array_index12\n    local\
    \ elements_array_index13\n    local elements_array_index14\n    local elements_array_index15\n\
    \    local elements_array_index16\n    local elements_array_index17\n    local\
    \ elements_array_index18\n    local elements_array_index19\n    local elements_array_index20\n\
    \    local elements_array_index21\n    local elements_array_index22\n    local\
    \ elements_array_index23\n    local elements_array_index24\n    local elements_array_index25\n\
    \    local elements_array_index26\n    local elements_array_index27\n    local\
    \ elements_array_index28\n    local elements_array_index29\n    local elements_array_index30\n\
    \    local elements_array_index31\n    local elements_array_index32\n    local\
    \ elements_array_index33\n    local elements_array_index34\n    local elements_array_index35\n\
    \    local elements_array_index36\n    local elements_array_index37\n    local\
    \ elements_array_index38\n    local elements_array_index39\n    local elements_array_index40\n\
    \    local elements_array_index41\n    local elements_array_index42\n    local\
    \ elements_array_index43\n    local elements_array_index44\n    local elements_array_index45\n\
    \    local elements_array_index46\n    local elements_array_index47\n    local\
    \ elements_array_index48\n    local elements_array_index49\n    local elements_array_index50\n\
    \    local elements_array_index51\n    local elements_array_index52\n    local\
    \ elements_array_index53\n    local elements_array_index54\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local elements_array=($elements)\n\
    \  local smallest_element\n  local largest_element\n  local smallest_element_index\n\
    \  local largest_element_index\n  local smallest_element_value\n  local largest_element_value\n\
    \  local smallest_element_value_as_string\n  local largest_element_value_as_string\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local largest_element_value_as_number\n\
    \  local smallest_element_value_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local element\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"\
    3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local distance\n\n    # Loop through each element in the list\n\
    \    for element in $elements; do\n        # Loop through each element in the\
    \ list\n        for (( i=1; i<=$#elements; i++ )); do\n            # If the current\
    \ element is the smallest, set smallest to it\n            if [ \"$smallest\"\
    \ == \"$element\" ]; then smallest=$element; fi\n            # If the current\
    \ element is the largest, set largest to it\n            if [ \"$largest\" ==\
    \ \"$element\" ]; then largest=$element; fi\n        done\n        # Set the closest\
    \ to the smallest element\n        closest=$smallest\n        # Set the closest\
    \ to the largest element\n        closest=$largest\n        # Set the smallest\
    \ to the smallest element\n        smallest=$element\n        # Set the largest\
    \ to the largest element\n        largest=$element\n    done\n    # Return the\
    \ elements in the order smallest to largest\n    echo \"$smallest\" \"$largest\"\
    \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base
    (error token is "1elements")

    /tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base (error
    token is "1elements")

    /tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base (error
    token is "1elements")

    /tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base (error
    token is "1elements")

    /tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base (error
    token is "1elements")

    /tmp/tmpumy_6sy8.sh: line 23: ((: i<=1elements: value too great for base (error
    token is "1elements")

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local element\n    local i\n   \
    \ local j\n    local k\n    local smallest_element\n    local largest_element\n\
    \    local elements_array\n    local element_array\n    local element\n    local\
    \ element_count\n    local element_count\n    local smallest_element_count\n \
    \   local largest_element_count\n    local smallest_element\n    local largest_element\n\
    \    local element_count\n    local smallest_element_count\n    local largest_element_count\n\
    \    local smallest_element\n    local largest_element\n    local element_count\n\
    \    local smallest_element_count\n    local largest_element_count\n    local\
    \ smallest_element\n    local largest_element\n    local element_count\n    local\
    \ smallest_element_count\n    local largest_element_count\n    local smallest_element\n\
    \    local largest_element\n    local element_count\n    local smallest_element_count\n\
    \    local largest_element_count\n    local smallest_element\n    local largest_element\n\
    \    local element_count\n    local smallest_element_count\n    local largest_element_count\n\
    \    local smallest_element\n    local largest_element\n    local element_count\n\
    \    local smallest_element_count\n    local largest_element_count\n    local\
    \ smallest_element\n    local largest_element\n    local element_count\n    local\
    \ smallest_element_count\n    local largest_element_count\n    local smallest_element\n\
    \    local largest_element\n    local element_count\n    local smallest_element_count\n\
    \    local largest_element_count\n    local smallest_element\n    local largest_element\n\
    \    local element_count\n    local smallest_element_count\n    local largest_element_count\n\
    \    local smallest_element\n    local largest_element\n    local element_count\n\
    \    local smallest_element_count\n    local largest_element_count\n    local\
    \ smallest_element\n    local largest_element\n    local element_count\n    local\
    \ smallest_element_count\n    local largest_element_count\n    local smallest_element\n\
    \    local largest_element\n    local element_count\n    local smallest_element_count\n\
    \    local largest_element_count\n    local smallest_element\n    local largest_element\n\
    \    local element_count\n    local smallest_element_count\n    local largest_element_count\n\
    \    local smallest_element\n    local largest_element\n    local element_count\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n  local elements=$1\n  local smallest_element\n\
    \  local next_smallest_element\n  local smallest_element_index\n  local next_smallest_element_index\n\
    \  local smallest_element_value\n  local next_smallest_element_value\n  local\
    \ smallest_element_value_as_string\n  local next_smallest_element_value_as_string\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_number\n  local next_smallest_element_value_as_number\n\
    \  local smallest_element_value_as_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local smallest_index\n    local largest_index\n    local\
    \ element\n    local elements=()\n    local elements_sorted\n    local index\n\
    \    local number\n    local numbers_sorted\n    local i\n    local j\n    local\
    \ k\n    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_sorted\n    local elements_sorted\n\
    \    local elements_sorted\n    local elements_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest\n \
    \   local closest2\n    local closest3\n    local closest4\n    local closest5\n\
    \    local closest6\n    local closest7\n    local closest8\n    local closest9\n\
    \    local closest10\n    local closest11\n    local closest12\n    local closest13\n\
    \    local closest14\n    local closest15\n    local closest16\n    local closest17\n\
    \    local closest18\n    local closest19\n    local closest20\n    local closest21\n\
    \    local closest22\n    local closest23\n    local closest24\n    local closest25\n\
    \    local closest26\n    local closest27\n    local closest28\n    local closest29\n\
    \    local closest30\n    local closest31\n    local closest32\n    local closest33\n\
    \    local closest34\n    local closest35\n    local closest36\n    local closest37\n\
    \    local closest38\n    local closest39\n    local closest40\n    local closest41\n\
    \    local closest42\n    local closest43\n    local closest44\n    local closest45\n\
    \    local closest46\n    local closest47\n    local closest48\n    local closest49\n\
    \    local closest50\n    local closest51\n    local closest52\n    local closest53\n\
    \    local closest54\n    local closest55\n    local closest56\n    local closest57\n\
    \    local closest58\n    local closest59\n    local closest60\n    local closest61\n\
    \    local closest62\n    local closest63\n    local closest64\n    local closest65\n\
    \    local closest66\n    local closest67\n    local closest68\n    local closest69\n\
    \    local closest70\n    local closest71\n    local closest72\n    local closest73\n\
    \    local closest74\n    local closest75\n    local closest76\n    local closest77\n\
    \    local closest78\n    local closest79\n    local closest80\n    local closest81\n\
    \    local closest82\n    local closest83\n    local closest84\n    local closest85\n\
    \    local closest86\n    local closest87\n    local closest88\n    local closest89\n\
    \    local closest90\n    local closest91\n    local closest92\n    local closest93\n\
    \    local closest94\n    local closest95\n    local closest96\n    local closest97\n\
    \    local closest98\n    local closest99\n    local closest100\n    local closest101\n\
    \    local \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local i\n    local j\n    local elements\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local largest_element\n    local smallest_element\n\
    \    local largest_element\n    local smallest_element\n    local largest_element\n\
    \    local smallest_element\n    local \n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local element\n    local index\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_element\n    local elements_array_element_index\n  \
    \  local elements_array_element_value\n    local elements_array_element_value_float\n\
    \    local elements_array_element_value_int\n    local elements_array_element_value_string\n\
    \    local elements_array_element_value_bool\n    local elements_array_element_value_null\n\
    \    local elements_array_element_value_array\n    local elements_array_element_value_array_index\n\
    \    local elements_array_element_value_array_element\n    local elements_array_element_value_array_element_index\n\
    \    local elements_array_element_value_array_element_value\n    local elements_array_element_value_array_element_value_float\n\
    \    local elements_array_element_value_array_element_value_int\n    local elements_array_element_value_array_element_value_string\n\
    \    local elements_array_element_value_array_element_value_bool\n    local elements_array_element_value_array_element_value_null\n\
    \    local elements_array_element_value_array_element_value_array\n    local elements_array_element_value_array_element_value_array_index\n\
    \    local elements_array_element_value_array_element_value_array_element\n  \
    \  local elements_array_element_value_array_element_value_array_element_index\n\
    \    local elements_array_element_value_array_element_value_array_element_value\n\
    \    local elements_array_element_value_array_element_value_array_element_value_float\n\
    \    local elements_array_element_value_array_element_value_array_element_value_int\n\
    \    local elements_array_element_value_array_element_value_array_element_value_string\n\
    \    local elements_array_element_value_array_element_value_array_element_value_bool\n\
    \    local elements_array_element_value_array_element_value_array_element_value_null\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_index\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element_index\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element_value\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element_value_float\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element_value_int\n\
    \    local elements_array_element_value_array_element_value_array_element_value_array_element_value_string\n\
    \    local elements_array_element_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_element=\n    local largest_element=\n\
    \    local element\n    local elements_array=( $elements )\n    local index\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    \    local element\n    local element\n    local element\n    local element\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest\n\
    \    local largest\n    local output\n    local i\n    local j\n    local k\n\
    \    local number\n    local smallest_index\n    local largest_index\n    local\
    \ smallest_value\n    local largest_value\n    local smallest_string\n    local\
    \ largest_string\n    local smallest_value_string\n    local largest_value_string\n\
    \    local smallest_value_float\n    local largest_value_float\n    local smallest_value_int\n\
    \    local largest_value_int\n    local smallest_value_bool\n    local largest_value_bool\n\
    \    local smallest_value_null\n    local largest_value_null\n    local smallest_value_empty\n\
    \    local largest_value_empty\n    local smallest_value_zero\n    local largest_value_zero\n\
    \    local smallest_value_one\n    local largest_value_one\n    local smallest_value_minus_one\n\
    \    local largest_value_minus_one\n    local smallest_value_minus_one\n    local\
    \ largest_value_minus_one\n    local smallest_value_minus_one\n    local largest_value_minus_one\n\
    \    local smallest_value_minus_one\n    local largest_value_minus_one\n    local\
    \ smallest_value_minus_one\n    local largest_value_minus_one\n    local smallest_value_minus_one\n\
    \    local largest_value_minus_one\n    local smallest_value_minus_one\n    local\
    \ largest_value_minus_one\n    local smallest_value_minus_one\n    local largest_value_minus_one\n\
    \    local smallest_value_minus_one\n    local largest_value_minus_one\n    local\
    \ smallest_value_minus_one\n    local largest_value_minus_one\n    local smallest_value_minus_one\n\
    \    local largest_value_minus_one\n    local smallest_value_minus_one\n    local\
    \ largest_value_minus_one\n    local smallest_value_minus_one\n    local largest_value_minus_one\n\
    \    local smallest_value_minus_one\n    local largest_value_minus_one\n    local\
    \ smallest_value_minus_one\n    local largest_value_minus_one\n    local smallest_value_minus_one\n\
    \    local largest_value_minus_one\n    local smallest_value_minus_one\n    local\
    \ largest_value_minus_one\n    local smallest_value_minus_one\n    local largest_value_minus_one\n\
    \    local smallest_\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9\
    \ 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local closest2=\n    local closest3=\n    local closest4=\n    local closest5=\n\
    \    local closest6=\n    local closest7=\n    local closest8=\n    local closest9=\n\
    \    local closest10=\n    local closest11=\n    local closest12=\n    local closest13=\n\
    \    local closest14=\n    local closest15=\n    local closest16=\n    local closest17=\n\
    \    local closest18=\n    local closest19=\n    local closest20=\n    local closest21=\n\
    \    local closest22=\n    local closest23=\n    local closest24=\n    local closest25=\n\
    \    local closest26=\n    local closest27=\n    local closest28=\n    local closest29=\n\
    \    local closest30=\n    local closest31=\n    local closest32=\n    local closest33=\n\
    \    local closest34=\n    local closest35=\n    local closest36=\n    local closest37=\n\
    \    local closest38=\n    local closest39=\n    local closest40=\n    local closest41=\n\
    \    local closest42=\n    local closest43=\n    local closest44=\n    local closest45=\n\
    \    local closest46=\n    local closest47=\n    local closest48=\n    local closest49=\n\
    \    local closest50=\n    local closest51=\n    local closest52=\n    local closest53=\n\
    \    local closest54=\n    local closest55=\n    local closest56=\n    local closest57=\n\
    \    local closest58=\n    local closest59=\n    local closest60=\n    local closest61=\n\
    \    local closest62=\n    local closest63=\n    local closest64=\n    local closest65=\n\
    \    local closest66=\n    local closest67=\n    local closest68=\n    local closest69=\n\
    \    local closest70=\n    local closest71=\n    local closest72=\n    local closest73=\n\
    \    local closest74=\n    local closest75=\n    local closest76=\n    local closest77=\n\
    \    local closest78=\n    local closest79=\n    local closest80=\n    local closest81=\n\
    \    local closest82=\n    local closest83=\n    local closest84=\n    local closest85=\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local smallest_number=$2\n\
    \    local largest_number=$3\n    local smallest_element=$4\n    local largest_element=$5\n\
    \    local smallest_distance=$6\n    local largest_distance=$7\n    local smallest_index=$8\n\
    \    local largest_index=$9\n    local index=0\n    local elements=()\n    local\
    \ distance=()\n    while [ $index -lt $((${#numbers[@]} - 1)) ]; do\n        local\
    \ current_number=${numbers[$index]} # current_number is the current number in\
    \ the list\n        local current_element=${elements[$index]} # current_element\
    \ is the current element in the list\n        local current_distance=${distance[$index]}\
    \ # current_distance is the current distance in the list\n        local current_index=$((index\
    \ + 1)) # current_index is the current index in the list\n        local current_smallest_distance=$((smallest_distance\
    \ + current_distance)) # current_smallest_distance is the current smallest distance\
    \ in the list\n        local current_largest_distance=$((largest_distance + current_distance))\
    \ # current_largest_distance is the current largest distance in the list\n   \
    \     local current_smallest_element=${smallest_element} # current_smallest_element\
    \ is the current smallest element in the list\n        local current_largest_element=${largest_element}\
    \ # current_largest_element is the current largest element in the list\n     \
    \   if [ $current_number -lt $smallest_number ]; then\n            smallest_distance=$current_distance\n\
    \            smallest_element=$current_element\n            smallest_index=$current_index\n\
    \        fi\n        if [ $current_number -gt $largest_number ]; then\n      \
    \      largest_distance=$current_distance\n            largest_element=$current_element\n\
    \            largest_index=$current_index\n        fi\n        elements[$index]=$current_element\n\
    \        distance[$index]=$current_distance\n        index=$((index + 1))\n  \
    \  done\n    echo ${elements[$smallest_index]}\n    echo ${elements[$largest_index]}\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local number\n    local closest\n\
    \    local smallest\n    local largest\n    local i\n    local j\n    local k\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    }\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=\n\
    \    local largest=\n    local smallest_index=\n    local largest_index=\n   \
    \ local element\n    local index\n    local elements_array\n    local elements_array_index\n\
    \    local elements_array_index2\n    local elements_array_index3\n    local elements_array_index4\n\
    \    local elements_array_index5\n    local elements_array_index6\n    local elements_array_index7\n\
    \    local elements_array_index8\n    local elements_array_index9\n    local elements_array_index10\n\
    \    local elements_array_index11\n    local elements_array_index12\n    local\
    \ elements_array_index13\n    local elements_array_index14\n    local elements_array_index15\n\
    \    local elements_array_index16\n    local elements_array_index17\n    local\
    \ elements_array_index18\n    local elements_array_index19\n    local elements_array_index20\n\
    \    local elements_array_index21\n    local elements_array_index22\n    local\
    \ elements_array_index23\n    local elements_array_index24\n    local elements_array_index25\n\
    \    local elements_array_index26\n    local elements_array_index27\n    local\
    \ elements_array_index28\n    local elements_array_index29\n    local elements_array_index30\n\
    \    local elements_array_index31\n    local elements_array_index32\n    local\
    \ elements_array_index33\n    local elements_array_index34\n    local elements_array_index35\n\
    \    local elements_array_index36\n    local elements_array_index37\n    local\
    \ elements_array_index38\n    local elements_array_index39\n    local elements_array_index40\n\
    \    local elements_array_index41\n    local elements_array_index42\n    local\
    \ elements_array_index43\n    local elements_array_index44\n    local elements_array_index45\n\
    \    local elements_array_index46\n    local elements_array_index47\n    local\
    \ elements_array_index48\n    local elements_array_index49\n    local elements_array_index50\n\
    \    local elements_array_index51\n    local elements_array_index52\n    local\
    \ elements_array_index53\n    local elements_array_index54\n    local elements_array_index55\n\
    \    local elements_array_index56\n    local elements_array_index57\n    local\
    \ elements_array_index58\n    local elements_array_\n}\n\ncandidate() {\n    find_closest_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0\
    \ 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local i=\n    local j=\n    local\
    \ k=\n    local element=\n    local result=\n    local tmp=\n    local tmp2=\n\
    \    local tmp3=\n    local tmp4=\n    local tmp5=\n    local tmp6=\n    local\
    \ tmp7=\n    local tmp8=\n    local tmp9=\n    local tmp10=\n    local tmp11=\n\
    \    local tmp12=\n    local tmp13=\n    local tmp14=\n    local tmp15=\n    local\
    \ tmp16=\n    local tmp17=\n    local tmp18=\n    local tmp19=\n    local tmp20=\n\
    \    local tmp21=\n    local tmp22=\n    local tmp23=\n    local tmp24=\n    local\
    \ tmp25=\n    local tmp26=\n    local tmp27=\n    local tmp28=\n    local tmp29=\n\
    \    local tmp30=\n    local tmp31=\n    local tmp32=\n    local tmp33=\n    local\
    \ tmp34=\n    local tmp35=\n    local tmp36=\n    local tmp37=\n    local tmp38=\n\
    \    local tmp39=\n    local tmp40=\n    local tmp41=\n    local tmp42=\n    local\
    \ tmp43=\n    local tmp44=\n    local tmp45=\n    local tmp46=\n    local tmp47=\n\
    \    local tmp48=\n    local tmp49=\n    local tmp50=\n    local tmp51=\n    local\
    \ tmp52=\n    local tmp53=\n    local tmp54=\n    local tmp55=\n    local tmp56=\n\
    \    local tmp57=\n    local tmp58=\n    local tmp59=\n    local tmp60=\n    local\
    \ tmp61=\n    local tmp62=\n    local tmp63=\n    local tmp64=\n    local tmp65=\n\
    \    local tmp66=\n    local tmp67=\n    local tmp68=\n    local tmp69=\n    local\
    \ tmp70=\n    local tmp71=\n    local tmp72=\n    local tmp73=\n    local tmp74=\n\
    \    local tmp75=\n    local tmp76=\n    local tmp77=\n    local tmp78=\n    local\
    \ \n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"\
    1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local numbers=$1\n    local closest=\n\
    \    local smallest=\n    local largest=\n    local number\n    for number in\
    \ $numbers; do\n        if [ -z \"$smallest\" ]; then\n            smallest=$number\n\
    \            largest=$number\n        elif [ \"$smallest\" -gt \"$number\" ];\
    \ then\n            smallest=$number\n        elif [ \"$largest\" -lt \"$number\"\
    \ ]; then\n            largest=$number\n        fi\n    done\n    echo \"$smallest\
    \ $largest\"\n}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    ) = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5v4kus_9.sh: line 20: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 22: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 20: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 22: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 20: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 22: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 20: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 22: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 20: [: 1.0: integer expression expected

    /tmp/tmp5v4kus_9.sh: line 22: [: 1.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local k\n    local diff\n  \
    \  local diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff89\n    local diff90\n    local diff91\n    local\
    \ diff92\n    local diff93\n\n}\n\ncandidate() {\n    find_closest_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    ) = \"3.9 4.0\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") = \"2.0 2.0\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342
- exit_code: 1
  program: "#!/bin/bash\n# From a supplied list of numbers (of length at least two)\
    \ select and return two that are the closest to each\n# other and return them\
    \ in order (smaller number, larger number).\n# >>> $(find_closest_elements \"\
    1.0 2.0 3.0 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
    \ list\nfind_closest_elements() {\n    local elements=$1\n    local smallest=$2\n\
    \    local largest=$3\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local i\n    local j\n    local elements\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local smallest_element\n  \
    \  local largest_element\n    local element\n    local smallest_element\n    local\
    \ largest_element\n    local element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local element\n    local smallest_element\n    local largest_element\n    local\
    \ element\n    local smallest_element\n    local largest_element\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local smallest_element\n    local largest_element\n    local element\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local smallest_element\n  \
    \  local largest_element\n    local element\n    local smallest_element\n    local\
    \ largest_element\n    local element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local element\n    local smallest_element\n    local largest_element\n    local\
    \ element\n    local smallest_element\n    local largest_element\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local smallest_element\n    local largest_element\n    local element\n    local\
    \ smallest_element\n    local largest_element\n    local element\n    local smallest_element\n\
    \    local largest_element\n    local element\n    local smallest_element\n  \
    \  local largest_element\n    local element\n    local smallest_element\n    local\
    \ largest_element\n    local element\n    local smallest_element\n    local largest_element\n\
    \    local element\n    local smallest_element\n    local largest_element\n  \
    \  local element\n    local smallest_element\n    local largest_element\n    local\
    \ element\n    local smallest_element\n    local largest_element\n    local element\n\
    \    local smallest_element\n    local largest_element\n    local element\n  \
    \  local smallest_element\n    local largest_element\n    local element\n\n}\n\
    \ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    ) = \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660040342

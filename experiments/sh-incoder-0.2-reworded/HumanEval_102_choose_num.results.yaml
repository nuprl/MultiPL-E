language: sh
name: HumanEval_102_choose_num
results:
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y>$x) ? $y : $x ))\"\n   \
    \ local a=\"$(( ($z%2==0) ? ($z+1) : -1 ))\"\n    echo \"$a\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local k\n    local even\n    local odd\n    local even2\n    local odd2\n\
    \    local even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n\
    \    local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local z\n    z=$(( (x-y)*(x-y)) )\n    if [ $z\
    \ -gt 0 ]; then\n        echo $(( $z / 2 ))\n    else\n        echo -1\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfi6w1o28.sh: command substitution: line 18: syntax error near unexpected
    token `*''

    /tmp/tmpfi6w1o28.sh: command substitution: line 18: `( (x-y)*(x-y)) ''

    /tmp/tmpfi6w1o28.sh: line 19: [: -gt: unary operator expected

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max=$(( (x > y) ? x : y ))\n  local num=$((\
    \ (max % 2) == 0 ))\n  (( max > 0 )) && return $max\n  (( num == 0 )) && return\
    \ -1\n  (( num == 1 )) && return $x\n  (( num == 2 )) && return $y\n  (( num ==\
    \ 3 )) && return $(( $x + $y ))\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( x > y ? x : y ))\n  while [ $z\
    \ -gt $x ]; do\n    (( z += 2 ))\n  done\n  while [ $z -le $y ]; do\n    (( z\
    \ -= 2 ))\n  done\n  echo $z\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660044882
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local max=$(( x > y ? x : y ))\n    local num=$((\
    \ max % 2 ))\n    while [ $num -gt 0 ]; do\n        (( num-- ))\n        (( max--\
    \ ))\n    done\n    echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x+y) / 2 ))\"\n    local a=\"\
    $(( x - z ))\"\n    local b=\"$(( y - z ))\"\n    local c=\"$(( z - x ))\"\n \
    \   local d=\"$(( z - y ))\"\n    local e=\"$(( z - z ))\"\n    local f=\"$((\
    \ z - z ))\"\n    local g=\"$(( z - z ))\"\n    local h=\"$(( z - z ))\"\n   \
    \ local i=\"$(( z - z ))\"\n    local j=\"$(( z - z ))\"\n    local k=\"$(( z\
    \ - z ))\"\n    local l=\"$(( z - z ))\"\n    local m=\"$(( z - z ))\"\n    local\
    \ n=\"$(( z - z ))\"\n    local o=\"$(( z - z ))\"\n    local p=\"$(( z - z ))\"\
    \n    local q=\"$(( z - z ))\"\n    local r=\"$(( z - z ))\"\n    local s=\"$((\
    \ z - z ))\"\n    local t=\"$(( z - z ))\"\n    local u=\"$(( z - z ))\"\n   \
    \ local v=\"$(( z - z ))\"\n    local w=\"$(( z - z ))\"\n    local x=\"$(( z\
    \ - z ))\"\n    local y=\"$(( z - z ))\"\n    local z=\"$(( z - z ))\"\n    local\
    \ a=\"$(( z - z ))\"\n    local b=\"$(( z - z ))\"\n    local c=\"$(( z - z ))\"\
    \n    local d=\"$(( z - z ))\"\n    local e=\"$(( z - z ))\"\n    local f=\"$((\
    \ z - z ))\"\n    local g=\"$(( z - z ))\"\n    local h=\"$(( z - z ))\"\n   \
    \ local i=\"$(( z - z ))\"\n    local j=\"$(( z - z ))\"\n    local k=\"$(( z\
    \ - z ))\"\n    local l=\"$(( z - z ))\"\n    local m=\"$(( z - z ))\"\n    local\
    \ n=\"$(( z - z ))\"\n    local o=\"$(( z - z \n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp21rd4xq4.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmp21rd4xq4.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  i=1\n  while [ $i -le $max ]; do\n    [ $(( i * 2 )) -eq $max ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 1 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 2 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 3 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 4 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 5 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 6 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 7 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 8 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 9 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 10 )) ] && return -1\n    [ $(( i * 2 ))\
    \ -eq $(( i + 11 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 12 )) ] &&\
    \ return -1\n    [ $(( i * 2 )) -eq $(( i + 13 )) ] && return -1\n    [ $(( i\
    \ * 2 )) -eq $(( i + 14 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 15 ))\
    \ ] && return -1\n    i=$(( i + 1 ))\n  done\n  return $max\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x+$y)/2 ))\"\n    if [ $z\
    \ -gt $x ] || [ $z -gt $y ]; then\n        echo \"-1\"\n    else\n        echo\
    \ $z\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y-$x)/2 ))\"\n    local a=\"\
    $(( ($x-$z)/2 ))\"\n    local b=\"$(( ($y-$a)/2 ))\"\n    local c=\"$(( ($x-$b)/2\
    \ ))\"\n    local d=\"$(( ($y-$c)/2 ))\"\n    local e=\"$(( ($x-$d)/2 ))\"\n \
    \   local f=\"$(( ($y-$e)/2 ))\"\n    local g=\"$(( ($x-$f)/2 ))\"\n    local\
    \ h=\"$(( ($y-$g)/2 ))\"\n    local i=\"$(( ($x-$h)/2 ))\"\n    local j=\"$((\
    \ ($y-$i)/2 ))\"\n    local k=\"$(( ($x-$j)/2 ))\"\n    local l=\"$(( ($y-$k)/2\
    \ ))\"\n    local m=\"$(( ($x-$l)/2 ))\"\n    local n=\"$(( ($y-$m)/2 ))\"\n \
    \   local o=\"$(( ($x-$n)/2 ))\"\n    local p=\"$(( ($y-$o)/2 ))\"\n    local\
    \ q=\"$(( ($x-$p)/2 ))\"\n    local r=\"$(( ($y-$q)/2 ))\"\n    local s=\"$((\
    \ ($x-$r)/2 ))\"\n    local t=\"$(( ($y-$s)/2 ))\"\n    local u=\"$(( ($x-$t)/2\
    \ ))\"\n    local v=\"$(( ($y-$u)/2 ))\"\n    local w=\"$(( ($x-$v)/2 ))\"\n \
    \   local x=\"$(( ($y-$w)/2 ))\"\n    local y=\"$(( ($x-$x)/2 ))\"\n    echo $x\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( (x-y)*(x-y) ))\n  if [ $z -gt\
    \ $(( x*x )) ]; then\n    echo \"$z\"\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local even\n    local odd\n    \n    # Check if x is bigger than y\n    if\
    \ [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\n       \
    \ return -1\n    fi\n    \n    # Check if x is smaller than y\n    if [ \"$x\"\
    \ -lt \"$y\" ]; then\n        echo \"$x is smaller than $y\"\n        return -1\n\
    \    fi\n    \n    # Check if x is equal to y\n    if [ \"$x\" -eq \"$y\" ]; then\n\
    \        echo \"$x is equal to $y\"\n        return 0\n    fi\n    \n    # Check\
    \ if x is even\n    if [ \"$x\" -eq \"0\" ]; then\n        echo \"$x is even\"\
    \n        return 0\n    fi\n    \n    # Check if x is odd\n    if [ \"$x\" -eq\
    \ \"1\" ]; then\n        echo \"$x is odd\"\n        return 0\n    fi\n    \n\
    \    # Check if x is between 2 and y\n    if [ \"$x\" -le \"$y\" ]; then\n   \
    \     echo \"$x is between 2 and $y\"\n        return 0\n    fi\n    \n    # Check\
    \ if x is between y and 2\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"\
    $x is between $y and 2\"\n        return 0\n    fi\n    \n    # Check if x is\
    \ between 2 and y\n    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between\
    \ 2 and $y\"\n        return 0\n    fi\n    \n    # Check if x is between y and\
    \ 2\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is between $y and 2\"\
    \n        return 0\n    fi\n    \n    # Check if x is between 2 and y\n    if\
    \ [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between 2 and $y\"\n     \
    \   return 0\n    fi\n    \n    # Check if x is between y and 2\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"$x is between $y and 2\"\n        return\
    \ 0\n    fi\n    \n    # Check if x is between 2 and y\n    if [ \"$x\" -le \"\
    $y\" ]; then\n        echo \"$x is between 2 and $y\"\n        return 0\n    fi\n\
    \    \n    # Check if x is between y and 2\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"$x is between $y and 2\"\n        return 0\n    fi\n    \n   \
    \ # Check if x is between 2 and y\n    if [ \"$x\" -le \"$y\" ]; then\n      \
    \  echo \"$x is between 2 and $y\"\n        return 0\n    fi\n    \n    # Check\
    \ if x is between y and 2\n    if [ \"$\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph9k38ews.sh: line 123: unexpected EOF while looking for matching
    `"''

    /tmp/tmph9k38ews.sh: line 127: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  local even\n  local odd\n\
    \  local num\n  \n  if [ $x -le $y ]; then\n    max=$x\n  else\n    max=$y\n \
    \ fi\n  \n  for i in $(seq 1 $max); do\n    even=$(( $i % 2 ))\n    odd=$(( $i\
    \ % 2 ))\n    if [ $even -eq 0 ] && [ $odd -eq 0 ]; then\n      num=$i\n     \
    \ break\n    fi\n  done\n  \n  if [ $num -eq -1 ]; then\n    return -1\n  else\n\
    \    return $num\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y) % 2 ))\"\n    if [ \"\
    $z\" -eq 0 ]; then\n        echo $(( x + y ))\n    else\n        echo $(( x -\
    \ y ))\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ i\n    for (( i = 3; i <= max; i++ )); do\n        if (( i % 2 )); then\n  \
    \          (( max -= 1 ))\n        else\n            (( max += 1 ))\n        fi\n\
    \    done\n    if (( max < x )); then\n        echo \"$max\"\n    else\n     \
    \   echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    local i\n    local j\n    local even\n    local odd\n\
    \    local max\n    local min\n    local num\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local max\n    local min\n    local num\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local max\n    local min\n\
    \    local num\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ max\n    local min\n    local num\n    local i\n    local j\n    local even\n\
    \    local odd\n    local max\n    local min\n    local num\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local max\n    local min\n    local\
    \ num\n    local i\n    local j\n    local even\n    local odd\n    local max\n\
    \    local min\n    local num\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local max\n    local min\n    local num\n    local i\n    local j\n\
    \    local even\n    local odd\n    local max\n    local min\n    local num\n\
    \    local i\n    local j\n    local even\n    local odd\n    local max\n    local\
    \ min\n    local num\n    local i\n    local j\n    local even\n    local odd\n\
    \    local max\n    local min\n    local num\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local max\n    local min\n    local num\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local max\n    local min\n\
    \    local num\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ max\n    local min\n    local num\n    local i\n    local j\n    local even\n\
    \    local odd\n    local max\n    local min\n    local num\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local max\n    local min\n    local\
    \ num\n    local i\n    local j\n    local even\n    local odd\n    local max\n\
    \    local min\n    local num\n    local i\n    \n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( (x<y) ? x : y ))\"\n  local a=\"\
    $(( (x<y) ? y : x ))\"\n  local b=\"$(( (x<y) ? x : y ))\"\n  local c=\"$(( (x<y)\
    \ ? y : x ))\"\n  local d=\"$(( (x<y) ? y : x ))\"\n  local e=\"$(( (x<y) ? y\
    \ : x ))\"\n  local f=\"$(( (x<y) ? y : x ))\"\n  local g=\"$(( (x<y) ? y : x\
    \ ))\"\n  local h=\"$(( (x<y) ? y : x ))\"\n  local i=\"$(( (x<y) ? y : x ))\"\
    \n  local j=\"$(( (x<y) ? y : x ))\"\n  local k=\"$(( (x<y) ? y : x ))\"\n  local\
    \ l=\"$(( (x<y) ? y : x ))\"\n  local m=\"$(( (x<y) ? y : x ))\"\n  local n=\"\
    $(( (x<y) ? y : x ))\"\n  local o=\"$(( (x<y) ? y : x ))\"\n  local p=\"$(( (x<y)\
    \ ? y : x ))\"\n  local q=\"$(( (x<y) ? y : x ))\"\n  local r=\"$(( (x<y) ? y\
    \ : x ))\"\n  local s=\"$(( (x<y) ? y : x ))\"\n  local t=\"$(( (x<y) ? y : x\
    \ ))\"\n  local u=\"$(( (x<y) ? y : x ))\"\n  local v=\"$(( (x<y) ? y : x ))\"\
    \n  local w=\"$(( (x<y) ? y : x ))\"\n  local x=\"$(( (x<y) ? y : x ))\"\n  local\
    \ y=\"$(( (x<y) ? y : x ))\"\n  local z=\"$(( (x<y) ? y : x ))\"\n  local a=\"\
    $(( (x<y) ? y : x ))\"\n  local b=\"$(( (x<y) ? y : x ))\"\n  local c=\"$(( (x<y)\
    \ ? y : x ))\"\n  local d=\"$(( (x<y) ? y : x ))\"\n  local e=\"$(( (x<y) ? y\
    \ : x ))\"\n  local f=\"$(( (x<y) ? y : x ))\"\n  local g=\"$((\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpntnnx1d0.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpntnnx1d0.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local xx yy\n    read xx yy <<< \"$2\"\n \
    \   if [ \"$x\" -le \"$yy\" ] && [ \"$y\" -le \"$xx\" ]; then\n        local i\n\
    \        local j\n        local k\n        local m\n        local n\n        local\
    \ o\n        local p\n        local q\n        local r\n        local s\n    \
    \    local t\n        local u\n        local v\n        local w\n        local\
    \ x\n        local y\n        local z\n        local a\n        local b\n    \
    \    local c\n        local d\n        local e\n        local f\n        local\
    \ g\n        local h\n        local i\n        local j\n        local k\n    \
    \    local m\n        local n\n        local o\n        local p\n        local\
    \ q\n        local r\n        local s\n        local t\n        local u\n    \
    \    local v\n        local w\n        local x\n        local y\n        local\
    \ z\n        local a\n        local b\n        local c\n        local d\n    \
    \    local e\n        local f\n        local g\n        local h\n        local\
    \ i\n        local j\n        local k\n        local m\n        local n\n    \
    \    local o\n        local p\n        local q\n        local r\n        local\
    \ s\n        local t\n        local u\n        local v\n        local w\n    \
    \    local x\n        local y\n        local z\n        local a\n        local\
    \ b\n        local c\n        local d\n        local e\n        local f\n    \
    \    local g\n        local h\n        local i\n        local j\n        local\
    \ k\n        local m\n        local n\n        local o\n        local p\n    \
    \    local q\n        local r\n        local s\n        local t\n        local\
    \ u\n        local v\n        local w\n        local x\n        local y\n    \
    \    local z\n        local a\n        local b\n        local c\n        local\
    \ d\n        local e\n        local f\n        local g\n        local h\n    \
    \    local i\n        local j\n        local k\n        local m\n        local\
    \ n\n        local o\n        local p\n        local q\n        local r\n    \
    \    local s\n        local t\n        local u\n        local v\n        local\
    \ w\n        local x\n        local \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuqb9grbs.sh: line 135: syntax error near unexpected token `}''

    /tmp/tmpuqb9grbs.sh: line 135: `}''

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  (( z=$x ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n \
    \ (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n \
    \ (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n \
    \ (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n \
    \ (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n \
    \ (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1\
    \ ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n  (( z+=1 ))\n\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + $y)\n        if [[ $num -gt 0 ]]; then\n            num=$(expr\
    \ $num / 2)\n        fi\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -ge 0 ] && [ $num -le $(($x + $y)) ]; then\n        echo $num\n    else\n  \
    \      echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  \n  (( x > y )) && return\
    \ -1\n  (( x < y )) && return -1\n  \n  max=$(( x + y ))\n  \n  for i in $(seq\
    \ 1 $max); do\n    (( i % 2 )) && continue\n    (( x > y )) && return -1\n   \
    \ (( x < y )) && return -1\n    (( x == y )) && return $i\n  done\n  \n  return\
    \ -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local max\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( ($x-$y)*2 ))\n    local even=$(( $num\
    \ % 2 ))\n    if [ $even -eq 0 ]; then\n        echo $num\n    else\n        echo\
    \ -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n    \n    # If the first number is bigger than the\
    \ second one, then return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo\
    \ \"-1\"\n        return\n    fi\n    \n    # If the first number is equal to\
    \ the second one, then return it\n    if [ \"$x\" -eq \"$y\" ]; then\n       \
    \ echo \"$x\"\n        return\n    fi\n    \n    # If the first number is smaller\
    \ than the second one, then return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n  \
    \      echo \"-1\"\n        return\n    fi\n    \n    # If the first number is\
    \ bigger than the second one, then return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"-1\"\n        return\n    fi\n    \n    # If the first number\
    \ is smaller than the second one, then return -1\n    if [ \"$x\" -lt \"$y\" ];\
    \ then\n        echo \"-1\"\n        return\n    fi\n    \n    # If the first\
    \ number is equal to the second one, then return it\n    if [ \"$x\" -eq \"$y\"\
    \ ]; then\n        echo \"$x\"\n        return\n    fi\n    \n    # If the first\
    \ number is smaller than the second one, then return -1\n    if [ \"$x\" -lt \"\
    $y\" ]; then\n        echo \"-1\"\n        return\n    fi\n    \n    # If the\
    \ first number is bigger than the second one, then return -1\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n    \n    #\
    \ If the first number is equal to the second one, then return it\n    if [ \"\
    $x\" -eq \"$y\" ]; then\n        echo \"$x\"\n        return\n    fi\n    \n \
    \   # If the first number is smaller than the second one, then return -1\n   \
    \ if [ \"$x\" -lt \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n\
    \    \n    # If the first number is bigger than the second one, then return -1\n\
    \    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n   \
    \ fi\n    \n    # If the first number is equal to the second one, then return\
    \ it\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"$x\"\n        return\n\
    \    fi\n    \n    # If the first number is smaller than the second one, then\
    \ return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"-1\"\n       \
    \ return\n    fi\n    \n    # If the first number is bigger than the second one,\
    \ then return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"-1\"\n  \
    \      return\n    fi\n    \n    # If the first number is equal to the second\
    \ \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local num\n    local even\n    local odd\n\
    \    local max\n\n    if [[ $x -le $y ]]; then\n        num=$(expr $x + 1)\n \
    \       even=$(expr $x % 2)\n        odd=$(expr $x % 2)\n        if [[ $even -eq\
    \ 0 ]]; then\n            if [[ $odd -eq 0 ]]; then\n                max=$x\n\
    \            else\n                max=$y\n            fi\n        else\n    \
    \        if [[ $odd -eq 0 ]]; then\n                max=$y\n            else\n\
    \                max=$x\n            fi\n        fi\n    else\n        num=$(expr\
    \ $y - 1)\n        even=$(expr $y % 2)\n        odd=$(expr $y % 2)\n        if\
    \ [[ $even -eq 0 ]]; then\n            if [[ $odd -eq 0 ]]; then\n           \
    \     max=$y\n            else\n                max=$x\n            fi\n     \
    \   else\n            if [[ $odd -eq 0 ]]; then\n                max=$x\n    \
    \        else\n                max=$y\n            fi\n        fi\n    fi\n  \
    \  echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$(( q - 1 ))\"\n    local s=\"$(( r\
    \ - 1 ))\"\n    local t=\"$(( s - 1 ))\"\n    local u=\"$(( t - 1 ))\"\n    local\
    \ v=\"$(( u - 1 ))\"\n    local w=\"$(( v - 1 ))\"\n    local x=\"$(( w - 1 ))\"\
    \n    local y=\"$(( x - 1 ))\"\n    local z=\"$(( y - 1 ))\"\n    local a=\"$((\
    \ z - 1 ))\"\n    local b=\"$(( a - 1 ))\"\n    local c=\"$(( b - 1 ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy28_0tzq.sh: line 76: unexpected EOF while looking for matching
    `"''

    /tmp/tmpy28_0tzq.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( x - y ))\"\n  local a=\"$(( z %\
    \ 2 ))\"\n  local b=\"$(( z / 2 ))\"\n  local c=\"$(( b - a ))\"\n  local d=\"\
    $(( c - 1 ))\"\n  local e=\"$(( d - 1 ))\"\n  echo \"$e\"\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local even\n    local odd\n    local result\n    \n\
    \    # Check if $x is even or odd\n    if [ $x -eq $x ] 2>/dev/null; then\n  \
    \      even=$x\n        odd=$(( $x - 1 ))\n    else\n        even=$(( $x + 1 ))\n\
    \        odd=$x\n    fi\n    \n    # Check if $y is even or odd\n    if [ $y -eq\
    \ $y ] 2>/dev/null; then\n        even=$y\n        odd=$(( $y - 1 ))\n    else\n\
    \        even=$(( $y + 1 ))\n        odd=$y\n    fi\n    \n    # Check if $even\
    \ is greater than $odd\n    if [ $even -gt $odd ]; then\n        result=$even\n\
    \    else\n        result=$odd\n    fi\n    \n    # Check if $result is in the\
    \ range [x, y]\n    if [ $result -ge $x ] && [ $result -le $y ]; then\n      \
    \  echo $result\n    else\n        echo -1\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    if [ \"$x\" -gt \"$y\"\
    \ ]; then\n        z=\"$x\"\n    elif [ \"$y\" -gt \"$x\" ]; then\n        z=\"\
    $y\"\n    else\n        local i\n        for i in $(seq 1 \"$x\"); do\n      \
    \      if [ \"$i\" -eq \"$y\" ]; then\n                z=\"$i\"\n            \
    \    break\n            fi\n        done\n    fi\n    echo \"$z\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [ \"$x\" -le \"$y\" ];\
    \ then\n        result=$(( $x ))\n    else\n        result=$(( $y ))\n    fi\n\
    \    while [ $result -le $(( $x + $y - 1 )) ]; do\n        if [ $(( $result %\
    \ 2 )) -eq 0 ]; then\n            result=$(( $result + 1 ))\n        else\n  \
    \          result=$(( $result - 1 ))\n        fi\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660044882
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$(( q - 1 ))\"\n    local s=\"$(( r\
    \ - 1 ))\"\n    local t=\"$(( s - 1 ))\"\n    local u=\"$(( t - 1 ))\"\n    local\
    \ v=\"$(( u - 1 ))\"\n    local w=\"$(( v - 1 ))\"\n    local x=\"$(( w - 1 ))\"\
    \n    local y=\"$(( x - 1 ))\"\n    local z=\"$(( y - 1 ))\"\n    local a=\"$((\
    \ z - 1 ))\"\n    local b=\"$(( a - 1 ))\"\n    local c=\"$(( b - 1 ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy28_0tzq.sh: line 76: unexpected EOF while looking for matching
    `"''

    /tmp/tmpy28_0tzq.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-z)/2 ))\"\n    local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-b)*(x-b)\
    \ ))\"\n    local d=\"$(( (y-c)/( (x-b)*(x-b) ) ))\"\n    local e=\"$(( (x-d)*(x-d)\
    \ ))\"\n    local f=\"$(( (y-e)/( (x-d)*(y-d) ) ))\"\n    local g=\"$(( (x-f)*(x-f)\
    \ ))\"\n    local h=\"$(( (y-g)/( (x-f)*(y-f) ) ))\"\n    local i=\"$(( (x-h)*(x-h)\
    \ ))\"\n    local j=\"$(( (y-i)/( (x-h)*(x-i) ) ))\"\n    local k=\"$(( (x-j)*(x-j)\
    \ ))\"\n    local l=\"$(( (y-k)/( (x-j)*(x-k) ) ))\"\n    local m=\"$(( (x-l)*(x-l)\
    \ ))\"\n    local n=\"$(( (y-m)/( (x-l)*(x-m) ) ))\"\n    local o=\"$(( (x-n)*(x-n)\
    \ ))\"\n    local p=\"$(( (y-o)/( (x-n)*(y-n) ) ))\"\n    local q=\"$(( (x-p)*(x-p)\
    \ ))\"\n    local r=\"$(( (y-q)/( (x-p)*(y-p) ) ))\"\n    local s=\"$(( (x-r)*(x-r)\
    \ ))\"\n    local t=\"$(( (y-s)/( (x-r)*(x-s) ) ))\"\n    local u=\"$(( (x-t)*(x-t)\
    \ ))\"\n    local v=\"$(( (y-u)/( (x-t)*(y-t) ) ))\"\n    local w=\"$(( (x-v)*(x-v)\
    \ ))\"\n    local x=\"$(( (y-w)/( (x-v)*(x-w) ) ))\"\n    local y=\"$(( (x-x)*(x-x)\
    \ ))\"\n    local z=\"$(( (y-y)/( (x-x)*(y-y) ) ))\"\n    local a=\"$(( (x-z)*(x-z)\
    \ ))\"\n    local b=\"$(( (y-a)/( (x-z)*(x-a) ) ))\"\n    local c=\"$(( (\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuraubtge.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuraubtge.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ min=$(( x < y ? x : y ))\n    local i\n    local even\n    local odd\n    local\
    \ even2\n    local odd2\n    local even3\n    local odd3\n    local even4\n  \
    \  local odd4\n    local even5\n    local odd5\n    local even6\n    local odd6\n\
    \    local even7\n    local odd7\n    local even8\n    local odd8\n    local even9\n\
    \    local odd9\n    local even10\n    local odd10\n    local even11\n    local\
    \ odd11\n    local even12\n    local odd12\n    local even13\n    local odd13\n\
    \    local even14\n    local odd14\n    local even15\n    local odd15\n    local\
    \ even16\n    local odd16\n    local even17\n    local odd17\n    local even18\n\
    \    local odd18\n    local even19\n    local odd19\n    local even20\n    local\
    \ odd20\n    local even21\n    local odd21\n    local even22\n    local odd22\n\
    \    local even23\n    local odd23\n    local even24\n    local odd24\n    local\
    \ even25\n    local odd25\n    local even26\n    local odd26\n    local even27\n\
    \    local odd27\n    local even28\n    local odd28\n    local even29\n    local\
    \ odd29\n    local even30\n    local odd30\n    local even31\n    local odd31\n\
    \    local even32\n    local odd32\n    local even33\n    local odd33\n    local\
    \ even34\n    local odd34\n    local even35\n    local odd35\n    local even36\n\
    \    local odd36\n    local even37\n    local odd37\n    local even38\n    local\
    \ odd38\n    local even39\n    local odd39\n    local even40\n    local odd40\n\
    \    local even41\n    local odd41\n    local even42\n    local odd42\n    local\
    \ even43\n    local odd43\n    local even44\n    local odd44\n    local even45\n\
    \    local odd45\n    local even46\n    local odd46\n    local even47\n    local\
    \ odd47\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local max\n    local even\n    local odd\n    local\
    \ even2\n    local odd2\n    local even3\n    local odd3\n    local even4\n  \
    \  local odd4\n    local even5\n    local odd5\n    local even6\n    local odd6\n\
    \    local even7\n    local odd7\n    local even8\n    local odd8\n    local even9\n\
    \    local odd9\n    local even10\n    local odd10\n    local even11\n    local\
    \ odd11\n    local even12\n    local odd12\n    local even13\n    local odd13\n\
    \    local even14\n    local odd14\n    local even15\n    local odd15\n    local\
    \ even16\n    local odd16\n    local even17\n    local odd17\n    local even18\n\
    \    local odd18\n    local even19\n    local odd19\n    local even20\n    local\
    \ odd20\n    local even21\n    local odd21\n    local even22\n    local odd22\n\
    \    local even23\n    local odd23\n    local even24\n    local odd24\n    local\
    \ even25\n    local odd25\n    local even26\n    local odd26\n    local even27\n\
    \    local odd27\n    local even28\n    local odd28\n    local even29\n    local\
    \ odd29\n    local even30\n    local odd30\n    local even31\n    local odd31\n\
    \    local even32\n    local odd32\n    local even33\n    local odd33\n    local\
    \ even34\n    local odd34\n    local even35\n    local odd35\n    local even36\n\
    \    local odd36\n    local even37\n    local odd37\n    local even38\n    local\
    \ odd38\n    local even39\n    local odd39\n    local even40\n    local odd40\n\
    \    local even41\n    local odd41\n    local even42\n    local odd42\n    local\
    \ even43\n    local odd43\n    local even44\n    local odd44\n    local even45\n\
    \    local odd45\n    local even46\n    local odd46\n    local even47\n    local\
    \ odd47\n    local even48\n    local odd48\n    local even49\n    local odd49\n\
    \    local even50\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z / 2 ))\"\n\
    \    local d=\"$(( $z % 2 ))\"\n    local e=\"$(( $z % 2 ))\"\n    local f=\"\
    $(( $z % 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n    local h=\"$(( $z % 2 ))\"\n\
    \    local i=\"$(( $z % 2 ))\"\n    local j=\"$(( $z % 2 ))\"\n    local k=\"\
    $(( $z % 2 ))\"\n    local l=\"$(( $z % 2 ))\"\n    local m=\"$(( $z % 2 ))\"\n\
    \    local n=\"$(( $z % 2 ))\"\n    local o=\"$(( $z % 2 ))\"\n    local p=\"\
    $(( $z % 2 ))\"\n    local q=\"$(( $z % 2 ))\"\n    local r=\"$(( $z % 2 ))\"\n\
    \    local s=\"$(( $z % 2 ))\"\n    local t=\"$(( $z % 2 ))\"\n    local u=\"\
    $(( $z % 2 ))\"\n    local v=\"$(( $z % 2 ))\"\n    local w=\"$(( $z % 2 ))\"\n\
    \    local x=\"$(( $z % 2 ))\"\n    local y=\"$(( $z % 2 ))\"\n    local z=\"\
    $(( $z % 2 ))\"\n    local a=\"$(( $z % 2 ))\"\n    local b=\"$(( $z % 2 ))\"\n\
    \    local c=\"$(( $z % 2 ))\"\n    local d=\"$(( $z % 2 ))\"\n    local e=\"\
    $(( $z % 2 ))\"\n    local f=\"$(( $z % 2 ))\"\n    local g=\"$(( $z % 2 ))\"\n\
    \    local h=\"$(( $z % 2 ))\"\n    local i=\"$(( $z % 2 ))\"\n    local j=\"\
    $(( $z % 2 ))\"\n    local k=\"$(( $z % 2 ))\"\n    local l=\"$(( $z % 2 ))\"\n\
    \    local m=\"$(( $z % 2 ))\"\n    local n=\"$(( $z % 2 ))\"\n    local o=\"\
    $((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa26mvpbd.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpa26mvpbd.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local z\n    z=$((x+y))\n    if [ $z -gt $y ];\
    \ then\n        echo \"$z\"\n    elif [ $z -eq $y ]; then\n        echo \"$z\"\
    \n    elif [ $z -le $x ]; then\n        echo \"$z\"\n    else\n        echo \"\
    -1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  i=1\n  while [ $i -le $max ]; do\n    [ $(( i * 2 )) -eq $max ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 1 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 2 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 3 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 4 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 5 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 6 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 7 )) ] && return -1\n    [ $(( i * 2 )) -eq\
    \ $(( i + 8 )) ] && return -1\n    [ $(( i * 2 )) -eq $(( i + 9 )) ] && return\
    \ -1\n    [ $(( i * 2 )) -eq $(( i + 10 )) ] && return -1\n    [ $(( i * 2 ))\
    \ -eq $(( i + 11 )) ] && return -1\n    (( i++ ))\n  done\n  return $max\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$(( x - y ))\n    local a=$(( z % 2 ))\n \
    \   local b=$(( z / 2 ))\n    local c=$(( b - a ))\n    local d=$(( c - 1 ))\n\
    \    local e=$(( d + 1 ))\n    local f=$(( e - 1 ))\n    local g=$(( f + 1 ))\n\
    \    local h=$(( g - 1 ))\n    local i=$(( h - 1 ))\n    local j=$(( i - 1 ))\n\
    \    local k=$(( j + 1 ))\n    local l=$(( k - 1 ))\n    local m=$(( l + 1 ))\n\
    \    local n=$(( m - 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( o - 1 ))\n\
    \    local q=$(( p + 1 ))\n    local r=$(( q - 1 ))\n    local s=$(( r + 1 ))\n\
    \    local t=$(( s + 1 ))\n    local u=$(( t - 1 ))\n    local v=$(( u + 1 ))\n\
    \    local w=$(( v - 1 ))\n    local x=$(( w - 1 ))\n    local y=$(( x + 1 ))\n\
    \    echo $y\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"$x is greater than $y\"\n        return 1\n\
    \    elif [ \"$x\" -eq \"$y\" ]; then\n        echo \"$x equals $y\"\n       \
    \ return 0\n    fi\n\n    max=$(expr \"$x\" +- \"$y\")\n    while [ \"$max\" -le\
    \ \"$y\" ] && [ \"$max\" -ge \"$x\" ]; do\n        num=$(( $max + 1 ))\n     \
    \   if [ \"$num\" -eq \"$max\" ]; then\n            echo \"$max is even\"\n  \
    \          return $max\n        fi\n        max=$(expr \"$num\" +- \"$y\")\n \
    \   done\n    echo \"$max is odd\"\n    return -1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018+-\u2019\n/tmp/tmp5di5sw7f.sh:\
    \ line 28: [: : integer expression expected\n"
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -gt $x ]; then\n        num=$(expr $x - $y)\n    fi\n    if [ $num -gt $y ];\
    \ then\n        num=$(expr $y - $x)\n    fi\n    if [ $num -eq 0 ]; then\n   \
    \     num=-1\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local xx yy\n    read xx yy <<< \"$2\"\n \
    \   local xx yy\n    read xx yy <<< \"$3\"\n    local xx yy\n    read xx yy <<<\
    \ \"$4\"\n    local xx yy\n    read xx yy <<< \"$5\"\n    local xx yy\n    read\
    \ xx yy <<< \"$6\"\n    local xx yy\n    read xx yy <<< \"$7\"\n    local xx yy\n\
    \    read xx yy <<< \"$8\"\n    local xx yy\n    read xx yy <<< \"$9\"\n    local\
    \ xx yy\n    read xx yy <<< \"$10\"\n    local xx yy\n    read xx yy <<< \"$11\"\
    \n    local xx yy\n    read xx yy <<< \"$12\"\n    local xx yy\n    read xx yy\
    \ <<< \"$13\"\n    local xx yy\n    read xx yy <<< \"$14\"\n    local xx yy\n\
    \    read xx yy <<< \"$15\"\n    local xx yy\n    read xx yy <<< \"$16\"\n   \
    \ local xx yy\n    read xx yy <<< \"$17\"\n    local xx yy\n    read xx yy <<<\
    \ \"$18\"\n    local xx yy\n    read xx yy <<< \"$19\"\n    local xx yy\n    read\
    \ xx yy <<< \"$20\"\n    local xx yy\n    read xx yy <<< \"$21\"\n    local xx\
    \ yy\n    read xx yy <<< \"$22\"\n    local xx yy\n    read xx yy <<< \"$23\"\n\
    \    local xx yy\n    read xx yy <<< \"$24\"\n    local xx yy\n    read xx yy\
    \ <<< \"$25\"\n    local xx yy\n    read xx yy <<< \"$26\"\n    local xx yy\n\
    \    read xx yy <<< \"$27\"\n    local xx yy\n    read xx yy <<< \"$28\"\n   \
    \ local xx yy\n    read xx yy <<< \"$29\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local num\n    local max\n    local even\n\
    \    \n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\
    \n        exit 1\n    elif [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is smaller\
    \ than $y\"\n        exit 1\n    fi\n\n    num=$(expr \"$x\" + \"$y\")\n    max=$((num\
    \ % 2))\n    even=$((num % 4))\n\n    if [ \"$max\" -eq 0 ]; then\n        if\
    \ [ \"$even\" -eq 0 ]; then\n            echo \"$x is even\"\n            return\
    \ 0\n        else\n            echo \"$x is odd\"\n            return -1\n   \
    \     fi\n    else\n        echo \"$x is bigger than $y\"\n        exit 1\n  \
    \  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n\n    # Check if x is bigger than y\n    if [ \"$x\" -gt \"$y\"\
    \ ]; then\n        echo \"$x is bigger than $y\"\n        exit 1\n    fi\n\n \
    \   # Check if x is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n     \
    \   echo \"$x is smaller than $y\"\n        exit 1\n    fi\n\n    # Check if x\
    \ is equal to y\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"$x is equal\
    \ to $y\"\n        exit 1\n    fi\n\n    # Check if x is even\n    if [ \"$x\"\
    \ -eq \"0\" ]; then\n        echo \"$x is even\"\n        exit 1\n    fi\n\n \
    \   # Check if x is odd\n    if [ \"$x\" -eq \"1\" ]; then\n        echo \"$x\
    \ is odd\"\n        exit 1\n    fi\n\n    # Check if x is between y and y+1\n\
    \    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between $y and $y+1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y-1\n\
    \    if [ \"$x\" -ge \"$y\" ]; then\n        echo \"$x is between $y and $y-1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y+1\n\
    \    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between $y and $y+1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y-1\n\
    \    if [ \"$x\" -ge \"$y\" ]; then\n        echo \"$x is between $y and $y-1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y+1\n\
    \    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between $y and $y+1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y-1\n\
    \    if [ \"$x\" -ge \"$y\" ]; then\n        echo \"$x is between $y and $y-1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y+1\n\
    \    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between $y and $y+1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y-1\n\
    \    if [ \"$x\" -ge \"$y\" ]; then\n        echo \"$x is between $y and $y-1,\
    \ inclusive\"\n        exit 1\n    fi\n\n    # Check if x is between y and y+1\n\
    \    if [ \"$x\" -le \"$y\" ]; then\n        echo \"$x is between \n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmodpci6j.sh: line 117: unexpected EOF while looking for matching
    `"''

    /tmp/tmpmodpci6j.sh: line 121: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ num\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local i\n  local j\n  local k\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local max\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local z=$(( ($y>$x) ? $y : $x ))\n    local a=$((\
    \ $z % 2 ))\n    local b=$(( $z / 2 ))\n    local c=$(( $z % $z ))\n    local\
    \ d=$(( $z / $z ))\n    local e=$(( $z % $z ))\n    local f=$(( $z / $z ))\n \
    \   local g=$(( $z % $z ))\n    local h=$(( $z / $z ))\n    local i=$(( $z % $z\
    \ ))\n    local j=$(( $z / $z ))\n    local k=$(( $z % $z ))\n    local l=$((\
    \ $z / $z ))\n    local m=$(( $z % $z ))\n    local n=$(( $z / $z ))\n    local\
    \ o=$(( $z % $z ))\n    local p=$(( $z / $z ))\n    local q=$(( $z % $z ))\n \
    \   local r=$(( $z / $z ))\n    local s=$(( $z % $z ))\n    local t=$(( $z / $z\
    \ ))\n    local u=$(( $z % $z ))\n    local v=$(( $z / $z ))\n    local w=$((\
    \ $z % $z ))\n    local x=$(( $z / $z ))\n    local y=$(( $z % $z ))\n    local\
    \ z=$(( $z / $z ))\n    local a=$(( $z % $z ))\n    local b=$(( $z / $z ))\n \
    \   local c=$(( $z % $z ))\n    local d=$(( $z / $z ))\n    local e=$(( $z % $z\
    \ ))\n    local f=$(( $z / $z ))\n    local g=$(( $z % $z ))\n    local h=$((\
    \ $z / $z ))\n    local i=$(( $z % $z ))\n    local j=$(( $z / $z ))\n    local\
    \ k=$(( $z % $z ))\n    local l=$(( $z / $z ))\n    local m=$(( $z % $z ))\n \
    \   local n=$(( $z / $z ))\n    local o=$((\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdbkhq803.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpdbkhq803.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    local a=\"-1\"\n    local\
    \ b=\"-1\"\n    local c=\"-1\"\n    local d=\"-1\"\n    local e=\"-1\"\n    local\
    \ f=\"-1\"\n    local g=\"-1\"\n    local h=\"-1\"\n    local i=\"-1\"\n    local\
    \ j=\"-1\"\n    local k=\"-1\"\n    local l=\"-1\"\n    local m=\"-1\"\n    local\
    \ n=\"-1\"\n    local o=\"-1\"\n    local p=\"-1\"\n    local q=\"-1\"\n    local\
    \ r=\"-1\"\n    local s=\"-1\"\n    local t=\"-1\"\n    local u=\"-1\"\n    local\
    \ v=\"-1\"\n    local w=\"-1\"\n    local x=\"-1\"\n    local y=\"-1\"\n    local\
    \ z=\"-1\"\n    local a=\"-1\"\n    local b=\"-1\"\n    local c=\"-1\"\n    local\
    \ d=\"-1\"\n    local e=\"-1\"\n    local f=\"-1\"\n    local g=\"-1\"\n    local\
    \ h=\"-1\"\n    local i=\"-1\"\n    local j=\"-1\"\n    local k=\"-1\"\n    local\
    \ l=\"-1\"\n    local m=\"-1\"\n    local n=\"-1\"\n    local o=\"-1\"\n    local\
    \ p=\"-1\"\n    local q=\"-1\"\n    local r=\"-1\"\n    local s=\"-1\"\n    local\
    \ t=\"-1\"\n    local u=\"-1\"\n    local v=\"-1\"\n    local w=\"-1\"\n    local\
    \ x=\"-1\"\n    local y=\"-1\"\n    local z=\"-1\"\n    local a=\"-1\"\n    local\
    \ b=\"-1\"\n    local c=\"-1\"\n    local d=\"-1\"\n    local e=\"-1\"\n    local\
    \ f=\"-1\"\n    local g=\"-1\"\n    local h=\"-1\"\n    local i=\"-1\"\n    local\
    \ j=\"-1\"\n    local k=\"-1\"\n    local l=\"-1\"\n    local m=\"-1\"\n    local\
    \ n=\"-1\"\n    local o=\"-1\"\n    local p=\"-1\"\n    local q=\"-1\"\n    local\
    \ r=\"-1\"\n    local s=\"-1\"\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local even\n\
    \    local odd\n\n    # Check if x is bigger than y\n    if [ \"$x\" -gt \"$y\"\
    \ ]; then\n        echo \"$x is bigger than $y\"\n        return -1\n    fi\n\n\
    \    # Check if x is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n    \
    \    echo \"$x is smaller than $y\"\n        return -1\n    fi\n\n    # Check\
    \ if x is equal to y\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"$x is\
    \ equal to $y\"\n        return -1\n    fi\n\n    # Check if x is even\n    if\
    \ [ \"$x\" -eq \"0\" ]; then\n        echo \"$x is even\"\n        return 0\n\
    \    fi\n\n    # Check if x is odd\n    if [ \"$x\" -eq \"1\" ]; then\n      \
    \  echo \"$x is odd\"\n        return 1\n    fi\n\n    # Check if x is between\
    \ y and even\n    if [ \"$x\" -ge \"$y\" -a \"$x\" -le \"2\" ]; then\n       \
    \ echo \"$x is between $y and even\"\n        return 0\n    fi\n\n    # Check\
    \ if x is between y and odd\n    if [ \"$x\" -ge \"$y\" -a \"$x\" -le \"3\" ];\
    \ then\n        echo \"$x is between $y and odd\"\n        return 1\n    fi\n\n\
    \    # Check if x is between y and even\n    if [ \"$x\" -ge \"2\" -a \"$x\" -le\
    \ \"3\" ]; then\n        echo \"$x is between 2 and even\"\n        return 0\n\
    \    fi\n\n    # Check if x is between y and odd\n    if [ \"$x\" -ge \"3\" -a\
    \ \"$x\" -le \"4\" ]; then\n        echo \"$x is between 3 and odd\"\n       \
    \ return 1\n    fi\n\n    # Check if x is between y and even\n    if [ \"$x\"\
    \ -ge \"4\" -a \"$x\" -le \"5\" ]; then\n        echo \"$x is between 4 and even\"\
    \n        return 0\n    fi\n\n    # Check if x is between y and odd\n    if [\
    \ \"$x\" -ge \"5\" -a \"$x\" -le \"6\" ]; then\n        echo \"$x is between 5\
    \ and odd\"\n        return 1\n    fi\n\n    # Check if x is between y and even\n\
    \    if [ \"$x\" -ge \"6\" -a \"$x\" -le \"7\" ]; then\n        echo \"$x is between\
    \ 6 and even\"\n        return 0\n    fi\n\n    # Check if x is between y and\
    \ odd\n    if [ \"$x\" -ge \"7\" -a \"$x\" -le \"8\" ]; then\n        echo \"\
    $x is \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6566d2y8.sh: line 111: unexpected EOF while looking for matching
    `"''

    /tmp/tmp6566d2y8.sh: line 115: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $x + $y ))\"\n    local b=\"$(( $z + $a ))\"\n    local c=\"$(( $z + $b ))\"\
    \n    local d=\"$(( $c + $x ))\"\n    local e=\"$(( $c + $y ))\"\n    local f=\"\
    $(( $d + $x ))\"\n    local g=\"$(( $d + $y ))\"\n    local h=\"$(( $e + $x ))\"\
    \n    local i=\"$(( $e + $y ))\"\n    local j=\"$(( $f + $x ))\"\n    local k=\"\
    $(( $f + $y ))\"\n    local l=\"$(( $g + $x ))\"\n    local m=\"$(( $g + $y ))\"\
    \n    local n=\"$(( $h + $x ))\"\n    local o=\"$(( $h + $y ))\"\n    local p=\"\
    $(( $i + $x ))\"\n    local q=\"$(( $i + $y ))\"\n    local r=\"$(( $j + $x ))\"\
    \n    local s=\"$(( $j + $y ))\"\n    local t=\"$(( $k + $x ))\"\n    local u=\"\
    $(( $k + $y ))\"\n    local v=\"$(( $l + $x ))\"\n    local w=\"$(( $l + $y ))\"\
    \n    local x=\"$(( $m + $x ))\"\n    local y=\"$(( $m + $y ))\"\n    local z=\"\
    $(( $n + $x ))\"\n    local a=\"$(( $n + $y ))\"\n    local b=\"$(( $o + $x ))\"\
    \n    local c=\"$(( $o + $y ))\"\n    local d=\"$(( $p + $x ))\"\n    local e=\"\
    $(( $p + $y ))\"\n    local f=\"$(( $q + $x ))\"\n    local g=\"$(( $q + $y ))\"\
    \n    local h=\"$(( $r + $x ))\"\n    local i=\"$(( $r + $y ))\"\n    local j=\"\
    $(( $s + $x ))\"\n    local k=\"$(( $s + $y ))\"\n    local l=\"$(( $t + $x ))\"\
    \n    local m=\"$(( $t + \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8b5hptng.sh: line 55: unexpected EOF while looking for matching
    `)''

    /tmp/tmp8b5hptng.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max_num=\"$x\"\n    local min_num=\"\
    $y\"\n    local i\n    local j\n    local even\n    local odd\n    local even_index\n\
    \    local odd_index\n    local max_even_index\n    local max_odd_index\n    local\
    \ max_even\n    local max_odd\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n    local max_odd_index\n\
    \    local max_even_index\n    local max_odd_index\n    local max_even_index\n\
    \    local max_odd_index\n    local max_even_index\n\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( ($x-$y)*2 ))\n  (( z > $x ))\
    \ && return -1\n  (( z < $y )) && return -1\n  (( z % 2 )) && return $z\n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -ge 0 ] && [ $num -le $(($x*$y)) ]; then\n        echo $num\n    else\n    \
    \    echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n    \n    # Check if x is bigger than y\n    if\
    \ [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\n       \
    \ exit 1\n    fi\n\n    # Check if x is smaller than y\n    if [ \"$x\" -lt \"\
    $y\" ]; then\n        echo \"$x is smaller than $y\"\n        exit 1\n    fi\n\
    \n    # Check if x is equal to y\n    if [ \"$x\" = \"$y\" ]; then\n        echo\
    \ \"$x is equal to $y\"\n        exit 0\n    fi\n\n    # Check if x is even number\n\
    \    if [ \"$x\" -eq \"$x\" -a \"$x\" -ge 0 -a \"$x\" -le 2 ]; then\n        even=\"\
    $x\"\n        odd=\"$y\"\n    else\n        echo \"$x is not even number\"\n \
    \       exit 1\n    fi\n\n    # Check if x is odd number\n    if [ \"$x\" -eq\
    \ \"$x\" -a \"$x\" -ge 2 -a \"$x\" -le 4 ]; then\n        odd=\"$x\"\n       \
    \ even=\"$y\"\n    else\n        echo \"$x is not odd number\"\n        exit 1\n\
    \    fi\n\n    # Check if x is even number\n    if [ \"$even\" -eq \"$even\" -a\
    \ \"$even\" -ge 0 -a \"$even\" -le 2 ]; then\n        even=\"$x\"\n        odd=\"\
    $y\"\n    else\n        echo \"$x is not even number\"\n        exit 1\n    fi\n\
    \n    # Check if x is odd number\n    if [ \"$odd\" -eq \"$odd\" -a \"$odd\" -ge\
    \ 2 -a \"$odd\" -le 4 ]; then\n        odd=\"$x\"\n        even=\"$y\"\n    else\n\
    \        echo \"$x is not odd number\"\n        exit 1\n    fi\n\n    # Check\
    \ if x is even number\n    if [ \"$even\" -eq \"$even\" -a \"$even\" -ge 0 -a\
    \ \"$even\" -le 2 ]; then\n        even=\"$x\"\n        odd=\"$y\"\n    else\n\
    \        echo \"$x is not even number\"\n        exit 1\n    fi\n\n    # Check\
    \ if x is odd number\n    if [ \"$odd\" -eq \"$odd\" -a \"$odd\" -ge 2 -a \"$odd\"\
    \ -le 4 ]; then\n        odd=\"$x\"\n        even=\"$y\"\n    else\n        echo\
    \ \"$x is not odd number\"\n        exit 1\n    fi\n\n    # Check if x is even\
    \ number\n    if [ \"$even\" -eq \"$even\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0sufys9n.sh: line 111: unexpected EOF while looking for matching
    `"''

    /tmp/tmp0sufys9n.sh: line 115: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"-1\"\n \
    \   else\n        local max\n        max=$(( $x ))\n        while [ $x -le $y\
    \ ]; do\n            if [ $(($x % 2)) -eq 0 ]; then\n                if [ $max\
    \ -le $x ]; then\n                    max=$x\n                fi\n           \
    \ fi\n            x=$(( $x + 1 ))\n        done\n        echo \"$max\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    num=$(expr $x + $y)\n    if [ $num -ge 0 ]\
    \ && [ $num -le $((x + y)) ]; then\n        echo $num\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n    local num2\n    local num3\n    local num4\n\
    \    local num5\n    local num6\n    local num7\n    local num8\n    local num9\n\
    \    local num10\n    local num11\n    local num12\n    local num13\n    local\
    \ num14\n    local num15\n    local num16\n    local num17\n    local num18\n\
    \    local num19\n    local num20\n    local num21\n    local num22\n    local\
    \ num23\n    local num24\n    local num25\n    local num26\n    local num27\n\
    \    local num28\n    local num29\n    local num30\n    local num31\n    local\
    \ num32\n    local num33\n    local num34\n    local num35\n    local num36\n\
    \    local num37\n    local num38\n    local num39\n    local num40\n    local\
    \ num41\n    local num42\n    local num43\n    local num44\n    local num45\n\
    \    local num46\n    local num47\n    local num48\n    local num49\n    local\
    \ num50\n    local num51\n    local num52\n    local num53\n    local num54\n\
    \    local num55\n    local num56\n    local num57\n    local num58\n    local\
    \ num59\n    local num60\n    local num61\n    local num62\n    local num63\n\
    \    local num64\n    local num65\n    local num66\n    local num67\n    local\
    \ num68\n    local num69\n    local num70\n    local num71\n    local num72\n\
    \    local num73\n    local num74\n    local num75\n    local num76\n    local\
    \ num77\n    local num78\n    local num79\n    local num80\n    local num81\n\
    \    local num82\n    local num83\n    local num84\n    local num85\n    local\
    \ num86\n    local num87\n    local num88\n    local num89\n    local num90\n\
    \    local num91\n    local num92\n    local num93\n    local num94\n    local\
    \ num95\n    local num96\n    local num97\n\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd2\n    local even2\n \
    \   local odd3\n    local even3\n    local odd4\n    local even4\n    local odd5\n\
    \    local even5\n    local odd6\n    local even6\n    local odd7\n    local even7\n\
    \    local odd8\n    local even8\n    local odd9\n    local even9\n    local odd10\n\
    \    local even10\n    local odd11\n    local even11\n    local odd12\n    local\
    \ even12\n    local odd13\n    local even13\n    local odd14\n    local even14\n\
    \    local odd15\n    local even15\n    local odd16\n    local even16\n    local\
    \ odd17\n    local even17\n    local odd18\n    local even18\n    local odd19\n\
    \    local even19\n    local odd20\n    local even20\n    local odd21\n    local\
    \ even21\n    local odd22\n    local even22\n    local odd23\n    local even23\n\
    \    local odd24\n    local even24\n    local odd25\n    local even25\n    local\
    \ odd26\n    local even26\n    local odd27\n    local even27\n    local odd28\n\
    \    local even28\n    local odd29\n    local even29\n    local odd30\n    local\
    \ even30\n    local odd31\n    local even31\n    local odd32\n    local even32\n\
    \    local odd33\n    local even33\n    local odd34\n    local even34\n    local\
    \ odd35\n    local even35\n    local odd36\n    local even36\n    local odd37\n\
    \    local even37\n    local odd38\n    local even38\n    local odd39\n    local\
    \ even39\n    local odd40\n    local even40\n    local odd41\n    local even41\n\
    \    local odd42\n    local even42\n    local odd43\n    local even43\n    local\
    \ odd44\n    local even44\n    local odd45\n    local even45\n    local odd46\n\
    \    local even46\n    local odd47\n    local even47\n    local odd48\n    local\
    \ even48\n    local odd49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x+y) % 2 ))\"\n    if [ $z\
    \ -eq 0 ]; then\n        echo \"$x\"\n    else\n        echo \"$y\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    if [[ $x\
    \ -ge $y ]]; then\n        max=$x\n    else\n        max=$y\n    fi\n    \n  \
    \  for i in $(seq 1 $max); do\n        if [[ $(( $(echo \"$x % $i\" | bc -l) ))\
    \ -eq 0 ]]; then\n            echo \"$i\"\n            return\n        fi\n  \
    \  done\n    \n    echo \"-1\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    num=$(expr $x + $y)\n    if [ $num -ge 0 ]\
    \ && [ $num -le $(($x + $y)) ]; then\n        echo $num\n    else\n        echo\
    \ \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local max\n    local even\n    local odd\n    local\
    \ i\n    local j\n    local k\n    local evens\n    local odds\n    local num\n\
    \    local even\n    local odd\n    local nums\n    local evens\n    local odds\n\
    \    local num\n    local even\n    local odd\n    local nums\n    local evens\n\
    \    local odds\n    local num\n    local even\n    local odd\n    local nums\n\
    \    local evens\n    local odds\n    local num\n    local even\n    local odd\n\
    \    local nums\n    local evens\n    local odds\n    local num\n    local even\n\
    \    local odd\n    local nums\n    local evens\n    local odds\n    local num\n\
    \    local even\n    local odd\n    local nums\n    local evens\n    local odds\n\
    \    local num\n    local even\n    local odd\n    local nums\n    local evens\n\
    \    local odds\n    local num\n    local even\n    local odd\n    local nums\n\
    \    local evens\n    local odds\n    local num\n    local even\n    local odd\n\
    \    local nums\n    local evens\n    local odds\n    local num\n    local even\n\
    \    local odd\n    local nums\n    local evens\n    local odds\n    local num\n\
    \    local even\n    local odd\n    local nums\n    local evens\n    local odds\n\
    \    local num\n    local even\n    local odd\n    local nums\n    local evens\n\
    \    local odds\n    local num\n    local even\n    local odd\n    local nums\n\
    \    local evens\n    local odds\n    local num\n    local even\n    local odd\n\
    \    local nums\n    local evens\n    local odds\n    local num\n    local even\n\
    \    local odd\n    local nums\n    local evens\n    local odds\n    local num\n\
    \    local even\n    local odd\n    local nums\n    local evens\n    local odds\n\
    \    local num\n    local even\n    local odd\n    local nums\n    local evens\n\
    \    local odds\n    local num\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( ($x-1)*($y-1)+$x ))\n    local even=$((\
    \ $num % 2 ))\n    if [ $even -eq 0 ]; then\n        echo $num\n    else\n   \
    \     echo -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( ($x-$y)*2 ))\"\n  local a=\"$((\
    \ $z % 2 ))\"\n  local b=\"$(( $z / 2 ))\"\n  local c=\"$(( $a ))\"\n  local d=\"\
    $(( $b ))\"\n  local e=\"$(( $c ))\"\n  echo \"$e\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    x=$1\n    y=$2\n    num=$(expr $x + $y)\n    while [ $num -gt $y\
    \ ]\n    do\n        (( num -= y ))\n    done\n    while [ $num -gt $x ]\n   \
    \ do\n        (( num -= x ))\n    done\n    echo $num\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local even2\n    local odd2\n \
    \   local even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n\
    \    local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    z=$((x+y))\n    while [ $z -gt $y ]; do\n   \
    \     z=$((z+2))\n    done\n    while [ $z -gt $x ]; do\n        z=$((z-2))\n\
    \    done\n    if [ $z -eq $x ]; then\n        echo $z\n    else\n        echo\
    \ $((-1))\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660044882
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    if [[ $x\
    \ -le $y ]]; then\n        max=$x\n        for i in $(seq 1 $y); do\n        \
    \    if [[ $(( $(expr $x + $i) )) -eq $(( $(expr $x + $i) )) ]]; then\n      \
    \          max=$(( $x + $i ))\n            fi\n        done\n    else\n      \
    \  max=$y\n        for i in $(seq 1 $x); do\n            if [[ $(( $(expr $x +\
    \ $i) )) -eq $(( $(expr $x + $i) )) ]]; then\n                max=$(( $x + $i\
    \ ))\n            fi\n        done\n    fi\n    \n    if [[ $max -eq -1 ]]; then\n\
    \        echo \"-1\"\n    else\n        echo $max\n    fi\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    \n    if [[ $x -le $y ]]; then\n        max=$x\n    else\n\
    \        max=$y\n    fi\n    \n    for i in $(seq 1 $max); do\n        even=$((\
    \ $i % 2 ))\n        odd=$(( $i % $max ))\n        if [[ $even -eq 0 ]]; then\n\
    \            if [[ $odd -eq 0 ]]; then\n                echo \"$i\"\n        \
    \        break\n            else\n                echo \"$i\"\n              \
    \  break\n            fi\n        else\n            if [[ $odd -eq 0 ]]; then\n\
    \                echo \"$i\"\n                break\n            else\n      \
    \          echo \"$i\"\n                break\n            fi\n        fi\n  \
    \  done\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( x - y ))\"\n  local a=\"$(( z %\
    \ 2 ))\"\n  local b=\"$(( z / 2 ))\"\n  echo \"$(( a > b ? a : b ))\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    if\
    \ [ $z -gt $y ]; then\n        echo \"$z\"\n    else\n        echo \"-1\"\n  \
    \  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local k\n    local even\n    local odd\n    local max\n    local min\n   \
    \ local num\n    local num2\n    local num3\n    local num4\n    local num5\n\
    \    local num6\n    local num7\n    local num8\n    local num9\n    local num10\n\
    \    local num11\n    local num12\n    local num13\n    local num14\n    local\
    \ num15\n    local num16\n    local num17\n    local num18\n    local num19\n\
    \    local num20\n    local num21\n    local num22\n    local num23\n    local\
    \ num24\n    local num25\n    local num26\n    local num27\n    local num28\n\
    \    local num29\n    local num30\n    local num31\n    local num32\n    local\
    \ num33\n    local num34\n    local num35\n    local num36\n    local num37\n\
    \    local num38\n    local num39\n    local num40\n    local num41\n    local\
    \ num42\n    local num43\n    local num44\n    local num45\n    local num46\n\
    \    local num47\n    local num48\n    local num49\n    local num50\n    local\
    \ num51\n    local num52\n    local num53\n    local num54\n    local num55\n\
    \    local num56\n    local num57\n    local num58\n    local num59\n    local\
    \ num60\n    local num61\n    local num62\n    local num63\n    local num64\n\
    \    local num65\n    local num66\n    local num67\n    local num68\n    local\
    \ num69\n    local num70\n    local num71\n    local num72\n    local num73\n\
    \    local num74\n    local num75\n    local num76\n    local num77\n    local\
    \ num78\n    local num79\n    local num80\n    local num81\n    local num82\n\
    \    local num83\n    local num84\n    local num85\n    local num86\n    local\
    \ num87\n    local num88\n    local num89\n    local num90\n    local num91\n\
    \    local num92\n    local num93\n    local num94\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local z\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local i\n    local j\n    local k\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local i\n    local j\n    local k\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local i\n    local j\n    local k\n    local m\n\
    \    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -gt $x ]; then\n        num=$(expr $x - $y)\n    fi\n    if [ $num -gt $y ];\
    \ then\n        num=$(expr $y - $x)\n    fi\n    if [ $num -eq 0 ]; then\n   \
    \     num=-1\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y-$x)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $x + $b ))\"\
    \n    local d=\"$(( $c - $y ))\"\n    local e=\"$(( $d + 1 ))\"\n    local f=\"\
    $(( $e % 2 ))\"\n    local g=\"$(( $e / 2 ))\"\n    local h=\"$(( $g + $b ))\"\
    \n    local i=\"$(( $h % 2 ))\"\n    local j=\"$(( $h / 2 ))\"\n    local k=\"\
    $(( $j + $b ))\"\n    local l=\"$(( $k - $x ))\"\n    local m=\"$(( $l % 2 ))\"\
    \n    local n=\"$(( $l / 2 ))\"\n    local o=\"$(( $n + $b ))\"\n    local p=\"\
    $(( $o % 2 ))\"\n    local q=\"$(( $o / 2 ))\"\n    local r=\"$(( $q + $b ))\"\
    \n    local s=\"$(( $r - $y ))\"\n    local t=\"$(( $s + 1 ))\"\n    local u=\"\
    $(( $t % 2 ))\"\n    local v=\"$(( $t / 2 ))\"\n    local w=\"$(( $v + $b ))\"\
    \n    local x=\"$(( $w + $b ))\"\n    local y=\"$(( $x + $b ))\"\n    local z=\"\
    $(( $y + $b ))\"\n    local a=\"$(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\
    \n    local c=\"$(( $x + $b ))\"\n    local d=\"$(( $c - $y ))\"\n    local e=\"\
    $(( $d + 1 ))\"\n    local f=\"$(( $e % 2 ))\"\n    local g=\"$(( $e / 2 ))\"\n\
    \    local h=\"$(( $g + $b ))\"\n    local i=\"$(( $h % 2 ))\"\n    local j=\"\
    $(( $h / 2 ))\"\n    local k=\"$(( $j + $b ))\"\n    local l=\"$(( $k - $x ))\"\
    \n    local m=\"$(( $l % 2 ))\"\n    local n=\"$(( $l / 2 ))\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + 1)\n    else\n        num=$(expr $y - 1)\n    fi\n  \
    \  while [[ $num -le $y && $num -gt $x ]]; do\n        ((num+=2))\n    done\n\
    \    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20181\u2019\n"
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + ( y - x ) ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z - b ))\"\
    \n    local d=\"$(( c - a ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$((\
    \ e + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n   \
    \ local i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j\
    \ + 1 ))\"\n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local\
    \ n=\"$(( m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\
    \n    local q=\"$(( p + 1 ))\"\n    local r=\"$(( q + 1 ))\"\n    local s=\"$((\
    \ r + 1 ))\"\n    local t=\"$(( s + 1 ))\"\n    local u=\"$(( t + 1 ))\"\n   \
    \ local v=\"$(( u + 1 ))\"\n    local w=\"$(( v + 1 ))\"\n    local x=\"$(( w\
    \ + 1 ))\"\n    local y=\"$(( x + 1 ))\"\n    local z=\"$(( y + 1 ))\"\n    local\
    \ a=\"$(( z + 1 ))\"\n    local b=\"$(( a + 1 ))\"\n    local c=\"$(( b + 1 ))\"\
    \n    local d=\"$(( c + 1 ))\"\n    local e=\"$(( d + 1 ))\"\n    local f=\"$((\
    \ e + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n   \
    \ local i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j\
    \ + 1 ))\"\n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local\
    \ n=\"$(( m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\
    \n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    local\
    \ a=\"$(( x - z ))\"\n    local b=\"$(( y - z ))\"\n    local c=\"$(( z - x ))\"\
    \n    local d=\"$(( z - y ))\"\n    local e=\"$(( z - z ))\"\n    local f=\"$((\
    \ z - x + (y - x) / 2 ))\"\n    local g=\"$(( z - y + (y - x) / 2 ))\"\n    local\
    \ h=\"$(( z - z + (y - x) / 2 ))\"\n    local i=\"$(( z - x + (y - x) / 2 ))\"\
    \n    local j=\"$(( z - y + (y - x) / 2 ))\"\n    local k=\"$(( z - z + (y - x)\
    \ / 2 ))\"\n    local l=\"$(( z - x + (y - x) / 2 ))\"\n    local m=\"$(( z -\
    \ y + (y - x) / 2 ))\"\n    local n=\"$(( z - z + (y - x) / 2 ))\"\n    local\
    \ o=\"$(( z - x + (y - x) / 2 ))\"\n    local p=\"$(( z - y + (y - x) / 2 ))\"\
    \n    local q=\"$(( z - z + (y - x) / 2 ))\"\n    local r=\"$(( z - x + (y - x)\
    \ / 2 ))\"\n    local s=\"$(( z - y + (y - x) / 2 ))\"\n    local t=\"$(( z -\
    \ z + (y - x) / 2 ))\"\n    local u=\"$(( z - x + (y - x) / 2 ))\"\n    local\
    \ v=\"$(( z - y + (y - x) / 2 ))\"\n    local w=\"$(( z - z + (y - x) / 2 ))\"\
    \n    local x=\"$(( z - x + (y - x) / 2 ))\"\n    local y=\"$(( z - y + (y - x)\
    \ / 2 ))\"\n    local z=\"$(( z - z + (y - x) / 2 ))\"\n    local a=\"$(( z -\
    \ x + (y - x) / 2 ))\"\n    local b=\"$(( z - y + (y - x) / 2 ))\"\n    local\
    \ c=\"$(( z - z + (y - x) / 2 ))\"\n    local d=\"$(( z - x + (y - x) / 2 ))\"\
    \n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x - $y) / 2 ))\"\n    local\
    \ a=\"$(( $x + $z ))\"\n    local b=\"$(( $y + $z ))\"\n    local c=\"$(( $x +\
    \ $y ))\"\n    local d=\"$(( $y + $x ))\"\n    local e=\"$(( $x + $y ))\"\n  \
    \  local f=\"$(( $y + $x ))\"\n    local g=\"$(( $x + $y ))\"\n    local h=\"\
    $(( $y + $x ))\"\n    local i=\"$(( $x + $y ))\"\n    local j=\"$(( $y + $x ))\"\
    \n    local k=\"$(( $x + $y ))\"\n    local l=\"$(( $y + $x ))\"\n    local m=\"\
    $(( $x + $y ))\"\n    local n=\"$(( $y + $x ))\"\n    local o=\"$(( $x + $y ))\"\
    \n    local p=\"$(( $y + $x ))\"\n    local q=\"$(( $x + $y ))\"\n    local r=\"\
    $(( $y + $x ))\"\n    local s=\"$(( $x + $y ))\"\n    local t=\"$(( $y + $x ))\"\
    \n    local u=\"$(( $x + $y ))\"\n    local v=\"$(( $y + $x ))\"\n    local w=\"\
    $(( $x + $y ))\"\n    local x=\"$(( $y + $x ))\"\n    local y=\"$(( $x + $y ))\"\
    \n    local z=\"$(( $x + $y ))\"\n    local a=\"$(( $x + $y ))\"\n    local b=\"\
    $(( $x + $y ))\"\n    local c=\"$(( $x + $y ))\"\n    local d=\"$(( $x + $y ))\"\
    \n    local e=\"$(( $x + $y ))\"\n    local f=\"$(( $x + $y ))\"\n    local g=\"\
    $(( $x + $y ))\"\n    local h=\"$(( $x + $y ))\"\n    local i=\"$(( $x + $y ))\"\
    \n    local j=\"$(( $x + $y ))\"\n    local k=\"$(( $x + $y ))\"\n    local l=\"\
    $(( $x + $y ))\"\n    local m=\"$(( $x + $y ))\"\n    local n=\"$(( $x + $y ))\"\
    \n    local o=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplng4cihx.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmplng4cihx.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    local i\n    local j\n \
    \   local k\n    local even\n    local odd\n    local max\n\n    # Check if $x\
    \ is greater than $y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is\
    \ greater than $y\"\n        exit 1\n    fi\n\n    # Check if $x is less than\
    \ $y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than $y\"\n\
    \        exit 1\n    fi\n\n    # Check if $x is equal to $y\n    if [ \"$x\" -eq\
    \ \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 0\n    fi\n\
    \n    # Check if $x is greater than or equal to $y\n    if [ \"$x\" -ge \"$y\"\
    \ ]; then\n        echo \"$x is greater than or equal to $y\"\n        exit 0\n\
    \    fi\n\n    # Check if $x is less than or equal to $y\n    if [ \"$x\" -le\
    \ \"$y\" ]; then\n        echo \"$x is less than or equal to $y\"\n        exit\
    \ 0\n    fi\n\n    # Check if $x is even\n    if [ \"$x\" -eq \"0\" ]; then\n\
    \        echo \"$x is even\"\n        exit 0\n    fi\n\n    # Check if $x is odd\n\
    \    if [ \"$x\" -eq \"1\" ]; then\n        echo \"$x is odd\"\n        exit 0\n\
    \    fi\n\n    # Check if $x is between $y and $y+1\n    if [ \"$x\" -le \"$y\"\
    \ ] && [ \"$x\" -ge \"$y\" ] && [ \"$x\" -lt \"$y\" ] && [ \"$x\" -gt \"$y\" ]\
    \ && [ \"$x\" -eq \"$y\" ] && [ \"$x\" -eq \"0\" ]; then\n        echo \"$x is\
    \ between $y and $y+1, inclusive\"\n        exit 0\n    fi\n\n    # Check if $x\
    \ is between $y and $y-1\n    if [ \"$x\" -le \"$y\" ] && [ \"$x\" -ge \"$y\"\
    \ ] && [ \"$x\" -lt \"$y\" ] && [ \"$x\" -gt \"$y\" ] && [ \"$x\" -eq \"$y\" ]\
    \ && [ \"$x\" -eq \"1\" ]; then\n        echo \"$x is between $y and $y-1, inclusive\"\
    \n        exit 0\n    fi\n\n    # Check if $x is between $y and $y+1\n    if [\
    \ \"$x\" -le \"$y\" ] && [ \"$x\" -ge \"$y\" ] && [ \"$x\" -lt \"$y\" ] && [ \"\
    $x\" -gt \"$y\" ] && [ \"$x\" -eq \"$y\" ] && [ \"$x\n}\n\ncandidate() {\n   \
    \ choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\"\
    ) = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa2qivukn.sh: line 95: unexpected EOF while looking for matching
    `"''

    /tmp/tmpa2qivukn.sh: line 99: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    # If the\
    \ first number is smaller than the second one, then the \n    # function should\
    \ return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"-1\"\n       \
    \ return\n    fi\n    \n    # If the first number is larger than the second one,\
    \ then the \n    # function should return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"-1\"\n        return\n    fi\n    \n    # If the first number\
    \ is equal to the second one, then the \n    # function should return -1\n   \
    \ if [ \"$x\" -eq \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n\
    \    \n    # If the first number is larger than the second one, then the \n  \
    \  # function should return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo\
    \ \"-1\"\n        return\n    fi\n    \n    # If the first number is smaller than\
    \ the second one, then the \n    # function should return -1\n    if [ \"$x\"\
    \ -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n    \n    #\
    \ If the first number is equal to the second one, then the \n    # function should\
    \ return -1\n    if [ \"$x\" -eq \"$y\" ]; then\n        echo \"-1\"\n       \
    \ return\n    fi\n    \n    # If the first number is larger than the second one,\
    \ then the \n    # function should return -1\n    if [ \"$x\" -lt \"$y\" ]; then\n\
    \        echo \"-1\"\n        return\n    fi\n    \n    # If the first number\
    \ is smaller than the second one, then the \n    # function should return -1\n\
    \    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"-1\"\n        return\n   \
    \ fi\n    \n    # If the first number is equal to the second one, then the \n\
    \    # function should return -1\n    if [ \"$x\" -eq \"$y\" ]; then\n       \
    \ echo \"-1\"\n        return\n    fi\n    \n    # If the first number is larger\
    \ than the second one, then the \n    # function should return -1\n    if [ \"\
    $x\" -lt \"$y\" ]; then\n        echo \"-1\"\n        return\n    fi\n    \n \
    \   # If the first number is smaller than the second one, then the \n    # function\
    \ should return -1\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"-1\"\n\
    \        return\n    fi\n    \n    # If the first number is equal to the second\
    \ one, then the \n    # function should return -1\n    if [ \"$x\" -eq \"$y\"\
    \ ]; then\n        echo \"-1\"\n        return\n    fi\n    \n    # If the first\
    \ number is larger than the second one, then the \n    # function should return\
    \ -1\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"-1\"\n        return\n\
    \    fi\n    \n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ((x % 2) != 0) || ((y % 2) !=\
    \ 0) ))\"\n    if [ \"$z\" -eq 0 ]; then\n        echo \"$x\"\n    else\n    \
    \    echo \"$y\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y num\n    read x y <<< \"$1\"\n    read y num <<< \"$2\"\n    local max_num\n\
    \    if [ $x -le $y ]; then\n        max_num=$x\n    else\n        max_num=$y\n\
    \    fi\n    local i\n    for (( i=1; i<=$max_num; i++ )); do\n        if [ $((\
    \ $i % 2 )) -eq 0 ]; then\n            echo $i\n            break\n        fi\n\
    \    done\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-z)/2 ))\"\n    local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"\
    $(( (y-z)/2 ))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2\
    \ ))\"\n    local i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local\
    \ k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (y-z)/2 ))\"\n    local m=\"$(( (x-z)/2\
    \ ))\"\n    local n=\"$(( (y-z)/2 ))\"\n    local o=\"$(( (x-y)*(x-y)))\"\n  \
    \  local p=\"$(( (y-z)/2 ))\"\n    local q=\"$(( (x-z)/2 ))\"\n    local r=\"\
    $(( (y-z)/2 ))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local t=\"$(( (y-z)/2\
    \ ))\"\n    local u=\"$(( (x-z)/2 ))\"\n    local v=\"$(( (y-z)/2 ))\"\n    local\
    \ w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (y-z)/2 ))\"\n    local y=\"$(( (x-z)/2\
    \ ))\"\n    local z=\"$(( (y-z)/2 ))\"\n    local a=\"$(( (x-y)*(x-y)))\"\n  \
    \  local b=\"$(( (y-z)/2 ))\"\n    local c=\"$(( (x-y)*(x-y)))\"\n    local d=\"\
    $(( (y-z)/2 ))\"\n    local e=\"$(( (x-z)/2 ))\"\n    local f=\"$(( (y-z)/2 ))\"\
    \n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$(( (y-z)/2 ))\"\n    local\
    \ i=\"$(( (x-z)/2 ))\"\n    local j=\"$(( (y-z)/2 ))\"\n    local k=\"$(( (x-y)*\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe097363d.sh: line 53: unexpected EOF while looking for matching
    `)''

    /tmp/tmpe097363d.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local even2\n    local odd2\n    local\
    \ even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n  \
    \  local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ i\n    local even\n    local odd\n    local num\n\n    # loop through all even\
    \ numbers between x and y\n    for (( i=1; i<=max; i++ )); do\n        even=$((\
    \ i * 2 ))\n        if (( even % 2 == 0 )); then\n            (( num = $i + 1\
    \ ))\n            (( even = even / 2 ))\n            if (( even == 0 )); then\n\
    \                break\n            fi\n        fi\n    done\n\n    # loop through\
    \ all odd numbers between x and y\n    for (( i=1; i<=max; i++ )); do\n      \
    \  odd=$(( i * 2 ))\n        if (( odd % 2 == 1 )); then\n            (( num =\
    \ $i + 1 ))\n            (( odd = odd / 2 ))\n            if (( odd == 0 )); then\n\
    \                break\n            fi\n        fi\n    done\n\n    if (( num\
    \ == 0 )); then\n        (( num = -1 ))\n    fi\n\n    echo \"$num\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    # Check\
    \ if x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x\
    \ is bigger than $y\"\n        exit -1\n    fi\n\n    # Check if x is smaller\
    \ than y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is smaller than\
    \ $y\"\n        exit -1\n    fi\n\n    # Check if x is equal to y\n    if [ \"\
    $x\" -eq \"$y\" ]; then\n        echo \"$x is equal to $y\"\n        exit 0\n\
    \    fi\n\n    # Check if x is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n\
    \        echo \"$x is smaller than $y\"\n        exit -1\n    fi\n\n    # Check\
    \ if x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x\
    \ is bigger than $y\"\n        exit -1\n    fi\n\n    # Check if x is smaller\
    \ than y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is smaller than\
    \ $y\"\n        exit -1\n    fi\n\n    # Check if x is bigger than y\n    if [\
    \ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\n        exit\
    \ -1\n    fi\n\n    # Check if x is smaller than y\n    if [ \"$x\" -lt \"$y\"\
    \ ]; then\n        echo \"$x is smaller than $y\"\n        exit -1\n    fi\n\n\
    \    # Check if x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n     \
    \   echo \"$x is bigger than $y\"\n        exit -1\n    fi\n\n    # Check if x\
    \ is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is\
    \ smaller than $y\"\n        exit -1\n    fi\n\n    # Check if x is bigger than\
    \ y\n    if [ \"$x\" -gt \"$y\" ]; then\n        echo \"$x is bigger than $y\"\
    \n        exit -1\n    fi\n\n    # Check if x is smaller than y\n    if [ \"$x\"\
    \ -lt \"$y\" ]; then\n        echo \"$x is smaller than $y\"\n        exit -1\n\
    \    fi\n\n    # Check if x is bigger than y\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"$x is bigger than $y\"\n        exit -1\n    fi\n\n    # Check\
    \ if x is smaller than y\n    if [ \"$x\" -lt \"$y\" ]; then\n        echo \"\
    $x is smaller than $y\"\n        exit -1\n    fi\n\n    # Check if x is bigger\
    \ than y\n    if [ \"$x\" -gt \"$y\" ]; then\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpothll3_z.sh: line 105: syntax error near unexpected token `}''

    /tmp/tmpothll3_z.sh: line 105: `}''

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y - $x + 1) & -2 ))\"\n  \
    \  local a=\"$(( ($z + $x) & -2 ))\"\n    local b=\"$(( ($z + $y) & -2 ))\"\n\
    \    local c=\"$(( ($a + $b) & -2 ))\"\n    echo $c\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp79dedpnu.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmp79dedpnu.sh: line 37: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  for i in $(seq 1 $max); do\n    if [ $(($i % 2)) -eq 0 ]; then\n     \
    \ (( max > $i )) && break\n    fi\n  done\n  echo $(( max > 0 ? max : -1 ))\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [[ $x -le $y ]]; then\n\
    \        num=$(expr $x + $y)\n        if [[ $num -gt 0 ]]; then\n            num=$(expr\
    \ $num / 2)\n        fi\n        if [[ $num -eq 0 ]]; then\n            num=-1\n\
    \        fi\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local i\n  \
    \  \n    if [ \"$x\" -ge \"$y\" ]; then\n        max=x\n    else\n        max=y\n\
    \    fi\n    \n    for (( i=1; i<=max; i++ )); do\n        if [ \"$i\" -ge \"\
    $max\" ]; then\n            num=i\n            break\n        fi\n    done\n \
    \   \n    if [ \"$num\" -eq \"$max\" ]; then\n        echo \"-1\"\n    else\n\
    \        echo \"$num\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 27: [: y: integer expression expected

    /tmp/tmpiaalaael.sh: line 33: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    local max\n    local even\n\
    \    local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z / 2 ))\"\n    local b=\"$(( z % 2 ))\"\n    if [ \"$a\" -eq 0 ] && [ \"$b\"\
    \ -eq 0 ]; then\n        echo \"$x\"\n    else\n        echo \"$y\"\n    fi\n\
    }\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\n    local\
    \ f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$((\
    \ (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x-y)))\"\n    local j=\"$(( (x-y)*(x-y)))\"\
    \n    local k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (x-y)*(x-y)))\"\n    local\
    \ m=\"$(( (x-y)*(x-y)))\"\n    local n=\"$(( (x-y)*(x-y)))\"\n    local o=\"$((\
    \ (x-y)*(x-y)))\"\n    local p=\"$(( (x-y)*(x-y)))\"\n    local q=\"$(( (x-y)*(x-y)))\"\
    \n    local r=\"$(( (x-y)*(x-y)))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local\
    \ t=\"$(( (x-y)*(x-y)))\"\n    local u=\"$(( (x-y)*(x-y)))\"\n    local v=\"$((\
    \ (x-y)*(x-y)))\"\n    local w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (x-y)*(x-y)))\"\
    \n    local y=\"$(( (x-y)*(x-y)))\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local\
    \ a=\"$(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$((\
    \ (x-y)*(x-y)))\"\n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\
    \n    local f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local\
    \ h=\"$(( (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyfabc1oa.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyfabc1oa.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y < <(echo \"$1 $2\")\n    if [[ $x -ge $y ]]; then\n      \
    \  echo \"$x\"\n    else\n        echo \"$y\"\n    fi\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($x-$y)*2 ))\"\n    local a=\"\
    $(( $z % 2 ))\"\n    local b=\"$(( $z / 2 ))\"\n    local c=\"$(( $z - 1 ))\"\n\
    \    local d=\"$(( $z + 1 ))\"\n    local e=\"$(( $z * 2 ))\"\n    local f=\"\
    $(( $z * 3 ))\"\n    local g=\"$(( $z * 4 ))\"\n    local h=\"$(( $z * 5 ))\"\n\
    \    local i=\"$(( $z * 6 ))\"\n    local j=\"$(( $z * 7 ))\"\n    local k=\"\
    $(( $z * 8 ))\"\n    local l=\"$(( $z * 9 ))\"\n    local m=\"$(( $z * 10 ))\"\
    \n    local n=\"$(( $z * 11 ))\"\n    local o=\"$(( $z * 12 ))\"\n    local p=\"\
    $(( $z * 13 ))\"\n    local q=\"$(( $z * 14 ))\"\n    local r=\"$(( $z * 15 ))\"\
    \n    local s=\"$(( $z * 16 ))\"\n    local t=\"$(( $z * 17 ))\"\n    local u=\"\
    $(( $z * 18 ))\"\n    local v=\"$(( $z * 19 ))\"\n    local w=\"$(( $z * 20 ))\"\
    \n    local x=\"$(( $z * 21 ))\"\n    local y=\"$(( $z * 22 ))\"\n    local z=\"\
    $(( $z * 23 ))\"\n    local a=\"$(( $z * 24 ))\"\n    local b=\"$(( $z * 25 ))\"\
    \n    local c=\"$(( $z * 26 ))\"\n    local d=\"$(( $z * 27 ))\"\n    local e=\"\
    $(( $z * 28 ))\"\n    local f=\"$(( $z * 29 ))\"\n    local g=\"$(( $z * 30 ))\"\
    \n    local h=\"$(( $z * 31 ))\"\n    local i=\"$(( $z * 32 ))\"\n    local j=\"\
    $(( $z * 33 ))\"\n    local k=\"$(( $z * 34 ))\"\n    local l=\"$(( $z * 35 ))\"\
    \n    local m=\"$(( $z * 36 ))\"\n    local n=\"$(( $z * 37 ))\"\n    local o=\"\
    $\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") =\
    \ \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkmn4drfg.sh: line 73: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkmn4drfg.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z - b ))\"\
    \n    local d=\"$(( b - a ))\"\n    local e=\"$(( c - a ))\"\n    local f=\"$((\
    \ d - a ))\"\n    local g=\"$(( e - a ))\"\n    local h=\"$(( f - a ))\"\n   \
    \ local i=\"$(( g - a ))\"\n    local j=\"$(( h - a ))\"\n    local k=\"$(( i\
    \ - a ))\"\n    local l=\"$(( j - a ))\"\n    local m=\"$(( k - a ))\"\n    local\
    \ n=\"$(( l - a ))\"\n    local o=\"$(( m - a ))\"\n    local p=\"$(( n - a ))\"\
    \n    local q=\"$(( o - a ))\"\n    local r=\"$(( p - a ))\"\n    local s=\"$((\
    \ q - a ))\"\n    local t=\"$(( r - a ))\"\n    local u=\"$(( t - a ))\"\n   \
    \ local v=\"$(( u - a ))\"\n    local w=\"$(( v - a ))\"\n    local x=\"$(( w\
    \ - a ))\"\n    local y=\"$(( x - a ))\"\n    local z=\"$(( y - a ))\"\n    local\
    \ a=\"$(( z - a ))\"\n    echo $a\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ min=$(( x < y ? x : y ))\n    local even=0\n    local odd=0\n    local even2=0\n\
    \    local odd2=0\n    local even3=0\n    local odd3=0\n    local even4=0\n  \
    \  local odd4=0\n    local even5=0\n    local odd5=0\n    local even6=0\n    local\
    \ odd6=0\n    local even7=0\n    local odd7=0\n    local even8=0\n    local odd8=0\n\
    \    local even9=0\n    local odd9=0\n    local even10=0\n    local odd10=0\n\
    \    local even11=0\n    local odd11=0\n    local even12=0\n    local odd12=0\n\
    \    local even13=0\n    local odd13=0\n    local even14=0\n    local odd14=0\n\
    \    local even15=0\n    local odd15=0\n    local even16=0\n    local odd16=0\n\
    \    local even17=0\n    local odd17=0\n    local even18=0\n    local odd18=0\n\
    \    local even19=0\n    local odd19=0\n    local even20=0\n    local odd20=0\n\
    \    local even21=0\n    local odd21=0\n    local even22=0\n    local odd22=0\n\
    \    local even23=0\n    local odd23=0\n    local even24=0\n    local odd24=0\n\
    \    local even25=0\n    local odd25=0\n    local even26=0\n    local odd26=0\n\
    \    local even27=0\n    local odd27=0\n    local even28=0\n    local odd28=0\n\
    \    local even29=0\n    local odd29=0\n    local even30=0\n    local odd30=0\n\
    \    local even31=0\n    local odd31=0\n    local even32=0\n    local odd32=0\n\
    \    local even33=0\n    local odd33=0\n    local even34=0\n    local odd34=0\n\
    \    local even35=0\n    local odd35=0\n    local even36=0\n    local odd36=0\n\
    \    local even37=0\n    local odd37=0\n    local even38=0\n    local odd38=0\n\
    \    local even39=0\n    local odd39=0\n    local even40=0\n    local \n}\n\n\
    candidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local num\n  \n  if (( x < y ));\
    \ then\n    choose_num \"$y\" \"$x\"\n  fi\n  \n  max=x\n  num=y\n  \n  while\
    \ (( num > 0 )); do\n    (( num -= 2 ))\n    (( max += 2 ))\n  done\n  \n  if\
    \ (( num == 0 )); then\n    choose_num \"$max\" \"$y\"\n  else\n    choose_num\
    \ \"$max\" \"$x\"\n  fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=39 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=4 encoding='utf-8'>
  timestamp: 1660044882
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"-1\"\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -ge $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -le $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local num\n    local num2\n    local num3\n\
    \    local num4\n    local num5\n    local num6\n    local num7\n    local num8\n\
    \    local num9\n    local num10\n    local num11\n    local num12\n    local\
    \ num13\n    local num14\n    local num15\n    local num16\n    local num17\n\
    \    local num18\n    local num19\n    local num20\n    local num21\n    local\
    \ num22\n    local num23\n    local num24\n    local num25\n    local num26\n\
    \    local num27\n    local num28\n    local num29\n    local num30\n    local\
    \ num31\n    local num32\n    local num33\n    local num34\n    local num35\n\
    \    local num36\n    local num37\n    local num38\n    local num39\n    local\
    \ num40\n    local num41\n    local num42\n    local num43\n    local num44\n\
    \    local num45\n    local num46\n    local num47\n    local num48\n    local\
    \ num49\n    local num50\n    local num51\n    local num52\n    local num53\n\
    \    local num54\n    local num55\n    local num56\n    local num57\n    local\
    \ num58\n    local num59\n    local num60\n    local num61\n    local num62\n\
    \    local num63\n    local num64\n    local num65\n    local num66\n    local\
    \ num67\n    local num68\n    local num69\n    local num70\n    local num71\n\
    \    local num72\n    local num73\n    local num74\n    local num75\n    local\
    \ num76\n    local num77\n    local num78\n    local num79\n    local num80\n\
    \    local num81\n    local num82\n    local num83\n    local num84\n    local\
    \ num85\n    local num86\n    local num87\n    local num88\n    local num89\n\
    \    local num90\n    local num91\n    local num92\n    local num93\n    local\
    \ num94\n    local num95\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [ \"$x\" -le \"$y\" ]; then\n\
    \        num=$(expr $x + 1)\n    else\n        num=$(expr $y - $x + 1)\n    fi\n\
    \    while [ \"$num\" -le \"$y\" ] && [ \"$num\" -ge \"$x\" ]; do\n        ((\
    \ num += 2 ))\n    done\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpuruhbadq.sh: line 17: [: : integer expression expected\nexpr: syntax\
    \ error: unexpected argument \u201812\u2019\n/tmp/tmpuruhbadq.sh: line 22: [:\
    \ : integer expression expected\n"
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z % 2 ))\"\n   \
    \ local d=\"$(( z / 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ / 2 ))\"\n    local g=\"$(( z % 2 ))\"\n    local h=\"$(( z / 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z % 2 ))\"\
    \n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z % 2 ))\"\n    local n=\"$((\
    \ z / 2 ))\"\n    local o=\"$(( z % 2 ))\"\n    local p=\"$(( z / 2 ))\"\n   \
    \ local q=\"$(( z % 2 ))\"\n    local r=\"$(( z / 2 ))\"\n    local s=\"$(( z\
    \ % 2 ))\"\n    local t=\"$(( z / 2 ))\"\n    local u=\"$(( z % 2 ))\"\n    local\
    \ v=\"$(( z / 2 ))\"\n    local w=\"$(( z % 2 ))\"\n    local x=\"$(( z / 2 ))\"\
    \n    local y=\"$(( z % 2 ))\"\n    local z=\"$(( z / 2 ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( z % 2 ))\"\n   \
    \ local d=\"$(( z / 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ / 2 ))\"\n    local g=\"$(( z % 2 ))\"\n    local h=\"$(( z / 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z / 2 ))\"\n    local k=\"$(( z % 2 ))\"\
    \n    local l=\"$(( z / 2 ))\"\n    local m=\"$(( z % 2 ))\"\n    local n=\"$((\
    \ z / 2 ))\"\n    local o=\"$(( z % 2 \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo8oahwss.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpo8oahwss.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local num\n\n    # Make sure that $x and $y are integers\n\
    \    if [[ $x =~ ^[0-9]+$ ]] || [[ $y =~ ^[0-9]+$ ]]; then\n        # Check if\
    \ $x is bigger than $y\n        if [[ $x -gt $y ]]; then\n            echo \"\
    $x is bigger than $y\"\n            return -1\n        fi\n        # Check if\
    \ $x is smaller than $y\n        if [[ $x -lt $y ]]; then\n            echo \"\
    $x is smaller than $y\"\n            return -1\n        fi\n    fi\n\n    # Check\
    \ if $x is even\n    if [[ $x -eq $(( $(echo \"$x % 2\" | bc) )) ]]; then\n  \
    \      even=$x\n    else\n        even=$(( $x - 1 ))\n    fi\n\n    # Check if\
    \ $y is even\n    if [[ $y -eq $(( $(echo \"$y % 2\" | bc) )) ]]; then\n     \
    \   odd=$y\n    else\n        odd=$(( $y - 1 ))\n    fi\n\n    # Check if $even\
    \ is bigger than $odd\n    if [[ $even -gt $odd ]]; then\n        echo \"$even\
    \ is bigger than $odd\"\n        return -1\n    fi\n\n    # Check if $even is\
    \ smaller than $odd\n    if [[ $even -lt $odd ]]; then\n        echo \"$even is\
    \ smaller than $odd\"\n        return -1\n    fi\n\n    # Check if $even is even\n\
    \    if [[ $even -eq $(( $(echo \"$even % 2\" | bc) )) ]]; then\n        num=$(echo\
    \ \"$even + 1\" | bc)\n    else\n        num=$(echo \"$even - 1\" | bc)\n    fi\n\
    \n    # Check if $num is bigger than $y\n    if [[ $num -gt $y ]]; then\n    \
    \    echo \"$num is bigger than $y\"\n        return -1\n    fi\n\n    # Check\
    \ if $num is smaller than $y\n    if [[ $num -lt $y ]]; then\n        echo \"\
    $num is smaller than $y\"\n        return -1\n    fi\n\n    # Check if $num is\
    \ even\n    if [[ $num -eq $(( $(echo \"$num % 2\" | bc) )) ]]; then\n       \
    \ num=$(echo \"$num + 1\" | bc)\n    else\n        num=$(echo \"$num - 1\" | bc)\n\
    \    fi\n\n    # Check if $num is bigger than $x\n    if [[ $num -gt $x ]]; then\n\
    \        echo \"$num is bigger than \n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm3d9w3by.sh: line 106: unexpected EOF while looking for matching
    `"''

    /tmp/tmpm3d9w3by.sh: line 110: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    z=$(( x + y ))\n    while [ $z -gt $y ]\n   \
    \ do\n        z=$(( z - y ))\n    done\n    while [ $z -gt $x ]\n    do\n    \
    \    z=$(( z - x ))\n    done\n    echo $z\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result=\"$(( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\
    \ ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\n}\n\ncandidate() {\n\
    \    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl5jzse8h.sh: line 16: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl5jzse8h.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local j\n    local\
    \ odd\n    local even\n    local even2\n    local odd2\n    local even3\n    local\
    \ odd3\n    local even4\n    local odd4\n    local even5\n    local odd5\n   \
    \ local even6\n    local odd6\n    local even7\n    local odd7\n    local even8\n\
    \    local odd8\n    local even9\n    local odd9\n    local even10\n    local\
    \ odd10\n    local even11\n    local odd11\n    local even12\n    local odd12\n\
    \    local even13\n    local odd13\n    local even14\n    local odd14\n    local\
    \ even15\n    local odd15\n    local even16\n    local odd16\n    local even17\n\
    \    local odd17\n    local even18\n    local odd18\n    local even19\n    local\
    \ odd19\n    local even20\n    local odd20\n    local even21\n    local odd21\n\
    \    local even22\n    local odd22\n    local even23\n    local odd23\n    local\
    \ even24\n    local odd24\n    local even25\n    local odd25\n    local even26\n\
    \    local odd26\n    local even27\n    local odd27\n    local even28\n    local\
    \ odd28\n    local even29\n    local odd29\n    local even30\n    local odd30\n\
    \    local even31\n    local odd31\n    local even32\n    local odd32\n    local\
    \ even33\n    local odd33\n    local even34\n    local odd34\n    local even35\n\
    \    local odd35\n    local even36\n    local odd36\n    local even37\n    local\
    \ odd37\n    local even38\n    local odd38\n    local even39\n    local odd39\n\
    \    local even40\n    local odd40\n    local even41\n    local odd41\n    local\
    \ even42\n    local odd42\n    local even43\n    local odd43\n    local even44\n\
    \    local odd44\n    local even45\n    local odd45\n    local even46\n    local\
    \ odd46\n    local even47\n    local odd47\n    local even48\n    local odd48\n\
    \    local even49\n    local odd49\n\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    local num\n    if [ \"$x\" -gt \"$y\" ]; then\n\
    \        echo \"$x\"\n    elif [ \"$y\" -gt \"$x\" ]; then\n        echo \"$y\"\
    \n    else\n        num=$(expr $x \\* $x + $y \\* $y - $x \\* $y)\n        if\
    \ [ \"$num\" -eq 0 ]; then\n            echo \"-1\"\n        else\n          \
    \  echo \"$num\"\n        fi\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpedr1otmb.sh: line 17: [: : integer expression expected

    /tmp/tmpedr1otmb.sh: line 19: [: : integer expression expected

    expr: non-integer argument

    /tmp/tmpedr1otmb.sh: line 23: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n\n    if [[ $x -le\
    \ $y ]]; then\n        max=x\n    else\n        max=y\n    fi\n\n    for (( num=$max;\
    \ num>0; num-- )); do\n        if [[ $((num % 2)) == 0 ]]; then\n            max=num\n\
    \            break\n        fi\n    done\n\n    if [[ $max -eq 0 ]]; then\n  \
    \      echo \"-1\"\n    else\n        echo \"$max\"\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local even\n    even=0\n    while [ $x -le $y ];\
    \ do\n        if [ $(( $x % 2 )) -eq 0 ]; then\n            even=$(( $even + 1\
    \ ))\n        fi\n        x=$(( $x + 1 ))\n    done\n    if [ $even -eq 0 ]; then\n\
    \        echo \"-1\"\n    else\n        echo \"$even\"\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local num\n    num=$(expr $x + $y)\n    if [ $num\
    \ -gt $x ]; then\n        num=$(expr $x - $y)\n    fi\n    if [ $num -gt $y ];\
    \ then\n        num=$(expr $y - $x)\n    fi\n    if [ $num -eq 0 ]; then\n   \
    \     num=-1\n    fi\n    echo \"$num\"\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: -1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    local even\n    even=0\n    while [ $x -le $y ];\
    \ do\n        ((even+=x))\n        ((x-=2))\n    done\n    if [ $even -eq 0 ];\
    \ then\n        echo \"-1\"\n    else\n        echo $even\n    fi\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=23 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660044883
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y <<< \"$1\"\n    read x y <<< \"$2\"\n    local max\n    local\
    \ i\n    max=$(( x > y ? x : y ))\n    for i in $(seq 1 $max); do\n        if\
    \ [ $(( $i % 2 )) -eq 0 ]; then\n            (( max > $i )) && return $i\n   \
    \     fi\n    done\n    return -1\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( (x > y) ? x : y ))\n    local\
    \ min=$(( (x < y) ? x : y ))\n    local i\n    local even\n    local odd\n   \
    \ local even2\n    local odd2\n    local even3\n    local odd3\n    local even4\n\
    \    local odd4\n    local even5\n    local odd5\n    local even6\n    local odd6\n\
    \    local even7\n    local odd7\n    local even8\n    local odd8\n    local even9\n\
    \    local odd9\n    local even10\n    local odd10\n    local even11\n    local\
    \ odd11\n    local even12\n    local odd12\n    local even13\n    local odd13\n\
    \    local even14\n    local odd14\n    local even15\n    local odd15\n    local\
    \ even16\n    local odd16\n    local even17\n    local odd17\n    local even18\n\
    \    local odd18\n    local even19\n    local odd19\n    local even20\n    local\
    \ odd20\n    local even21\n    local odd21\n    local even22\n    local odd22\n\
    \    local even23\n    local odd23\n    local even24\n    local odd24\n    local\
    \ even25\n    local odd25\n    local even26\n    local odd26\n    local even27\n\
    \    local odd27\n    local even28\n    local odd28\n    local even29\n    local\
    \ odd29\n    local even30\n    local odd30\n    local even31\n    local odd31\n\
    \    local even32\n    local odd32\n    local even33\n    local odd33\n    local\
    \ even34\n    local odd34\n    local even35\n    local odd35\n    local even36\n\
    \    local odd36\n    local even37\n    local odd37\n    local even38\n    local\
    \ odd38\n    local even39\n    local odd39\n    local even40\n    local odd40\n\
    \    local even41\n    local odd41\n    local even42\n    local odd42\n    local\
    \ even43\n    local odd43\n    local even44\n    local odd44\n    local even45\n\
    \    local odd45\n    local even46\n    local odd46\n    local even47\n    local\
    \ odd47\n    local \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x<y) ? x : y ))\"\n    local\
    \ a=\"$(( (x<y) ? y : x ))\"\n    local b=\"$(( (x<y) ? x : y ))\"\n    local\
    \ c=\"$(( (x<y) ? y : x ))\"\n    local d=\"$(( (x<y) ? y : x ))\"\n    local\
    \ e=\"$(( (x<y) ? y : x ))\"\n    local f=\"$(( (x<y) ? y : x ))\"\n    local\
    \ g=\"$(( (x<y) ? y : x ))\"\n    local h=\"$(( (x<y) ? y : x ))\"\n    local\
    \ i=\"$(( (x<y) ? y : x ))\"\n    local j=\"$(( (x<y) ? y : x ))\"\n    local\
    \ k=\"$(( (x<y) ? y : x ))\"\n    local l=\"$(( (x<y) ? y : x ))\"\n    local\
    \ m=\"$(( (x<y) ? y : x ))\"\n    local n=\"$(( (x<y) ? y : x ))\"\n    local\
    \ o=\"$(( (x<y) ? y : x ))\"\n    local p=\"$(( (x<y) ? y : x ))\"\n    local\
    \ q=\"$(( (x<y) ? y : x ))\"\n    local r=\"$(( (x<y) ? y : x ))\"\n    local\
    \ s=\"$(( (x<y) ? y : x ))\"\n    local t=\"$(( (x<y) ? y : x ))\"\n    local\
    \ u=\"$(( (x<y) ? y : x ))\"\n    local v=\"$(( (x<y) ? y : x ))\"\n    local\
    \ w=\"$(( (x<y) ? y : x ))\"\n    local x=\"$(( (x<y) ? y : x ))\"\n    local\
    \ y=\"$(( (x<y) ? y : x ))\"\n    local z=\"$(( (x<y) ? y : x ))\"\n    local\
    \ a=\"$(( (x<y) ? y : x ))\"\n    local b=\"$(( (x<y) ? y : x ))\"\n    local\
    \ c=\"$(( (x<y) ? y : x ))\"\n    local d=\"$(( (x<y) ? y : x ))\"\n    local\
    \ e=\"$(( (x<y) ? y : x ))\"\n    local f=\"$(( (x<y) ? y : x ))\"\n    local\
    \ g=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppfpi4zdk.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmppfpi4zdk.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  for i in $(seq 1 $max); do\n    if [ $(($i % 2)) -eq 0 ]; then\n     \
    \ (( max > x )) && x=$(( $max ))\n      (( max > y )) && y=$(( $max ))\n    fi\n\
    \  done\n  echo $(( x > y ? x : y ))\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( (x-y)*(x+y) ))\n    local even=$(( num\
    \ % 2 ))\n    if [ $even -eq 0 ]; then\n        echo $num\n    else\n        echo\
    \ -1\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local a=\"\
    $(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$(( (x-y)*(x-y)))\"\
    \n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\n    local\
    \ f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local h=\"$((\
    \ (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x-y)))\"\n    local j=\"$(( (x-y)*(x-y)))\"\
    \n    local k=\"$(( (x-y)*(x-y)))\"\n    local l=\"$(( (x-y)*(x-y)))\"\n    local\
    \ m=\"$(( (x-y)*(x-y)))\"\n    local n=\"$(( (x-y)*(x-y)))\"\n    local o=\"$((\
    \ (x-y)*(x-y)))\"\n    local p=\"$(( (x-y)*(x-y)))\"\n    local q=\"$(( (x-y)*(x-y)))\"\
    \n    local r=\"$(( (x-y)*(x-y)))\"\n    local s=\"$(( (x-y)*(x-y)))\"\n    local\
    \ t=\"$(( (x-y)*(x-y)))\"\n    local u=\"$(( (x-y)*(x-y)))\"\n    local v=\"$((\
    \ (x-y)*(x-y)))\"\n    local w=\"$(( (x-y)*(x-y)))\"\n    local x=\"$(( (x-y)*(x-y)))\"\
    \n    local y=\"$(( (x-y)*(x-y)))\"\n    local z=\"$(( (x-y)*(x-y)))\"\n    local\
    \ a=\"$(( (x-y)*(x-y)))\"\n    local b=\"$(( (x-y)*(x-y)))\"\n    local c=\"$((\
    \ (x-y)*(x-y)))\"\n    local d=\"$(( (x-y)*(x-y)))\"\n    local e=\"$(( (x-y)*(x-y)))\"\
    \n    local f=\"$(( (x-y)*(x-y)))\"\n    local g=\"$(( (x-y)*(x-y)))\"\n    local\
    \ h=\"$(( (x-y)*(x-y)))\"\n    local i=\"$(( (x-y)*(x\n}\n\ncandidate() {\n  \
    \  choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"\
    15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyfabc1oa.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyfabc1oa.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( x > y ? x : y ))\n    local\
    \ min=$(( x < y ? x : y ))\n    local even=0\n    local odd=0\n    local eveneven=0\n\
    \    local evenodd=0\n    local oddodd=0\n    local eveneveneven=0\n    local\
    \ evenoddodd=0\n    local oddoddeven=0\n    local oddoddodd=0\n    local eveneveneveneven=0\n\
    \    local evenoddoddeven=0\n    local oddoddeveneven=0\n    local oddoddoddeven=0\n\
    \    local eveneveneveneveneven=0\n    local evenoddoddeveneven=0\n    local oddoddeveneveneven=0\n\
    \    local oddoddoddeveneven=0\n    local eveneveneveneveneveneven=0\n    local\
    \ evenoddoddeveneven=0\n    local oddoddeveneveneven=0\n    local oddoddoddeveneven=0\n\
    \    local eveneveneveneveneveneven=0\n    local evenoddoddeveneven=0\n    local\
    \ oddoddeveneveneven=0\n    local oddoddoddeveneven=0\n    local eveneveneveneveneveneven=0\n\
    \    local evenoddoddeveneven=0\n    local oddoddeveneveneven=0\n    local oddoddoddeveneven=0\n\
    \    local eveneveneveneveneveneven=0\n    local evenoddoddeveneven=0\n    local\
    \ oddoddeveneveneven=0\n    local oddoddoddeveneven=0\n    local eveneveneveneveneveneven=0\n\
    \    local evenoddoddeveneven=0\n    local oddoddeveneveneven=0\n    local oddoddoddeveneven=0\n\
    \    local eveneveneveneveneveneven=0\n    local evenoddoddeveneven=0\n    local\
    \ oddoddeveneveneven=0\n    local oddoddoddeven=0\n    local eveneveneveneveneven=0\n\
    \    local evenoddoddeveneven=0\n    local oddoddeveneven=0\n    local oddoddoddeven=0\n\
    \    local eveneveneveneveneven=0\n    local evenoddoddeven=0\n    local oddoddeveneven=0\n\
    \    local oddoddoddeven=0\n    local eveneveneveneveneven=0\n    local evenoddoddeven=0\n\
    \    local oddoddeveneven=0\n    local oddoddoddeven=0\n    local eveneveneveneveneven=0\n\
    \    local evenoddoddeven=0\n    local oddoddeveneven=0\n    local oddodd\n}\n\
    \ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n\
    \    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\"\
    \ \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[\
    \ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"\
    -1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z\n  z=$(( x - y ))\n  (( z % 2 == 0 ))\
    \ && return $z\n  (( z % 2 == 1 )) && return -1\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    if [ \"\
    $x\" -gt \"$y\" ]; then\n        echo \"$x is greater than $y\"\n        return\
    \ -1\n    elif [ \"$x\" -lt \"$y\" ]; then\n        echo \"$x is less than $y\"\
    \n        return -1\n    fi\n\n    max=$x\n    i=2\n    while [ \"$i\" -le \"\
    $y\" -a \"$max\" -le \"$x\" ]; do\n        if [ \"$max\" -eq \"$i\" ]; then\n\
    \            echo \"$i is even\"\n            return $i\n        fi\n        ((\
    \ max *= 2 ))\n        (( i++ ))\n    done\n    echo \"$max is even\"\n    return\
    \ $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -gt $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    x=$1\n    y=$2\n    if [ $x -le $y ]; then\n        echo \"$x\"\n \
    \   elif [ $x -ge $y ]; then\n        echo \"$y\"\n    else\n        echo \"-1\"\
    \n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate\
    \ \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n\
    \    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( $x ))\n    while [ $num -le $y ]; do\n\
    \        if [ $(( $num % 2 )) -eq 0 ]; then\n            echo \"$num\"\n     \
    \       break\n        fi\n        let num=$(( $num + 1 ))\n    done\n    if [\
    \ $num -le $y ]; then\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z / 2 ))\"\n    local b=\"$(( z % 2 ))\"\n    local c=\"$(( b + 1 ))\"\n   \
    \ local d=\"$(( c + 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$(( p + 1 ))\"\n    local r=\"$(( q + 1 ))\"\n    local s=\"$(( r\
    \ + 1 ))\"\n    local t=\"$(( s + 1 ))\"\n    local u=\"$(( t + 1 ))\"\n    local\
    \ v=\"$(( u + 1 ))\"\n    local w=\"$(( v + 1 ))\"\n    local x=\"$(( w + 1 ))\"\
    \n    local y=\"$(( x + 1 ))\"\n    local z=\"$(( y + 1 ))\"\n    local a=\"$((\
    \ z + 1 ))\"\n    local b=\"$(( a + 1 ))\"\n    local c=\"$(( b + 1 ))\"\n   \
    \ local d=\"$(( c + 1 ))\"\n    local e=\"$(( d + 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1rmq3oyd.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1rmq3oyd.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d + 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$(( p + 1 ))\"\n    local r=\"$(( q + 1 ))\"\n    local s=\"$(( r\
    \ + 1 ))\"\n    local t=\"$(( s + 1 ))\"\n    local u=\"$(( t + 1 ))\"\n    local\
    \ v=\"$(( u + 1 ))\"\n    local w=\"$(( v + 1 ))\"\n    local x=\"$(( w + 1 ))\"\
    \n    local y=\"$(( x + 1 ))\"\n    local z=\"$(( y + 1 ))\"\n    local a=\"$((\
    \ z + 1 ))\"\n    local b=\"$(( a + 1 ))\"\n    local c=\"$(( b + 1 ))\"\n   \
    \ local d=\"$(( c + 1 ))\"\n    local e=\"$(( d + 1 ))\"\n    local f=\"$(( e\
    \ + 1 ))\"\n    local g=\"$(( f + 1 ))\"\n    local h=\"$(( g + 1 ))\"\n    local\
    \ i=\"$(( h + 1 ))\"\n    local j=\"$(( i + 1 ))\"\n    local k=\"$(( j + 1 ))\"\
    \n    local l=\"$(( k + 1 ))\"\n    local m=\"$(( l + 1 ))\"\n    local n=\"$((\
    \ m + 1 ))\"\n    local o=\"$(( n + 1 ))\"\n    local p=\"$(( o + 1 ))\"\n   \
    \ local q=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeg27xt8v.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpeg27xt8v.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local max\n  local i\n  max=$(( x > y ? x : y\
    \ ))\n  for i in $(seq 1 $max); do\n    if (( i % 2 )); then\n      (( max +=\
    \ 1 ))\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n \
    \   [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( ($y-$x)/2 ))\"\n    local a=\"\
    $(( ($z*$z)/2 ))\"\n    local b=\"$(( ($z*$z*$z)/6 ))\"\n    local c=\"$(( ($z*$z*$z*$z)/120\
    \ ))\"\n    local d=\"$(( ($z*$z*$z*$z*$z)/5040 ))\"\n    local e=\"$(( ($z*$z*$z*$z*$z*$z)/40320\
    \ ))\"\n    local f=\"$(( ($z*$z*$z*$z*$z*$z*$z)/3628800 ))\"\n    local g=\"\
    $(( ($z*$z*$z*$z*$z*$z*$z*$z)/86400 ))\"\n    local h=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z)/3600\
    \ ))\"\n    local i=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z)/60 ))\"\n    local j=\"\
    $(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z)/60 ))\"\n    local k=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z)/60\
    \ ))\"\n    local l=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z)/60 ))\"\n \
    \   local m=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z*$z)/60 ))\"\n    local\
    \ n=\"$(( ($z*$z*$z*$z*$z*$z*$z*$z*$z*$z\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkf9qjhpp.sh: line 30: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkf9qjhpp.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [ \"$x\" -ge \"$y\" ];\
    \ then\n        result=$(( x % 2 ? x : y ))\n    else\n        result=$(( y %\
    \ 2 ? y : x ))\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local num\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local even2\n    local odd2\n \
    \   local even3\n    local odd3\n    local even4\n    local odd4\n    local even5\n\
    \    local odd5\n    local even6\n    local odd6\n    local even7\n    local odd7\n\
    \    local even8\n    local odd8\n    local even9\n    local odd9\n    local even10\n\
    \    local odd10\n    local even11\n    local odd11\n    local even12\n    local\
    \ odd12\n    local even13\n    local odd13\n    local even14\n    local odd14\n\
    \    local even15\n    local odd15\n    local even16\n    local odd16\n    local\
    \ even17\n    local odd17\n    local even18\n    local odd18\n    local even19\n\
    \    local odd19\n    local even20\n    local odd20\n    local even21\n    local\
    \ odd21\n    local even22\n    local odd22\n    local even23\n    local odd23\n\
    \    local even24\n    local odd24\n    local even25\n    local odd25\n    local\
    \ even26\n    local odd26\n    local even27\n    local odd27\n    local even28\n\
    \    local odd28\n    local even29\n    local odd29\n    local even30\n    local\
    \ odd30\n    local even31\n    local odd31\n    local even32\n    local odd32\n\
    \    local even33\n    local odd33\n    local even34\n    local odd34\n    local\
    \ even35\n    local odd35\n    local even36\n    local odd36\n    local even37\n\
    \    local odd37\n    local even38\n    local odd38\n    local even39\n    local\
    \ odd39\n    local even40\n    local odd40\n    local even41\n    local odd41\n\
    \    local even42\n    local odd42\n    local even43\n    local odd43\n    local\
    \ even44\n    local odd44\n    local even45\n    local odd45\n    local even46\n\
    \    local odd46\n    local even47\n    local odd47\n    local even48\n    local\
    \ odd48\n    local even49\n    \n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    \n    # Find the\
    \ biggest even number in [x, y]\n    for i in $(seq 1 $(( y - x + 1 ))); do\n\
    \        if [ $(( x % 2 )) -eq 0 ]; then\n            if [ $(( x )) -le $(( y\
    \ )) ]; then\n                max=$(( x + i ))\n                break\n      \
    \      fi\n        fi\n    done\n    \n    # Return -1 in case there's no such\
    \ number\n    if [ $(( max )) -eq -1 ]; then\n        echo \"-1\"\n    else\n\
    \        echo \"$max\"\n    fi\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[\
    \ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( (x<y) ? x : y ))\"\n    local\
    \ a=\"$(( (x<y) ? y : x ))\"\n    local b=\"$(( (x<y) ? x : y ))\"\n    local\
    \ c=\"$(( (x<y) ? y : x ))\"\n    local d=\"$(( (x<y) ? x : y ))\"\n    local\
    \ e=\"$(( (x<y) ? y : x ))\"\n    local f=\"$(( (x<y) ? y : x ))\"\n    local\
    \ g=\"$(( (x<y) ? y : x ))\"\n    local h=\"$(( (x<y) ? y : x ))\"\n    local\
    \ i=\"$(( (x<y) ? y : x ))\"\n    local j=\"$(( (x<y) ? y : x ))\"\n    local\
    \ k=\"$(( (x<y) ? y : x ))\"\n    local l=\"$(( (x<y) ? y : x ))\"\n    local\
    \ m=\"$(( (x<y) ? y : x ))\"\n    local n=\"$(( (x<y) ? y : x ))\"\n    local\
    \ o=\"$(( (x<y) ? y : x ))\"\n    local p=\"$(( (x<y) ? y : x ))\"\n    local\
    \ q=\"$(( (x<y) ? y : x ))\"\n    local r=\"$(( (x<y) ? y : x ))\"\n    local\
    \ s=\"$(( (x<y) ? y : x ))\"\n    local t=\"$(( (x<y) ? y : x ))\"\n    local\
    \ u=\"$(( (x<y) ? y : x ))\"\n    local v=\"$(( (x<y) ? y : x ))\"\n    local\
    \ w=\"$(( (x<y) ? y : x ))\"\n    local x=\"$(( (x<y) ? y : x ))\"\n    local\
    \ y=\"$(( (x<y) ? y : x ))\"\n    local z=\"$(( (x<y) ? y : x ))\"\n    local\
    \ a=\"$(( (x<y) ? y : x ))\"\n    local b=\"$(( (x<y) ? y : x ))\"\n    local\
    \ c=\"$(( (x<y) ? y : x ))\"\n    local d=\"$(( (x<y) ? y : x ))\"\n    local\
    \ e=\"$(( (x<y) ? y : x ))\"\n    local f=\"$(( (x<y) ? y : x ))\"\n    local\
    \ g=\"$((\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb3xu3gi9.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpb3xu3gi9.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max\n    local i\n    local even\n \
    \   local odd\n    local even2\n    local odd2\n    local even3\n    local odd3\n\
    \    local even4\n    local odd4\n    local even5\n    local odd5\n    local even6\n\
    \    local odd6\n    local even7\n    local odd7\n    local even8\n    local odd8\n\
    \    local even9\n    local odd9\n    local even10\n    local odd10\n    local\
    \ even11\n    local odd11\n    local even12\n    local odd12\n    local even13\n\
    \    local odd13\n    local even14\n    local odd14\n    local even15\n    local\
    \ odd15\n    local even16\n    local odd16\n    local even17\n    local odd17\n\
    \    local even18\n    local odd18\n    local even19\n    local odd19\n    local\
    \ even20\n    local odd20\n    local even21\n    local odd21\n    local even22\n\
    \    local odd22\n    local even23\n    local odd23\n    local even24\n    local\
    \ odd24\n    local even25\n    local odd25\n    local even26\n    local odd26\n\
    \    local even27\n    local odd27\n    local even28\n    local odd28\n    local\
    \ even29\n    local odd29\n    local even30\n    local odd30\n    local even31\n\
    \    local odd31\n    local even32\n    local odd32\n    local even33\n    local\
    \ odd33\n    local even34\n    local odd34\n    local even35\n    local odd35\n\
    \    local even36\n    local odd36\n    local even37\n    local odd37\n    local\
    \ even38\n    local odd38\n    local even39\n    local odd39\n    local even40\n\
    \    local odd40\n    local even41\n    local odd41\n    local even42\n    local\
    \ odd42\n    local even43\n    local odd43\n    local even44\n    local odd44\n\
    \    local even45\n    local odd45\n    local even46\n    local odd46\n    local\
    \ even47\n    local odd47\n    local even48\n    local odd48\n    local even49\n\
    \    local odd49\n    local even50\n}\n\ncandidate() {\n    choose_num \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n   \
    \ [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local max=$(( (x > y) ? x : y ))\n    local\
    \ i\n    for (( i = 3; i <= max; i++ )); do\n        if (( i % 2 )); then\n  \
    \          (( max -= i ))\n        else\n            (( max += i ))\n        fi\n\
    \    done\n    echo $max\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate\
    \ \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\"\
    \ ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"\
    6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[\
    \ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") =\
    \ \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local result\n    if [ \"$x\" -le \"$y\" ];\
    \ then\n        result=$(( x ))\n    else\n        result=$(( y ))\n    fi\n \
    \   while [ \"$result\" -le \"$y\" ] && [ \"$result\" -ge \"$x\" ]; do\n     \
    \   result=$(( result + 2 ))\n    done\n    if [ \"$result\" -eq \"$y\" ]; then\n\
    \        result=$(( result + 1 ))\n    fi\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n  local\
    \ x=\"$1\"\n  local y=\"$2\"\n  local z=\"$(( x - y ))\"\n  local a=\"$(( z /\
    \ 2 ))\"\n  local b=\"$(( z % 2 ))\"\n  echo \"$(( a + b ))\"\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=$1\n    local y=$2\n    local num=$(( ($x-1)*($y-1)+$x ))\n    local even=0\n\
    \    local odd=0\n    local max=0\n    local evennum\n    local oddnum\n    local\
    \ eveneven\n    local oddodd\n    local eveneveneven\n    local oddoddodd\n  \
    \  local eveneveneveneven\n    local oddoddoddodd\n    local eveneveneveneveneven\n\
    \    local oddoddoddoddodd\n    local eveneveneveneveneveneven\n    local oddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneven\n    local oddoddoddoddoddoddodd\n   \
    \ local eveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneveneveneven\n    local oddoddoddoddoddoddoddoddoddodd\n\
    \    local eveneveneveneveneveneveneveneveneveneveneveneveneveneven\n    local\
    \ oddoddoddoddoddoddoddoddoddodd\n    local eveneveneveneveneveneveneveneveneveneveneveneveneveneven\n\
    \    local oddoddoddoddoddoddoddoddoddoddodd\n    local eveneveneveneveneveneveneveneveneveneveneveneveneveneven\n\
    \    local oddoddoddoddoddoddoddoddoddodd\n    local eveneveneveneveneveneveneveneveneveneveneveneveneveneven\n\
    \    local oddoddoddoddoddoddoddoddoddodd\n    local eveneveneveneveneveneveneveneveneveneveneveneveneveneven\n\
    \    local oddoddoddoddoddoddoddoddoddodd\n    local eveneveneven\n}\n\ncandidate()\
    \ {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\"\
    \ \"15\") = \"14\" ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"33\" \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"\
    -1\" ]]\n    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\"\
    \ \"10\") = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y\n    read x y < <(echo \"$1 $2\")\n    if [ $x -le $y ]; then\n        echo\
    \ \"$x\"\n    else\n        echo \"$y\"\n    fi\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ x % 2 ))\"\n    local b=\"$(( y % 2 ))\"\n    local c=\"$(( z % 2 ))\"\n   \
    \ local d=\"$(( z % 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ % 2 ))\"\n    local g=\"$(( z % 2 ))\"\n    local h=\"$(( z % 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z % 2 ))\"\n    local k=\"$(( z % 2 ))\"\
    \n    local l=\"$(( z % 2 ))\"\n    local m=\"$(( z % 2 ))\"\n    local n=\"$((\
    \ z % 2 ))\"\n    local o=\"$(( z % 2 ))\"\n    local p=\"$(( z % 2 ))\"\n   \
    \ local q=\"$(( z % 2 ))\"\n    local r=\"$(( z % 2 ))\"\n    local s=\"$(( z\
    \ % 2 ))\"\n    local t=\"$(( z % 2 ))\"\n    local u=\"$(( z % 2 ))\"\n    local\
    \ v=\"$(( z % 2 ))\"\n    local w=\"$(( z % 2 ))\"\n    local x=\"$(( z % 2 ))\"\
    \n    local y=\"$(( z % 2 ))\"\n    local z=\"$(( z % 2 ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z % 2 ))\"\n    local c=\"$(( z % 2 ))\"\n   \
    \ local d=\"$(( z % 2 ))\"\n    local e=\"$(( z % 2 ))\"\n    local f=\"$(( z\
    \ % 2 ))\"\n    local g=\"$(( z % 2 ))\"\n    local h=\"$(( z % 2 ))\"\n    local\
    \ i=\"$(( z % 2 ))\"\n    local j=\"$(( z % 2 ))\"\n    local k=\"$(( z % 2 ))\"\
    \n    local l=\"$(( z % 2 ))\"\n    local m=\"$(( z % 2 ))\"\n    local n=\"$((\
    \ z % 2 ))\"\n    local o=\"$(( z % 2 \n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpub6eirjb.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpub6eirjb.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x + (y - x) / 2 ))\"\n    local\
    \ a=\"$(( z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( y / 2 ))\"\
    \n    local d=\"$(( y % 2 ))\"\n    local e=\"$(( y / 2 ))\"\n    local f=\"$((\
    \ y % 2 ))\"\n    local g=\"$(( y / 2 ))\"\n    local h=\"$(( y % 2 ))\"\n   \
    \ local i=\"$(( y / 2 ))\"\n    local j=\"$(( y % 2 ))\"\n    local k=\"$(( y\
    \ / 2 ))\"\n    local l=\"$(( y % 2 ))\"\n    local m=\"$(( y / 2 ))\"\n    local\
    \ n=\"$(( y % 2 ))\"\n    local o=\"$(( y / 2 ))\"\n    local p=\"$(( y % 2 ))\"\
    \n    local q=\"$(( y / 2 ))\"\n    local r=\"$(( y % 2 ))\"\n    local s=\"$((\
    \ y / 2 ))\"\n    local t=\"$(( y % 2 ))\"\n    local u=\"$(( y / 2 ))\"\n   \
    \ local v=\"$(( y % 2 ))\"\n    local w=\"$(( y / 2 ))\"\n    local x=\"$(( y\
    \ % 2 ))\"\n    local y=\"$(( y / 2 ))\"\n    local z=\"$(( y % 2 ))\"\n    local\
    \ a=\"$(( y / 2 ))\"\n    local b=\"$(( y % 2 ))\"\n    local c=\"$(( y / 2 ))\"\
    \n    local d=\"$(( y % 2 ))\"\n    local e=\"$(( y / 2 ))\"\n    local f=\"$((\
    \ y % 2 ))\"\n    local g=\"$(( y / 2 ))\"\n    local h=\"$(( y % 2 ))\"\n   \
    \ local i=\"$(( y / 2 ))\"\n    local j=\"$(( y % 2 ))\"\n    local k=\"$(( y\
    \ / 2 ))\"\n    local l=\"$(( y % 2 ))\"\n    local m=\"$(( y / 2 ))\"\n    local\
    \ n=\"$(( y % 2 ))\"\n    local o=\"$((\n}\n\ncandidate() {\n    choose_num \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n\
    \    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\"\
    ) = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n \
    \   [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\"\
    ) = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzcefp5_s.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzcefp5_s.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x y z\n    x=$1\n    y=$2\n    z=$(( x > y ? x : y ))\n    while [ $z -gt $y\
    \ ]; do\n        z=$(( z - 2 ))\n    done\n    while [ $z -gt $x ]; do\n     \
    \   z=$(( z - 2 ))\n    done\n    echo $z\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044878
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 1
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n\n}\n\ncandidate() {\n    choose_num \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"12\" \"15\") = \"14\" ]]\n    [[ $(candidate \"13\"\
    \ \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\" \"12354\") = \"12354\" ]]\n \
    \   [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n    [[ $(candidate \"6\" \"\
    29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate \"546\" \"546\") = \"546\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044877
- exit_code: 2
  program: "#!/bin/bash\n# This function takes two positive numbers x and y and returns\
    \ the\n# biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n# there's no such number, then the function should return -1.\n# For example:\n\
    # >>> $(choose_num \"12\" \"15\")\n# \"14\"\n# >>> $(choose_num \"13\" \"12\"\
    )\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\nchoose_num() {\n    local\
    \ x=\"$1\"\n    local y=\"$2\"\n    local z=\"$(( x - y ))\"\n    local a=\"$((\
    \ z % 2 ))\"\n    local b=\"$(( z / 2 ))\"\n    local c=\"$(( b - a ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$(( q - 1 ))\"\n    local s=\"$(( r\
    \ - 1 ))\"\n    local t=\"$(( s - 1 ))\"\n    local u=\"$(( t - 1 ))\"\n    local\
    \ v=\"$(( u - 1 ))\"\n    local w=\"$(( v - 1 ))\"\n    local x=\"$(( w - 1 ))\"\
    \n    local y=\"$(( x - 1 ))\"\n    local z=\"$(( y - 1 ))\"\n    local a=\"$((\
    \ z - 1 ))\"\n    local b=\"$(( a - 1 ))\"\n    local c=\"$(( b - 1 ))\"\n   \
    \ local d=\"$(( c - 1 ))\"\n    local e=\"$(( d - 1 ))\"\n    local f=\"$(( e\
    \ - 1 ))\"\n    local g=\"$(( f - 1 ))\"\n    local h=\"$(( g - 1 ))\"\n    local\
    \ i=\"$(( h - 1 ))\"\n    local j=\"$(( i - 1 ))\"\n    local k=\"$(( j - 1 ))\"\
    \n    local l=\"$(( k - 1 ))\"\n    local m=\"$(( l - 1 ))\"\n    local n=\"$((\
    \ m - 1 ))\"\n    local o=\"$(( n - 1 ))\"\n    local p=\"$(( o - 1 ))\"\n   \
    \ local q=\"$(( p - 1 ))\"\n    local r=\"$\n}\n\ncandidate() {\n    choose_num\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\" \"15\") = \"14\"\
    \ ]]\n    [[ $(candidate \"13\" \"12\") = \"-1\" ]]\n    [[ $(candidate \"33\"\
    \ \"12354\") = \"12354\" ]]\n    [[ $(candidate \"5234\" \"5233\") = \"-1\" ]]\n\
    \    [[ $(candidate \"6\" \"29\") = \"28\" ]]\n    [[ $(candidate \"27\" \"10\"\
    ) = \"-1\" ]]\n    [[ $(candidate \"7\" \"7\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"546\" \"546\") = \"546\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy28_0tzq.sh: line 76: unexpected EOF while looking for matching
    `"''

    /tmp/tmpy28_0tzq.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044877

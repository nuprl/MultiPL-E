name: HumanEval_30_get_positive
language: sh
prompt: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
  \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3 -5\
  \ 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"', '\"123\"\
  ', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n"
tests: "}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
  \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
  ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
completions: ["    local list=\"$1\"\n    local positive=()\n    for number in $list;\
    \ do\n        if [[ $number =~ ^-?[0-9]+$ ]]; then\n            positive+=(\"\
    $number\")\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"\
    $1\"\n    local positive=()\n    for element in $list; do\n        if [[ $element\
    \ =~ ^-?[0-9]+$ ]]; then\n            positive+=(\"$element\")\n        fi\n \
    \   done\n    echo \"${positive[@]}\"", "    local list=\"$1\"\n    local positive=()\n\
    \    for element in $list; do\n        if [[ $element =~ ^-?[0-9]+$ ]]; then\n\
    \            positive+=(\"$element\")\n        fi\n    done\n    echo \"${positive[@]}\"",
  "    local IFS=' '\n    local -a arr=( $1 )\n    local ret=()\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n            ret+=( \"${arr[$i]}\"\
    \ )\n        fi\n    done\n    echo \"${ret[@]}\"", "    local IFS=' '\n    local\
    \ -a arr=( $1 )\n    local ret=()\n    for val in \"${arr[@]}\"; do\n        if\
    \ [[ $val =~ ^-?[0-9]+$ ]]; then\n            echo \"$val\"\n        else\n  \
    \          ret+=(\"$val\")\n        fi\n    done\n    echo \"${ret[@]}\"", " \
    \   local IFS=$'\\n' arr=($1)\n    local ret=()\n    for x in \"${arr[@]}\"; do\n\
    \        if [[ $x =~ ^-[0-9]+$ ]]; then\n            ret+=(\"$x\")\n        fi\n\
    \    done\n    echo \"${ret[@]}\"", "    local IFS=' '\n    local -a arr\n   \
    \ arr=($1)\n    local n\n    for ((n=0; n<${#arr[@]}; n++)); do\n        [[ ${arr[$n]}\
    \ =~ ^-?[0-9]+$ ]] && arr[$n]=\"\\\"${arr[$n]#-}\\\"\"\n    done\n    echo \"\
    ${arr[@]}\"", "    local IFS=' '\n    local result=()\n    for element in $1;\
    \ do\n        if [[ $element =~ ^-?[0-9]+$ ]]; then\n            result+=(\"$element\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "  local list_str=$1\n  local\
    \ list=()\n  local item\n  local i\n  local j\n  local positive\n  local num_pos\n\
    \  local num_neg\n  local num_negs\n  local num_negs_str\n  local num_negs_strs\n\
    \  local num_negs_strs_str\n  local num_negs_strs_strs\n  local num_negs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs\n  local num_negs_strs_strs_strs_str\n  local\
    \ num_negs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_str\n  local\
    \ num_negs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n  local\
    \ num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n  local\
    \ num_negs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \  local num_negs_strs_strs_strs_strs_strs_strs_strs_strs_str", "    local list=\"\
    $1\"\n    local positive\n    positive=()\n    for number in $list; do\n     \
    \   if [[ $number =~ ^-?[0-9]+$ ]]; then\n            positive+=(\"$number\")\n\
    \        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"$1\"\n\
    \    local positives=()\n    local i\n    for (( i = 0; i < ${#list}; i++ ));\
    \ do\n        local item=\"${list[i]}\"\n        if [[ \"$item\" =~ ^-?[0-9]+$\
    \ ]]; then\n            positives+=(\"$item\")\n        fi\n    done\n    echo\
    \ \"${positives[@]}\"", "    local list_string=$1\n    local list=$(echo $list_string\
    \ | sed 's/ /\" \"/g')\n    local positives=$(echo $list | grep -E '^[0-9]+$')\n\
    \    echo $positives", "    local list=\"$1\"\n    local positive\n    positive=()\n\
    \    for element in $list; do\n        if [[ \"$element\" =~ ^-?[0-9]+$ ]]; then\n\
    \            positive+=(\"$element\")\n        fi\n    done\n    echo \"${positive[@]}\"",
  "    local list=\"$1\"\n    local positive=()\n    for element in $list; do\n  \
    \      if [[ $element =~ ^-?[0-9]+$ ]]; then\n            positive+=(\"$element\"\
    )\n        fi\n    done\n    echo \"${positive[@]}\"", "    local IFS=' '\n  \
    \  local -a arr=( $1 )\n    local ret=()\n    for x in \"${arr[@]}\"; do\n   \
    \     if [[ $x =~ ^-?[0-9]+$ ]]; then\n            local -n num=x\n          \
    \  ret+=( \"$num\" )\n        fi\n    done\n    echo \"${ret[@]}\"", "  local\
    \ list=\"$1\"\n  local positives=()\n  local i\n  for i in $list; do\n    if [[\
    \ $i =~ ^-?[0-9]+$ ]]; then\n      positives+=(\"$i\")\n    fi\n  done\n  echo\
    \ \"${positives[*]}\"", "    local list_str=$1\n    local list=$(echo $list_str\
    \ | sed 's/ /\" \"/g')\n    local positives=$(echo $list | grep -E '^[0-9]+$')\n\
    \    echo $positives", "  local list=\"$1\"\n  local positive=()\n  local i\n\
    \  for i in $list; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      positive+=(\"\
    $i\")\n    fi\n  done\n  echo \"${positive[@]}\"", "    local IFS=' '\n    local\
    \ result\n    for element in $1; do\n        if [[ $element =~ ^-?[0-9]+$ ]];\
    \ then\n            result+=(\"$element\")\n        fi\n    done\n    echo \"\
    ${result[@]}\"", "    local list=\"$1\"\n    local positive\n    positive=()\n\
    \    for element in $list; do\n        if [[ $element =~ ^-?[0-9]+$ ]]; then\n\
    \            positive+=(\"$element\")\n        fi\n    done\n    echo \"${positive[@]}\""]
stop_tokens:
- "\n}"

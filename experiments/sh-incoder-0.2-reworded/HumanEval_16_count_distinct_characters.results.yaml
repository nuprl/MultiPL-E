language: sh
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [~`] ]] && [[ $char != [|]\
    \ ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] && [[ $char != [#] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [/] ]] && [[ $char\
    \ != [?] ]] && \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0au7mu2c.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmp0au7mu2c.sh: line 14: syntax error near `&*''

    /tmp/tmp0au7mu2c.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char
    != [,] ]] && [[ $char != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] &&
    [[ $char != [%] ]] && [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char !=
    [,] ]] && [[ $char != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] && [[
    $char != [%] ]] && [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char != [,]
    ]] && [[ $char != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] && [[ $char
    != [%] ]] && [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] &&
    [[ $char != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] && [[ $char !=
    [%] ]] && [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[
    $char != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] && [[ $char != [%]
    ]] && [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char
    != [/] ]] && [[ $char != [?] ]] && [[ $char != [#] ]] && [[ $char != [%] ]] &&
    [[ $char != [#] ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char !=
    [/] ]] && [[ $char != [?] ]] && ''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && return 0\n        [ \"${char}\" != \"${string}\" ] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local characters=()\n  while IFS= read -r character; do\n    characters+=(\"\
    $character\")\n  done < <(echo \"$string\" | tr A-Z a-z)\n  for character in \"\
    ${characters[@]}\"; do\n    ((count++))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        ((count++))\n    done\n\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local i\n\n  for (( i = 0; i < ${#string}; i++ )); do\n    character=${string:$i:1}\n\
    \    [[ -z ${character} ]] && continue\n    (( count++ ))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^a-zA-Z]}; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^}\" ] && return 0\n       \
    \ [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n    \
    \    [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3w1va9i1.sh: line 64: unexpected EOF while looking for matching
    `"''

    /tmp/tmp3w1va9i1.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:lower:]] ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        ((count++))\n    done\n\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  local char_array\n  local char_array_count\n  local char_array_index\n\
    \  local char_array_value\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n  local char_array_value_index\n\
    \  local char_array_value_index\n  local char_array_value_index\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  local i\n  for i in $(seq 0 $((${#string} - 1)))\n  do\n\
    \    char=${string:$i:1}\n    char_count=$(echo $char | wc -c)\n    if [[ $char_count\
    \ -gt 1 ]]\n    then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"${character}\"\
    \ == \"${character^^}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^^}\" ] && return 0\n        ((count++))\n    done\n\
    \    return $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && return 0\n        [ \"${char}\" != \"${string}\" ] && let count=$count+1\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^([[:lower:][:upper:]])$\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        (( count++ ))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char =~ [A-Z] ]] && count=$((count+1))\n\
    \        [[ $char =~ [a-z] ]] && count=$((count+1))\n        [[ $char =~ [0-9]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in \"${string}\"; do\n        [[ $char != ${char^^} ]] &&\
    \ [[ $char != ${char^^*} ]] && [[ $char != ${char^^^} ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local characters=()\n  while read -r character; do\n    characters+=(\"\
    $character\")\n  done < <(echo \"$string\" | tr A-Z a-z)\n  for character in \"\
    ${characters[@]}\"; do\n    count=$((count+1))\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local character2\n  local character3\n  local character4\n  local\
    \ character5\n  local character6\n  local character7\n  local character8\n  local\
    \ character9\n  local character10\n  local character11\n  local character12\n\
    \  local character13\n  local character14\n  local character15\n  local character16\n\
    \  local character17\n  local character18\n  local character19\n  local character20\n\
    \  local character21\n  local character22\n  local character23\n  local character24\n\
    \  local character25\n  local character26\n  local character27\n  local character28\n\
    \  local character29\n  local character30\n  local character31\n  local character32\n\
    \  local character33\n  local character34\n  local character35\n  local character36\n\
    \  local character37\n  local character38\n  local character39\n  local character40\n\
    \  local character41\n  local character42\n  local character43\n  local character44\n\
    \  local character45\n  local character46\n  local character47\n  local character48\n\
    \  local character49\n  local character50\n  local character51\n  local character52\n\
    \  local character53\n  local character54\n  local character55\n  local character56\n\
    \  local character57\n  local character58\n  local character59\n  local character60\n\
    \  local character61\n  local character62\n  local character63\n  local character64\n\
    \  local character65\n  local character66\n  local character67\n  local character68\n\
    \  local character69\n  local character70\n  local character71\n  local character72\n\
    \  local character73\n  local character74\n  local character75\n  local character76\n\
    \  local character77\n  local character78\n  local character79\n  local character80\n\
    \  local character81\n  local character82\n  local character83\n  local character84\n\
    \  local character85\n  local character86\n  local character87\n  local character88\n\
    \  local character89\n  local character90\n  local character91\n  local character92\n\
    \  local character93\n  local character94\n  local character95\n  local character96\n\
    \  local character97\n  local character98\n  local character99\n  local character100\n\
    \  local \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string//[^A-Za-z]}\"; do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n\n  for char in \"${string//[^A-Za-z]}\"; do\n    ((count++))\n  done\n\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        ((count++))\n    done\n\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ characters=()\n  local character\n  local i\n  for i in \"${string}\"; do\n\
    \    character=\"${i}\"\n    characters[$((${#characters[@]} + 1))]=\"$character\"\
    \n  done\n  for i in \"${!characters[@]}\"; do\n    count=$((${count} + ${#characters[$i]}))\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^[:lower:]]/}; do\n        ((count++))\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n\n  for char in \"${string}\"; do\n    ((count++))\n  done\n\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char2\n  local char3\n  local char4\n  local char5\n  local char6\n\
    \  local char7\n  local char8\n  local char9\n  local char10\n  local char11\n\
    \  local char12\n  local char13\n  local char14\n  local char15\n  local char16\n\
    \  local char17\n  local char18\n  local char19\n  local char20\n  local char21\n\
    \  local char22\n  local char23\n  local char24\n  local char25\n  local char26\n\
    \  local char27\n  local char28\n  local char29\n  local char30\n  local char31\n\
    \  local char32\n  local char33\n  local char34\n  local char35\n  local char36\n\
    \  local char37\n  local char38\n  local char39\n  local char40\n  local char41\n\
    \  local char42\n  local char43\n  local char44\n  local char45\n  local char46\n\
    \  local char47\n  local char48\n  local char49\n  local char50\n  local char51\n\
    \  local char52\n  local char53\n  local char54\n  local char55\n  local char56\n\
    \  local char57\n  local char58\n  local char59\n  local char60\n  local char61\n\
    \  local char62\n  local char63\n  local char64\n  local char65\n  local char66\n\
    \  local char67\n  local char68\n  local char69\n  local char70\n  local char71\n\
    \  local char72\n  local char73\n  local char74\n  local char75\n  local char76\n\
    \  local char77\n  local char78\n  local char79\n  local char80\n  local char81\n\
    \  local char82\n  local char83\n  local char84\n  local char85\n  local char86\n\
    \  local char87\n  local char88\n  local char89\n  local char90\n  local char91\n\
    \  local char92\n  local char93\n  local char94\n  local char95\n  local char96\n\
    \  local char97\n  local char98\n  local char99\n  local char100\n  local \n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char =~ [a-z] ]] && count=$((count+1))\n\
    \        [[ $char =~ [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local i\n  for i in $(seq 0 $((${#string}-1))); do\n    character=${string:$i:1}\n\
    \    [[ \"$character\" =~ [A-Z] ]] && count=$((count+1)) || count=$((count+0))\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  ((count++))\n    done\n    return $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/./\\L&/g'); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local lower\n  local upper\n  local character\n  local i\n\n  lower=$(echo\
    \ \"$string\" | sed 's/[a-z]//g')\n  upper=$(echo \"$string\" | sed 's/[A-Z]//g')\n\
    \  for i in $(seq 0 $((${#lower} - 1))); do\n    character=$(echo \"$lower\" |\
    \ sed \"s/^$lower$i//g\")\n    character=$(echo \"$upper\" | sed \"s/^$upper$i//g\"\
    )\n    if [ \"$character\" != \"$string\" ] ; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n\n  for character in \"${string}\"; do\n    lower=\"${character,,}\"\
    \n    upper=\"${character,,}\"\n    lower=\"${lower,,}\"\n    upper=\"${upper,,}\"\
    \n    if [[ \"$lower\" == \"$upper\" ]]; then\n      count=$((count+1))\n    elif\
    \ [[ \"$lower\" == \"$character\" ]]; then\n      count=$((count+1))\n    elif\
    \ [[ \"$upper\" == \"$character\" ]]; then\n      count=$((count+1))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" != \"$string\" ] && [ \"$char\" != \"${string^}\"\
    \ ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] &&\
    \ [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"\
    $char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\"\
    \ != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"\
    ${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\"\
    \ ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] &&\
    \ [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"\
    $char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\"\
    \ != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"\
    ${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\"\
    \ ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] &&\
    \ [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"\
    $char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\"\
    \ != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"\
    ${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\"\
    \ ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] &&\
    \ [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"\
    $char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\"\
    \ != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"\
    ${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\"\
    \ ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] &&\
    \ [ \"$char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"\
    $char\" != \"${string^^}\" ] && [ \"$char\" != \"${string^^}\" ] && [ \"$char\"\
    \ != \"${string^^}\" ] && \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdby250_c.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpdby250_c.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"${string^^}\" ] && continue\n      \
    \  ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local characters=()\n  while read -r character; do\n    characters+=(\"\
    $character\")\n  done < <(echo \"$string\" | tr A-Z a-z)\n  for character in \"\
    ${characters[@]}\"; do\n    ((count++))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [~`] ]] && [[ $char != [|]\
    \ ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [<] ]] && [[ $char\
    \ != [>] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char != [,] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiy7_fsg4.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpiy7_fsg4.sh: line 14: syntax error near `&*''

    /tmp/tmpiy7_fsg4.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char
    != [,] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] &&
    [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && ''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != ${char,,}\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char\
    \ != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char\
    \ ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&\
    \ [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzfxjoew1.sh: line 14: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpzfxjoew1.sh: line 14: syntax error near `$''

    /tmp/tmpzfxjoew1.sh: line 14: `        [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char
    ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] &&
    [[ $char != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $char
    != $char ]] && [[ $char != $char ]] && [[ $char != $char ]] && [[ $''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\1 /g'); do\n    \
    \    ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n\n    for char in $(echo $string | sed 's/./\\L&/g'); do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while IFS= read -r character; do\n    [[ \"$character\" =~ ^[[:upper:]]$\
    \ ]] || continue\n    (( ++count ))\n  done <<< \"$string\"\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_prev\n  local char_next\n  local char_prev2\n\
    \  local char_next2\n  local char_prev3\n  local char_next3\n  local char_prev4\n\
    \  local char_next4\n  local char_prev5\n  local char_next5\n  local char_prev6\n\
    \  local char_next6\n  local char_prev7\n  local char_next7\n  local char_prev8\n\
    \  local char_next8\n  local char_prev9\n  local char_next9\n  local char_prev10\n\
    \  local char_next10\n  local char_prev11\n  local char_next11\n  local char_prev12\n\
    \  local char_next12\n  local char_prev13\n  local char_next13\n  local char_prev14\n\
    \  local char_next14\n  local char_prev15\n  local char_next15\n  local char_prev16\n\
    \  local char_next16\n  local char_prev17\n  local char_next17\n  local char_prev18\n\
    \  local char_next18\n  local char_prev19\n  local char_next19\n  local char_prev20\n\
    \  local char_next20\n  local char_prev21\n  local char_next21\n  local char_prev22\n\
    \  local char_next22\n  local char_prev23\n  local char_next23\n  local char_prev24\n\
    \  local char_next24\n  local char_prev25\n  local char_next25\n  local char_prev26\n\
    \  local char_next26\n  local char_prev27\n  local char_next27\n  local char_prev28\n\
    \  local char_next28\n  local char_prev29\n  local char_next29\n  local char_prev30\n\
    \  local char_next30\n  local char_prev31\n  local char_next31\n  local char_prev32\n\
    \  local char_next32\n  local char_prev33\n  local char_next33\n  local char_prev34\n\
    \  local char_next34\n  local char_prev35\n  local char_next35\n  local char_prev36\n\
    \  local char_next36\n  local char_prev37\n  local char_next37\n  local char_prev38\n\
    \  local char_next38\n  local char_prev39\n  local char_next39\n  local char_prev40\n\
    \  local char_next40\n  local char_prev41\n  local char_next41\n  local \n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  while IFS= read -r char; do\n    char_count=$(echo\
    \ \"$string\" | sed -n \"s/^$char//p\")\n    if [ \"$char_count\" -eq 0 ]; then\n\
    \      count=$((count+1))\n    fi\n  done < <(echo \"$string\" | sed 's/[^A-Za-z0-9]//g')\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpilgu4h79.sh: line 16: [: : integer expression expected

    /tmp/tmpilgu4h79.sh: line 16: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n\n    for char in $string; do\n        ((count++))\n    done\n\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n\
    \        [ \"$char\" == \"${string^^^}\" ] && return 0\n        [ \"$char\" ==\
    \ \"${string^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^}\" ]\
    \ && return 0\n        [ \"$char\" == \"${string^^^^^}\" ] && return 0\n     \
    \   [ \"$char\" == \"${string^^^^^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^}\" ] && return 0\n\
    \        [ \"$char\" == \"${string^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n \
    \       [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n     \
    \   [ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [\
    \ \"$char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"\
    $char\" == \"${string^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^^^^^^^^^^^^^^^^^^^^^^^^^^^^}\" ] && return 0\n        [\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ct5wlpx.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmp1ct5wlpx.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\1 /g'); do\n    \
    \    ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"${char,,}\" =\
    \ \"${char,,}\" ] && count=$((count+1))\n    done\n\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n\
    \        [ \"$char\" == \"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppev0kspn.sh: line 71: unexpected EOF while looking for matching
    `"''

    /tmp/tmppev0kspn.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" ]\
    \ && return 1\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  while read -r char; do\n    char_count=$(echo \"$string\"\
    \ | grep -c \"$char\")\n    if [ \"$char_count\" -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done < <(echo \"$string\" | sed 's/./& /g')\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while read -r character; do\n    ((count++))\n  done < <(echo \"\
    $string\" | tr A-Z a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_index\n  local char_length\n  local char_length_count\n\
    \  local char_length_index\n  local char_length_length\n  local char_length_length_count\n\
    \  local char_length_length_index\n  local char_length_length_length\n  local\
    \ char_length_length_length_count\n  local char_length_length_length_index\n \
    \ local char_length_length_length_length\n  local char_length_length_length_length_count\n\
    \  local char_length_length_length_length_index\n  local char_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_count\n  local char_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length\n  local char_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_index\n  local char_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_count\n  local\
    \ char_length_length_length_length_length_length_length_index\n  local char_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_count\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length_index\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length_length_length\n\
    \  local char_length_length_length_length_length_length_length_length_length_length_length_length\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    [[ \"$char\" =~ ^([[:lower:]]|[[:upper:]])\
    \ ]] && count=$((count+1))\n  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local characters=()\n    local character\n    for character in \"${string}\"\
    ; do\n        characters+=(\"$character\")\n    done\n    for character in \"\
    ${characters[@]}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"$char\" ] && continue\n        [ \"\
    $char\" == \"$char\" ] && continue\n        ((count++))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local characters=()\n    local character\n    for character in \"${string}\"\
    ; do\n        characters+=(\"$character\")\n    done\n    for character in \"\
    ${characters[@]}\"; do\n        count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n\n  for char in \"${string}\"; do\n    ((count++))\n  done\n\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ == \"$string\" ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/\\(.\\)/\\L\\1/' | sort -u); do\n\
    \        count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  local char_list\n  local char_count\n  local char\n  local\
    \ char_count\n  local char_list\n  local char_count\n  local char\n  local char_count\n\
    \  local char_list\n  local char_count\n  local char\n  local char_count\n  local\
    \ char_list\n  local char_count\n  local char\n  local char_count\n  local char_list\n\
    \  local char_count\n  local char\n  local char_count\n  local char_list\n  local\
    \ char_count\n  local char\n  local char_count\n  local char_list\n  local char_count\n\
    \  local char\n  local char_count\n  local char_list\n  local char_count\n  local\
    \ char\n  local char_count\n  local char_list\n  local char_count\n  local char\n\
    \  local char_count\n  local char_list\n  local char_count\n  local char\n  local\
    \ char_count\n  local char_list\n  local char_count\n  local char\n  local char_count\n\
    \  local char_list\n  local char_count\n  local char\n  local char_count\n  local\
    \ char_list\n  local char_count\n  local char\n  local char_count\n  local char_list\n\
    \  local char_count\n  local char\n  local char_count\n  local char_list\n  local\
    \ char_count\n  local char\n  local char_count\n  local char_list\n  local char_count\n\
    \  local char\n  local char_count\n  local char_list\n  local char_count\n  local\
    \ char\n  local char_count\n  local char_list\n  local char_count\n  local char\n\
    \  local char_count\n  local char_list\n  local char_count\n  local char\n  local\
    \ char_count\n  local char_list\n  local char_count\n  local char\n  local char_count\n\
    \  local char_list\n  local char_count\n  local char\n  local char_count\n  local\
    \ char_list\n  local char_count\n  local char\n  local char_count\n  local char_list\n\
    \  local char_count\n  local char\n  local char_count\n  local char_list\n  local\
    \ char_count\n  local char\n  local char_count\n  local char_list\n  local char_count\n\
    \  local char\n  local char_count\n  local char_list\n  local char_count\n  local\
    \ char\n  local char\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/ /\\n/g' | sed -e 's/^/\"/'\
    \ -e 's/$/\"/' -e 's/\\n//g'); do\n        ((count++))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && return 0\n        [ \"${char}\" != \"${string}\" ] && [ \"${char}\"\
    \ != \"${char}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]$\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_array\n  local char_array_count\n  local\
    \ char_array_index\n  local char_array_length\n  local char_array_element\n  local\
    \ char_array_element_count\n  local char_array_element_index\n  local char_array_element_length\n\
    \  local char_array_element_char\n  local char_array_element_char_count\n  local\
    \ char_array_element_char_length\n  local char_array_element_char_case\n  local\
    \ char_array_element_char_case_count\n  local char_array_element_char_case_length\n\
    \  local char_array_element_char_case_index\n  local char_array_element_char_case_length_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_array_element_char_case_index\n\
    \  local char_array_element_char_case_length_index\n  local char_\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^A-Za-z]}; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char,,}\" = \"\
    ${char,,}\" ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  \n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"${string^}\" ] && continue\n       \
    \ ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local characters=()\n  while read -r character; do\n    characters+=(\"$character\"\
    )\n  done <<< \"$string\"\n  for character in \"${characters[@]}\"; do\n    count=$((count+1))\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" ]\
    \ && return 1\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $string; do\n        ((count++))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char == [A-Z] ]]\
    \ && count=$((count+1))\n        [[ $char == [a-z] ]] && count=$((count+1))\n\
    \        [[ $char == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\U\\1/'); do\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local i\n\n  for (( i = 0; i < ${#string}; i++ )); do\n    char=\"${string:$i:1}\"\
    \n    if [[ \"$char\" == [A-Z] ]]; then\n      (( count++ ))\n    fi\n  done\n\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != ${char^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^}\
    \ ]] && [[ $char != ${char^^^^^} ]] && count=$((count+1))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"${char}\" == \"\
    ${string}\" ] && continue\n        [ \"${char}\" == \"${string^^}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        [ \"$char\" == \"$char\" -o \"$char\" == \"${char^^}\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [ \"$char\" == \"\
    $string\" ] && continue\n        [ \"$char\" == \"$char\" -o \"$char\" == \"${char^^}\"\
    \ ] && continue\n        ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  for (( i=1; i<${#string}; i++ ));\
    \ do\n    char=\"${string:$i:1}\"\n    chars=\"${chars}${char}\"\n  done\n  chars=\"\
    ${chars}${char}\"\n  for (( j=0; j<${#chars}; j++ )); do\n    char=\"${chars:$j:1}\"\
    \n    count=$((count+1))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ character\n    for character in $string; do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local char\n  local lower\n  local upper\n  local lowerchar\n \
    \ local upperchar\n  local lowercharcount\n  local uppercharcount\n  local charcount\n\
    \  local charcount2\n  local charcount3\n  local charcount4\n  local charcount5\n\
    \  local charcount6\n  local charcount7\n  local charcount8\n  local charcount9\n\
    \  local charcount10\n  local charcount11\n  local charcount12\n  local charcount13\n\
    \  local charcount14\n  local charcount15\n  local charcount16\n  local charcount17\n\
    \  local charcount18\n  local charcount19\n  local charcount20\n  local charcount21\n\
    \  local charcount22\n  local charcount23\n  local charcount24\n  local charcount25\n\
    \  local charcount26\n  local charcount27\n  local charcount28\n  local charcount29\n\
    \  local charcount30\n  local charcount31\n  local charcount32\n  local charcount33\n\
    \  local charcount34\n  local charcount35\n  local charcount36\n  local charcount37\n\
    \  local charcount38\n  local charcount39\n  local charcount40\n  local charcount41\n\
    \  local charcount42\n  local charcount43\n  local charcount44\n  local charcount45\n\
    \  local charcount46\n  local charcount47\n  local charcount48\n  local charcount49\n\
    \  local charcount50\n  local charcount51\n  local charcount52\n  local charcount53\n\
    \  local charcount54\n  local charcount55\n  local charcount56\n  local charcount57\n\
    \  local charcount58\n  local charcount59\n  local charcount60\n  local charcount61\n\
    \  local charcount62\n  local charcount63\n  local charcount64\n  local charcount65\n\
    \  local charcount66\n  local charcount67\n  local charcount68\n  local charcount69\n\
    \  local charcount70\n  local charcount71\n  local charcount72\n  local charcount73\n\
    \  local charcount74\n  local charcount75\n  local charcount76\n  local charcount77\n\
    \  local \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char != $char ]]\
    \ && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[\
    \ $char != \\- ]] && [[ $char != \\_ ]] && [[ $char != \\. ]] && [[ $char != \\\
    @ ]] && [[ $char != \\$ ]] && [[ $char != \\# ]] && [[ $char != \\$ \\# ]] &&\
    \ [[ $char != \\$ \\$ ]] && [[ $char != \\$ \\$ \\# ]] && [[ $char != \\$ \\$\
    \ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$\
    \ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char !=\
    \ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\\
    $ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char\
    \ != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\\
    $ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\\
    $ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]]\
    \ && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char !=\
    \ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\\
    $ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\\
    $ \\$ \\$ \\$ \\# ]] && [[ $char != \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\$ \\\
    # ]] && [[ $char != \\$ \\\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp49vozevv.sh: line 14: syntax error in conditional expression

    /tmp/tmp49vozevv.sh: line 14: syntax error near `\#''

    /tmp/tmp49vozevv.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != \- ]] && [[
    $char != \_ ]] && [[ $char != \. ]] && [[ $char != \@ ]] && [[ $char != \$ ]]
    && [[ $char != \# ]] && [[ $char != \$ \# ]] && [[ $char != \$ \$ ]] && [[ $char
    != \$ \$ \# ]] && [[ $char != \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \# ]]
    && [[ $char != \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \# ]] &&
    [[ $char != \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$
    \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$
    \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[
    $char != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$
    \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char
    != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$
    \$ \$ \$ \# ]] && [[ $char != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char
    != \$ \$ \$ \$ \$ \$ \$ \$ \$ \$ \# ]] && [[ $char != \$ \''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local lower\n  local upper\n  local i\n  local j\n  local k\n \
    \ local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^^}\" ] && return 0\n        ((count++))\n    done\n\
    \    return $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [[ $character\
    \ == [A-Z] ]] && count=$((count+1))\n        [[ $character == [a-z] ]] && count=$((count+1))\n\
    \        [[ $character == [0-9] ]] && count=$((count+1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n  chars=$(echo\
    \ \"$string\" | sed 's/./&/g')\n  for ((i=0; i<${#chars}; i++)); do\n    char=$(echo\
    \ \"$chars\" | sed \"s/^${i}//g\")\n    char=$(echo \"$char\" | sed 's/./&/g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | sed 's/&$//g')\n    char=$(echo \"$char\" | sed 's/&$//g')\n\
    \    char=$(echo \"$char\" | \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkmm3b_0i.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkmm3b_0i.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_array\n  local char_array_count\n  local\
    \ char_array_index\n  local char_array_element\n  local char_array_element_count\n\
    \  local char_array_element_index\n  local char_array_element_value\n  local char_array_element_value_count\n\
    \  local char_array_element_value_length\n  local char_array_element_value_length_count\n\
    \  local char_array_element_value_length_index\n  local char_array_element_value_length_value\n\
    \  local char_array_element_value_length_value_count\n  local char_array_element_value_length_value_index\n\
    \  local char_array_element_value_length_value_value\n  local char_array_element_value_length_value_value_count\n\
    \  local char_array_element_value_length_value_value_index\n  local char_array_element_value_length_value_value_value\n\
    \  local char_array_element_value_length_value_value_value_count\n  local char_array_element_value_length_value_value_value_index\n\
    \  local char_array_element_value_length_value_value_value_value\n  local char_array_element_value_length_value_value_value_count\n\
    \  local char_array_element_value_length_value_value_value_index\n  local char_array_element_value_length_value_value_value_value\n\
    \  local char_array_element_value_length_value_value_value_count\n  local char_array_element_value_length_value_value_value_index\n\
    \  local char_array_element_value_length_value_value_value_value\n  local char_array_element_value_length_value_value_value_count\n\
    \  local char_array_element_value_length_value_value_value_index\n  local char_array_element_value_length_value_value_value_value\n\
    \  local char_array_element_value_length_value_value_value_count\n  local char_array_element_value_length_value_value_value_index\n\
    \  local char_array_element_value_length_value_value_value_value\n  local char_array_element_value_length_value_value_value_count\n\
    \  local char_array_element_value_length_value_value_value_index\n  local char_array_element_value_length_value_value_value_value\n\
    \  local char_array_element_value_length_value_value_value_count\n  local char_array_element_value_length_value_value_value_index\n\
    \  local char_array_element_value_length_value_value_value_value\n  local char_array_element_value_length_value_value_value_count\n\
    \  local char_array_element_value_length_value_value_value_index\n  local char_array_element_value_length_value_value_value_value\n\
    \  local char_array_element_value_length_value_value_value_count\n  local char_array_element_value_length_value_value_value_index\n\
    \  local char_array_element_value_length_value_value_value_value\n  local char_array_element_value_length_value_value_value_count\n\
    \  local char_array_element_value_\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local characters=()\n\n    for character in \"${string}\"; do\n        characters+=(\"\
    $character\")\n    done\n\n    for character in \"${characters[@]}\"; do\n   \
    \     (( count++ ))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  while read -r char; do\n    ((count++))\n  done < <(echo \"$string\"\
    \ | tr '[:upper:]' '[:lower:]' | sort -u)\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  for ((i=0; i<${#string}; i++));\
    \ do\n    char=\"${string:$i:1}\"\n    chars=\"${chars}${char}\"\n  done\n  chars=\"\
    ${chars}${char}\"\n  for ((j=0; j<${#chars}; j++)); do\n    char=\"${chars:$j:1}\"\
    \n    count=$((count+1))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local char\n\
    \  local char_count\n  local char_list\n  local char_index\n  local char_index2\n\
    \  local char_index3\n  local char_index4\n  local char_index5\n  local char_index6\n\
    \  local char_index7\n  local char_index8\n  local char_index9\n  local char_index10\n\
    \  local char_index11\n  local char_index12\n  local char_index13\n  local char_index14\n\
    \  local char_index15\n  local char_index16\n  local char_index17\n  local char_index18\n\
    \  local char_index19\n  local char_index20\n  local char_index21\n  local char_index22\n\
    \  local char_index23\n  local char_index24\n  local char_index25\n  local char_index26\n\
    \  local char_index27\n  local char_index28\n  local char_index29\n  local char_index30\n\
    \  local char_index31\n  local char_index32\n  local char_index33\n  local char_index34\n\
    \  local char_index35\n  local char_index36\n  local char_index37\n  local char_index38\n\
    \  local char_index39\n  local char_index40\n  local char_index41\n  local char_index42\n\
    \  local char_index43\n  local char_index44\n  local char_index45\n  local char_index46\n\
    \  local char_index47\n  local char_index48\n  local char_index49\n  local char_index50\n\
    \  local char_index51\n  local char_index52\n  local char_index53\n  local char_index54\n\
    \  local char_index55\n  local char_index56\n  local char_index57\n  local char_index58\n\
    \  local char_index59\n  local char_index60\n  local char_index61\n  local char_index62\n\
    \  local char_index63\n  local char_index64\n  local char_index65\n  local char_index66\n\
    \  local char_index67\n  local char_index68\n  local char_index69\n  local char_index70\n\
    \  local char_index71\n  local char_index72\n  local char_index73\n  local char_index74\n\
    \  local char_index75\n  local char_index76\n  local char_index77\n  local char_index78\n\
    \  local char_index79\n  local char_index80\n  local char_index81\n  local \n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\1 /g'); do\n    \
    \    ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in ${string//[^a-zA-Z0-9]}; do\n        ((count++))\n   \
    \ done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        [ \"$char\" == \"${string^^}\" ] && continue\n      \
    \  ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n\n  chars=$(echo \"$string\" | sed 's/\\(.\\\
    )/\\1 /g')\n  for i in $chars; do\n    char=$(echo \"$string\" | sed \"s/$i//g\"\
    )\n    if [[ \"$char\" != \"\" ]]; then\n      ((count++))\n    fi\n  done\n \
    \ echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        (( count++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local char_count\n  local char_list\n  local char_list_count\n  local\
    \ char_index\n  local char_index2\n  local char_index3\n  local char_index4\n\
    \  local char_index5\n  local char_index6\n  local char_index7\n  local char_index8\n\
    \  local char_index9\n  local char_index10\n  local char_index11\n  local char_index12\n\
    \  local char_index13\n  local char_index14\n  local char_index15\n  local char_index16\n\
    \  local char_index17\n  local char_index18\n  local char_index19\n  local char_index20\n\
    \  local char_index21\n  local char_index22\n  local char_index23\n  local char_index24\n\
    \  local char_index25\n  local char_index26\n  local char_index27\n  local char_index28\n\
    \  local char_index29\n  local char_index30\n  local char_index31\n  local char_index32\n\
    \  local char_index33\n  local char_index34\n  local char_index35\n  local char_index36\n\
    \  local char_index37\n  local char_index38\n  local char_index39\n  local char_index40\n\
    \  local char_index41\n  local char_index42\n  local char_index43\n  local char_index44\n\
    \  local char_index45\n  local char_index46\n  local char_index47\n  local char_index48\n\
    \  local char_index49\n  local char_index50\n  local char_index51\n  local char_index52\n\
    \  local char_index53\n  local char_index54\n  local char_index55\n  local char_index56\n\
    \  local char_index57\n  local char_index58\n  local char_index59\n  local char_index60\n\
    \  local char_index61\n  local char_index62\n  local char_index63\n  local char_index64\n\
    \  local char_index65\n  local char_index66\n  local char_index67\n  local char_index68\n\
    \  local char_index69\n  local char_index70\n  local char_index71\n  local char_index72\n\
    \  local char_index73\n  local char_index74\n  local char_index75\n  local char_index76\n\
    \  local char_index77\n  local char_index78\n  local char_index79\n  local char_index80\n\
    \  local \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[[:upper:]]$\
    \ ]] && count=$((count+1))\n        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [[ $char =~ ^[a-z]*$\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        ((count++))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/\\(.\\)/\\L\\1/' -e 's/\\(.\\\
    )/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    do\n        ((count++))\n    done\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local i\n  for i in \"${string}\"; do\n    character=\"${i:0:1}\"\
    \n    if [[ \"$character\" == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ characters=$(echo \"$string\" | tr '[:upper:]' '[:lower:]' | tr '[:space:]'\
    \ '[:blank:]')\n    for character in $characters\n    do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'tr: when translating, the only character classes that may appear in

    string2 are ''upper'' and ''lower''

    tr: when translating, the only character classes that may appear in

    string2 are ''upper'' and ''lower''

    '
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed 's/\\(.\\)/\\L\\1/'); do\n      \
    \  ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n\n    for char in $(echo $string | tr [A-Z] [a-z]); do\n        ((count++))\n\
    \    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n    for char in \"${string}\"; do\n        [ \"$char\" == \"$string\"\
    \ ] && return 0\n        [ \"$char\" == \"$char\" -a \"$char\" != \"_\" ] && return\
    \ 1\n        ((count++))\n    done\n    return $count\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  local upper\n  local character\n  local lower\n  local upper\n  local character\n\
    \  local lower\n  local upper\n  local character\n  local lower\n  local upper\n\
    \  local character\n  local lower\n  local upper\n  local character\n  local lower\n\
    \  \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        [ \"$character\"\
    \ = \"$string\" ] && return 0\n        [ \"$character\" != \"$string\" ] && [\
    \ \"$character\" != \"${string^}\" ] && [ \"$character\" != \"${string^^}\" ]\
    \ && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ ] && [ \"$character\" != \"${string^^}\" ] && [ \"$character\" != \"${string^^}\"\
    \ \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpegq7ne63.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpegq7ne63.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660046396
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local char\n\n    for char in \"${string}\"; do\n        [[ $char != $char\
    \ ]] && [[ $char != [A-Z] ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] &&\
    \ [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_z9wvhub.sh: line 15: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmp_z9wvhub.sh: line 15: syntax error near `&*''

    /tmp/tmp_z9wvhub.sh: line 15: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && [''

    '
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  local i\n\n  for (( i=1; i<${#string}; i++ )); do\n    character=\"\
    ${string:$i:1}\"\n    if [[ \"$character\" == \"$string\" ]]; then\n      (( count++\
    \ ))\n    fi\n  done\n\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  while read -r character; do\n    ((count++))\n  done <<< \"$string\"\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    local\
    \ char\n    for char in $(echo $string | sed -e 's/ /\\n/g' | sort | uniq); do\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046396
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ char\n  local chars\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local character\n    for character in \"${string}\"; do\n        (( count++\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660046395

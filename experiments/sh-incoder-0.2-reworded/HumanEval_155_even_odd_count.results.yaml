language: sh
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
    \  local digit98\n\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((${#n}-1)) ); do\n    if [[\
    \ ${n:$i:1} = 0 ]]; then\n      evens=\"${evens}\\\"${n:$i:1}\\\"\"\n    else\n\
    \      odds=\"${odds}\\\"${n:$i:1}\\\"\"\n    fi\n  done\n  echo \"${evens}\"\
    \ \"${odds}\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((n-1))); do\n    local j\n\
    \    for j in $(seq 0 $((i-1))); do\n      if [ $((i*10+j)) -eq $((i*10+j)) ];\
    \ then\n        odds=\"$odds $((i*10+j))\"\n      else\n        evens=\"$evens\
    \ $((i*10+j))\"\n      fi\n    done\n  done\n  echo \"$evens $odds\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i num=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i i\n    local -i j\n    local -i odds\n    local\
    \ -i evens\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local \n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local digit\n    local count\n \
    \   local i\n    local j\n    local even\n    local odd\n    local digit\n   \
    \ local count\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local i\n    local j\n \
    \   local even\n    local odd\n    local digit\n    local count\n    local i\n\
    \    local j\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local count\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local i\n    local j\n \
    \   local even\n    local odd\n    local digit\n    local count\n    local i\n\
    \    local j\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local count\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local i\n    local j\n \
    \   local even\n    local odd\n    local digit\n    local count\n    local i\n\
    \    local j\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local count\n    local i\n    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local i=0\n  while [ \"$number\"\
    \ -gt 0 ]; do\n    digits=$(printf \"%02d\" $number)\n    if [ \"$digits\" -eq\
    \ \"00\" ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\
    \"\"\n      i=$((i+1))\n    elif [ \"$digits\" -eq \"10\" ]; then\n      evens=\"\
    $evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n      i=$((i+1))\n    elif\
    \ [ \"$digits\" -eq \"01\" ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"\
    $odds \\\"$i\\\"\"\n      i=$((i+1))\n    elif [ \"$digits\" -eq \"11\" ]; then\n\
    \      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n      i=$((i+1))\n\
    \    else\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n\
    \      i=$((i+1))\n    fi\n    number=$((number-1))\n  done\n  echo \"$evens $odds\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  while [ $number -gt 0 ]; do\n    ((\
    \ count++ ))\n    (( number /= 10 ))\n    (( number %= 10 ))\n    if [ $number\
    \ -eq 0 ]; then\n      evens=\"$evens\\\"$count\"\n    else\n      odds=\"$odds\\\
    \"$count\"\n    fi\n  done\n  echo \"$evens\" \"$odds\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local i\n  local j\n\
    \  local odd\n  local even\n  local odds\n  local evens\n  local digit\n  local\
    \ number\n  local count\n  local i\n  local j\n  local odd\n  local even\n  local\
    \ odds\n  local evens\n  local digit\n  local number\n  local count\n  local i\n\
    \  local j\n  local odd\n  local even\n  local odds\n  local evens\n  local digit\n\
    \  local number\n  local count\n  local i\n  local j\n  local odd\n  local even\n\
    \  local odds\n  local evens\n  local digit\n  local number\n  local count\n \
    \ local i\n  local j\n  local odd\n  local even\n  local odds\n  local evens\n\
    \  local digit\n  local number\n  local count\n  local i\n  local j\n  local odd\n\
    \  local even\n  local odds\n  local evens\n  local digit\n  local number\n  local\
    \ count\n  local i\n  local j\n  local odd\n  local even\n  local odds\n  local\
    \ evens\n  local digit\n  local number\n  local count\n  local i\n  local j\n\
    \  local odd\n  local even\n  local odds\n  local evens\n  local digit\n  local\
    \ number\n  local count\n  local i\n  local j\n  local odd\n  local even\n  local\
    \ odds\n  local evens\n  local digit\n  local number\n  local count\n  local i\n\
    \  local j\n  local odd\n  local even\n  local odds\n  local evens\n  local digit\n\
    \  local number\n  local count\n  local i\n  local j\n  local odd\n  local even\n\
    \  local odds\n  local evens\n  local digit\n  local number\n  local count\n \
    \ local i\n  local j\n  local odd\n  local even\n  local odds\n  local evens\n\
    \  local digit\n  local number\n  local count\n  local i\n  local j\n  local odd\n\
    \  local even\n  local odds\n  local evens\n  local digit\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local i\n\n    # Loop through\
    \ each digit\n    for (( i = 1; i <= number; i++ )); do\n        digit=${number:$i:1}\n\
    \        # Check if digit is even\n        if (( $(echo \"$digit == 2\" | bc -l)\
    \ )); then\n            evens=\"$evens \\\"$digit\\\"\"\n            count=$((\
    \ $count + 1 ))\n        else\n            odds=\"$odds \\\"$digit\\\"\"\n   \
    \         count=$(( $count + 1 ))\n        fi\n    done\n\n    # Return evens\
    \ and odds\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local oddCount\n    local evenCount\n\
    \    local evenOddCount\n    local evenOddCountCount\n    local evenOddCountCountCount\n\
    \    local evenOddCountCountCountCount\n    local evenOddCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCount\n    local\
    \ evenOddCountCountCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCount\n  \
    \  local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCount\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ for (( i = 1; i <= number; i++ )); do\n        digit=$(( number % 10 ))\n  \
    \      if [ $digit -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n\
    \        else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n       \
    \ number=$(( number / 10 ))\n        count=$(( count + 1 ))\n    done\n    evens=\"\
    $evens \\\"$count\\\"\"\n    odds=\"$odds \\\"$count\\\"\"\n    echo \"$evens\
    \ $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local oddCount\n    local evenCount\n\
    \    local oddDigit\n    local evenDigit\n    local digitCount\n    local digitCount2\n\
    \    local digitCount3\n    local digitCount4\n    local digitCount5\n    local\
    \ digitCount6\n    local digitCount7\n    local digitCount8\n    local digitCount9\n\
    \    local digitCount10\n    local digitCount11\n    local digitCount12\n    local\
    \ digitCount13\n    local digitCount14\n    local digitCount15\n    local digitCount16\n\
    \    local digitCount17\n    local digitCount18\n    local digitCount19\n    local\
    \ digitCount20\n    local digitCount21\n    local digitCount22\n    local digitCount23\n\
    \    local digitCount24\n    local digitCount25\n    local digitCount26\n    local\
    \ digitCount27\n    local digitCount28\n    local digitCount29\n    local digitCount30\n\
    \    local digitCount31\n    local digitCount32\n    local digitCount33\n    local\
    \ digitCount34\n    local digitCount35\n    local digitCount36\n    local digitCount37\n\
    \    local digitCount38\n    local digitCount39\n    local digitCount40\n    local\
    \ digitCount41\n    local digitCount42\n    local digitCount43\n    local digitCount44\n\
    \    local digitCount45\n    local digitCount46\n    local digitCount47\n    local\
    \ digitCount48\n    local digitCount49\n    local digitCount50\n    local digitCount51\n\
    \    local digitCount52\n    local digitCount53\n    local digitCount54\n    local\
    \ digitCount55\n    local digitCount56\n    local digitCount57\n    local digitCount58\n\
    \    local digitCount59\n    local digitCount60\n    local digitCount61\n    local\
    \ digitCount62\n    local digitCount63\n    local digitCount64\n    local digitCount65\n\
    \    local digitCount66\n    local digitCount67\n    local digitCount68\n    local\
    \ digitCount69\n    local digitCount70\n    local digitCount71\n    local digitCount72\n\
    \    local digitCount73\n    local digitCount74\n    local digitCount75\n\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local even\n  local\
    \ odd\n  local count\n  local i\n  local j\n  local str\n  local evenstr\n  local\
    \ oddstr\n  local evenstrlen\n  local oddstrlen\n  local evenstrlen2\n  local\
    \ oddstrlen2\n  local evenstrlen3\n  local oddstrlen3\n  local evenstrlen4\n \
    \ local oddstrlen4\n  local evenstrlen5\n  local oddstrlen5\n  local evenstrlen6\n\
    \  local oddstrlen6\n  local evenstrlen7\n  local oddstrlen7\n  local evenstrlen8\n\
    \  local oddstrlen8\n  local evenstrlen9\n  local oddstrlen9\n  local evenstrlen10\n\
    \  local oddstrlen10\n  local evenstrlen11\n  local oddstrlen11\n  local evenstrlen12\n\
    \  local oddstrlen12\n  local evenstrlen13\n  local oddstrlen13\n  local evenstrlen14\n\
    \  local oddstrlen14\n  local evenstrlen15\n  local oddstrlen15\n  local evenstrlen16\n\
    \  local oddstrlen16\n  local evenstrlen17\n  local oddstrlen17\n  local evenstrlen18\n\
    \  local oddstrlen18\n  local evenstrlen19\n  local oddstrlen19\n  local evenstrlen20\n\
    \  local oddstrlen20\n  local evenstrlen21\n  local oddstrlen21\n  local evenstrlen22\n\
    \  local oddstrlen22\n  local evenstrlen23\n  local oddstrlen23\n  local evenstrlen24\n\
    \  local oddstrlen24\n  local evenstrlen25\n  local oddstrlen25\n  local evenstrlen26\n\
    \  local oddstrlen26\n  local evenstrlen27\n  local oddstrlen27\n  local evenstrlen28\n\
    \  local oddstrlen28\n  local evenstrlen29\n  local oddstrlen29\n  local evenstrlen30\n\
    \  local oddstrlen30\n  local evenstrlen31\n  local oddstrlen31\n  local evenstrlen32\n\
    \  local oddstrlen32\n  local evenstrlen33\n  local oddstrlen33\n  local evenstrlen34\n\
    \  local oddstrlen\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo $evens\n    echo $odds\n}\n\ncandidate() {\n   \
    \ even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\")\
    \ = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local digit2\n   \
    \ local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo $evens $odds\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even\n \
    \ local odd\n  local even_count\n  local odd_count\n  local i\n  local j\n  local\
    \ even_list\n  local odd_list\n  local number\n  local even\n  local odd\n  local\
    \ even_count\n  local odd_count\n  local i\n  local j\n  local even_list\n  local\
    \ odd_list\n  local number\n  local even\n  local odd\n  local even_count\n  local\
    \ odd_count\n  local i\n  local j\n  local even_list\n  local odd_list\n  local\
    \ number\n  local even\n  local odd\n  local even_count\n  local odd_count\n \
    \ local i\n  local j\n  local even_list\n  local odd_list\n  local number\n  local\
    \ even\n  local odd\n  local even_count\n  local odd_count\n  local i\n  local\
    \ j\n  local even_list\n  local odd_list\n  local number\n  local even\n  local\
    \ odd\n  local even_count\n  local odd_count\n  local i\n  local j\n  local even_list\n\
    \  local odd_list\n  local number\n  local even\n  local odd\n  local even_count\n\
    \  local odd_count\n  local i\n  local j\n  local even_list\n  local odd_list\n\
    \  local number\n  local even\n  local odd\n  local even_count\n  local odd_count\n\
    \  local i\n  local j\n  local even_list\n  local odd_list\n  local number\n \
    \ local even\n  local odd\n  local even_count\n  local odd_count\n  local i\n\
    \  local j\n  local even_list\n  local odd_list\n  local number\n  local even\n\
    \  local odd\n  local even_count\n  local odd_count\n  local i\n  local j\n  local\
    \ even_list\n  local odd_list\n  local number\n  local even\n  local odd\n  local\
    \ even_count\n  local odd_count\n  local i\n  local j\n  local even_list\n  local\
    \ odd_list\n  local number\n  local even\n  local odd\n  local even_count\n  local\
    \ odd_count\n  local i\n  local j\n  local even_list\n  local odd_list\n  local\
    \ number\n  local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local digit\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local digit\n    local count\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local digit\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local digit\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  local j\n  local count\n  local odd\n  local\
    \ even\n  local odds\n  local evens\n  local count\n  local i\n  local j\n  local\
    \ count\n  local odd\n  local even\n  local odds\n  local evens\n  local count\n\
    \  local i\n  local j\n  local count\n  local odd\n  local even\n  local odds\n\
    \  local evens\n  local count\n  local i\n  local j\n  local count\n  local odd\n\
    \  local even\n  local odds\n  local evens\n  local count\n  local i\n  local\
    \ j\n  local count\n  local odd\n  local even\n  local odds\n  local evens\n \
    \ local count\n  local i\n  local j\n  local count\n  local odd\n  local even\n\
    \  local odds\n  local evens\n  local count\n  local i\n  local j\n  local count\n\
    \  local odd\n  local even\n  local odds\n  local evens\n  local count\n  local\
    \ i\n  local j\n  local count\n  local odd\n  local even\n  local odds\n  local\
    \ evens\n  local count\n  local i\n  local j\n  local count\n  local odd\n  local\
    \ even\n  local odds\n  local evens\n  local count\n  local i\n  local j\n  local\
    \ count\n  local odd\n  local even\n  local odds\n  local evens\n  local count\n\
    \  local i\n  local j\n  local count\n  local odd\n  local even\n  local odds\n\
    \  local evens\n  local count\n  local i\n  local j\n  local count\n  local odd\n\
    \  local even\n  local odds\n  local evens\n  local count\n  local i\n  local\
    \ j\n  local count\n  local odd\n  local even\n  local odds\n  local evens\n \
    \ local count\n  local i\n  local j\n  local count\n  local odd\n  local even\n\
    \  local odds\n  local evens\n  local count\n  local i\n  local j\n  local count\n\
    \  local odd\n  local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local digit\n    local even\n  \
    \  local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local evens_count=0\n\
    \    local odds_count=0\n    local digits_count=0\n    local digits_string=\"\"\
    \n    local digits_string2=\"\"\n    local digits_string3=\"\"\n    local digits_string4=\"\
    \"\n    local digits_string5=\"\"\n    local digits_string6=\"\"\n    local digits_string7=\"\
    \"\n    local digits_string8=\"\"\n    local digits_string9=\"\"\n    local digits_string10=\"\
    \"\n    local digits_string11=\"\"\n    local digits_string12=\"\"\n    local\
    \ digits_string13=\"\"\n    local digits_string14=\"\"\n    local digits_string15=\"\
    \"\n    local digits_string16=\"\"\n    local digits_string17=\"\"\n    local\
    \ digits_string18=\"\"\n    local digits_string19=\"\"\n    local digits_string20=\"\
    \"\n    local digits_string21=\"\"\n    local digits_string22=\"\"\n    local\
    \ digits_string23=\"\"\n    local digits_string24=\"\"\n    local digits_string25=\"\
    \"\n    local digits_string26=\"\"\n    local digits_string27=\"\"\n    local\
    \ digits_string28=\"\"\n    local digits_string29=\"\"\n    local digits_string30=\"\
    \"\n    local digits_string31=\"\"\n    local digits_string32=\"\"\n    local\
    \ digits_string33=\"\"\n    local digits_string34=\"\"\n    local digits_string35=\"\
    \"\n    local digits_string36=\"\"\n    local digits_string37=\"\"\n    local\
    \ digits_string38=\"\"\n    local digits_string39=\"\"\n    local digits_string40=\"\
    \"\n    local digits_string41=\"\"\n    local digits_string42=\"\"\n    local\
    \ digits_string43=\"\"\n    local digits_string44=\"\"\n    local digits_string45=\"\
    \"\n    local digits_string46=\"\"\n    local digits_string47=\"\"\n    local\
    \ digits_string48=\"\"\n    local digits_string49=\"\"\n    local digits_string50=\"\
    \"\n    local digits_string51=\"\"\n    local digits_string52=\"\"\n    local\
    \ digits_string53=\"\"\n    local digits_string54=\"\"\n    local digits_string55=\"\
    \"\n    local digits_string56=\"\"\n    local digits_string57=\"\"\n    local\
    \ digits_string58=\"\"\n    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local odds_count=0\
    \ # count of odd digits\n    local evens_count=0 # count of even digits\n    local\
    \ digits_count=0 # count of digits\n    local digits_evens=0 # count of even digits\n\
    \    local digits_odds=0 # count of odd digits\n    local digits_evens_count=0\
    \ # count of even digits in digits\n    local digits_odds_count=0 # count of odd\
    \ digits in digits\n    local digits_evens_odds=0 # count of even digits in digits\
    \ and odd digits in digits\n    local digits_odds_evens=0 # count of odd digits\
    \ in digits and even digits in digits\n    local digits_evens_odds_count=0 # count\
    \ of even digits in digits and odd digits in digits and even digits in digits\n\
    \    local digits_odds_evens_count=0 # count of odd digits in digits and even\
    \ digits in digits and odd digits in digits\n    local digits_evens_odds_odds=0\
    \ # count of even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits\n    local digits_odds_evens_odds_count=0 #\
    \ count of odd digits in digits and even digits in digits and odd digits in digits\
    \ and even digits in digits and odd digits in digits\n    local digits_evens_odds_odds_odds=0\
    \ # count of even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and even digits in digits and odd digits in\
    \ digits and even digits in digits and odd digits in digits and even digits in\
    \ digits and odd digits in digits and \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local even\n  local\
    \ odd\n  local count\n  local i\n  local j\n  local odds\n  local evens\n  local\
    \ odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local evens_str\n  local odds_str_list\n  local evens_str_list\n\
    \  local odds_str\n  local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ for (( i=1; i<=number; i++ )); do\n        digit=$(( number % 10 ))\n      \
    \  if [ $(( i % 2 )) -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\
    \n        else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n      \
    \  count=$(( count + 1 ))\n        number=$(( number / 10 ))\n    done\n    evens=\"\
    $evens \\\"$count\\\"\"\n    odds=\"$odds \\\"$count\\\"\"\n    echo $evens\n\
    \    echo $odds\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  while [ $number -gt 0\
    \ ]; do\n    digit=$((number % 10))\n    count=$((count + 1))\n    if [ $digit\
    \ -eq 0 ]; then\n      evens=\"$evens \\\"$digit\\\"\"\n    else\n      odds=\"\
    $odds \\\"$digit\\\"\"\n    fi\n    number=$((number / 10))\n  done\n  echo \"\
    $evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local i\n    local j\n    local count\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local i\n    local j\n    local count\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    while (( number\
    \ > 0 )); do\n        digit=$(( number % 10 ))\n        number=$(( number / 10\
    \ ))\n        if (( digit == 0 )) ; then\n            evens=\"$evens \\\"$digit\\\
    \"\"\n        else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n  \
    \      count=$(( count + 1 ))\n    done\n\n    echo -n \"$evens\"\n    if (( count\
    \ % 2 == 0 )); then\n        echo -n \",\"\n    fi\n    echo -n \"$odds\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    while [ $n -gt 0 ]; do\n        (( n % 2 == 0 )) &&\
    \ evens=\"$evens \\\"$((n%10))\\\"\" || odds=\"$odds \\\"$((n%10))\\\"\"\n   \
    \     n=$(( n / 10 ))\n    done\n    echo $evens $odds\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i n=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i count=0\n    local -i i\n    local -i j\n  \
    \  local -i odds\n    local -i evens\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local digit\n    local count\n    local\
    \ countEven\n    local countOdd\n    local countEven\n    local countOdd\n   \
    \ local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \    local countEven\n    local countOdd\n    local countEven\n    local countOdd\n\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    while [ $n -gt 0 ]; do\n        local remainder=$((\
    \ $n % 10 ))\n        if [ $remainder -eq 0 ]; then\n            evens=\"$evens\
    \ $remainder\"\n        else\n            odds=\"$odds $remainder\"\n        fi\n\
    \        n=$(( $n / 10 ))\n    done\n    echo $evens $odds\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odds\n    local\
    \ evens\n    local odds_str\n    local evens_str\n    local odds_str_list\n  \
    \  local evens_str_list\n    local odds_str\n    local evens_str\n    local odds_str_list\n\
    \    local evens_str_list\n    local odds_str\n    local evens_str\n    local\
    \ odds_str_list\n    local evens_str_list\n    local odds_str\n    local evens_str\n\
    \    local odds_str_list\n    local evens_str_list\n    local odds_str\n    local\
    \ evens_str\n    local odds_str_list\n    local evens_str_list\n    local odds_str\n\
    \    local evens_str\n    local odds_str_list\n    local evens_str_list\n    local\
    \ odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local count=0\n  while (( n > 0 )) ; do\n    (( n % 2 ==\
    \ 0 )) && evens=\"$evens \\\"$(( n / 10 ))\\\"\" || (( n % 2 == 1 )) && odds=\"\
    $odds \\\"$(( n / 10 ))\\\"\" \n    (( n /= 10 ))\n    (( ++count ))\n  done\n\
    \  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    while [ $n -gt 0 ]; do\n       \
    \ (( n % 2 != 0 )) && odds=\"$odds $n\"\n        (( n % 2 == 0 )) && evens=\"\
    $evens $n\"\n        (( count++ ))\n        n=$(( n / 2 ))\n    done\n    echo\
    \ $evens $odds\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local count\n    local digit\n    local digit2\n    local\
    \ digit3\n    local digit4\n    local digit5\n    local digit6\n    local digit7\n\
    \    local digit8\n    local digit9\n    local digit10\n    local digit11\n  \
    \  local digit12\n    local digit13\n    local digit14\n    local digit15\n  \
    \  local digit16\n    local digit17\n    local digit18\n    local digit19\n  \
    \  local digit20\n    local digit21\n    local digit22\n    local digit23\n  \
    \  local digit24\n    local digit25\n    local digit26\n    local digit27\n  \
    \  local digit28\n    local digit29\n    local digit30\n    local digit31\n  \
    \  local digit32\n    local digit33\n    local digit34\n    local digit35\n  \
    \  local digit36\n    local digit37\n    local digit38\n    local digit39\n  \
    \  local digit40\n    local digit41\n    local digit42\n    local digit43\n  \
    \  local digit44\n    local digit45\n    local digit46\n    local digit47\n  \
    \  local digit48\n    local digit49\n    local digit50\n    local digit51\n  \
    \  local digit52\n    local digit53\n    local digit54\n    local digit55\n  \
    \  local digit56\n    local digit57\n    local digit58\n    local digit59\n  \
    \  local digit60\n    local digit61\n    local digit62\n    local digit63\n  \
    \  local digit64\n    local digit65\n    local digit66\n    local digit67\n  \
    \  local digit68\n    local digit69\n    local digit70\n    local digit71\n  \
    \  local digit72\n    local digit73\n    local digit74\n    local digit75\n  \
    \  local digit76\n    local digit77\n    local digit78\n    local digit79\n  \
    \  local digit80\n    local digit81\n    local digit82\n    local digit83\n  \
    \  local digit84\n    local digit85\n    local digit86\n    local digit87\n  \
    \  local digit88\n    local digit89\n    local digit90\n    local digit91\n  \
    \  local digit92\n    local digit93\n    local digit94\n    \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n    local digit96\n \
    \   local digit97\n    local digit98\n    local digit99\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i n=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i count=0\n    local -i odds=\"\"\n    local -i\
    \ evens=\"\"\n    local -i odds_str=\"\"\n    local -i evens_str=\"\"\n    local\
    \ -i odds_str_count=0\n    local -i evens_str_count=0\n    local -i odds_str_count=0\n\
    \    local -i evens_str_count=0\n    local -i odds_str_count_str=\"\"\n    local\
    \ -i evens_str_count_str=\"\"\n    local -i odds_str_count_str_count=0\n    local\
    \ -i evens_str_count_str_count=0\n    local -i odds_str_count_str_count=0\n  \
    \  local -i evens_str_count_str_count=0\n    local -i odds_str_count_str_count_str=\"\
    \"\n    local -i evens_str_count_str_count_str=\"\"\n    local -i odds_str_count_str_count_str_count=0\n\
    \    local -i evens_str_count_str_count_str_count=0\n    local -i odds_str_count_str_count_str_count=0\n\
    \    local -i evens_str_count_str_count_str_count=0\n    local -i odds_str_count_str_count_str_count_str=\"\
    \"\n    local -i evens_str_count_str_count_str_count_str=\"\"\n    local -i odds_str_count_str_count_str_count_str_count=0\n\
    \    local -i evens_str_count_str_count_str_count_str_count=0\n    local -i odds_str_count_str_count_str_count_str_count=0\n\
    \    local -i evens_str_count_str_count_str_count_str_count=0\n    local -i odds_str_count_str_count_str_count_str_count_str=\"\
    \"\n    local -i evens_str_count_str_count_str_count_str_count_str=\"\"\n    local\
    \ -i odds_str_count_str_count_str_count_str_count_str_count=0\n    local -i evens_str_count_str_count_str_count_str_count_str_count=0\n\
    \    local -i odds_str_count_str_count_str_count_str_count_str_count=0\n    local\
    \ -i evens_str_count_str_count_str_count_str_count_str_count=0\n    local -i odds_str_count_str_count_str_count_str_count_str_count_str=\"\
    \"\n    local -i evens_str_count_str_count_str_count_str_count_str_count_str=\"\
    \"\n    local -i odds_str_count_str_count_str_count_str_count_str_count_str_count=0\n\
    \    local -i evens_str_count_str_count_str_count_str_count_str_count_str_count=0\n\
    \    local -i odds_str_count_str_count_str_count_str_count_str_count_str_count_str=\"\
    \"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local count\n\n    while [[ $number -gt 0 ]]; do\n\
    \        digit=$((number % 10))\n        digits=$((digits + 1))\n        if [[\
    \ $digit -eq 0 ]]; then\n            evens=$((evens + 1))\n        else\n    \
    \        odds=$((odds + 1))\n        fi\n        number=$((number / 10))\n   \
    \ done\n\n    count=$((evens + odds))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$((count * 2))\n    count=$((count\
    \ - 1))\n\n    count=$((count + 1))\n    count=$\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local even\n    local odd\n    local digit\n    local\
    \ count\n    local even\n    local odd\n    local digit\n    local count\n   \
    \ local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local result\n    local i\n    local j\n  \
    \  local k\n    local even_count\n    local odd_count\n    local digit\n    local\
    \ digit2\n    local digit3\n    local digit4\n    local digit5\n    local digit6\n\
    \    local digit7\n    local digit8\n    local digit9\n    local digit10\n   \
    \ local digit11\n    local digit12\n    local digit13\n    local digit14\n   \
    \ local digit15\n    local digit16\n    local digit17\n    local digit18\n   \
    \ local digit19\n    local digit20\n    local digit21\n    local digit22\n   \
    \ local digit23\n    local digit24\n    local digit25\n    local digit26\n   \
    \ local digit27\n    local digit28\n    local digit29\n    local digit30\n   \
    \ local digit31\n    local digit32\n    local digit33\n    local digit34\n   \
    \ local digit35\n    local digit36\n    local digit37\n    local digit38\n   \
    \ local digit39\n    local digit40\n    local digit41\n    local digit42\n   \
    \ local digit43\n    local digit44\n    local digit45\n    local digit46\n   \
    \ local digit47\n    local digit48\n    local digit49\n    local digit50\n   \
    \ local digit51\n    local digit52\n    local digit53\n    local digit54\n   \
    \ local digit55\n    local digit56\n    local digit57\n    local digit58\n   \
    \ local digit59\n    local digit60\n    local digit61\n    local digit62\n   \
    \ local digit63\n    local digit64\n    local digit65\n    local digit66\n   \
    \ local digit67\n    local digit68\n    local digit69\n    local digit70\n   \
    \ local digit71\n    local digit72\n    local digit73\n    local digit74\n   \
    \ local digit75\n    local digit76\n    local digit77\n    local digit78\n   \
    \ local digit79\n    local digit80\n    local digit81\n    local digit82\n   \
    \ local digit83\n    local digit84\n    local digit85\n    local digit86\n   \
    \ local digit87\n    local digit88\n    local digit89\n    local digit90\n   \
    \ local digit91\n    local digit92\n    local digit93\n    local digit\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local i=0\n    while [ $i\
    \ -lt $number ]; do\n        digits=$(( $number % 10 ))\n        if [ $digits\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digits\\\"\"\n        else\n\
    \            odds=\"$odds \\\"$digits\\\"\"\n        fi\n        (( i++ ))\n \
    \   done\n    echo $evens\n    echo $odds\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local i\n\
    \n    # loop through each digit\n    for (( i=1; i<=number; i++ )); do\n     \
    \   digits=$(echo $number | awk -F \"-\" '{print $i}')\n        # if the digit\
    \ is even\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            evens=\"$evens\
    \ \\\"$digits\\\"\"\n            count=$(( $count + 1 ))\n        # if the digit\
    \ is odd\n        else\n            odds=\"$odds \\\"$digits\\\"\"\n         \
    \   count=$(( $count + 1 ))\n        fi\n    done\n\n    # return the list\n \
    \   echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local digit\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local count\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local even\n    local odd\n    local digit\n   \
    \ local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n    local digit96\n \
    \   local digit97\n    local digit98\n    local digit99\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local even_count\n    local odd_count\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local \n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( number % 2 )) -eq 0 ]; then\n       \
    \     evens=\"$evens \\\"$(( number % 10 ))\\\"\"\n        else\n            odds=\"\
    $odds \\\"$(( number % 10 ))\\\"\"\n        fi\n        number=$(( number / 10\
    \ ))\n    done\n    echo $evens\n    echo $odds\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( number % 2 )) -eq 0 ]; then\n       \
    \     evens=\"$evens \\\"$(( number % 10 ))\\\"\"\n        else\n            odds=\"\
    $odds \\\"$(( number % 10 ))\\\"\"\n        fi\n        number=$(( number / 10\
    \ ))\n    done\n    echo $evens $odds\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local evenCount\n    local oddCount\n\
    \    local evenOddCount\n    local evenOddCountCount\n    local evenOddCountCountCount\n\
    \    local evenOddCountCountCountCount\n    local evenOddCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCount\n    local\
    \ evenOddCountCountCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCount\n  \
    \  local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCount\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    while [[ $n -gt 0 ]]; do\n        local digit=$(( n\
    \ % 10 ))\n        if [[ $digit -eq 0 ]]; then\n            evens=\"$evens \\\"\
    $digit\\\"\"\n        else\n            odds=\"$odds \\\"$digit\\\"\"\n      \
    \  fi\n        n=$(( n / 10 ))\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    while (( n > 0 )); do\n        ((\
    \ n % 2 )) && odds=\"$odds$(( n / 10 ))\"\n        (( n % 2 )) && evens=\"$evens$((\
    \ n / 10 ))\"\n        n=$(( n / 10 ))\n        count=$(( count + 1 ))\n    done\n\
    \    echo $evens $odds\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local digit\n    local number\n    local count\n    local i\n    local j\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local digit\n    local number\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local number\n    local count\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local number\n    local count\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local number\n    local count\n    local i\n    local j\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local digit\n    local number\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local number\n    local count\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local number\n    local count\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local number\n    local count\n    local i\n    local j\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local digit\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((${#n}-1)) ); do\n    local\
    \ digit=${n:$i:1}\n    if [ $(( ${digit:0:1} % 2 )) -eq 0 ]; then\n      evens=\"\
    $evens \\\"$digit\\\"\"\n    else\n      odds=\"$odds \\\"$digit\\\"\"\n    fi\n\
    \  done\n  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local even_count=0\n    local odd_count=0\n\
    \    local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    \    local odd_count=0\n    local i\n    local j\n    local odd\n    local even\n\
    \    local even_count=0\n    local odd_count=0\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local even_count=0\n    local odd_count=0\n \
    \   local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    \    local odd_count=0\n    local i\n    local j\n    local odd\n    local even\n\
    \    local even_count=0\n    local odd_count=0\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local even_count=0\n    local odd_count=0\n \
    \   local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    \    local odd_count=0\n    local i\n    local j\n    local odd\n    local even\n\
    \    local even_count=0\n    local odd_count=0\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local even_count=0\n    local odd_count=0\n \
    \   local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    \    local odd_count=0\n    local i\n    local j\n    local odd\n    local even\n\
    \    local even_count=0\n    local odd_count=0\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local even_count=0\n    local odd_count=0\n \
    \   local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    \    local odd_count=0\n    local i\n    local j\n    local odd\n    local even\n\
    \    local even_count=0\n    local odd_count=0\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local even_count=0\n    local odd_count=0\n \
    \   local i\n    local j\n    local odd\n    local even\n    local even_count=0\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    while (( n >= 10 )); do\n      \
    \  (( count++ ))\n        (( n % 10 ))\n        (( n % 2 ))\n        odds=\"$odds\\\
    \"$(( n % 10 ))\"\n    done\n    while (( n >= 1 )); do\n        (( count++ ))\n\
    \        (( n % 10 ))\n        (( n % 2 ))\n        evens=\"$evens\\\"$(( n %\
    \ 10 ))\"\n    done\n    echo -n \"$evens\"\n    echo -n \"$odds\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660044272
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local i\n  for i in $(seq\
    \ 0 $((${#number}-1)) )\n  do\n    digit=${number:$i:1}\n    if [[ $digit == \"\
    0\" ]]; then\n      evens=\"$evens \\\"$digit\\\"\"\n      count=$((count+1))\n\
    \    else\n      odds=\"$odds \\\"$digit\\\"\"\n      count=$((count+1))\n   \
    \ fi\n  done\n  if [[ $count -eq 0 ]]; then\n    evens=\"$evens \\\"$number\\\"\
    \"\n  else\n    odds=\"$odds \\\"$number\\\"\"\n  fi\n  echo \"$evens $odds\"\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local count=0\n  local digit\n \
    \ local even\n  local odd\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    while [ $number\
    \ -gt 0 ]; do\n        digit=$((number % 10))\n        number=$((number / 10))\n\
    \        if [ $digit -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\
    \n        else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n      \
    \  count=$((count + 1))\n    done\n\n    if [ $count -eq 0 ]; then\n        echo\
    \ \"$evens\"\n    else\n        echo \"$odds\"\n    fi\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local even\n\
    \    local odd\n    local i\n\n    for (( i = 1; i <= number; i++ )); do\n   \
    \     digit=$(( number % 10 ))\n        if [ $(( digit % 2 )) -eq 0 ]; then\n\
    \            evens=\"$evens \\\"$digit\\\"\"\n        else\n            odds=\"\
    $odds \\\"$digit\\\"\"\n        fi\n        (( count++ ))\n    done\n\n    evens=\"\
    $evens \\\"$count\\\"\"\n    odds=\"$odds \\\"$count\\\"\"\n    echo \"$evens\
    \ $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
    \  local digit98\n\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local even_count\n    local odd_count\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local even_count\n    local odd_count\n    local digit\n \
    \   local count\n    local i\n    local j\n    local odd\n    local even\n   \
    \ local even_count\n    local odd_count\n    local digit\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local even_count\n\
    \    local odd_count\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local even_count\n    local odd_count\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local even_count\n    local odd_count\n    local digit\n \
    \   local count\n    local i\n    local j\n    local odd\n    local even\n   \
    \ local even_count\n    local odd_count\n    local digit\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local even_count\n\
    \    local odd_count\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local even_count\n    local odd_count\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local even_count\n    local odd_count\n    local digit\n \
    \   local count\n    local i\n    local j\n    local odd\n    local even\n   \
    \ local even_count\n    local odd_count\n    local digit\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local even_count\n\
    \    local odd_count\n    local digit\n    local count\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local even_count\n    local odd_count\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local even_count\n    local odd_count\n    local digit\n\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [[ $number -gt 0 ]]; do\n\
    \        (( count++ ))\n        if [[ $(( number % 2 )) -eq 0 ]]; then\n     \
    \       evens=\"$evens \\\"$(( number % 10 ))\\\"\"\n        else\n          \
    \  odds=\"$odds \\\"$(( number % 10 ))\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ count\n    local digit\n    local i\n    local j\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local count\n    local digit\n    local\
    \ i\n    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: -1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [[ $number -gt 0 ]]; do\n\
    \        (( count++ ))\n        local digit=${number%?}\n        if [[ $digit\
    \ -eq 0 ]]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n\
    \            odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=${number//$digit/}\n\
    \    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=54 encoding='utf-8'>
  timestamp: 1660044272
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [[ $number -gt 0 ]]; do\n\
    \        (( count++ ))\n        local digit=$(echo $number | cut -d $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5qclay3j.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5qclay3j.sh: line 37: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digits=${number//}\n   \
    \ for (( i=1; i<${#digits}; i++ )); do\n        (( count++ ))\n        if (( ${digits:$i:1}\
    \ == 0 )) ; then\n            evens=\"${evens}\\\"${digits:$i:1}\\\"\"\n     \
    \   else\n            odds=\"${odds}\\\"${digits:$i:1}\\\"\"\n        fi\n   \
    \ done\n    echo ${evens}\n    echo ${odds}\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local count\n    local even\n    local\
    \ odd\n    local digit\n    local count\n    local even\n    local odd\n    local\
    \ digit\n    local count\n    local even\n    local odd\n    local digit\n   \
    \ local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  while [ $number -gt 0 ]; do\n    ((\
    \ count++ ))\n    (( number /= 10 ))\n    (( number %= 10 ))\n    if [ $number\
    \ -eq 0 ]; then\n      (( count-- ))\n    fi\n    if [ $count -eq 0 ]; then\n\
    \      (( evens+=( \"$number\" ) ))\n    else\n      (( odds+=( \"$number\" )\
    \ ))\n    fi\n  done\n  echo \"$evens\" \"$odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local i\n\
    \n    # loop through all digits\n    for (( i=1; i<=number; i++ )); do\n     \
    \   digits=$digits$i\n    done\n\n    # loop through all digits\n    for (( i=1;\
    \ i<=number; i++ )); do\n        if [ $i -eq 0 ]; then\n            evens=$evens$digits\n\
    \        else\n            odds=$odds$digits\n        fi\n    done\n\n    # loop\
    \ through all digits\n    for (( i=1; i<=number; i++ )); do\n        if [ $i -eq\
    \ 0 ]; then\n            evens=$evens$digits\n        else\n            odds=$odds$digits\n\
    \        fi\n    done\n\n    # loop through all digits\n    for (( i=1; i<=number;\
    \ i++ )); do\n        if [ $i -eq 0 ]; then\n            evens=$evens$digits\n\
    \        else\n            odds=$odds$digits\n        fi\n    done\n\n    # loop\
    \ through all digits\n    for (( i=1; i<=number; i++ )); do\n        if [ $i -eq\
    \ 0 ]; then\n            evens=$evens$digits\n        else\n            odds=$odds$digits\n\
    \        fi\n    done\n\n    # loop through all digits\n    for (( i=1; i<=number;\
    \ i++ )); do\n        if [ $i -eq 0 ]; then\n            evens=$evens$digits\n\
    \        else\n            odds=$odds$digits\n        fi\n    done\n\n    # loop\
    \ through all digits\n    for (( i=1; i<=number; i++ )); do\n        if [ $i -eq\
    \ 0 ]; then\n            evens=$evens$digits\n        else\n            odds=$odds$digits\n\
    \        fi\n    done\n\n    # loop through all digits\n    for (( i=1; i<=number;\
    \ i++ )); do\n        if [ $i -eq 0 ]; then\n            evens=$evens$digits\n\
    \        else\n            odds=$odds$digits\n        fi\n    done\n\n    # loop\
    \ through all digits\n    for (( i=1; i<=number; i++ )); do\n        if [ $i -eq\
    \ 0 ]; then\n            evens=$evens$digits\n        else\n            odds=$odds$digits\n\
    \        fi\n    done\n\n    # loop through all digits\n    for ((\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6yet_g1b.sh: line 96: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6yet_g1b.sh: line 116: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local count\n    local digit\n    local i\n    local j\n    local odd\n   \
    \ local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo -n \"['$evens', '$odds']\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local count\n    local digit\n    local i\n    local j\n    local odd\n   \
    \ local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \    local j\n    local even_list\n    local odd_list\n    local count\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local even_list\n\
    \    local odd_list\n    local count\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local even_list\n    local odd_list\n \
    \   local count\n    local even\n    local odd\n    local count\n    local i\n\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( $number % 2 )) -eq 0 ]; then\n      \
    \      evens=\"$evens \\\"$count\\\"\"\n        else\n            odds=\"$odds\
    \ \\\"$count\\\"\"\n        fi\n        number=$(( $number / 2 ))\n    done\n\
    \    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local digit\n    local digit2\n    local digit3\n\
    \    local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n    local digit96\n\
    \    local digit97\n    local digit98\n    local digit99\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local digit\n    local digit2\n    local digit3\n\
    \    local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n    local digit96\n\
    \    local digit97\n    local digit98\n    local digit99\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local digit\n    local evens\n    local\
    \ odds\n    local digits\n    local digit\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local i\n    local j\n    local even\n  \
    \  local odd\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local i\n    local j\n    local even\n    local odd\n\
    \    local digit\n    local i\n    local j\n    local even\n    local odd\n  \
    \  local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local i\n    local j\n    local even\n    local odd\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local i\n    local j\n    local even\n    local odd\n    local digit\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    local digit\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local digit\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local digit\n    local i\n    local j\n\
    \    local even\n    local odd\n    local digit\n    local i\n    local j\n  \
    \  local even\n    local odd\n    local digit\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local i\n    local j\n    local even\n  \
    \  local odd\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local i\n    local j\n    local even\n    local odd\n\
    \    local digit\n    local i\n    local j\n    local even\n    local odd\n  \
    \  local digit\n    local i\n    local \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local even\n    local odd\n    local evenCount\n \
    \   local oddCount\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n    local digit\n    local digitCount\n\
    \    local digit\n    local digitCount\n\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odds\n    local\
    \ evens\n    local odds_str\n    local evens_str\n    local odds_str_list\n  \
    \  local evens_str_list\n    local odds_str\n    local evens_str\n    local odds_str_list\n\
    \    local evens_str_list\n    local odds_str\n    local evens_str\n    local\
    \ odds_str_list\n    local evens_str_list\n    local odds_str\n    local evens_str\n\
    \    local odds_str_list\n    local evens_str_list\n    local odds_str\n    local\
    \ evens_str\n    local odds_str_list\n    local evens_str_list\n    local odds_str\n\
    \    local evens_str\n    local odds_str_list\n    local evens_str_list\n    local\
    \ odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digit\n    local count\n\n    count=0\n   \
    \ while [ $number -gt 0 ]; do\n        digit=$((number % 10))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$((number\
    \ / 10))\n        count=$((count+1))\n    done\n    echo \"$evens $odds\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local count\n    local digit\n    local i\n    local j\n    local odd\n   \
    \ local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local count\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local digit\n    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local even_count\n    local odd_count\n\
    \    local digit\n    local digit2\n    local digit3\n    local digit4\n    local\
    \ digit5\n    local digit6\n    local digit7\n    local digit8\n    local digit9\n\
    \    local digit10\n    local digit11\n    local digit12\n    local digit13\n\
    \    local digit14\n    local digit15\n    local digit16\n    local digit17\n\
    \    local digit18\n    local digit19\n    local digit20\n    local digit21\n\
    \    local digit22\n    local digit23\n    local digit24\n    local digit25\n\
    \    local digit26\n    local digit27\n    local digit28\n    local digit29\n\
    \    local digit30\n    local digit31\n    local digit32\n    local digit33\n\
    \    local digit34\n    local digit35\n    local digit36\n    local digit37\n\
    \    local digit38\n    local digit39\n    local digit40\n    local digit41\n\
    \    local digit42\n    local digit43\n    local digit44\n    local digit45\n\
    \    local digit46\n    local digit47\n    local digit48\n    local digit49\n\
    \    local digit50\n    local digit51\n    local digit52\n    local digit53\n\
    \    local digit54\n    local digit55\n    local digit56\n    local digit57\n\
    \    local digit58\n    local digit59\n    local digit60\n    local digit61\n\
    \    local digit62\n    local digit63\n    local digit64\n    local digit65\n\
    \    local digit66\n    local digit67\n    local digit68\n    local digit69\n\
    \    local digit70\n    local digit71\n    local digit72\n    local digit73\n\
    \    local digit74\n    local digit75\n    local digit76\n    local digit77\n\
    \    local digit78\n    local digit79\n    local digit80\n    local digit81\n\
    \    local digit82\n    local digit83\n    local digit84\n    local digit85\n\
    \    local digit86\n    local digit87\n    local digit88\n    local digit89\n\
    \    local digit90\n    local digit91\n    local digit92\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local digit\n    local count\n \
    \   local digit\n    local i\n    local j\n    local even\n    local odd\n   \
    \ local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local i\n    local j\n    local even\n    local odd\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local i\n    local j\n    local even\n    local odd\n    local digit\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    local digit\n    local i\n  \
    \  local j\n    local even\n    local odd\n    local digit\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local digit\n    local i\n    local j\n\
    \    local even\n    local odd\n    local digit\n    local i\n    local j\n  \
    \  local even\n    local odd\n    local digit\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local digit\n    local i\n    local j\n    local even\n  \
    \  local odd\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local digit\n    local i\n    local j\n    local even\n    local odd\n\
    \    local digit\n    local i\n    local j\n    local even\n    local odd\n  \
    \  local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ digit\n    local i\n    local j\n    local even\n    local odd\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local i\n    local j\n    local even\n    local odd\n    local digit\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local count1\n    local count2\n    local count3\n    local count4\n    local\
    \ count5\n    local count6\n    local count7\n    local count8\n    local count9\n\
    \    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((${#n}-1))); do\n    if [[\
    \ $((${n}%2)) -eq 0 ]]; then\n      evens=\"$evens \\\"$((${n}%10))\\\"\"\n  \
    \  else\n      odds=\"$odds \\\"$((${n}%10))\\\"\"\n    fi\n    n=$((${n}/10))\n\
    \  done\n  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 2 ))\
    \ && odds=\"$odds $n\" || evens=\"$evens $n\"\n    (( n /= 10 ))\n    (( ++count\
    \ ))\n  done\n  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=0\n\
    \  local odds=0\n  local digits=0\n  local digit\n  local even\n  local odd\n\
    \  local i\n  local j\n  local count\n\n  for i in $(seq 0 $((${#number}-1)));\
    \ do\n    digit=${number:$i:1}\n    digits=$((${digits}+1))\n    if [[ $digit\
    \ == \"0\" ]]; then\n      evens=$((${evens}+1))\n    else\n      odds=$((${odds}+1))\n\
    \    fi\n  done\n\n  count=$((${evens}+${odds}))\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local oddCount\n    local evenCount\n\
    \    local oddDigit\n    local evenDigit\n    local oddCountDigit\n    local evenCountDigit\n\
    \    local oddDigitCount\n    local evenDigitCount\n    local oddDigitCountDigit\n\
    \    local evenDigitCountDigit\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n\
    \    local evenDigitCountDigit2\n    local oddDigitCountDigit2\n    local evenDigitCountDigit2\n\
    \    local oddDigitCountDigit2\n    local even\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digits=$(( 10#$number ))\n\
    \    while [ $digits -gt 0 ]; do\n        (( digits-- ))\n        if [ $digits\
    \ -eq 0 ]; then\n            (( count++ ))\n            (( digits-- ))\n     \
    \   fi\n        if [ $count -eq 0 ]; then\n            evens=\"$evens \\\"$((\
    \ 10#$digits ))\\\"\"\n        else\n            odds=\"$odds \\\"$(( 10#$digits\
    \ ))\\\"\"\n        fi\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local digit2\n   \
    \ local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local digit\n    local i\n    local j\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local digit\n    local i\n    local j\n    local\
    \ odd\n    local even\n    local odds\n    local evens\n    local digit\n    local\
    \ i\n    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local digit\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ digit\n    local i\n    local j\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local digit\n    local i\n    \n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local digit\n  local digit2\n  local\
    \ digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n  local\
    \ digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
    \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
    \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
    \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
    \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
    \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
    \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
    \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
    \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
    \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
    \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
    \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
    \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
    \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
    \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
    \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
    \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
    \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
    \  local digit98\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local i=0\n  while [ $i -lt $number\
    \ ]; do\n    digits=$(echo $number | awk -F \"-\" '{print $1}')\n    if [ $digits\
    \ -eq 0 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\
    \"\"\n    elif [ $digits -eq 1 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n  \
    \    odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 2 ]; then\n      evens=\"\
    $evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 3\
    \ ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n\
    \    elif [ $digits -eq 4 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"\
    $odds \\\"$i\\\"\"\n    elif [ $digits -eq 5 ]; then\n      evens=\"$evens \\\"\
    $i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 6 ]; then\n\
    \      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif\
    \ [ $digits -eq 7 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds\
    \ \\\"$i\\\"\"\n    elif [ $digits -eq 8 ]; then\n      evens=\"$evens \\\"$i\\\
    \"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 9 ]; then\n    \
    \  evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits\
    \ -eq 10 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\
    \"\"\n    elif [ $digits -eq 11 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n \
    \     odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 12 ]; then\n      evens=\"\
    $evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n    elif [ $digits -eq 13\
    \ ]; then\n      evens=\"$evens \\\"$i\\\"\"\n      odds=\"$odds \\\"$i\\\"\"\n\
    \    elif [ $digits -eq 14 ]; then\n      evens=\"$evens \\\"$i\\\"\"\n\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpczp7s6u0.sh: line 63: syntax error near unexpected token `}''

    /tmp/tmpczp7s6u0.sh: line 63: `}''

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local result\n  \
    \  local even_list\n    local odd_list\n    local count\n    local i\n    local\
    \ j\n    local result\n    local even_list\n    local odd_list\n    local count\n\
    \    local i\n    local j\n    local result\n    local even_list\n    local odd_list\n\
    \    local count\n    local i\n    local j\n    local result\n    local even_list\n\
    \    local odd_list\n    local count\n    local i\n    local j\n    local result\n\
    \    local even_list\n    local odd_list\n    local count\n    local i\n    local\
    \ j\n    local result\n    local even_list\n    local odd_list\n    local count\n\
    \    local i\n    local j\n    local result\n    local even_list\n    local odd_list\n\
    \    local count\n    local i\n    local j\n    local result\n    local even_list\n\
    \    local odd_list\n    local count\n    local i\n    local j\n    local result\n\
    \    local even_list\n    local odd_list\n    local count\n    local i\n    local\
    \ j\n    local result\n    local even_list\n    local odd_list\n    local count\n\
    \    local i\n    local j\n    local result\n    local even_list\n    local odd_list\n\
    \    local count\n    local i\n    local j\n    local result\n    local even_list\n\
    \    local odd_list\n    local count\n    local i\n    local j\n    local result\n\
    \    local even_list\n    local odd_list\n    local count\n    local i\n    local\
    \ j\n    local result\n    local even_list\n    local odd_list\n    local count\n\
    \    local i\n    local j\n    local result\n    local even_list\n    local odd_list\n\
    \    local count\n    local i\n    local j\n    local result\n    local even_list\n\
    \    local odd_list\n    local count\n    local i\n    local j\n    local result\n\
    \    local even_list\n    local odd_list\n    local count\n    local i\n    local\
    \ j\n    local result\n    local even_list\n    local odd_list\n    local count\n\
    \    local i\n    local j\n\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digit\n    local count\n    local i\n    local j\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local count\n    local even\n    local odd\n\
    \    local digit\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local \n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local digit\n    local digit2\n    local\
    \ digit3\n    local digit4\n    local digit5\n    local digit6\n    local digit7\n\
    \    local digit8\n    local digit9\n    local digit10\n    local digit11\n  \
    \  local digit12\n    local digit13\n    local digit14\n    local digit15\n  \
    \  local digit16\n    local digit17\n    local digit18\n    local digit19\n  \
    \  local digit20\n    local digit21\n    local digit22\n    local digit23\n  \
    \  local digit24\n    local digit25\n    local digit26\n    local digit27\n  \
    \  local digit28\n    local digit29\n    local digit30\n    local digit31\n  \
    \  local digit32\n    local digit33\n    local digit34\n    local digit35\n  \
    \  local digit36\n    local digit37\n    local digit38\n    local digit39\n  \
    \  local digit40\n    local digit41\n    local digit42\n    local digit43\n  \
    \  local digit44\n    local digit45\n    local digit46\n    local digit47\n  \
    \  local digit48\n    local digit49\n    local digit50\n    local digit51\n  \
    \  local digit52\n    local digit53\n    local digit54\n    local digit55\n  \
    \  local digit56\n    local digit57\n    local digit58\n    local digit59\n  \
    \  local digit60\n    local digit61\n    local digit62\n    local digit63\n  \
    \  local digit64\n    local digit65\n    local digit66\n    local digit67\n  \
    \  local digit68\n    local digit69\n    local digit70\n    local digit71\n  \
    \  local digit72\n    local digit73\n    local digit74\n    local digit75\n  \
    \  local digit76\n    local digit77\n    local digit78\n    local digit79\n  \
    \  local digit80\n    local digit81\n    local digit82\n    local digit83\n  \
    \  local digit84\n    local digit85\n    local digit86\n    local digit87\n  \
    \  local digit88\n    local digit89\n    local digit90\n    local digit91\n  \
    \  local digit92\n    local digit93\n    local digit94\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local count=0\n  local digit\n \
    \ local digit2\n  local digit3\n  local digit4\n  local digit5\n  local digit6\n\
    \  local digit7\n  local digit8\n  local digit9\n  local digit10\n  local digit11\n\
    \  local digit12\n  local digit13\n  local digit14\n  local digit15\n  local digit16\n\
    \  local digit17\n  local digit18\n  local digit19\n  local digit20\n  local digit21\n\
    \  local digit22\n  local digit23\n  local digit24\n  local digit25\n  local digit26\n\
    \  local digit27\n  local digit28\n  local digit29\n  local digit30\n  local digit31\n\
    \  local digit32\n  local digit33\n  local digit34\n  local digit35\n  local digit36\n\
    \  local digit37\n  local digit38\n  local digit39\n  local digit40\n  local digit41\n\
    \  local digit42\n  local digit43\n  local digit44\n  local digit45\n  local digit46\n\
    \  local digit47\n  local digit48\n  local digit49\n  local digit50\n  local digit51\n\
    \  local digit52\n  local digit53\n  local digit54\n  local digit55\n  local digit56\n\
    \  local digit57\n  local digit58\n  local digit59\n  local digit60\n  local digit61\n\
    \  local digit62\n  local digit63\n  local digit64\n  local digit65\n  local digit66\n\
    \  local digit67\n  local digit68\n  local digit69\n  local digit70\n  local digit71\n\
    \  local digit72\n  local digit73\n  local digit74\n  local digit75\n  local digit76\n\
    \  local digit77\n  local digit78\n  local digit79\n  local digit80\n  local digit81\n\
    \  local digit82\n  local digit83\n  local digit84\n  local digit85\n  local digit86\n\
    \  local digit87\n  local digit88\n  local digit89\n  local digit90\n  local digit91\n\
    \  local digit92\n  local digit93\n  local digit94\n  local digit95\n  local digit96\n\
    \  local digit97\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local even\n  local odd\n\
    \  while (( number > 0 )) ; do\n    (( count++ ))\n    digit=$(( number % 10 ))\n\
    \    (( number /= 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      evens=\"\
    $evens \\\"$digit\\\"\"\n    else\n      odds=\"$odds \\\"$digit\\\"\"\n    fi\n\
    \  done\n  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digits=$(echo $number |\
    \ sed 's/\\([0-9]*\\)//g')\n    local digit\n    for digit in $digits; do\n  \
    \      if [[ $(( $(echo \"$number / 10\" | bc -l) )) -eq 0 ]]; then\n        \
    \    evens=\"$evens \\\"$digit\\\"\"\n        else\n            odds=\"$odds \\\
    \"$digit\\\"\"\n        fi\n        (( count++ ))\n    done\n    echo \"$evens\
    \ $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    local\
    \ odd\n    local digit\n    local even\n    local odd\n    local digit\n    local\
    \ even\n    local odd\n    local digit\n    local even\n    local odd\n    local\
    \ digit\n    local even\n    local odd\n    local digit\n    local even\n    \n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digits=$(( 10#$number ))\n\
    \    while [ $count -lt $digits ]; do\n        (( count++ ))\n        if [ $((\
    \ count%2 )) -eq 0 ]; then\n            evens=\"$evens \\\"$(( count/2 ))\\\"\"\
    \n        else\n            odds=\"$odds \\\"$(( count/2 ))\\\"\"\n        fi\n\
    \    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local i\n    local j\n  \
    \  local k\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local digit2\n    local digit3\n    local digit4\n    local digit5\n    local\
    \ digit6\n    local digit7\n    local digit8\n    local digit9\n    local digit10\n\
    \    local digit11\n    local digit12\n    local digit13\n    local digit14\n\
    \    local digit15\n    local digit16\n    local digit17\n    local digit18\n\
    \    local digit19\n    local digit20\n    local digit21\n    local digit22\n\
    \    local digit23\n    local digit24\n    local digit25\n    local digit26\n\
    \    local digit27\n    local digit28\n    local digit29\n    local digit30\n\
    \    local digit31\n    local digit32\n    local digit33\n    local digit34\n\
    \    local digit35\n    local digit36\n    local digit37\n    local digit38\n\
    \    local digit39\n    local digit40\n    local digit41\n    local digit42\n\
    \    local digit43\n    local digit44\n    local digit45\n    local digit46\n\
    \    local digit47\n    local digit48\n    local digit49\n    local digit50\n\
    \    local digit51\n    local digit52\n    local digit53\n    local digit54\n\
    \    local digit55\n    local digit56\n    local digit57\n    local digit58\n\
    \    local digit59\n    local digit60\n    local digit61\n    local digit62\n\
    \    local digit63\n    local digit64\n    local digit65\n    local digit66\n\
    \    local digit67\n    local digit68\n    local digit69\n    local digit70\n\
    \    local digit71\n    local digit72\n    local digit73\n    local digit74\n\
    \    local digit75\n    local digit76\n    local digit77\n    local digit78\n\
    \    local digit79\n    local digit80\n    local digit81\n    local digit82\n\
    \    local digit83\n    local digit84\n    local digit85\n    local digit86\n\
    \    local digit87\n    local digit88\n    local digit89\n    local digit90\n\
    \    local digit91\n    local digit92\n    local digit93\n    local digit94\n\
    \    local digit95\n    local digit96\n    local digit97\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local evens_str=\"\"\n    local odds_str=\"\
    \"\n    local digits_str=\"\"\n    while [ $number -gt 0 ]; do\n        digits=$((\
    \ $number % 10 ))\n        number=$(( $number / 10 ))\n        if [ $digits -eq\
    \ 0 ]; then\n            evens=$(( $evens + 1 ))\n            evens_str=\"$evens_str\\\
    \"$evens\\\"\"\n        else\n            odds=$(( $odds + 1 ))\n            odds_str=\"\
    $odds_str\\\"$odds\\\"\"\n        fi\n    done\n    digits_str=\"$digits_str\\\
    \"$digits\\\"\"\n    echo $evens_str\n    echo $odds_str\n    echo $digits_str\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digits\n    local evens_str\n    local\
    \ odds_str\n    local digits_str\n    local i\n    local j\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local digits\n    local evens_str\n\
    \    local odds_str\n    local digits_str\n    local i\n    local j\n    local\
    \ count\n    local even\n    local odd\n    local digit\n    local digits\n  \
    \  local evens_str\n    local odds_str\n    local digits_str\n    local i\n  \
    \  local j\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local digits\n    local evens_str\n    local odds_str\n    local digits_str\n\
    \    local i\n    local j\n    local count\n    local even\n    local odd\n  \
    \  local digit\n    local digits\n    local evens_str\n    local odds_str\n  \
    \  local digits_str\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digits\n    local evens_str\n    local\
    \ odds_str\n    local digits_str\n    local i\n    local j\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local digits\n    local evens_str\n\
    \    local odds_str\n    local digits_str\n    local i\n    local j\n    local\
    \ count\n    local even\n    local odd\n    local digit\n    local digits\n  \
    \  local evens_str\n    local odds_str\n    local digits_str\n    local i\n  \
    \  local j\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local digits\n    local evens_str\n    local odds_str\n    local digits_str\n\
    \    local i\n    local j\n    local count\n    local even\n    local odd\n  \
    \  local digit\n    local digits\n    local evens_str\n    local odds_str\n  \
    \  local digits_str\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digits\n    local evens_str\n\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local i\n\n    # Count number of digits\n\
    \    digits=$(( ${#number} ))\n\n    # Loop through digits\n    for (( i=1; i<${digits};\
    \ i++ )); do\n        # Digit at i\n        digit=${number:$i:1}\n\n        #\
    \ Digit at i should be even\n        if [[ ${digit:0:1} -eq 0 ]]; then\n     \
    \       evens=\"${evens}${digit}\"\n            count=$(( ${count} + 1 ))\n  \
    \      else\n            odds=\"${odds}${digit}\"\n            count=$(( ${count}\
    \ + 1 ))\n        fi\n    done\n\n    # Return evens and odds\n    echo ${evens}\n\
    \    echo ${odds}\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local evenCount\n    local oddCount\n\
    \    local evenOddCount\n    local evenOddCountCount\n    local evenOddCountCountCount\n\
    \    local evenOddCountCountCountCount\n    local evenOddCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ odds_count\n    local evens_count\n    local odds_string\n    local evens_string\n\
    \    local evens_string2\n    local odds_string2\n    local evens_string3\n  \
    \  local odds_string3\n    local evens_string4\n    local odds_string4\n    local\
    \ evens_string5\n    local odds_string5\n    local evens_string6\n    local odds_string6\n\
    \    local evens_string7\n    local odds_string7\n    local evens_string8\n  \
    \  local odds_string8\n    local evens_string9\n    local odds_string9\n    local\
    \ evens_string10\n    local odds_string10\n    local evens_string11\n    local\
    \ odds_string11\n    local evens_string12\n    local odds_string12\n    local\
    \ evens_string13\n    local odds_string13\n    local evens_string14\n    local\
    \ odds_string14\n    local evens_string15\n    local odds_string15\n    local\
    \ evens_string16\n    local odds_string16\n    local evens_string17\n    local\
    \ odds_string17\n    local evens_string18\n    local odds_string18\n    local\
    \ evens_string19\n    local odds_string19\n    local evens_string20\n    local\
    \ odds_string20\n    local evens_string21\n    local odds_string21\n    local\
    \ evens_string22\n    local odds_string22\n    local evens_string23\n    local\
    \ odds_string23\n    local evens_string24\n    local odds_string24\n    local\
    \ evens_string25\n    local odds_string25\n    local evens_string26\n    local\
    \ odds_string26\n    local evens_string27\n    local odds_string27\n    local\
    \ evens_string28\n    local odds_string28\n    local evens_string29\n    local\
    \ odds_string29\n    local evens_string30\n    local odds_string30\n    local\
    \ evens_string31\n    local odds_string31\n    local evens_string32\n    local\
    \ odds_string32\n    local evens_string33\n    local odds_string33\n    local\
    \ evens_string34\n    local odds_\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local even\n\
    \    local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n    local odd_count\n    local digit\n    local even\n  \
    \  local odd\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local digit\n    local even\n    local odd\n    local i\n    local j\n  \
    \  local even_count\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while (( number > 0 )); do\n \
    \       (( count++ ))\n        (( number /= 10 ))\n        if (( number == 0 ))\
    \ ; then\n            evens=\"$evens \\\"$count\\\"\"\n        else\n        \
    \    odds=\"$odds \\\"$count\\\"\"\n        fi\n    done\n    echo \"$evens $odds\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=$(echo $number | sed 's/\\(.\\)\\(.\\\
    )/\\1\\2/g')\n    local digits_count=$(echo $digits | wc -w)\n    local digits_count_even=$(echo\
    \ $digits_count | awk '{print $1}')\n    local digits_count_odd=$(echo $digits_count\
    \ | awk '{print $2}')\n    local digits_count_even_odd=$(echo $digits_count |\
    \ awk '{print $1}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $2}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $3}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $4}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $5}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $6}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $7}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $8}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $9}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $10}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $11}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $12}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $13}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $14}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $15}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $16}')\n    local digits_count_even_odd_odd=$(echo $digits_count\
    \ | awk '{print $17}')\n    local digits_count_even_odd_even=$(echo $digits_count\
    \ | awk '{print $18}')\n    local digits_count_ev\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    # count the\
    \ number of digits\n    local digits=$(echo $number | wc -w)\n\n    # loop through\
    \ each digit\n    for (( i=1; i<=$digits; i++ )); do\n        # get the current\
    \ digit\n        digit=$(echo $number | cut -d $i -f)\n\n        # if the digit\
    \ is even\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            # add it to the\
    \ evens list\n            evens=\"$evens \\\"$digit\\\"\"\n        fi\n\n    \
    \    # if the digit is odd\n        if [ $(( $i % 2 )) -eq 1 ]; then\n       \
    \     # add it to the odds list\n            odds=\"$odds \\\"$digit\\\"\"\n \
    \       fi\n    done\n\n    # return the list\n    echo \"$evens $odds\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((${#n}-1))); do\n    local\
    \ digit=${n:$i:1}\n    if [[ $(( ${digit} % 2 )) -eq 0 ]]; then\n      evens=\"\
    $evens \\\"$digit\\\"\"\n    else\n      odds=\"$odds \\\"$digit\\\"\"\n    fi\n\
    \  done\n  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n\n \
    \   # loop through each digit\n    for ((i=1; i<=number; i++)); do\n        digit=$(echo\
    \ $number | cut -d $i -f)\n        if [[ $digit == 0 ]]; then\n            evens=\"\
    $evens \\\"$i\\\"\"\n        else\n            odds=\"$odds \\\"$i\\\"\"\n   \
    \     fi\n        count=$((count+1))\n    done\n\n    # return evens and odds\n\
    \    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local str\n    local\
    \ evenStr\n    local oddStr\n    local evenStrCount\n    local oddStrCount\n \
    \   local evenStrCount2\n    local oddStrCount2\n    local evenStrCount3\n   \
    \ local oddStrCount3\n    local evenStrCount4\n    local oddStrCount4\n    local\
    \ evenStrCount5\n    local oddStrCount5\n    local evenStrCount6\n    local oddStrCount6\n\
    \    local evenStrCount7\n    local oddStrCount7\n    local evenStrCount8\n  \
    \  local oddStrCount8\n    local evenStrCount9\n    local oddStrCount9\n    local\
    \ evenStrCount10\n    local oddStrCount10\n    local evenStrCount11\n    local\
    \ oddStrCount11\n    local evenStrCount12\n    local oddStrCount12\n    local\
    \ evenStrCount13\n    local oddStrCount13\n    local evenStrCount14\n    local\
    \ oddStrCount14\n    local evenStrCount15\n    local oddStrCount15\n    local\
    \ evenStrCount16\n    local oddStrCount16\n    local evenStrCount17\n    local\
    \ oddStrCount17\n    local evenStrCount18\n    local oddStrCount18\n    local\
    \ evenStrCount19\n    local oddStrCount19\n    local evenStrCount20\n    local\
    \ oddStrCount20\n    local evenStrCount21\n    local oddStrCount21\n    local\
    \ evenStrCount22\n    local oddStrCount22\n    local evenStrCount23\n    local\
    \ oddStrCount23\n    local evenStrCount24\n    local oddStrCount24\n    local\
    \ evenStrCount25\n    local oddStrCount25\n    local evenStrCount26\n    local\
    \ oddStrCount26\n    local evenStrCount27\n    local oddStrCount27\n    local\
    \ evenStrCount28\n    local oddStrCount28\n    local evenStrCount29\n    local\
    \ oddStrCount29\n    local evenStrCount30\n    local oddStrCount30\n    local\
    \ evenStrCount31\n    local oddStrCount31\n    local evenStrCount32\n    local\
    \ oddStrCount32\n    local evenStrCount33\n    local oddStrCount33\n    local\
    \ evenStrCount34\n    local oddStrCount\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local oddCount\n    local evenCount\n\
    \    local evenOddCount\n    local evenOddCountCount\n    local evenOddCountCountCount\n\
    \    local evenOddCountCountCountCount\n    local evenOddCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCount\n    local evenOddCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    \    local evenOddCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local even\n    local odd\n    local count\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local count\n    local digit\n    local i\n    local j\n    local k\n   \
    \ local even\n    local odd\n    local count\n    local digit\n    local i\n \
    \   local j\n    local k\n    local even\n    local odd\n    local count\n   \
    \ local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    \n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local count=0\n  local even=\"\"\
    \n  local odd=\"\"\n  local digit=\"\"\n  while [ $number -gt 0 ]; do\n    digits=$(echo\
    \ $number | awk '{print $1}')\n    digit=$(echo $digits | awk '{print $1}')\n\
    \    digit=$(echo $digit | awk '{print $1}')\n    if [ $digit -eq 0 ]; then\n\
    \      digit=$(echo $digits | awk '{print $2}')\n      digit=$(echo $digit | awk\
    \ '{print $1}')\n      digit=$(echo $digit | awk '{print $1}')\n    fi\n    if\
    \ [ $digit -eq 0 ]; then\n      digit=$(echo $digits | awk '{print $3}')\n   \
    \   digit=$(echo $digit | awk '{print $1}')\n      digit=$(echo $digit | awk '{print\
    \ $1}')\n    fi\n    if [ $digit -eq 0 ]; then\n      digit=$(echo $digits | awk\
    \ '{print $4}')\n      digit=$(echo $digit | awk '{print $1}')\n      digit=$(echo\
    \ $digit | awk '{print $1}')\n    fi\n    if [ $digit -eq 0 ]; then\n      digit=$(echo\
    \ $digits | awk '{print $5}')\n      digit=$(echo $digit | awk '{print $1}')\n\
    \      digit=$(echo $digit | awk '{print $1}')\n    fi\n    if [ $digit -eq 0\
    \ ]; then\n      digit=$(echo $digits | awk '{print $6}')\n      digit=$(echo\
    \ $digit | awk '{print $1}')\n      digit=$(echo $digit | awk '{print $1}')\n\
    \    fi\n    if [ $digit -eq 0 ]; then\n      digit=$(echo $digits | awk '{print\
    \ $7}')\n      digit=$(echo $digit | awk '{print $1}')\n      digit=$(echo $digit\
    \ | awk '{print $1}')\n    fi\n    if [ $digit -eq 0 ]; then\n      digit=$(echo\
    \ $digits | awk '{print $8}')\n      digit=$(echo $digit | awk '{print $1}')\n\
    \      digit=$(echo $digit | awk '{print $1}')\n    fi\n    if [ $digit -eq 0\
    \ ]; then\n      digit=$(echo $digits | awk '{print $9}')\n      digit=$(echo\
    \ $digit | awk '{print $1}')\n      digit=$(echo $digit | awk '{print $1}')\n\
    \    fi\n    if [ $digit -eq 0 ]; then\n      digit=$(echo $digits | awk '\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1_nnrl1t.sh: line 64: unexpected EOF while looking for matching
    `''''

    /tmp/tmp1_nnrl1t.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((n-1))); do\n    if [ $((n\
    \ % 10)) -eq 0 ]; then\n      evens=\"$evens \\\"$((n/10))\\\"\"\n    else\n \
    \     odds=\"$odds \\\"$((n/10))\\\"\"\n    fi\n  done\n  echo \"$evens $odds\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    while (( number\
    \ > 0 )) ; do\n        digit=$(echo $number | cut -d \"-\" -f 1)\n        (( count++\
    \ ))\n        if (( digit % 2 == 0 )) ; then\n            evens=\"$evens \\\"\
    $digit\\\"\"\n        else\n            odds=\"$odds \\\"$digit\\\"\"\n      \
    \  fi\n        number=$(( number / 10 ))\n    done\n\n    echo \"$evens $odds\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local count\n    local even_count\n    local odd_count\n \
    \   local count2\n    local even2\n    local odd2\n    local count3\n    local\
    \ even3\n    local odd3\n    local count4\n    local even4\n    local odd4\n \
    \   local count5\n    local even5\n    local odd5\n    local count6\n    local\
    \ even6\n    local odd6\n    local count7\n    local even7\n    local odd7\n \
    \   local count8\n    local even8\n    local odd8\n    local count9\n    local\
    \ even9\n    local odd9\n    local count10\n    local even10\n    local odd10\n\
    \    local count11\n    local even11\n    local odd11\n    local count12\n   \
    \ local even12\n    local odd12\n    local count13\n    local even13\n    local\
    \ odd13\n    local count14\n    local even14\n    local odd14\n    local count15\n\
    \    local even15\n    local odd15\n    local count16\n    local even16\n    local\
    \ odd16\n    local count17\n    local even17\n    local odd17\n    local count18\n\
    \    local even18\n    local odd18\n    local count19\n    local even19\n    local\
    \ odd19\n    local count20\n    local even20\n    local odd20\n    local count21\n\
    \    local even21\n    local odd21\n    local count22\n    local even22\n    local\
    \ odd22\n    local count23\n    local even23\n    local odd23\n    local count24\n\
    \    local even24\n    local odd24\n    local count25\n    local even25\n    local\
    \ odd25\n    local count26\n    local even26\n    local odd26\n    local count27\n\
    \    local even27\n    local odd27\n    local count28\n    local even28\n    local\
    \ odd28\n    local count29\n    local even29\n    local odd29\n    local count30\n\
    \    local even30\n    local odd30\n    local count31\n    local even31\n    local\
    \ odd31\n    local count32\n    local even32\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local digit2\n   \
    \ local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local oddCount\n    local evenCount\n\
    \    local digitCount\n    local digitCount2\n    local digitCount3\n    local\
    \ digitCount4\n    local digitCount5\n    local digitCount6\n    local digitCount7\n\
    \    local digitCount8\n    local digitCount9\n    local digitCount10\n    local\
    \ digitCount11\n    local digitCount12\n    local digitCount13\n    local digitCount14\n\
    \    local digitCount15\n    local digitCount16\n    local digitCount17\n    local\
    \ digitCount18\n    local digitCount19\n    local digitCount20\n    local digitCount21\n\
    \    local digitCount22\n    local digitCount23\n    local digitCount24\n    local\
    \ digitCount25\n    local digitCount26\n    local digitCount27\n    local digitCount28\n\
    \    local digitCount29\n    local digitCount30\n    local digitCount31\n    local\
    \ digitCount32\n    local digitCount33\n    local digitCount34\n    local digitCount35\n\
    \    local digitCount36\n    local digitCount37\n    local digitCount38\n    local\
    \ digitCount39\n    local digitCount40\n    local digitCount41\n    local digitCount42\n\
    \    local digitCount43\n    local digitCount44\n    local digitCount45\n    local\
    \ digitCount46\n    local digitCount47\n    local digitCount48\n    local digitCount49\n\
    \    local digitCount50\n    local digitCount51\n    local digitCount52\n    local\
    \ digitCount53\n    local digitCount54\n    local digitCount55\n    local digitCount56\n\
    \    local digitCount57\n    local digitCount58\n    local digitCount59\n    local\
    \ digitCount60\n    local digitCount61\n    local digitCount62\n    local digitCount63\n\
    \    local digitCount64\n    local digitCount65\n    local digitCount66\n    local\
    \ digitCount67\n    local digitCount68\n    local digitCount69\n    local digitCount70\n\
    \    local digitCount71\n    local digitCount72\n    local digitCount73\n    local\
    \ digitCount74\n    local digitCount75\n    local digitCount76\n    local digitCount\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local digit\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local digit2\n   \
    \ local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local i\n  for i in $(seq 0 $((${#n}-1)) ); do\n    if [[\
    \ ${n:$i:1} == 0 ]]; then\n      evens=\"${evens}\\\"${n:$i:1}\\\"\"\n    elif\
    \ [[ ${n:$i:1} == 1 ]]; then\n      odds=\"${odds}\\\"${n:$i:1}\\\"\"\n    fi\n\
    \  done\n  echo \"${evens}\" \"${odds}\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  local i\n  local j\n\
    \  local k\n  local odd\n  local even\n  local digit\n  local number\n  local\
    \ evens\n  local odds\n  local count\n  local digit\n  local i\n  local j\n  local\
    \ k\n  local odd\n  local even\n  local digit\n  local number\n  local evens\n\
    \  local odds\n  local count\n  local digit\n  local i\n  local j\n  local k\n\
    \  local odd\n  local even\n  local digit\n  local number\n  local evens\n  local\
    \ odds\n  local count\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ odd\n  local even\n  local digit\n  local number\n  local evens\n  local odds\n\
    \  local count\n  local digit\n  local i\n  local j\n  local k\n  local odd\n\
    \  local even\n  local digit\n  local number\n  local evens\n  local odds\n  local\
    \ count\n  local digit\n  local i\n  local j\n  local k\n  local odd\n  local\
    \ even\n  local digit\n  local number\n  local evens\n  local odds\n  local count\n\
    \  local digit\n  local i\n  local j\n  local k\n  local odd\n  local even\n \
    \ local digit\n  local number\n  local evens\n  local odds\n  local count\n  local\
    \ digit\n  local i\n  local j\n  local k\n  local odd\n  local even\n  local digit\n\
    \  local number\n  local evens\n  local odds\n  local count\n  local digit\n \
    \ local i\n  local j\n  local k\n  local odd\n  local even\n  local digit\n  local\
    \ number\n  local evens\n  local odds\n  local count\n  local digit\n  local i\n\
    \  local j\n  local k\n  local odd\n  local even\n  local digit\n  local number\n\
    \  local evens\n  local odds\n  local count\n  local digit\n  local i\n  local\
    \ j\n  local k\n  local odd\n  local even\n  local digit\n  \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local even\n    local odd\n    local count\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local count\n    local digit\n    local i\n    local j\n    local k\n   \
    \ local even\n    local odd\n    local count\n    local digit\n    local i\n \
    \   local j\n    local k\n    local even\n    local odd\n    local count\n   \
    \ local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    \n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        local digit=$(( number % 10 ))\n        if [ $digit\
    \ -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        else\n \
    \           odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local count=0\n  local digit\n  while (( number > 0 ));\
    \ do\n    digit=$(( number % 10 ))\n    if (( digit == 0 )) ; then\n      evens=\"\
    $evens \\\"$digit\\\"\"\n      (( count++ ))\n    else\n      odds=\"$odds \\\"\
    $digit\\\"\"\n      (( count++ ))\n    fi\n    number=$(( number / 10 ))\n  done\n\
    \  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i n=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i digit\n    local -i i\n    local -i j\n    local\
    \ -i odds\n    local -i evens\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local -i odds_str_list\n    local -i evens_str_list\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str_list\n    local -i evens_str_list\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str_list\n \
    \   local -i evens_str_list\n    local -i odds_str\n    local -i evens_str\n \
    \   local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local i\n    local j\n    local k\n    local\
    \ even_index\n    local odd_index\n    local digit_index\n    local digit\n  \
    \  local digits_length\n    local digits_length\n    local digits_length\n   \
    \ local digits_length\n    local digits_length\n    local digits_length\n    local\
    \ digits_length\n    local digits_length\n    local digits_length\n    local digits_length\n\
    \    local digits_length\n    local digits_length\n    local digits_length\n \
    \   local digits_length\n    local digits_length\n    local digits_length\n  \
    \  local digits_length\n    local digits_length\n    local digits_length\n   \
    \ local digits_length\n    local digits_length\n    local digits_length\n    local\
    \ digits_length\n    local digits_length\n    local digits_length\n    local digits_length\n\
    \    local digits_length\n    local digits_length\n    local digits_length\n \
    \   local digits_length\n    local digits_length\n    local digits_length\n  \
    \  local digits_length\n    local digits_length\n    local digits_length\n   \
    \ local digits_length\n    local digits_length\n    local digits_length\n    local\
    \ digits_length\n    local digits_length\n    local digits_length\n    local digits_length\n\
    \    local digits_length\n    local digits_length\n    local digits_length\n \
    \   local digits_length\n    local digits_length\n    local digits_length\n  \
    \  local digits_length\n    local digits_length\n    local digits_length\n   \
    \ local digits_length\n    local digits_length\n    local digits_length\n    local\
    \ digits_length\n    local digits_length\n    local digits_length\n    local digits_length\n\
    \    local digits_length\n    local digits_length\n    local digits_length\n \
    \   local digits_length\n    local digits_length\n    local digits_length\n  \
    \  local digits_length\n    local digits_length\n    local digits_length\n   \
    \ local digits_length\n    local digits_length\n    local digits_length\n    local\
    \ digits_length\n    local digits_length\n    local digits_length\n    \n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local evenCount\n    local oddCount\n\
    \    local digitCount\n    local digitCount2\n    local digitCount3\n    local\
    \ digitCount4\n    local digitCount5\n    local digitCount6\n    local digitCount7\n\
    \    local digitCount8\n    local digitCount9\n    local digitCount10\n    local\
    \ digitCount11\n    local digitCount12\n    local digitCount13\n    local digitCount14\n\
    \    local digitCount15\n    local digitCount16\n    local digitCount17\n    local\
    \ digitCount18\n    local digitCount19\n    local digitCount20\n    local digitCount21\n\
    \    local digitCount22\n    local digitCount23\n    local digitCount24\n    local\
    \ digitCount25\n    local digitCount26\n    local digitCount27\n    local digitCount28\n\
    \    local digitCount29\n    local digitCount30\n    local digitCount31\n    local\
    \ digitCount32\n    local digitCount33\n    local digitCount34\n    local digitCount35\n\
    \    local digitCount36\n    local digitCount37\n    local digitCount38\n    local\
    \ digitCount39\n    local digitCount40\n    local digitCount41\n    local digitCount42\n\
    \    local digitCount43\n    local digitCount44\n    local digitCount45\n    local\
    \ digitCount46\n    local digitCount47\n    local digitCount48\n    local digitCount49\n\
    \    local digitCount50\n    local digitCount51\n    local digitCount52\n    local\
    \ digitCount53\n    local digitCount54\n    local digitCount55\n    local digitCount56\n\
    \    local digitCount57\n    local digitCount58\n    local digitCount59\n    local\
    \ digitCount60\n    local digitCount61\n    local digitCount62\n    local digitCount63\n\
    \    local digitCount64\n    local digitCount65\n    local digitCount66\n    local\
    \ digitCount67\n    local digitCount68\n    local digitCount69\n    local digitCount70\n\
    \    local digitCount71\n    local digitCount72\n    local digitCount73\n    local\
    \ digitCount74\n    local digitCount75\n    local digitCount76\n    local digitCount\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    while (( n > 0 )); do\n        local digit=$(( n %\
    \ 10 ))\n        if (( digit % 2 == 0 )); then\n            evens=\"$evens$digit\"\
    \n        else\n            odds=\"$odds$digit\"\n        fi\n        n=$(( n\
    \ / 10 ))\n    done\n    echo \"$evens$odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    \    local even\n    local odd\n    local digit\n    local even\n    local odd\n\
    \    local digit\n    local even\n    local odd\n    local digit\n    local even\n\
    \    local odd\n    local digit\n    local even\n    local odd\n    local digit\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local even\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n    local odds\n\
    \    local evens\n    local even\n    local odds\n    local evens\n    local even\n\
    \    local odds\n    local evens\n    local even\n    local odds\n    local evens\n\
    \    local even\n    local odds\n    local evens\n    local even\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 2
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=0\n\
    \  local odds=0\n  local digit\n  local digits=$((${#number} + 1))\n  for (( i=1;\
    \ i<=$((digits+1)); i++ )); do\n    digit=${number:$i:1}\n    if [[ $digit ==\
    \ 0 ]]; then\n      continue\n    fi\n    if [[ $digit == 1 ]]; then\n      odds=$((odds\
    \ + 1))\n    else\n      evens=$((evens + 1))\n    fi\n  done\n  echo \"\\\"${evens}\\\
    \"\" \\\"\\\"${odds}\\\"\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpysuykq2t.sh: line 43: unexpected EOF while looking for matching
    `"''

    /tmp/tmpysuykq2t.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local digit\n    local count\n    local i\n    local j\n    local odd\n   \
    \ local even\n    local odds\n    local evens\n    local digit\n    local count\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local count\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local digit\n    local count\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local count\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local count\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local digit\n    local count\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local count\n    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odd\n    local count\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odd\n    local count\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odd\n    local count\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local odd\n    local even\n    local odd\n    local\
    \ count\n    local i\n    local j\n    local odd\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local odd\n    local \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local i\n    local j\n    local count\n    local\
    \ even\n    local odd\n    local digit\n    local digit2\n    local digit3\n \
    \   local digit4\n    local digit5\n    local digit6\n    local digit7\n    local\
    \ digit8\n    local digit9\n    local digit10\n    local digit11\n    local digit12\n\
    \    local digit13\n    local digit14\n    local digit15\n    local digit16\n\
    \    local digit17\n    local digit18\n    local digit19\n    local digit20\n\
    \    local digit21\n    local digit22\n    local digit23\n    local digit24\n\
    \    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
    \    local digit29\n    local digit30\n    local digit31\n    local digit32\n\
    \    local digit33\n    local digit34\n    local digit35\n    local digit36\n\
    \    local digit37\n    local digit38\n    local digit39\n    local digit40\n\
    \    local digit41\n    local digit42\n    local digit43\n    local digit44\n\
    \    local digit45\n    local digit46\n    local digit47\n    local digit48\n\
    \    local digit49\n    local digit50\n    local digit51\n    local digit52\n\
    \    local digit53\n    local digit54\n    local digit55\n    local digit56\n\
    \    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
    \    local digit61\n    local digit62\n    local digit63\n    local digit64\n\
    \    local digit65\n    local digit66\n    local digit67\n    local digit68\n\
    \    local digit69\n    local digit70\n    local digit71\n    local digit72\n\
    \    local digit73\n    local digit74\n    local digit75\n    local digit76\n\
    \    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
    \    local digit81\n    local digit82\n    local digit83\n    local digit84\n\
    \    local digit85\n    local digit86\n    local digit87\n    local digit88\n\
    \    local digit89\n    local digit90\n    local digit91\n    local digit92\n\
    \    local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044266
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i n=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i digit\n    local -i count\n    local -i result\n\
    \    local -i i\n    local -i j\n    local -i odds\n    local -i evens\n    local\
    \ -i digit\n    local -i digit2\n    local -i digit3\n    local -i digit4\n  \
    \  local -i digit5\n    local -i digit6\n    local -i digit7\n    local -i digit8\n\
    \    local -i digit9\n    local -i digit10\n    local -i digit11\n    local -i\
    \ digit12\n    local -i digit13\n    local -i digit14\n    local -i digit15\n\
    \    local -i digit16\n    local -i digit17\n    local -i digit18\n    local -i\
    \ digit19\n    local -i digit20\n    local -i digit21\n    local -i digit22\n\
    \    local -i digit23\n    local -i digit24\n    local -i digit25\n    local -i\
    \ digit26\n    local -i digit27\n    local -i digit28\n    local -i digit29\n\
    \    local -i digit30\n    local -i digit31\n    local -i digit32\n    local -i\
    \ digit33\n    local -i digit34\n    local -i digit35\n    local -i digit36\n\
    \    local -i digit37\n    local -i digit38\n    local -i digit39\n    local -i\
    \ digit40\n    local -i digit41\n    local -i digit42\n    local -i digit43\n\
    \    local -i digit44\n    local -i digit45\n    local -i digit46\n    local -i\
    \ digit47\n    local -i digit48\n    local -i digit49\n    local -i digit50\n\
    \    local -i digit51\n    local -i digit52\n    local -i digit53\n    local -i\
    \ digit54\n    local -i digit55\n    local -i digit56\n    local -i digit57\n\
    \    local -i digit58\n    local -i digit59\n    local -i digit60\n    local -i\
    \ digit61\n    local -i digit62\n    local -i digit63\n    local -i digit64\n\
    \    local -i digit65\n    local -i digit66\n    local -i digit67\n    local -i\
    \ digit68\n    local -i digit69\n    local -i digit70\n    local -i digit71\n\
    \    local -i digit72\n    local -i digit73\n    local -i digit74\n    local -i\
    \ digit75\n    local -i digit76\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local odds\n    local evens\n  \
    \  local digit\n    local number\n    local i\n    local j\n    local odd\n  \
    \  local even\n    local odds\n    local evens\n    local digit\n    local number\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local number\n    local i\n    local j\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local i\n    local j\n    local odd\n    local even\n \
    \   local odds\n    local evens\n    local digit\n    local number\n    local\
    \ i\n    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local number\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local digit\n    local number\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local number\n    local i\n    local j\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local i\n    local j\n    local odd\n    local even\n \
    \   local odds\n    local evens\n    local digit\n    local number\n    local\
    \ i\n    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local number\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local digit\n    local number\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local number\n    local i\n    local j\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local number\n    local i\n    local j\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( $number % 2 )) -eq 0 ]; then\n      \
    \      evens=\"$evens \\\"$count\\\"\"\n        else\n            odds=\"$odds\
    \ \\\"$count\\\"\"\n        fi\n        number=$(( $number / 2 ))\n    done\n\
    \    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local count=0\n    local digit\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ digit\n    local evens\n    local odds\n    local digits\n    local count\n\
    \    local i\n    local j\n    local k\n    local even\n    \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digit2\n    local digit3\n    local\
    \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
    \    local digit9\n    local digit10\n    local digit11\n    local digit12\n \
    \   local digit13\n    local digit14\n    local digit15\n    local digit16\n \
    \   local digit17\n    local digit18\n    local digit19\n    local digit20\n \
    \   local digit21\n    local digit22\n    local digit23\n    local digit24\n \
    \   local digit25\n    local digit26\n    local digit27\n    local digit28\n \
    \   local digit29\n    local digit30\n    local digit31\n    local digit32\n \
    \   local digit33\n    local digit34\n    local digit35\n    local digit36\n \
    \   local digit37\n    local digit38\n    local digit39\n    local digit40\n \
    \   local digit41\n    local digit42\n    local digit43\n    local digit44\n \
    \   local digit45\n    local digit46\n    local digit47\n    local digit48\n \
    \   local digit49\n    local digit50\n    local digit51\n    local digit52\n \
    \   local digit53\n    local digit54\n    local digit55\n    local digit56\n \
    \   local digit57\n    local digit58\n    local digit59\n    local digit60\n \
    \   local digit61\n    local digit62\n    local digit63\n    local digit64\n \
    \   local digit65\n    local digit66\n    local digit67\n    local digit68\n \
    \   local digit69\n    local digit70\n    local digit71\n    local digit72\n \
    \   local digit73\n    local digit74\n    local digit75\n    local digit76\n \
    \   local digit77\n    local digit78\n    local digit79\n    local digit80\n \
    \   local digit81\n    local digit82\n    local digit83\n    local digit84\n \
    \   local digit85\n    local digit86\n    local digit87\n    local digit88\n \
    \   local digit89\n    local digit90\n    local digit91\n    local digit92\n \
    \   local digit93\n    local digit94\n    local digit95\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n\n \
    \   # loop through digits\n    for (( i = 1; i <= number; i++ )); do\n       \
    \ digit=$(( number % 10 ))\n        # if the digit is even\n        if [ $(( i\
    \ % 2 )) -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n        \
    \    count=$(( count + 1 ))\n        # else if the digit is odd\n        else\n\
    \            odds=\"$odds \\\"$digit\\\"\"\n            count=$(( count + 1 ))\n\
    \        fi\n        number=$(( number / 10 ))\n    done\n\n    # return evens\
    \ and odds\n    echo \"$evens\" \"$odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local evens=\"\
    \"\n  local odds=\"\"\n  local digits=\"\"\n  local i=0\n  while [ \"$number\"\
    \ -gt 0 ]; do\n    digits=$(printf \"%02d\" $number)\n    evens=\"$evens $digits\"\
    \n    odds=\"$odds $digits\"\n    number=$((number/10))\n    i=$((i+1))\n  done\n\
    \  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local digits=\"\"\n    local digit\n    local count\n\
    \    local i\n    local j\n    local even\n    local odd\n    local digit\n  \
    \  local digitCount\n    local digitCount2\n    local digitCount3\n    local digitCount4\n\
    \    local digitCount5\n    local digitCount6\n    local digitCount7\n    local\
    \ digitCount8\n    local digitCount9\n    local digitCount10\n    local digitCount11\n\
    \    local digitCount12\n    local digitCount13\n    local digitCount14\n    local\
    \ digitCount15\n    local digitCount16\n    local digitCount17\n    local digitCount18\n\
    \    local digitCount19\n    local digitCount20\n    local digitCount21\n    local\
    \ digitCount22\n    local digitCount23\n    local digitCount24\n    local digitCount25\n\
    \    local digitCount26\n    local digitCount27\n    local digitCount28\n    local\
    \ digitCount29\n    local digitCount30\n    local digitCount31\n    local digitCount32\n\
    \    local digitCount33\n    local digitCount34\n    local digitCount35\n    local\
    \ digitCount36\n    local digitCount37\n    local digitCount38\n    local digitCount39\n\
    \    local digitCount40\n    local digitCount41\n    local digitCount42\n    local\
    \ digitCount43\n    local digitCount44\n    local digitCount45\n    local digitCount46\n\
    \    local digitCount47\n    local digitCount48\n    local digitCount49\n    local\
    \ digitCount50\n    local digitCount51\n    local digitCount52\n    local digitCount53\n\
    \    local digitCount54\n    local digitCount55\n    local digitCount56\n    local\
    \ digitCount57\n    local digitCount58\n    local digitCount59\n    local digitCount60\n\
    \    local digitCount61\n    local digitCount62\n    local digitCount63\n    local\
    \ digitCount64\n    local digitCount65\n    local digitCount66\n    local digitCount67\n\
    \    local digitCount68\n    local digitCount69\n    local digitCount70\n    local\
    \ digitCount71\n    local digitCount72\n    local digitCount73\n    local digitCount74\n\
    \    local digitCount75\n    local digitCount76\n    local digitCount77\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local even\n  \
    \  local odd\n    local count\n    local i\n    local j\n    local odds\n    local\
    \ evens\n    local odds_str\n    local evens_str\n    local odds_str_list\n  \
    \  local evens_str_list\n    local odds_str\n    local evens_str\n    local odds_str_list\n\
    \    local evens_str_list\n    local odds_str\n    local evens_str\n    local\
    \ odds_str_list\n    local evens_str_list\n    local odds_str\n    local evens_str\n\
    \    local odds_str_list\n    local evens_str_list\n    local odds_str\n    local\
    \ evens_str\n    local odds_str_list\n    local evens_str_list\n    local odds_str\n\
    \    local evens_str\n    local odds_str_list\n    local evens_str_list\n    local\
    \ odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local evens_str\n    local odds_str_list\n    local evens_str_list\n\
    \    local odds_str\n    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n\n \
    \   for (( i = 1; i <= number; i++ )); do\n        digit=$(( number % 10 ))\n\
    \        if [ $digit -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\
    \n        else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n      \
    \  count=$(( count + 1 ))\n    done\n\n    if [ $count -eq 0 ]; then\n       \
    \ echo \"$evens\"\n    else\n        echo \"$odds\"\n    fi\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local i\n    local j\n    local count\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local count\n    local i\n    local j\n    local count\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local count\n    local i\n\
    \    local j\n    local count\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local count\n    local i\n    local j\n    local count\n\
    \    local odd\n    local even\n    local odds\n    local evens\n    local count\n\
    \    local i\n    local j\n    local count\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local count\n    local i\n    local j\n  \
    \  local count\n    local odd\n    local \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( number % 10 )) -eq 0 ]; then\n      \
    \      evens=\"$evens \\\"$(( number % 10 ))\\\"\"\n        else\n           \
    \ odds=\"$odds \\\"$(( number % 10 ))\\\"\"\n        fi\n        number=$(( number\
    \ / 10 ))\n    done\n    evens=\"$evens \\\"$(( count % 2 ))\\\"\"\n    odds=\"\
    $odds \\\"$(( count % 2 ))\\\"\"\n    echo \"$evens $odds\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    while [ $n -gt 0 ]; do\n       \
    \ (( count++ ))\n        local digit=$(( n % 10 ))\n        if [ $digit -eq 0\
    \ ]; then\n            evens=\"$evens\\\"$digit\"\n        else\n            odds=\"\
    $odds\\\"$digit\"\n        fi\n        n=$(( n / 10 ))\n    done\n    echo -n\
    \ \"$evens\"\n    echo -n \"$odds\"\n}\n\ncandidate() {\n    even_odd_count \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[\
    \ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\")\
    \ = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local digit2\n\
    \    local digit3\n    local digit4\n    local digit5\n    local digit6\n    local\
    \ digit7\n    local digit8\n    local digit9\n    local digit10\n    local digit11\n\
    \    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
    \    local digit16\n    local digit17\n    local digit18\n    local digit19\n\
    \    local digit20\n    local digit21\n    local digit22\n    local digit23\n\
    \    local digit24\n    local digit25\n    local digit26\n    local digit27\n\
    \    local digit28\n    local digit29\n    local digit30\n    local digit31\n\
    \    local digit32\n    local digit33\n    local digit34\n    local digit35\n\
    \    local digit36\n    local digit37\n    local digit38\n    local digit39\n\
    \    local digit40\n    local digit41\n    local digit42\n    local digit43\n\
    \    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
    \    local digit48\n    local digit49\n    local digit50\n    local digit51\n\
    \    local digit52\n    local digit53\n    local digit54\n    local digit55\n\
    \    local digit56\n    local digit57\n    local digit58\n    local digit59\n\
    \    local digit60\n    local digit61\n    local digit62\n    local digit63\n\
    \    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
    \    local digit68\n    local digit69\n    local digit70\n    local digit71\n\
    \    local digit72\n    local digit73\n    local digit74\n    local digit75\n\
    \    local digit76\n    local digit77\n    local digit78\n    local digit79\n\
    \    local digit80\n    local digit81\n    local digit82\n    local digit83\n\
    \    local digit84\n    local digit85\n    local digit86\n    local digit87\n\
    \    local digit88\n    local digit89\n    local digit90\n    local digit91\n\
    \    local digit92\n    local digit93\n    local digit94\n    local digit95\n\
    \    local digit96\n    local digit97\n    local digit98\n\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local i\n    for ((i=1; i<=n; i++));\
    \ do\n        if (( n % i == 0 )); then\n            (( count++ ))\n         \
    \   if (( count % 2 == 0 )); then\n                evens=\"$evens \\\"$i\\\"\"\
    \n            else\n                odds=\"$odds \\\"$i\\\"\"\n            fi\n\
    \        fi\n    done\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digits\n    local evens_str\n    local\
    \ odds_str\n    local i\n    local j\n    local count\n    local even\n    local\
    \ odd\n    local digit\n    local digits\n    local evens_str\n    local odds_str\n\
    \    local i\n    local j\n    local count\n    local even\n    local odd\n  \
    \  local digit\n    local digits\n    local evens_str\n    local odds_str\n  \
    \  local i\n    local j\n    local count\n    local even\n    local odd\n    local\
    \ digit\n    local digits\n    local evens_str\n    local odds_str\n    local\
    \ i\n    local j\n    local count\n    local even\n    local odd\n    local digit\n\
    \    local digits\n    local evens_str\n    local odds_str\n    local i\n    local\
    \ j\n    local count\n    local even\n    local odd\n    local digit\n    local\
    \ digits\n    local evens_str\n    local odds_str\n    local i\n    local j\n\
    \    local count\n    local even\n    local odd\n    local digit\n    local digits\n\
    \    local evens_str\n    local odds_str\n    local i\n    local j\n    local\
    \ count\n    local even\n    local odd\n    local digit\n    local digits\n  \
    \  local evens_str\n    local odds_str\n    local i\n    local j\n    local count\n\
    \    local even\n    local odd\n    local digit\n    local digits\n    local evens_str\n\
    \    local odds_str\n    local i\n    local j\n    local count\n    local even\n\
    \    local odd\n    local digit\n    local digits\n    local evens_str\n    local\
    \ odds_str\n    local i\n    local j\n    local count\n    local even\n    local\
    \ odd\n    local digit\n    local digits\n    local evens_str\n    local odds_str\n\
    \    local i\n    local j\n    local count\n    local even\n    local odd\n  \
    \  local digit\n    local digits\n    local evens_str\n    local odds_str\n  \
    \  local i\n    local j\n    local count\n    local \n}\n\ncandidate() {\n   \
    \ even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\")\
    \ = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    while [ $number -gt 0 ]; do\n\
    \        (( count++ ))\n        if [ $(( number % 2 )) -eq 0 ]; then\n       \
    \     evens=\"$evens \\\"$count\\\"\"\n        else\n            odds=\"$odds\
    \ \\\"$count\\\"\"\n        fi\n        number=$(( number / 2 ))\n    done\n \
    \   echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    while [ $number\
    \ -gt 0 ]; do\n        digit=$((number % 10))\n        if [ $digit -eq 0 ]; then\n\
    \            evens=\"$evens \\\"$digit\\\"\"\n        else\n            odds=\"\
    $odds \\\"$digit\\\"\"\n        fi\n        number=$((number / 10))\n        count=$((count+1))\n\
    \    done\n\n    if [ $count -eq 0 ]; then\n        echo \"$evens\"\n    else\n\
    \        echo \"$odds\"\n    fi\n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local odd\n    local even\n    local digit\n    local digit\n \
    \   local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local count=0\n  while (( n > 0 )); do\n    (( n % 2 ==\
    \ 0 )) && evens=\"$evens \\\"$(( n / 10 ))\\\"\" \n    (( n % 2 == 1 )) && odds=\"\
    $odds \\\"$(( n / 10 ))\\\"\"\n    (( n /= 10 ))\n    (( ++count ))\n  done\n\
    \  echo \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local n=$1\n  local evens=\"\"\n\
    \  local odds=\"\"\n  local count=0\n  local i\n  for i in $(seq 0 $((${#n}-1)))\n\
    \  do\n    if [[ ${n:$i:1} == 0 ]]\n    then\n      count=$((${count}+1))\n  \
    \  elif [[ ${n:$i:1} == 1 ]]\n    then\n      evens=\"${evens}\\\"${n:$i:1}\\\"\
    \"\n    elif [[ ${n:$i:1} == 2 ]]\n    then\n      odds=\"${odds}\\\"${n:$i:1}\\\
    \"\"\n    fi\n  done\n  echo \"${evens}${odds}\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local i\n    local j\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local count\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local \n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local n=$1\n    local evens=\"\"\
    \n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ digit\n    local i\n    local j\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local digit\n    local i\n    local\
    \ j\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ digit\n    local i\n    local j\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local digit\n    local i\n    local j\n    local odd\n \
    \   local even\n    local odds\n    local evens\n    local digit\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local digit\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local digit\n    local i\n    local j\n  \
    \  local odd\n    local even\n    local odds\n    local evens\n    local digit\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local digit\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local digit\n    local i\n    \n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i num=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i count=0\n    local -i digit\n    local -i digit2\n\
    \    local -i digit3\n    local -i digit4\n    local -i digit5\n    local -i digit6\n\
    \    local -i digit7\n    local -i digit8\n    local -i digit9\n    local -i digit10\n\
    \    local -i digit11\n    local -i digit12\n    local -i digit13\n    local -i\
    \ digit14\n    local -i digit15\n    local -i digit16\n    local -i digit17\n\
    \    local -i digit18\n    local -i digit19\n    local -i digit20\n    local -i\
    \ digit21\n    local -i digit22\n    local -i digit23\n    local -i digit24\n\
    \    local -i digit25\n    local -i digit26\n    local -i digit27\n    local -i\
    \ digit28\n    local -i digit29\n    local -i digit30\n    local -i digit31\n\
    \    local -i digit32\n    local -i digit33\n    local -i digit34\n    local -i\
    \ digit35\n    local -i digit36\n    local -i digit37\n    local -i digit38\n\
    \    local -i digit39\n    local -i digit40\n    local -i digit41\n    local -i\
    \ digit42\n    local -i digit43\n    local -i digit44\n    local -i digit45\n\
    \    local -i digit46\n    local -i digit47\n    local -i digit48\n    local -i\
    \ digit49\n    local -i digit50\n    local -i digit51\n    local -i digit52\n\
    \    local -i digit53\n    local -i digit54\n    local -i digit55\n    local -i\
    \ digit56\n    local -i digit57\n    local -i digit58\n    local -i digit59\n\
    \    local -i digit60\n    local -i digit61\n    local -i digit62\n    local -i\
    \ digit63\n    local -i digit64\n    local -i digit65\n    local -i digit66\n\
    \    local -i digit67\n    local -i digit68\n    local -i digit69\n    local -i\
    \ digit70\n    local -i digit71\n    local -i digit72\n    local -i digit73\n\
    \    local -i digit74\n    local -i digit75\n    local -i digit76\n    local -i\
    \ digit77\n    local -i digit78\n    local -i digit79\n    local -i digit80\n\
    \    local -i digit81\n    local \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local even\n    local odd\n    local count\n    local digit\n \
    \   local i\n    local j\n    local even\n    local odd\n    local count\n   \
    \ local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ count\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local count\n    local digit\n    local i\n    local j\n \
    \   local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    local count\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ count\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local count\n    local digit\n    local i\n    local j\n \
    \   local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    local count\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ count\n    local digit\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local count\n    local digit\n    local i\n    local j\n    local even\n\
    \    local odd\n    local count\n    local digit\n    local i\n    local j\n \
    \   local even\n    local odd\n    local count\n    local digit\n    local i\n\
    \    local j\n    local even\n    local odd\n    local count\n    local digit\n\
    \    local i\n    local j\n    local even\n    local odd\n    local count\n  \
    \  local digit\n    local i\n    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local i\n\n    local\
    \ even\n    local odd\n\n    while [ $number -gt 0 ]; do\n        digit=$((number\
    \ % 10))\n        digits=$((digits + 1))\n        if [ $digit -eq 0 ]; then\n\
    \            evens=$((evens + 1))\n        else\n            odds=$((odds + 1))\n\
    \        fi\n        number=$((number / 10))\n    done\n\n    even=$((evens *\
    \ 2))\n    odd=$((odds * 2))\n\n    echo '\"' $even '\"' $odd\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i n=$1\n    local -i even=0\n\
    \    local -i odd=0\n    local -i count=0\n    local -i digit\n    local -i i\n\
    \    local -i j\n    local -i odds\n    local -i evens\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local\
    \ -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local -i odds_str\n\
    \    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n    local\
    \ -i odds_str\n    local -i evens_str\n    local -i odds_str\n    local -i evens_str\n\
    \    local -i odds_str\n    local -i evens_\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n\n    while (( number\
    \ > 0 ))\n    do\n        digit=$(echo $number | cut -d \"-\" -f 1)\n        ((\
    \ number /= 10 ))\n        if (( digit % 2 == 0 ))\n        then\n           \
    \ evens=\"$evens \\\"$digit\\\"\"\n        else\n            odds=\"$odds \\\"\
    $digit\\\"\"\n        fi\n        count=$(( count + 1 ))\n    done\n\n    echo\
    \ \"$evens $odds\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    local digit\n    local digit\n    local\
    \ digit\n    local digit\n    local digit\n    local digit\n    local digit\n\
    \    local digit\n    local digit\n    \n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=\"\
    \"\n    local odds=\"\"\n    local count=0\n    local digit\n    local i\n\n \
    \   IFS=- read -r digit <<< \"$number\"\n    count=$(( $count + 1 ))\n\n    for\
    \ (( i = 1; i <= $count; i++ )); do\n        digit=$(( $number % 10 ))\n     \
    \   if [ $digit -eq 0 ]; then\n            evens=\"$evens \\\"$digit\\\"\"\n \
    \       else\n            odds=\"$odds \\\"$digit\\\"\"\n        fi\n        number=$((\
    \ $number / 10 ))\n    done\n\n    echo \"$evens $odds\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local evens=0\n\
    \    local odds=0\n    local digits=0\n    local digit\n    local i\n\n    digits=$(echo\
    \ \"$number\" | wc -w)\n    for (( i=0; i<$digits; i++ )); do\n        digit=$(echo\
    \ \"$number\" | awk -F. '{print $i}')\n        if (( $(echo \"$number % $digit\"\
    \ | bc -l) ==0 )); then\n            evens+=1\n        else\n            odds+=1\n\
    \        fi\n    done\n    echo \"\\\"$evens\\\"\"\n    echo \"\\\"$odds\\\"\"\
    \n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local even\n\
    \    local odd\n    local count\n    local i\n    local j\n    local even_count\n\
    \    local odd_count\n    local result\n    local count\n    local even\n    local\
    \ odd\n    local count\n    local i\n    local j\n    local even_count\n    local\
    \ odd_count\n    local result\n    local count\n    local even\n    local odd\n\
    \    local count\n    local i\n    local j\n    local even_count\n    local odd_count\n\
    \    local result\n    local count\n    local even\n    local odd\n    local count\n\
    \    local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n    local even\n    local odd\n    local count\n  \
    \  local i\n    local j\n    local even_count\n    local odd_count\n    local\
    \ result\n    local count\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660044267

language: sh
name: HumanEval_130_tri
results:
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    while [ $n -gt 0 ]; do\n        result+=(\"$a\")\n \
    \       result+=(\"$b\")\n        result+=(\"$c\")\n        result+=(\"$d\")\n\
    \        a=$b\n        b=$c\n        c=$d\n        d=$((a + b + c + d))\n    \
    \    ((n--))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local a=$(( 1 + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n \
    \   local c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1\
    \ + n / 2 ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n   \
    \ local h=$(( 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 +\
    \ n / 2 ))\n    local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local\
    \ m=$(( 1 + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2\
    \ ))\n    local p=$(( 1 + n / 2 ))\n    local q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local result\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 2 * n + 1 ))\n    local d=$(( 2 * n - 1 ))\n    local e=$(( n\
    \ + 1 ))\n    local f=$(( n - 1 ))\n    local g=$(( n + 1 ))\n    local h=$((\
    \ n - 1 ))\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n+1 ))\n  local b=$(( n+2 ))\n  local c=$(( n+3 ))\n\
    \  local d=$(( n+4 ))\n  local e=$(( n+5 ))\n  local f=$(( n+6 ))\n  local g=$((\
    \ n+7 ))\n  local h=$(( n+8 ))\n  local i=$(( n+9 ))\n  local j=$(( n+10 ))\n\
    \  local k=$(( n+11 ))\n  local l=$(( n+12 ))\n  local m=$(( n+13 ))\n  local\
    \ n=$(( n+14 ))\n  local o=$(( n+15 ))\n  local p=$(( n+16 ))\n  local q=$(( n+17\
    \ ))\n  local r=$(( n+18 ))\n  local s=$(( n+19 ))\n  local t=$(( n+20 ))\n  local\
    \ u=$(( n+21 ))\n  local v=$(( n+22 ))\n  local w=$(( n+23 ))\n  local x=$(( n+24\
    \ ))\n  local y=$(( n+25 ))\n  local z=$(( n+26 ))\n  local A=$(( n+27 ))\n  local\
    \ B=$(( n+28 ))\n  local C=$(( n+29 ))\n  local D=$(( n+30 ))\n  local E=$(( n+31\
    \ ))\n  local F=$(( n+32 ))\n  local G=$(( n+33 ))\n  local H=$(( n+34 ))\n  local\
    \ I=$(( n+35 ))\n  local J=$(( n+36 ))\n  local K=$(( n+37 ))\n  local L=$(( n+38\
    \ ))\n  local M=$(( n+39 ))\n  local N=$(( n+40 ))\n  local O=$(( n+41 ))\n  local\
    \ P=$(( n+42 ))\n  local Q=$(( n+43 ))\n  local R=$(( n+44 ))\n  local S=$(( n+45\
    \ ))\n  local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwxg7b6t9.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwxg7b6t9.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  local d=$(( 3 * n - 2 ))\n  local result\n  result=$((\
    \ a + b + c + d ))\n  echo \"$result\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( n - 1 ))\n    local b=$(( n - 2 ))\n    local\
    \ c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local ret=()\n    local i\n  \
    \  for (( i = 1; i <= n; i++ )); do\n        ret+=($(( i * a + i * b + i * c )))\n\
    \    done\n    echo \"${ret[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local result=()\n\
    \  while [ $n -gt 0 ]; do\n    local tmp=$(( $a + $b ))\n    local tmp2=$(( $c\
    \ + $d ))\n    local tmp3=$(( $a + $c ))\n    local tmp4=$(( $b + $d ))\n    local\
    \ tmp5=$(( $c + $b ))\n    local tmp6=$(( $d + $a ))\n    local tmp7=$(( $a +\
    \ $d ))\n    local tmp8=$(( $b + $c ))\n    local tmp9=$(( $c + $a ))\n    local\
    \ tmp10=$(( $d + $b ))\n    local tmp11=$(( $a + $c ))\n    local tmp12=$(( $b\
    \ + $d ))\n    local tmp13=$(( $c + $a ))\n    local tmp14=$(( $d + $b ))\n  \
    \  local tmp15=$(( $a + $d ))\n    local tmp16=$(( $b + $c ))\n    local tmp17=$((\
    \ $c + $b ))\n    local tmp18=$(( $d + $a ))\n    local tmp19=$(( $a + $c ))\n\
    \    local tmp20=$(( $b + $d ))\n    local tmp21=$(( $c + $a ))\n    local tmp22=$((\
    \ $d + $b ))\n    local tmp23=$(( $a + $d ))\n    local tmp24=$(( $b + $c ))\n\
    \    local tmp25=$(( $c + $a ))\n    local tmp26=$(( $d + $b ))\n    local tmp27=$((\
    \ $a + $c ))\n    local tmp28=$(( $b + $d ))\n    local tmp29=$(( $c + $b ))\n\
    \    local tmp30=$(( $d + $a ))\n    local tmp31=$(( $a + $d ))\n    local tmp32=$((\
    \ $b + $c ))\n    local tmp33=$(( $c + $a ))\n    local tmp34=$(( $d + $b ))\n\
    \    local tmp35=$(( $a + $c ))\n    local tmp36=$(( $b + $d ))\n    local tmp37=$((\
    \ $c + $a ))\n    local tmp38=$(( $d + $b ))\n    local tmp39=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjgczbijk.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmpjgczbijk.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local a=$(( n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n\
    \    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n\
    \    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n\
    \    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n\
    \    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n\
    \    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n\
    \    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n\
    \    local y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    local i\n    local j\n    local k\n   \
    \ local temp\n    local temp2\n    local temp3\n    local temp4\n    local temp5\n\
    \    local temp6\n    local temp7\n    local temp8\n    local temp9\n    local\
    \ temp10\n    local temp11\n    local temp12\n    local temp13\n    local temp14\n\
    \    local temp15\n    local temp16\n    local temp17\n    local temp18\n    local\
    \ temp19\n    local temp20\n    local temp21\n    local temp22\n    local temp23\n\
    \    local temp24\n    local temp25\n    local temp26\n    local temp27\n    local\
    \ temp28\n    local temp29\n    local temp30\n    local temp31\n    local temp32\n\
    \    local temp33\n    local temp34\n    local temp35\n    local temp36\n    local\
    \ temp37\n    local temp38\n    local temp39\n    local temp40\n    local temp41\n\
    \    local temp42\n    local temp43\n    local temp44\n    local temp45\n    local\
    \ temp46\n    local temp47\n    local temp48\n    local temp49\n    local temp50\n\
    \    local temp51\n    local temp52\n    local temp53\n    local temp54\n    local\
    \ temp55\n    local temp56\n    local temp57\n    local temp58\n    local temp59\n\
    \    local temp60\n    local temp61\n    local temp62\n    local temp63\n    local\
    \ temp64\n    local temp65\n    local temp66\n    local temp67\n    local temp68\n\
    \    local temp69\n    local temp70\n    local temp71\n    local temp72\n    local\
    \ temp73\n    local temp74\n    local temp75\n    local temp76\n    local temp77\n\
    \    local temp78\n    local temp79\n    local temp80\n    local temp81\n    local\
    \ temp82\n    local temp83\n    local temp84\n    local temp85\n    local temp86\n\
    \    local temp87\n    local temp88\n    local temp89\n    local temp90\n    local\
    \ temp91\n    local temp92\n    local temp93\n    local temp94\n    local temp95\n\
    \    local temp96\n    local temp97\n    local temp98\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=$(echo \"$n\" | awk '{printf \"\\\"%s\\\
    \"\", $1}')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo \"\
    $result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n \
    \ result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" | sed\
    \ 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo\
    \ \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n\
    \  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" |\
    \ sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo\
    \ \"$result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n\
    \  result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" |\
    \ sed 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo\
    \ \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n\
    \  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" |\
    \ sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo\
    \ \"$result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n\
    \  result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo \"$result\" |\
    \ sed 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n  result=$(echo\
    \ \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" | sed 's/\"$//g')\n\
    \  result=$(echo \"$result\" | sed 's/^\"//g')\n  result=$(echo \"$result\" |\
    \ sed 's/\"$//g')\n  result=$(echo \"$result\" | sed 's/^\"//g')\n  \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local a=$(( n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n\
    \    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n\
    \    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n\
    \    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n\
    \    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n\
    \    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n\
    \    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n\
    \    local y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local a=$(( n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n\
    \    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n\
    \    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n\
    \    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n\
    \    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n\
    \    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n\
    \    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n\
    \    local y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} + 1 ))\n  local b=$(( ${n} - 1 ))\n  local c=$((\
    \ ${n} + ${n} - 1 ))\n  echo \"$(( ${a} + ${b} + ${c} ))\"\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=$(echo \"$n\" | sed -e 's/^\\([0-9]*\\\
    )$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n \
    \ result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo\
    \ \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\"\
    \ | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\\
    ([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\\
    1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo\
    \ \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\"\
    \ | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\\
    ([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\\
    1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo\
    \ \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\"\
    \ | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\\
    ([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\\
    1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo\
    \ \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\"\
    \ | sed -e 's/^\\([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\\
    ([0-9]*\\)$/\\1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\\
    1/g')\n  result=$(echo \"$result\" | sed -e 's/^\\([0-9]*\\)$/\\\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbwgfnj66.sh: line 45: unexpected EOF while looking for matching
    `''''

    /tmp/tmpbwgfnj66.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=$(eval \"echo \\\"$(( 1 + $n / 2 ))\\\"\
    \ + \\\"$(( 1 + $n / 2 ))\\\" + \\\"$(( $n + 1 ))\\\"\")\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} - 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} - 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} - 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} - 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} - 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} - 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} - 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} - 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} - 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} - 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} - 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} - 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} - 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} - 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} - 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} - 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} - 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} - 1 ))\n    local M=$(( ${n} + 1 ))\n    local\
    \ N=$(( ${n} - 1 ))\n    local O=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp_l_310tj.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmp_l_310tj.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local result=()\n\
    \    for (( i = 1; i <= n; i++ )); do\n        result+=(\"$(( a + b + c + d ))\"\
    )\n        a=$b\n        b=$c\n        c=$d\n        d=$(( d + 1 ))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  echo \"$(( a + b + c ))\"\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} * 2 ))\n  local b=$(( ${n} - 1 ))\n  local c=$((\
    \ ${n} + 1 ))\n  local d=$(( ${n} - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$((\
    \ ${n} - 1 ))\n  local g=$(( ${n} + 1 ))\n  local h=$(( ${n} - 1 ))\n  local i=$((\
    \ ${n} + 1 ))\n  local j=$(( ${n} - 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$((\
    \ ${n} - 1 ))\n  local m=$(( ${n} + 1 ))\n  local n=$(( ${n} - 1 ))\n  local o=$((\
    \ ${n} + 1 ))\n  local p=$(( ${n} - 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$((\
    \ ${n} - 1 ))\n  local s=$(( ${n} + 1 ))\n  local t=$(( ${n} - 1 ))\n  local u=$((\
    \ ${n} + 1 ))\n  local v=$(( ${n} - 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$((\
    \ ${n} - 1 ))\n  local y=$(( ${n} + 1 ))\n  local z=$(( ${n} - 1 ))\n  local A=$((\
    \ ${n} + 1 ))\n  local B=$(( ${n} - 1 ))\n  local C=$(( ${n} + 1 ))\n  local D=$((\
    \ ${n} - 1 ))\n  local E=$(( ${n} + 1 ))\n  local F=$(( ${n} - 1 ))\n  local G=$((\
    \ ${n} + 1 ))\n  local H=$(( ${n} - 1 ))\n  local I=$(( ${n} + 1 ))\n  local J=$((\
    \ ${n} - 1 ))\n  local K=$(( ${n} + 1 ))\n  local L=$(( ${n} - 1 ))\n  local M=$((\
    \ ${n} + 1 ))\n  local N=$(( ${n} - 1 ))\n  local O=$(( \n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqvs0a4bf.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmpqvs0a4bf.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} * 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$((\
    \ ${n} + 1 ))\n  local d=$(( ${n} - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$((\
    \ ${n} - 2 ))\n  local g=$(( ${n} + 2 ))\n  local h=$(( ${n} - 2 ))\n  local i=$((\
    \ ${n} + 2 ))\n  local j=$(( ${n} + 1 ))\n  local k=$(( ${n} - 1 ))\n  local l=$((\
    \ ${n} + 1 ))\n  local m=$(( ${n} - 1 ))\n  local n=$(( ${n} + 1 ))\n  local o=$((\
    \ ${n} - 1 ))\n  local p=$(( ${n} + 1 ))\n  local q=$(( ${n} - 1 ))\n  local r=$((\
    \ ${n} + 1 ))\n  local s=$(( ${n} - 1 ))\n  local t=$(( ${n} + 1 ))\n  local u=$((\
    \ ${n} - 1 ))\n  local v=$(( ${n} + 1 ))\n  local w=$(( ${n} - 1 ))\n  local x=$((\
    \ ${n} + 1 ))\n  local y=$(( ${n} - 1 ))\n  local z=$(( ${n} + 1 ))\n  local a=$((\
    \ ${n} - 1 ))\n  local b=$(( ${n} + 1 ))\n  local c=$(( ${n} - 1 ))\n  local d=$((\
    \ ${n} + 1 ))\n  local e=$(( ${n} - 1 ))\n  local f=$(( ${n} + 1 ))\n  local g=$((\
    \ ${n} - 1 ))\n  local h=$(( ${n} + 1 ))\n  local i=$(( ${n} - 1 ))\n  local j=$((\
    \ ${n} + 1 ))\n  local k=$(( ${n} - 1 ))\n  local l=$(( ${n} + 1 ))\n  local m=$((\
    \ ${n} - 1 ))\n  local n=$(( ${n} + 1 ))\n  local o=$((\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2jufddhi.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmp2jufddhi.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 2 * n + 1 ))\n    local d=$(( 2 * n - 1 ))\n    local e=$(( n\
    \ + 1 ))\n    local f=$(( n - 1 ))\n    local g=$(( n + 1 ))\n    local h=$((\
    \ n - 1 ))\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    \n    for (( i=1; i<=$n; i++ )); do\n \
    \       result+=(\"$a\")\n        result+=(\"$b\")\n        result+=(\"$c\")\n\
    \        result+=(\"$d\")\n        a=$b\n        b=$c\n        c=$d\n        d=$((a+b+c))\n\
    \    done\n    \n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i=$(( 3 * n + 5 ))\n    local j=$(( 3 *\
    \ n - 5 ))\n    local k=$(( 3 * n + 6 ))\n    local l=$(( 3 * n - 6 ))\n    local\
    \ m=$(( 3 * n + 7 ))\n    local n=$(( 3 * n - 7 ))\n    local o=$(( 3 * n + 8\
    \ ))\n    local p=$(( 3 * n - 8 ))\n    local q=$(( 3 * n + 9 ))\n    local r=$((\
    \ 3 * n - 9 ))\n    local s=$(( 3 * n + 10 ))\n    local t=$(( 3 * n - 10 ))\n\
    \    local u=$(( 3 * n + 11 ))\n    local v=$(( 3 * n - 11 ))\n    local w=$((\
    \ 3 * n + 12 ))\n    local x=$(( 3 * n - 12 ))\n    local y=$(( 3 * n + 13 ))\n\
    \    local z=$(( 3 * n - 13 ))\n    local A=$(( 3 * n + 14 ))\n    local B=$((\
    \ 3 * n - 14 ))\n    local C=$(( 3 * n + 15 ))\n    local D=$(( 3 * n - 15 ))\n\
    \    local E=$(( 3 * n + 16 ))\n    local F=$(( 3 * n - 16 ))\n    local G=$((\
    \ 3 * n + 17 ))\n    local H=$(( 3 * n - 17 ))\n    local I=$(( 3 * n + 18 ))\n\
    \    local J=$(( 3 * n - 18 ))\n    local K=$(( 3 * n + 19 ))\n    local L=$((\
    \ 3 * n - 19 ))\n    local M=$(( 3 * n + 20 ))\n    local N=$(( 3 * n - 20 ))\n\
    \    local O=$(( 3 * n + 21 ))\n    local P=$(( 3 * n - 21 ))\n    local Q=$((\
    \ 3 * n + 22 ))\n    local R=$(( 3 * n - 22 ))\n    local S=$(( 3 * n + 23 ))\n\
    \    local T=$(( 3 * n - 23 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local sum=$(( 3 * n + 1 ))\n    local i\n    local j\n  \
    \  local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n+1 ))\n  local b=$(( n+2 ))\n  local c=$(( n+3 ))\n\
    \  local d=$(( n+4 ))\n  local e=$(( n+5 ))\n  local f=$(( n+6 ))\n  local g=$((\
    \ n+7 ))\n  local h=$(( n+8 ))\n  local i=$(( n+9 ))\n  local j=$(( n+10 ))\n\
    \  local k=$(( n+11 ))\n  local l=$(( n+12 ))\n  local m=$(( n+13 ))\n  local\
    \ n=$(( n+14 ))\n  local o=$(( n+15 ))\n  local p=$(( n+16 ))\n  local q=$(( n+17\
    \ ))\n  local r=$(( n+18 ))\n  local s=$(( n+19 ))\n  local t=$(( n+20 ))\n  local\
    \ u=$(( n+21 ))\n  local v=$(( n+22 ))\n  local w=$(( n+23 ))\n  local x=$(( n+24\
    \ ))\n  local y=$(( n+25 ))\n  local z=$(( n+26 ))\n  local A=$(( n+27 ))\n  local\
    \ B=$(( n+28 ))\n  local C=$(( n+29 ))\n  local D=$(( n+30 ))\n  local E=$(( n+31\
    \ ))\n  local F=$(( n+32 ))\n  local G=$(( n+33 ))\n  local H=$(( n+34 ))\n  local\
    \ I=$(( n+35 ))\n  local J=$(( n+36 ))\n  local K=$(( n+37 ))\n  local L=$(( n+38\
    \ ))\n  local M=$(( n+39 ))\n  local N=$(( n+40 ))\n  local O=$(( n+41 ))\n  local\
    \ P=$(( n+42 ))\n  local Q=$(( n+43 ))\n  local R=$(( n+44 ))\n  local S=$(( n+45\
    \ ))\n  local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwxg7b6t9.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwxg7b6t9.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    \n    for ((i=1; i<n; i++))\n    do\n    \
    \    result=$(( $a + $b ))\n        echo $result\n        a=$b\n        b=$c\n\
    \        c=$d\n        d=$result\n    done\n    \n    result=$(( $a + $b ))\n\
    \    echo $result\n    result=$(( $c + $d ))\n    echo $result\n    result=$((\
    \ $b + $d ))\n    echo $result\n    result=$(( $a + $c ))\n    echo $result\n\
    \    result=$(( $c + $b ))\n    echo $result\n    result=$(( $b + $a ))\n    echo\
    \ $result\n    result=$(( $a + $d ))\n    echo $result\n    result=$(( $c + $d\
    \ ))\n    echo $result\n    result=$(( $b + $c ))\n    echo $result\n    result=$((\
    \ $a + $b ))\n    echo $result\n    result=$(( $c + $d ))\n    echo $result\n\
    \    result=$(( $b + $a ))\n    echo $result\n    result=$(( $a + $c ))\n    echo\
    \ $result\n    result=$(( $c + $b ))\n    echo $result\n    result=$(( $b + $a\
    \ ))\n    echo $result\n    result=$(( $a + $d ))\n    echo $result\n    result=$((\
    \ $c + $d ))\n    echo $result\n    result=$(( $b + $c ))\n    echo $result\n\
    \    result=$(( $a + $b ))\n    echo $result\n    result=$(( $c + $d ))\n    echo\
    \ $result\n    result=$(( $b + $a ))\n    echo $result\n    result=$(( $a + $c\
    \ ))\n    echo $result\n    result=$(( $c + $b ))\n    echo $result\n    result=$((\
    \ $b + $a ))\n    echo $result\n    result=$(( $a + $d ))\n    echo $result\n\
    \    result=$(( $c + $d ))\n    echo $result\n    result=$(( $b + $c ))\n    echo\
    \ $result\n    result=$(( $a + $b ))\n    echo $result\n    result=$(( $c + $d\
    \ ))\n    echo $result\n    result=$(( $b + $a ))\n    echo $result\n    result=$((\
    \ $a + $c ))\n    echo $result\n    result=$(( $c + $b ))\n    echo $result\n\
    \    result=$(( $b\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpakm77bs_.sh: line 103: unexpected EOF while looking for matching
    `)''

    /tmp/tmpakm77bs_.sh: line 125: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local sum=$(( 3 * n + 1 ))\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    while [ $n -gt 0 ]; do\n        result+=(\"$a\")\n \
    \       result+=(\"$b\")\n        result+=(\"$c\")\n        result+=(\"$d\")\n\
    \        a=$b\n        b=$c\n        c=$d\n        d=$((a+b+c))\n        ((n--))\n\
    \    done\n    result+=(\"$a\")\n    result+=(\"$b\")\n    result+=(\"$c\")\n\
    \    result+=(\"$d\")\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n  local e=$(( n + 3 ))\n  local f=$((\
    \ n + 4 ))\n  local g=$(( n + 5 ))\n  local h=$(( n + 6 ))\n  local i=$(( n +\
    \ 7 ))\n  local j=$(( n + 8 ))\n  local k=$(( n + 9 ))\n  local l=$(( n + 10 ))\n\
    \  local m=$(( n + 11 ))\n  local n=$(( n + 12 ))\n  local o=$(( n + 13 ))\n \
    \ local p=$(( n + 14 ))\n  local q=$(( n + 15 ))\n  local r=$(( n + 16 ))\n  local\
    \ s=$(( n + 17 ))\n  local t=$(( n + 18 ))\n  local u=$(( n + 19 ))\n  local v=$((\
    \ n + 20 ))\n  local w=$(( n + 21 ))\n  local x=$(( n + 22 ))\n  local y=$(( n\
    \ + 23 ))\n  local z=$(( n + 24 ))\n  local A=$(( n + 25 ))\n  local B=$(( n +\
    \ 26 ))\n  local C=$(( n + 27 ))\n  local D=$(( n + 28 ))\n  local E=$(( n + 29\
    \ ))\n  local F=$(( n + 30 ))\n  local G=$(( n + 31 ))\n  local H=$(( n + 32 ))\n\
    \  local I=$(( n + 33 ))\n  local J=$(( n + 34 ))\n  local K=$(( n + 35 ))\n \
    \ local L=$(( n + 36 ))\n  local M=$(( n + 37 ))\n  local N=$(( n + 38 ))\n  local\
    \ O=$(( n + 39 ))\n  local P=$(( n + 40 ))\n  local Q=$(( n + 41 ))\n  local R=$((\
    \ n + 42 ))\n  local S=$(( n + 43 ))\n  local T=$(( n + 44 ))\n  local U=$(( n\
    \ + 45 ))\n  local V=$(( n + 46 ))\n  local W=$(( n + 47 ))\n  local X=$(( \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprfpqjode.sh: line 71: unexpected EOF while looking for matching
    `)''

    /tmp/tmprfpqjode.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local\
    \ C=$(( n + 1 ))\n  local D=$(( n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$((\
    \ n + 1 ))\n  local G=$(( n + 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n +\
    \ 1 ))\n  local J=$(( n + 1 ))\n  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n\
    \  local M=$(( n + 1 ))\n  local N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local\
    \ P=$(( n + 1 ))\n  local Q=$(( n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$((\
    \ n + 1 ))\n  local T=$(( n + 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n +\
    \ 1 ))\n  local W=$(( n + 1 ))\n  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 1 ))\n  local d=$(( 3 * n - 1 ))\n  local e=$(( 3 * n + 1 ))\n\
    \  local f=$(( 3 * n - 1 ))\n  local g=$(( 3 * n + 1 ))\n  local h=$(( 3 * n -\
    \ 1 ))\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 2 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} + 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} + 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} + 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} + 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} + 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} + 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} + 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} + 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} + 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} + 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} + 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} + 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} + 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} + 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} + 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} + 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} + 1 ))\n    local M=$(( ${n} + 1 ))\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local sum=$(( 1 + n / 2 ))\n    local i\n    for (( i = 3;\
    \ i <= n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    local arr\n  \
    \  arr=()\n    arr=( \"${arr[@]}\" \"$sum\" )\n    arr=( \"${arr[@]}\" \"$(( n\
    \ - 1 ))\" )\n    arr=( \"${arr[@]}\" \"$(( n + 1 ))\" )\n    echo \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local a=$(( 1 + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n \
    \   local c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1\
    \ + n / 2 ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n   \
    \ local h=$(( 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 +\
    \ n / 2 ))\n    local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local\
    \ m=$(( 1 + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2\
    \ ))\n    local p=$(( 1 + n / 2 ))\n    local q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local\
    \ C=$(( n + 1 ))\n  local D=$(( n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$((\
    \ n + 1 ))\n  local G=$(( n + 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n +\
    \ 1 ))\n  local J=$(( n + 1 ))\n  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n\
    \  local M=$(( n + 1 ))\n  local N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local\
    \ P=$(( n + 1 ))\n  local Q=$(( n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$((\
    \ n + 1 ))\n  local T=$(( n + 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n +\
    \ 1 ))\n  local W=$(( n + 1 ))\n  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local -a arr\n  arr=()\n  arr+=(\"$(( 3 * n ))\")\n  arr+=(\"\
    $(( 1 + n / 2 ))\")\n  arr+=(\"$(( n - 1 + n - 2 + n + 1 ))\")\n  arr+=(\"$((\
    \ 2 * n ))\")\n  arr+=(\"$(( 1 + n ))\")\n  arr+=(\"$(( n - 1 ))\")\n  arr+=(\"\
    $(( 2 * n + 1 ))\")\n  arr+=(\"$(( 2 * n + 2 ))\")\n  arr+=(\"$(( 2 * n + 3 ))\"\
    )\n  arr+=(\"$(( 2 * n + 4 ))\")\n  arr+=(\"$(( 2 * n + 5 ))\")\n  arr+=(\"$((\
    \ 2 * n + 6 ))\")\n  arr+=(\"$(( 2 * n + 7 ))\")\n  arr+=(\"$(( 2 * n + 8 ))\"\
    )\n  arr+=(\"$(( 2 * n + 9 ))\")\n  arr+=(\"$(( 2 * n + 10 ))\")\n  arr+=(\"$((\
    \ 2 * n + 11 ))\")\n  arr+=(\"$(( 2 * n + 12 ))\")\n  arr+=(\"$(( 2 * n + 13 ))\"\
    )\n  arr+=(\"$(( 2 * n + 14 ))\")\n  arr+=(\"$(( 2 * n + 15 ))\")\n  arr+=(\"\
    $(( 2 * n + 16 ))\")\n  arr+=(\"$(( 2 * n + 17 ))\")\n  arr+=(\"$(( 2 * n + 18\
    \ ))\")\n  arr+=(\"$(( 2 * n + 19 ))\")\n  arr+=(\"$(( 2 * n + 20 ))\")\n  arr+=(\"\
    $(( 2 * n + 21 ))\")\n  arr+=(\"$(( 2 * n + 22 ))\")\n  arr+=(\"$(( 2 * n + 23\
    \ ))\")\n  arr+=(\"$(( 2 * n + 24 ))\")\n  arr+=(\"$(( 2 * n + 25 ))\")\n  arr+=(\"\
    $(( 2 * n + 26 ))\")\n  arr+=(\"$(( 2 * n + 27 ))\")\n  arr+=(\"$(( 2 * n + 28\
    \ ))\")\n  arr+=(\"$(( 2 * n + 29 ))\")\n  arr+=(\"$(( 2 * n + 30 ))\")\n  arr+=(\"\
    $(( 2 * n + 31 ))\")\n  arr+=(\"$(( 2 * n + 32 ))\")\n  \n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i=$(( 3 * n + 5 ))\n    local j=$(( 3 *\
    \ n - 5 ))\n    local k=$(( 3 * n + 6 ))\n    local l=$(( 3 * n - 6 ))\n    local\
    \ m=$(( 3 * n + 7 ))\n    local n=$(( 3 * n - 7 ))\n    local o=$(( 3 * n + 8\
    \ ))\n    local p=$(( 3 * n - 8 ))\n    local q=$(( 3 * n + 9 ))\n    local r=$((\
    \ 3 * n - 9 ))\n    local s=$(( 3 * n + 10 ))\n    local t=$(( 3 * n - 10 ))\n\
    \    local u=$(( 3 * n + 11 ))\n    local v=$(( 3 * n - 11 ))\n    local w=$((\
    \ 3 * n + 12 ))\n    local x=$(( 3 * n - 12 ))\n    local y=$(( 3 * n + 13 ))\n\
    \    local z=$(( 3 * n - 13 ))\n    local A=$(( 3 * n + 14 ))\n    local B=$((\
    \ 3 * n - 14 ))\n    local C=$(( 3 * n + 15 ))\n    local D=$(( 3 * n - 15 ))\n\
    \    local E=$(( 3 * n + 16 ))\n    local F=$(( 3 * n - 16 ))\n    local G=$((\
    \ 3 * n + 17 ))\n    local H=$(( 3 * n - 17 ))\n    local I=$(( 3 * n + 18 ))\n\
    \    local J=$(( 3 * n - 18 ))\n    local K=$(( 3 * n + 19 ))\n    local L=$((\
    \ 3 * n - 19 ))\n    local M=$(( 3 * n + 20 ))\n    local N=$(( 3 * n - 20 ))\n\
    \    local O=$(( 3 * n + 21 ))\n    local P=$(( 3 * n - 21 ))\n    local Q=$((\
    \ 3 * n + 22 ))\n    local R=$(( 3 * n - 22 ))\n    local S=$(( 3 * n + 23 ))\n\
    \    local T=$(( 3 * n - 23 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n - 1 ))\n  local b=$(( n - 2 ))\n  local c=$(( n\
    \ + 1 ))\n  local d=$(( n + 2 ))\n  local result\n  result=$(( $a ))\n  result=$((\
    \ $result + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n\
    \  result=$(( $result + $a ))\n  result=$(( $result + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  result=$(( $result + $a ))\n  result=$((\
    \ $result + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n\
    \  result=$(( $result + $a ))\n  result=$(( $result + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  result=$(( $result + $a ))\n  result=$((\
    \ $result + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n\
    \  result=$(( $result + $a ))\n  result=$(( $result + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  result=$(( $result + $a ))\n  result=$((\
    \ $result + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n\
    \  result=$(( $result + $a ))\n  result=$(( $result + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  result=$(( $result + $a ))\n  result=$((\
    \ $result + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n\
    \  result=$(( $result + $a ))\n  result=$(( $result + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  result=$(( $result + $a ))\n  result=$((\
    \ $result + $b ))\n  result=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local A=$(( 1 + n / 2 ))\n    local B=$(( 1 + n / 2 ))\n \
    \   local C=$(( 1 + n / 2 ))\n    local D=$(( 1 + n / 2 ))\n    local E=$(( 1\
    \ + n / 2 ))\n    local F=$(( 1 + n / 2 ))\n    local G=$(( 1 + n / 2 ))\n   \
    \ local H=$(( 1 + n / 2 ))\n    local I=$(( 1 + n / 2 ))\n    local J=$(( 1 +\
    \ n / 2 ))\n    local K=$(( 1 + n / 2 ))\n    local L=$(( 1 + n / 2 ))\n    local\
    \ M=$(( 1 + n / 2 ))\n    local N=$(( 1 + n / 2 ))\n    local O=$(( 1 + n / 2\
    \ ))\n    local P=$(( 1 + n / 2 ))\n    local Q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$((n-1))\n    local b=$((n-2))\n    local c=$((n+1))\n\
    \    local d=$((n+2))\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} - 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} - 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} - 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} - 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} - 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} - 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} - 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} - 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} - 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} - 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} - 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} - 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} - 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} - 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} - 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} - 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} - 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} - 1 ))\n    local M=$(( ${n} + 1 ))\n    local\
    \ N=$(( ${n} - 1 ))\n    local O=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp_l_310tj.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmp_l_310tj.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 2 * n + 1 ))\n    local d=$(( 2 * n - 1 ))\n    local e=$(( n\
    \ + 1 ))\n    local f=$(( n - 1 ))\n    local g=$(( n + 1 ))\n    local h=$((\
    \ n - 1 ))\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local e=$(( n + 3 ))\n\
    \    local f=$(( n + 4 ))\n    local g=$(( n + 5 ))\n    local h=$(( n + 6 ))\n\
    \    local i=$(( n + 7 ))\n    local j=$(( n + 8 ))\n    local k=$(( n + 9 ))\n\
    \    local l=$(( n + 10 ))\n    local m=$(( n + 11 ))\n    local n=$(( n + 12\
    \ ))\n    local o=$(( n + 13 ))\n    local p=$(( n + 14 ))\n    local q=$(( n\
    \ + 15 ))\n    local r=$(( n + 16 ))\n    local s=$(( n + 17 ))\n    local t=$((\
    \ n + 18 ))\n    local u=$(( n + 19 ))\n    local v=$(( n + 20 ))\n    local w=$((\
    \ n + 21 ))\n    local x=$(( n + 22 ))\n    local y=$(( n + 23 ))\n    local z=$((\
    \ n + 24 ))\n    local A=$(( n + 25 ))\n    local B=$(( n + 26 ))\n    local C=$((\
    \ n + 27 ))\n    local D=$(( n + 28 ))\n    local E=$(( n + 29 ))\n    local F=$((\
    \ n + 30 ))\n    local G=$(( n + 31 ))\n    local H=$(( n + 32 ))\n    local I=$((\
    \ n + 33 ))\n    local J=$(( n + 34 ))\n    local K=$(( n + 35 ))\n    local L=$((\
    \ n + 36 ))\n    local M=$(( n + 37 ))\n    local N=$(( n + 38 ))\n    local O=$((\
    \ n + 39 ))\n    local P=$(( n + 40 ))\n    local Q=$(( n + 41 ))\n    local R=$((\
    \ n + 42 ))\n    local S=$(( n + 43 ))\n    local T=$(( n + 44 ))\n    local U=$((\
    \ n + 45 ))\n    local V=$(( n + 46 ))\n    local W=$(( n + 47 ))\n    local X=$((\
    \ \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2webuzu6.sh: line 71: unexpected EOF while looking for matching
    `)''

    /tmp/tmp2webuzu6.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local sum=$(( 3 * n + 1 ))\n    local i\n    local result\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + ${n} - 1 ))\n    local d=$(( ${n} + ${n} - ${n} ))\n   \
    \ local e=$(( ${n} + ${n} - ${n} - ${n} ))\n    local f=$(( ${n} + ${n} - ${n}\
    \ - ${n} - ${n} ))\n    local g=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} ))\n\
    \    local h=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local\
    \ i=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local j=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local k=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n   \
    \ local l=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} ))\n    local m=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local n=$(( ${n} + ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local o=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} ))\n    local p=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local q=$(( \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp22kn6lv8.sh: line 38: unexpected EOF while looking for matching
    `)''

    /tmp/tmp22kn6lv8.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n  local e=$(( n + 3 ))\n  local f=$((\
    \ n + 4 ))\n  local g=$(( n + 5 ))\n  local h=$(( n + 6 ))\n  local i=$(( n +\
    \ 7 ))\n  local j=$(( n + 8 ))\n  local k=$(( n + 9 ))\n  local l=$(( n + 10 ))\n\
    \  local m=$(( n + 11 ))\n  local n=$(( n + 12 ))\n  local o=$(( n + 13 ))\n \
    \ local p=$(( n + 14 ))\n  local q=$(( n + 15 ))\n  local r=$(( n + 16 ))\n  local\
    \ s=$(( n + 17 ))\n  local t=$(( n + 18 ))\n  local u=$(( n + 19 ))\n  local v=$((\
    \ n + 20 ))\n  local w=$(( n + 21 ))\n  local x=$(( n + 22 ))\n  local y=$(( n\
    \ + 23 ))\n  local z=$(( n + 24 ))\n  local A=$(( n + 25 ))\n  local B=$(( n +\
    \ 26 ))\n  local C=$(( n + 27 ))\n  local D=$(( n + 28 ))\n  local E=$(( n + 29\
    \ ))\n  local F=$(( n + 30 ))\n  local G=$(( n + 31 ))\n  local H=$(( n + 32 ))\n\
    \  local I=$(( n + 33 ))\n  local J=$(( n + 34 ))\n  local K=$(( n + 35 ))\n \
    \ local L=$(( n + 36 ))\n  local M=$(( n + 37 ))\n  local N=$(( n + 38 ))\n  local\
    \ O=$(( n + 39 ))\n  local P=$(( n + 40 ))\n  local Q=$(( n + 41 ))\n  local R=$((\
    \ n + 42 ))\n  local S=$(( n + 43 ))\n  local T=$(( n + 44 ))\n  local U=$(( n\
    \ + 45 ))\n  local V=$(( n + 46 ))\n  local W=$(( n + 47 ))\n  local X=$(( \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprfpqjode.sh: line 71: unexpected EOF while looking for matching
    `)''

    /tmp/tmprfpqjode.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local\
    \ C=$(( n + 1 ))\n  local D=$(( n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$((\
    \ n + 1 ))\n  local G=$(( n + 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n +\
    \ 1 ))\n  local J=$(( n + 1 ))\n  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n\
    \  local M=$(( n + 1 ))\n  local N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local\
    \ P=$(( n + 1 ))\n  local Q=$(( n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$((\
    \ n + 1 ))\n  local T=$(( n + 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n +\
    \ 1 ))\n  local W=$(( n + 1 ))\n  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local -a arr\n  arr=()\n  arr[0]=\"\\\"${n}\\\"\"\n  arr[1]=\"\
    \\\"${n}\\\"\"\n  arr[2]=\"\\\"${n}\\\"\"\n  arr[3]=\"\\\"${n}\\\"\"\n  arr[4]=\"\
    \\\"${n}\\\"\"\n  arr[5]=\"\\\"${n}\\\"\"\n  arr[6]=\"\\\"${n}\\\"\"\n  arr[7]=\"\
    \\\"${n}\\\"\"\n  arr[8]=\"\\\"${n}\\\"\"\n  arr[9]=\"\\\"${n}\\\"\"\n  arr[10]=\"\
    \\\"${n}\\\"\"\n  arr[11]=\"\\\"${n}\\\"\"\n  arr[12]=\"\\\"${n}\\\"\"\n  arr[13]=\"\
    \\\"${n}\\\"\"\n  arr[14]=\"\\\"${n}\\\"\"\n  arr[15]=\"\\\"${n}\\\"\"\n  arr[16]=\"\
    \\\"${n}\\\"\"\n  arr[17]=\"\\\"${n}\\\"\"\n  arr[18]=\"\\\"${n}\\\"\"\n  arr[19]=\"\
    \\\"${n}\\\"\"\n  arr[20]=\"\\\"${n}\\\"\"\n  arr[21]=\"\\\"${n}\\\"\"\n  arr[22]=\"\
    \\\"${n}\\\"\"\n  arr[23]=\"\\\"${n}\\\"\"\n  arr[24]=\"\\\"${n}\\\"\"\n  arr[25]=\"\
    \\\"${n}\\\"\"\n  arr[26]=\"\\\"${n}\\\"\"\n  arr[27]=\"\\\"${n}\\\"\"\n  arr[28]=\"\
    \\\"${n}\\\"\"\n  arr[29]=\"\\\"${n}\\\"\"\n  arr[30]=\"\\\"${n}\\\"\"\n  arr[31]=\"\
    \\\"${n}\\\"\"\n  arr[32]=\"\\\"${n}\\\"\"\n  arr[33]=\"\\\"${n}\\\"\"\n  arr[34]=\"\
    \\\"${n}\\\"\"\n  arr[35]=\"\\\"${n}\\\"\"\n  arr[36]=\"\\\"${n}\\\"\"\n  arr[37]=\"\
    \\\"${n}\\\"\"\n  arr[38]=\"\\\"${n}\\\"\"\n  arr[39]=\"\\\"${n}\\\"\"\n  arr[40]=\"\
    \\\"${n}\\\"\"\n  arr[41]=\"\\\"${n}\\\"\"\n  arr[42]=\"\\\"${n}\\\"\"\n  arr[\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5df1s4nj.sh: line 67: unexpected EOF while looking for matching
    `]''

    /tmp/tmp5df1s4nj.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 2 * n + 1 ))\n    local d=$(( 2 * n - 1 ))\n    local e=$(( n\
    \ + 1 ))\n    local f=$(( n - 1 ))\n    local g=$(( n + 1 ))\n    local h=$((\
    \ n - 1 ))\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local\
    \ m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n\
    \    local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n \
    \   local x=1\n    local y=1\n    local z=1\n    local A=1\n    local B=1\n  \
    \  local C=1\n    local D=1\n    local E=1\n    local F=1\n    local G=1\n   \
    \ local H=1\n    local I=1\n    local J=1\n    local K=1\n    local L=1\n    local\
    \ M=1\n    local N=1\n    local O=1\n    local P=1\n    local Q=1\n    local R=1\n\
    \    local S=1\n    local T=1\n    local U=1\n    local V=1\n    local W=1\n \
    \   local X=1\n    local Y=1\n    local Z=1\n    local AA=1\n    local AB=1\n\
    \    local AC=1\n    local AD=1\n    local AE=1\n    local AF=1\n    local AG=1\n\
    \    local AH=1\n    local AI=1\n    local AJ=1\n    local AK=1\n    local AL=1\n\
    \    local AM=1\n    local AN=1\n    local AO=1\n    local AP=1\n    local AQ=1\n\
    \    local AR=1\n    local AS=1\n    local AT=1\n    local AU=1\n    local AV=1\n\
    \    local AW=1\n    local AX=1\n    local AY=1\n    local AZ=1\n    local A=1\n\
    \    local B=1\n    local C=1\n    local D=1\n    local E=1\n    local F=1\n \
    \   local G=1\n    local H=1\n    local I=1\n    local J=1\n    local K=1\n  \
    \  local L=1\n    local M=1\n    local N=1\n    \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    \n    for ((i=1; i<=$n; i++))\n    do\n\
    \        result+=($a)\n        (( c+=a ))\n        (( b+=c ))\n        (( d+=b\
    \ ))\n        a=$c\n        c=$b\n        b=$d\n        d=$a\n    done\n    \n\
    \    result+=($a)\n    result+=($b)\n    result+=($c)\n    result+=($d)\n    \n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local a=$(( n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n\
    \    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n\
    \    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n\
    \    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n\
    \    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n\
    \    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n\
    \    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n\
    \    local y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local sum=0\n    local i=1\n    local j=1\n    local k=1\n\
    \    while [ $i -le $n ]; do\n        sum=$(( $sum + $j ))\n        j=$(( $j +\
    \ $k ))\n        k=$(( $k + 1 ))\n        i=$(( $i + 1 ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local a=$(( n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n\
    \    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n\
    \    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n\
    \    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n\
    \    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n\
    \    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n\
    \    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n\
    \    local y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local a=$(( 1 + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n \
    \   local c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1\
    \ + n / 2 ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n   \
    \ local h=$(( 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 +\
    \ n / 2 ))\n    local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local\
    \ m=$(( 1 + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2\
    \ ))\n    local p=$(( 1 + n / 2 ))\n    local q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 2 * n + 1 ))\n  local d=$(( 2 * n - 1 ))\n  local e=$(( n + 1 ))\n  local\
    \ f=$(( n - 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n - 1 ))\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n\
    \  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n\
    \  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n\
    \  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n\
    \  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n\
    \  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n\
    \  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n\
    \  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n\
    \  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n\
    \  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    local i\n    local j\n    local k\n   \
    \ local sum\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n\
    \    local sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n\
    \    local sum11\n    local sum12\n    local sum13\n    local sum14\n    local\
    \ sum15\n    local sum16\n    local sum17\n    local sum18\n    local sum19\n\
    \    local sum20\n    local sum21\n    local sum22\n    local sum23\n    local\
    \ sum24\n    local sum25\n    local sum26\n    local sum27\n    local sum28\n\
    \    local sum29\n    local sum30\n    local sum31\n    local sum32\n    local\
    \ sum33\n    local sum34\n    local sum35\n    local sum36\n    local sum37\n\
    \    local sum38\n    local sum39\n    local sum40\n    local sum41\n    local\
    \ sum42\n    local sum43\n    local sum44\n    local sum45\n    local sum46\n\
    \    local sum47\n    local sum48\n    local sum49\n    local sum50\n    local\
    \ sum51\n    local sum52\n    local sum53\n    local sum54\n    local sum55\n\
    \    local sum56\n    local sum57\n    local sum58\n    local sum59\n    local\
    \ sum60\n    local sum61\n    local sum62\n    local sum63\n    local sum64\n\
    \    local sum65\n    local sum66\n    local sum67\n    local sum68\n    local\
    \ sum69\n    local sum70\n    local sum71\n    local sum72\n    local sum73\n\
    \    local sum74\n    local sum75\n    local sum76\n    local sum77\n    local\
    \ sum78\n    local sum79\n    local sum80\n    local sum81\n    local sum82\n\
    \    local sum83\n    local sum84\n    local sum85\n    local sum86\n    local\
    \ sum87\n    local sum88\n    local sum89\n    local sum90\n    local sum91\n\
    \    local sum92\n    local sum93\n    local sum94\n    local sum95\n    local\
    \ sum96\n    local sum97\n    local sum98\n    \n}\n\ncandidate() {\n    tri \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local a=$(( 1 + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n \
    \   local c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1\
    \ + n / 2 ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n   \
    \ local h=$(( 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 +\
    \ n / 2 ))\n    local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local\
    \ m=$(( 1 + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2\
    \ ))\n    local p=$(( 1 + n / 2 ))\n    local q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n\
    \    local c=$(( 3 * n + 3 ))\n    local d=$(( 3 * n + 4 ))\n    local e=$(( 3\
    \ * n + 5 ))\n    local f=$(( 3 * n + 6 ))\n    local g=$(( 3 * n + 7 ))\n   \
    \ local h=$(( 3 * n + 8 ))\n    local i=$(( 3 * n + 9 ))\n    local j=$(( 3 *\
    \ n + 10 ))\n    local k=$(( 3 * n + 11 ))\n    local l=$(( 3 * n + 12 ))\n  \
    \  local m=$(( 3 * n + 13 ))\n    local n=$(( 3 * n + 14 ))\n    local o=$(( 3\
    \ * n + 15 ))\n    local p=$(( 3 * n + 16 ))\n    local q=$(( 3 * n + 17 ))\n\
    \    local r=$(( 3 * n + 18 ))\n    local s=$(( 3 * n + 19 ))\n    local t=$((\
    \ 3 * n + 20 ))\n    local u=$(( 3 * n + 21 ))\n    local v=$(( 3 * n + 22 ))\n\
    \    local w=$(( 3 * n + 23 ))\n    local x=$(( 3 * n + 24 ))\n    local y=$((\
    \ 3 * n + 25 ))\n    local z=$(( 3 * n + 26 ))\n    local A=$(( 3 * n + 27 ))\n\
    \    local B=$(( 3 * n + 28 ))\n    local C=$(( 3 * n + 29 ))\n    local D=$((\
    \ 3 * n + 30 ))\n    local E=$(( 3 * n + 31 ))\n    local F=$(( 3 * n + 32 ))\n\
    \    local G=$(( 3 * n + 33 ))\n    local H=$(( 3 * n + 34 ))\n    local I=$((\
    \ 3 * n + 35 ))\n    local J=$(( 3 * n + 36 ))\n    local K=$(( 3 * n + 37 ))\n\
    \    local L=$(( 3 * n + 38 ))\n    local M=$(( 3 * n + 39 ))\n    local N=$((\
    \ 3 * n + 40 ))\n    local O=$(( 3 * n + 41 ))\n    local P=$(( 3 * n + 42 ))\n\
    \    local Q=$(( 3 * n + 43 ))\n    local R=$(( 3 * n + 44 ))\n    local S=$((\
    \ 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpa5rvogee.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpa5rvogee.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n+1 ))\n  local b=$(( n+1 ))\n  local c=$(( n+1 ))\n\
    \  local d=$(( n+1 ))\n  local e=$(( n+1 ))\n  local f=$(( n+1 ))\n  local g=$((\
    \ n+1 ))\n  local h=$(( n+1 ))\n  local i=$(( n+1 ))\n  local j=$(( n+1 ))\n \
    \ local k=$(( n+1 ))\n  local l=$(( n+1 ))\n  local m=$(( n+1 ))\n  local n=$((\
    \ n+1 ))\n  local o=$(( n+1 ))\n  local p=$(( n+1 ))\n  local q=$(( n+1 ))\n \
    \ local r=$(( n+1 ))\n  local s=$(( n+1 ))\n  local t=$(( n+1 ))\n  local u=$((\
    \ n+1 ))\n  local v=$(( n+1 ))\n  local w=$(( n+1 ))\n  local x=$(( n+1 ))\n \
    \ local y=$(( n+1 ))\n  local z=$(( n+1 ))\n  local A=$(( n+1 ))\n  local B=$((\
    \ n+1 ))\n  local C=$(( n+1 ))\n  local D=$(( n+1 ))\n  local E=$(( n+1 ))\n \
    \ local F=$(( n+1 ))\n  local G=$(( n+1 ))\n  local H=$(( n+1 ))\n  local I=$((\
    \ n+1 ))\n  local J=$(( n+1 ))\n  local K=$(( n+1 ))\n  local L=$(( n+1 ))\n \
    \ local M=$(( n+1 ))\n  local N=$(( n+1 ))\n  local O=$(( n+1 ))\n  local P=$((\
    \ n+1 ))\n  local Q=$(( n+1 ))\n  local R=$(( n+1 ))\n  local S=$(( n+1 ))\n \
    \ local T=$(( n+1 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n - 1 ))\n  local b=$(( n - 2 ))\n  local c=$(( n\
    \ + 1 ))\n  local d=$(( n + 2 ))\n  local ret=()\n  local i\n  for i in $(seq\
    \ 0 $(( n + 1 ))); do\n    ret+=($(( i + a )))\n    ret+=($(( i + b )))\n    ret+=($((\
    \ i + c )))\n    ret+=($(( i + d )))\n  done\n  echo \"${ret[@]}\"\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 2 ))\n    local e=$(( ${n}\
    \ + 3 ))\n    local f=$(( ${n} + 4 ))\n    local g=$(( ${n} + 5 ))\n    local\
    \ h=$(( ${n} + 6 ))\n    local i=$(( ${n} + 7 ))\n    local j=$(( ${n} + 8 ))\n\
    \    local k=$(( ${n} + 9 ))\n    local l=$(( ${n} + 10 ))\n    local m=$(( ${n}\
    \ + 11 ))\n    local n=$(( ${n} + 12 ))\n    local o=$(( ${n} + 13 ))\n    local\
    \ p=$(( ${n} + 14 ))\n    local q=$(( ${n} + 15 ))\n    local r=$(( ${n} + 16\
    \ ))\n    local s=$(( ${n} + 17 ))\n    local t=$(( ${n} + 18 ))\n    local u=$((\
    \ ${n} + 19 ))\n    local v=$(( ${n} + 20 ))\n    local w=$(( ${n} + 21 ))\n \
    \   local x=$(( ${n} + 22 ))\n    local y=$(( ${n} + 23 ))\n    local z=$(( ${n}\
    \ + 24 ))\n    local A=$(( ${n} + 25 ))\n    local B=$(( ${n} + 26 ))\n    local\
    \ C=$(( ${n} + 27 ))\n    local D=$(( ${n} + 28 ))\n    local E=$(( ${n} + 29\
    \ ))\n    local F=$(( ${n} + 30 ))\n    local G=$(( ${n} + 31 ))\n    local H=$((\
    \ ${n} + 32 ))\n    local I=$(( ${n} + 33 ))\n    local J=$(( ${n} + 34 ))\n \
    \   local K=$(( ${n} + 35 ))\n    local L=$(( ${n} + 36 ))\n    local M=$(( ${n}\
    \ + 37 ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2\
    \ 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  echo \"$a\" \"$b\" \"$c\"\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local sum=$(( 3 * n + 1 ))\n  local i\n  local result\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + ${n} - 1 ))\n    local d=$(( ${n} + ${n} - ${n} ))\n   \
    \ local res=()\n    local i\n    for (( i=1; i<${n}; i++ )); do\n        res+=(\"\
    ${a}\")\n        a=$(( ${a} + ${b} ))\n        b=$(( ${b} + ${c} ))\n        c=$((\
    \ ${c} + ${d} ))\n        d=$(( ${d} + ${n} ))\n    done\n    res+=(\"${d}\")\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n - b + b ))\n    local d=$(( 1 + n + 1 ))\n    local e=$(( 1 + n\
    \ + 2 ))\n    local f=$(( 1 + n + 3 ))\n    local g=$(( 1 + n + 4 ))\n    local\
    \ h=$(( 1 + n + 5 ))\n    local i=$(( 1 + n + 6 ))\n    local j=$(( 1 + n + 7\
    \ ))\n    local k=$(( 1 + n + 8 ))\n    local l=$(( 1 + n + 9 ))\n    local m=$((\
    \ 1 + n + 10 ))\n    local n=$(( 1 + n + 11 ))\n    local o=$(( 1 + n + 12 ))\n\
    \    local p=$(( 1 + n + 13 ))\n    local q=$(( 1 + n + 14 ))\n    local r=$((\
    \ 1 + n + 15 ))\n    local s=$(( 1 + n + 16 ))\n    local t=$(( 1 + n + 17 ))\n\
    \    local u=$(( 1 + n + 18 ))\n    local v=$(( 1 + n + 19 ))\n    local w=$((\
    \ 1 + n + 20 ))\n    local x=$(( 1 + n + 21 ))\n    local y=$(( 1 + n + 22 ))\n\
    \    local z=$(( 1 + n + 23 ))\n    local A=$(( 1 + n + 24 ))\n    local B=$((\
    \ 1 + n + 25 ))\n    local C=$(( 1 + n + 26 ))\n    local D=$(( 1 + n + 27 ))\n\
    \    local E=$(( 1 + n + 28 ))\n    local F=$(( 1 + n + 29 ))\n    local G=$((\
    \ 1 + n + 30 ))\n    local H=$(( 1 + n + 31 ))\n    local I=$(( 1 + n + 32 ))\n\
    \    local J=$(( 1 + n + 33 ))\n    local K=$(( 1 + n + 34 ))\n    local L=$((\
    \ 1 + n + 35 ))\n    local M=$(( 1 + n + 36 ))\n    local N=$(( 1 + n + 37 ))\n\
    \    local O=$(( 1 + n + 38 ))\n    local P=$(( 1 + n + 39 ))\n    local Q=$((\
    \ 1 + n + 40 ))\n    local R=$(( 1 + n + 41 ))\n    local S=$(( 1 + n + 42 ))\n\
    \    local T=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    while [ $n -gt 0 ]; do\n        result+=(\"$a\")\n \
    \       (( n-- ))\n        (( a++ ))\n        (( b++ ))\n        (( c++ ))\n \
    \       (( d++ ))\n    done\n    result+=(\"$a\")\n    result+=(\"$b\")\n    result+=(\"\
    $c\")\n    result+=(\"$d\")\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=$(echo \"$n\" | awk '{print $1*$1+$2*$2+$3*$3}')\n\
    \  echo \"$result\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  local d=$(( 3 * n - 2 ))\n  local result\n  result=$((\
    \ $a + $b ))\n  result=$(( $result + $c ))\n  result=$(( $result + $d ))\n  result=$((\
    \ $result + $n ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n\
    \  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result\
    \ + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$((\
    \ $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n \
    \ result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result\
    \ + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$((\
    \ $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n \
    \ result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result\
    \ + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$((\
    \ $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n \
    \ result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result\
    \ + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$((\
    \ $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n \
    \ result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result\
    \ + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$((\
    \ $result + 1 ))\n  result=$(( $result + 1 ))\n  result=$(( $\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprk8kjkbd.sh: line 72: unexpected EOF while looking for matching
    `)''

    /tmp/tmprk8kjkbd.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + ${n} - 1 ))\n    local d=$(( ${n} + ${n} - ${n} ))\n   \
    \ local e=$(( ${n} + ${n} - ${n} - ${n} ))\n    local f=$(( ${n} + ${n} - ${n}\
    \ - ${n} - ${n} ))\n    local g=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} ))\n\
    \    local h=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local\
    \ i=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local j=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local k=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n   \
    \ local l=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} ))\n    local m=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local n=$(( ${n} + ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local o=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} ))\n    local p=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local q=$(( \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp22kn6lv8.sh: line 38: unexpected EOF while looking for matching
    `)''

    /tmp/tmp22kn6lv8.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local res\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local sum=0\n  local i=1\n  local j=1\n  local k=1\n  while [\
    \ $i -le $n ]; do\n    sum=$((sum+j))\n    j=$((j+i))\n    i=$((i+k))\n    k=$((k+j))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    if [ $n -eq 1 ]; then\n        result=(\"\
    1\")\n    elif [ $n -eq 2 ]; then\n        result=(\"3\")\n    elif [ $n -eq 3\
    \ ]; then\n        result=(\"2\")\n    elif [ $n -eq 4 ]; then\n        result=(\"\
    8\")\n    elif [ $n -ge 5 ]; then\n        result=()\n        local i\n      \
    \  for ((i=1; i<=$n; i+=2)); do\n            result+=(\"$i\")\n        done\n\
    \        result+=(\"$((i+1))\")\n    fi\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( n - 1 ))\n    local b=$(( n - 2 ))\n    local\
    \ c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local result\n    local i\n  \
    \  local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  local d=$(( 3 * n - 2 ))\n  local result\n  local i\n\
    \  result=()\n  for i in $(seq 1 $n); do\n    result+=($(( $a + $b )))\n    result+=($((\
    \ $c + $d )))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    if [ $n -eq 0 ]; then\n        result=(\"\
    1\")\n    elif [ $((n % 2)) -eq 0 ]; then\n        result=(\"$((n + 1))\" \"$((n\
    \ + 2))\")\n    else\n        result=(\"$((n + 1))\" \"$((n + 2))\" \"$((n + 3))\"\
    )\n    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n / 2 ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2\
    \ ))\n    local f=$(( 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$((\
    \ 1 + n / 2 ))\n    local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n \
    \   local k=$(( 1 + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1\
    \ + n / 2 ))\n    local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n   \
    \ local p=$(( 1 + n / 2 ))\n    local q=$(( 1 + n / 2 ))\n    local r=$(( 1 +\
    \ n / 2 ))\n    local s=$(( 1 + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local\
    \ u=$(( 1 + n / 2 ))\n    local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2\
    \ ))\n    local x=$(( 1 + n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$((\
    \ 1 + n / 2 ))\n    local A=$(( 1 + n / 2 ))\n    local B=$(( 1 + n / 2 ))\n \
    \   local C=$(( 1 + n / 2 ))\n    local D=$(( 1 + n / 2 ))\n    local E=$(( 1\
    \ + n / 2 ))\n    local F=$(( 1 + n / 2 ))\n    local G=$(( 1 + n / 2 ))\n   \
    \ local H=$(( 1 + n / 2 ))\n    local I=$(( 1 + n / 2 ))\n    local J=$(( 1 +\
    \ n / 2 ))\n    local K=$(( 1 + n / 2 ))\n    local L=$(( 1 + n / 2 ))\n    local\
    \ M=$(( 1 + n / 2 ))\n    local N=$(( 1 + n / 2 ))\n    local O=$(( 1 + n / 2\
    \ ))\n    local P=$(( 1 + n / 2 ))\n    local Q=$\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local a=$(( 3 * n + 27 ))\n\
    \  local b=$(( 3 * n + 28 ))\n  local c=$(( 3 * n + 29 ))\n  local d=$(( 3 * n\
    \ + 30 ))\n  local e=$(( 3 * n + 31 ))\n  local f=$(( 3 * n + 32 ))\n  local g=$((\
    \ 3 * n + 33 ))\n  local h=$(( 3 * n + 34 ))\n  local i=$(( 3 * n + 35 ))\n  local\
    \ j=$(( 3 * n + 36 ))\n  local k=$(( 3 * n + 37 ))\n  local l=$(( 3 * n + 38 ))\n\
    \  local m=$(( 3 * n + 39 ))\n  local n=$(( 3 * n + 40 ))\n  local o=$(( 3 * n\
    \ + 41 ))\n  local p=$(( 3 * n + 42 ))\n  local q=$(( 3 * n + 43 ))\n  local r=$((\
    \ 3 * n + 44 ))\n  local s=$(( 3 * n + 45 ))\n  local t=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3tbm8oiy.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmp3tbm8oiy.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=()\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    result+=(\"$i\")\n  done\n  result+=(\"$(( n / 2 ))\")\n  result+=(\"\
    $(( n / 2 + 1 ))\")\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    local i\n    local j\n    local k\n   \
    \ local l\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n\
    \  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n\
    \  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n\
    \  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n\
    \  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n\
    \  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n\
    \  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n\
    \  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n\
    \  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n\
    \  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local res=()\n    while [ $n -gt 0 ]; do\n        res+=(\"$a\")\n       \
    \ (( n-- ))\n        a=$(( c + d ))\n        b=$(( c + d ))\n        c=$(( b +\
    \ a ))\n        d=$(( b + a ))\n    done\n    res+=(\"$a\")\n    res+=(\"$b\"\
    )\n    res+=(\"$c\")\n    res+=(\"$d\")\n    echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( n - 1 ))\n    local b=$(( n - 2 ))\n    local\
    \ c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local result=()\n    local i\n\
    \    for (( i = 1; i <= n; i++ )); do\n        result+=(\"\\\"$i\\\"\")\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=()\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    local j\n    j=$((i+1))\n    result+=($((j)))\n    result+=($((j+i)))\n\
    \    result+=($((j+i+1)))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local\
    \ C=$(( n + 1 ))\n  local D=$(( n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$((\
    \ n + 1 ))\n  local G=$(( n + 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n +\
    \ 1 ))\n  local J=$(( n + 1 ))\n  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n\
    \  local M=$(( n + 1 ))\n  local N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local\
    \ P=$(( n + 1 ))\n  local Q=$(( n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$((\
    \ n + 1 ))\n  local T=$(( n + 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n +\
    \ 1 ))\n  local W=$(( n + 1 ))\n  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local -a arr\n  arr=()\n  arr[0]=\"\\\"$n\\\"\"\n  arr[1]=\"\\\
    \"$((n+1))\\\"\"\n  arr[2]=\"\\\"$((n+2))\\\"\"\n  arr[3]=\"\\\"$((n+3))\\\"\"\
    \n  arr[4]=\"\\\"$((n+4))\\\"\"\n  arr[5]=\"\\\"$((n+5))\\\"\"\n  arr[6]=\"\\\"\
    $((n+6))\\\"\"\n  arr[7]=\"\\\"$((n+7))\\\"\"\n  arr[8]=\"\\\"$((n+8))\\\"\"\n\
    \  arr[9]=\"\\\"$((n+9))\\\"\"\n  arr[10]=\"\\\"$((n+10))\\\"\"\n  arr[11]=\"\\\
    \"$((n+11))\\\"\"\n  arr[12]=\"\\\"$((n+12))\\\"\"\n  arr[13]=\"\\\"$((n+13))\\\
    \"\"\n  arr[14]=\"\\\"$((n+14))\\\"\"\n  arr[15]=\"\\\"$((n+15))\\\"\"\n  arr[16]=\"\
    \\\"$((n+16))\\\"\"\n  arr[17]=\"\\\"$((n+17))\\\"\"\n  arr[18]=\"\\\"$((n+18))\\\
    \"\"\n  arr[19]=\"\\\"$((n+19))\\\"\"\n  arr[20]=\"\\\"$((n+20))\\\"\"\n  arr[21]=\"\
    \\\"$((n+21))\\\"\"\n  arr[22]=\"\\\"$((n+22))\\\"\"\n  arr[23]=\"\\\"$((n+23))\\\
    \"\"\n  arr[24]=\"\\\"$((n+24))\\\"\"\n  arr[25]=\"\\\"$((n+25))\\\"\"\n  arr[26]=\"\
    \\\"$((n+26))\\\"\"\n  arr[27]=\"\\\"$((n+27))\\\"\"\n  arr[28]=\"\\\"$((n+28))\\\
    \"\"\n  arr[29]=\"\\\"$((n+29))\\\"\"\n  arr[30]=\"\\\"$((n+30))\\\"\"\n  arr[31]=\"\
    \\\"$((n+31))\\\"\"\n  arr[32]=\"\\\"$((n+32))\\\"\"\n  arr[33]=\"\\\"$((n+33))\\\
    \"\"\n  arr[34]=\"\\\"$((n+34))\\\"\"\n  arr[35]=\"\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbrth2hca.sh: line 77: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbrth2hca.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=()\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    result+=(\"$i\")\n  done\n  result+=(\"$((n+1))\")\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} + 1 ))\n  local b=$(( ${n} - 1 ))\n  local c=$((\
    \ ${n} + ${n} - 1 ))\n  local d=$(( ${n} + ${n} + 1 ))\n  echo \"$a\" \"$b\" \"\
    $c\" \"$d\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} + 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} + 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} + 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} + 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} + 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} + 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} + 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} + 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} + 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} + 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} + 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} + 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} + 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} + 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} + 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} + 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} + 1 ))\n    local M=$(( ${n} + 1 ))\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    while [ $n -gt 0 ]; do\n        result+=(\"$a\")\n \
    \       result+=(\"$b\")\n        result+=(\"$c\")\n        result+=(\"$d\")\n\
    \        a=$b\n        b=$c\n        c=$d\n        d=$((a + b + c + d))\n    \
    \    n=$((n - 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 2 * n + 1 ))\n  local d=$(( 2 * n - 1 ))\n  local e=$(( n + 1 ))\n  local\
    \ f=$(( n - 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n - 1 ))\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i=$(( 3 * n + 5 ))\n    local j=$(( 3 *\
    \ n - 5 ))\n    local k=$(( 3 * n + 6 ))\n    local l=$(( 3 * n - 6 ))\n    local\
    \ m=$(( 3 * n + 7 ))\n    local n=$(( 3 * n - 7 ))\n    local o=$(( 3 * n + 8\
    \ ))\n    local p=$(( 3 * n - 8 ))\n    local q=$(( 3 * n + 9 ))\n    local r=$((\
    \ 3 * n - 9 ))\n    local s=$(( 3 * n + 10 ))\n    local t=$(( 3 * n - 10 ))\n\
    \    local u=$(( 3 * n + 11 ))\n    local v=$(( 3 * n - 11 ))\n    local w=$((\
    \ 3 * n + 12 ))\n    local x=$(( 3 * n - 12 ))\n    local y=$(( 3 * n + 13 ))\n\
    \    local z=$(( 3 * n - 13 ))\n    local A=$(( 3 * n + 14 ))\n    local B=$((\
    \ 3 * n - 14 ))\n    local C=$(( 3 * n + 15 ))\n    local D=$(( 3 * n - 15 ))\n\
    \    local E=$(( 3 * n + 16 ))\n    local F=$(( 3 * n - 16 ))\n    local G=$((\
    \ 3 * n + 17 ))\n    local H=$(( 3 * n - 17 ))\n    local I=$(( 3 * n + 18 ))\n\
    \    local J=$(( 3 * n - 18 ))\n    local K=$(( 3 * n + 19 ))\n    local L=$((\
    \ 3 * n - 19 ))\n    local M=$(( 3 * n + 20 ))\n    local N=$(( 3 * n - 20 ))\n\
    \    local O=$(( 3 * n + 21 ))\n    local P=$(( 3 * n - 21 ))\n    local Q=$((\
    \ 3 * n + 22 ))\n    local R=$(( 3 * n - 22 ))\n    local S=$(( 3 * n + 23 ))\n\
    \    local T=$(( 3 * n - 23 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n ))\n    local b=$(( 1 + n / 2 ))\n    local\
    \ c=$(( 1 + n - 1 + n - 2 + n ))\n    local d=$(( 1 + 2 * n ))\n    local e=$((\
    \ 1 + 2 * n - 1 + 2 * n - 2 + 2 * n ))\n    local f=$(( 1 + 3 * n ))\n    local\
    \ g=$(( 1 + 3 * n - 1 + 3 * n - 2 + 3 * n ))\n    local h=$(( 1 + 4 * n ))\n \
    \   local i=$(( 1 + 4 * n - 1 + 4 * n - 2 + 4 * n ))\n    local j=$(( 1 + 5 *\
    \ n ))\n    local k=$(( 1 + 5 * n - 1 + 5 * n - 2 + 5 * n ))\n    local l=$((\
    \ 1 + 6 * n ))\n    local m=$(( 1 + 6 * n - 1 + 6 * n - 2 + 6 * n ))\n    local\
    \ n=$(( 1 + 7 * n ))\n    local o=$(( 1 + 7 * n - 1 + 7 * n - 2 + 7 * n ))\n \
    \   local p=$(( 1 + 8 * n ))\n    local q=$(( 1 + 8 * n - 1 + 8 * n - 2 + 8 *\
    \ n ))\n    local r=$(( 1 + 9 * n ))\n    local s=$(( 1 + 9 * n - 1 + 9 * n -\
    \ 2 + 9 * n ))\n    local t=$(( 1 + 10 * n ))\n    local u=$(( 1 + 10 * n - 1\
    \ + 10 * n - 2 + 10 * n ))\n    local v=$(( 1 + 11 * n ))\n    local w=$(( 1 +\
    \ 11 * n - 1 + 11 * n - 2 + 11 * n ))\n    local x=$(( 1 + 12 * n ))\n    local\
    \ y=$(( 1 + 12 * n - 1 + 12 * n - 2 + 12 * n ))\n    local z=$(( 1 + 13 * n ))\n\
    \    local A=$(( 1 + 13 * n - 1 + 13 * n - 2 + 13 * n ))\n    local B=$(( 1 +\
    \ 14 * n ))\n    local C=$(( 1 + 14 * n - 1 + 14 * n - 2 + 14 * n ))\n    local\
    \ D=$(( 1 + 15 * n ))\n    local E=$(( 1 + 15 * n - 1 + 15 * n - 2 + 15 * n ))\n\
    \    local F=$(( 1 + 16 * n ))\n    local G=$(( 1 + 16 * n - 1 + 16 * n - 2 +\
    \ 16 * n ))\n    local H=$(( 1 + 17 * n ))\n    local \n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local result=()\n\
    \  local i\n  for i in $(seq 1 $n); do\n    result+=($a)\n    a=$b\n    b=$c\n\
    \    c=$d\n    d=$((a + b + c))\n  done\n  result+=($a)\n  result+=($b)\n  result+=($c)\n\
    \  result+=($d)\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=$(echo \"$n\" | awk '{print $1}')\n  ((n--))\n\
    \  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo\
    \ \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\"\
    \ | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print\
    \ $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n\
    \  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n\
    \  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo\
    \ \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\"\
    \ | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print\
    \ $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n\
    \  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n\
    \  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo\
    \ \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\"\
    \ | awk '{print $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print\
    \ $1}')\n  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n\
    \  ((n--))\n  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n\
    \  result=$(echo \"$result$((n+1))\" | awk '{print $1}')\n  ((n--))\n  result=$(echo\
    \ \"$result$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmperjvxb1w.sh: line 81: unexpected EOF while looking for matching
    `"''

    /tmp/tmperjvxb1w.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local res\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result=()\n    local i=1\n    local j=1\n    local\
    \ k=1\n    local sum=0\n    while [ $i -le $n ]; do\n        sum=$(( sum + $i\
    \ ))\n        if [ $(( i % 2 )) -eq 0 ]; then\n            result[$(( j - 1 ))]=$(echo\
    \ \"$sum\" | bc)\n        else\n            result[$(( k - 1 ))]=$(echo \"$sum\"\
    \ | bc)\n        fi\n        (( i++ ))\n        (( j++ ))\n        (( k++ ))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 2 * n + 1 ))\n  local d=$(( 2 * n - 1 ))\n  local e=$(( n + 1 ))\n  local\
    \ f=$(( n - 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n - 1 ))\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} - 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} - 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} - 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} - 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} - 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} - 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} - 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} - 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} - 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} - 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} - 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} - 1 ))\n\
    \    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n}\
    \ + 1 ))\n    local d=$(( ${n} - 1 ))\n    local e=$(( ${n} + 1 ))\n    local\
    \ f=$(( ${n} - 1 ))\n    local g=$(( ${n} + 1 ))\n    local h=$(( ${n} - 1 ))\n\
    \    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} - 1 ))\n    local k=$(( ${n}\
    \ + 1 ))\n    local l=$(( ${n} - 1 ))\n    local m=$(( ${n} + 1 ))\n    local\
    \ n=$(( ${n} - 1 ))\n    local o=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpor9tg_yp.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmpor9tg_yp.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} + 1 ))\n  local b=$(( ${n} + 2 ))\n  local c=$((\
    \ ${n} + 3 ))\n  local d=$(( ${n} + 4 ))\n  local e=$(( ${n} + 5 ))\n  local f=$((\
    \ ${n} + 6 ))\n  local g=$(( ${n} + 7 ))\n  local h=$(( ${n} + 8 ))\n  local i=$((\
    \ ${n} + 9 ))\n  local j=$(( ${n} + 10 ))\n  local k=$(( ${n} + 11 ))\n  local\
    \ l=$(( ${n} + 12 ))\n  local m=$(( ${n} + 13 ))\n  local n=$(( ${n} + 14 ))\n\
    \  local o=$(( ${n} + 15 ))\n  local p=$(( ${n} + 16 ))\n  local q=$(( ${n} +\
    \ 17 ))\n  local r=$(( ${n} + 18 ))\n  local s=$(( ${n} + 19 ))\n  local t=$((\
    \ ${n} + 20 ))\n  local u=$(( ${n} + 21 ))\n  local v=$(( ${n} + 22 ))\n  local\
    \ w=$(( ${n} + 23 ))\n  local x=$(( ${n} + 24 ))\n  local y=$(( ${n} + 25 ))\n\
    \  local z=$(( ${n} + 26 ))\n  local A=$(( ${n} + 27 ))\n  local B=$(( ${n} +\
    \ 28 ))\n  local C=$(( ${n} + 29 ))\n  local D=$(( ${n} + 30 ))\n  local E=$((\
    \ ${n} + 31 ))\n  local F=$(( ${n} + 32 ))\n  local G=$(( ${n} + 33 ))\n  local\
    \ H=$(( ${n} + 34 ))\n  local I=$(( ${n} + 35 ))\n  local J=$(( ${n} + 36 ))\n\
    \  local K=$(( ${n} + 37 ))\n  local L=$(( ${n} + 38 ))\n  local M=$(( ${n} +\
    \ \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkdhmnjgg.sh: line 60: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkdhmnjgg.sh: line 82: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=0\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local sum=$(( 3 * n + 1 ))\n    local i\n    local j\n  \
    \  local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} + 1 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + ${n} - 1 ))\n    local d=$(( ${n} + ${n} - ${n} ))\n   \
    \ local e=$(( ${n} + ${n} - ${n} - ${n} ))\n    local f=$(( ${n} + ${n} - ${n}\
    \ - ${n} - ${n} ))\n    local g=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} ))\n\
    \    local h=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local\
    \ i=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local j=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local k=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n   \
    \ local l=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} ))\n    local m=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local n=$(( ${n} + ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local o=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} ))\n    local p=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local q=$(( \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp22kn6lv8.sh: line 38: unexpected EOF while looking for matching
    `)''

    /tmp/tmp22kn6lv8.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local res\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n\
    \    local c=$(( 3 * n + 3 ))\n    local d=$(( 3 * n + 4 ))\n    local e=$(( 3\
    \ * n + 5 ))\n    local f=$(( 3 * n + 6 ))\n    local g=$(( 3 * n + 7 ))\n   \
    \ local h=$(( 3 * n + 8 ))\n    local i=$(( 3 * n + 9 ))\n    local j=$(( 3 *\
    \ n + 10 ))\n    local k=$(( 3 * n + 11 ))\n    local l=$(( 3 * n + 12 ))\n  \
    \  local m=$(( 3 * n + 13 ))\n    local n=$(( 3 * n + 14 ))\n    local o=$(( 3\
    \ * n + 15 ))\n    local p=$(( 3 * n + 16 ))\n    local q=$(( 3 * n + 17 ))\n\
    \    local r=$(( 3 * n + 18 ))\n    local s=$(( 3 * n + 19 ))\n    local t=$((\
    \ 3 * n + 20 ))\n    local u=$(( 3 * n + 21 ))\n    local v=$(( 3 * n + 22 ))\n\
    \    local w=$(( 3 * n + 23 ))\n    local x=$(( 3 * n + 24 ))\n    local y=$((\
    \ 3 * n + 25 ))\n    local z=$(( 3 * n + 26 ))\n    local A=$(( 3 * n + 27 ))\n\
    \    local B=$(( 3 * n + 28 ))\n    local C=$(( 3 * n + 29 ))\n    local D=$((\
    \ 3 * n + 30 ))\n    local E=$(( 3 * n + 31 ))\n    local F=$(( 3 * n + 32 ))\n\
    \    local G=$(( 3 * n + 33 ))\n    local H=$(( 3 * n + 34 ))\n    local I=$((\
    \ 3 * n + 35 ))\n    local J=$(( 3 * n + 36 ))\n    local K=$(( 3 * n + 37 ))\n\
    \    local L=$(( 3 * n + 38 ))\n    local M=$(( 3 * n + 39 ))\n    local N=$((\
    \ 3 * n + 40 ))\n    local O=$(( 3 * n + 41 ))\n    local P=$(( 3 * n + 42 ))\n\
    \    local Q=$(( 3 * n + 43 ))\n    local R=$(( 3 * n + 44 ))\n    local S=$((\
    \ 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpa5rvogee.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpa5rvogee.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local -a arr\n  arr=()\n  arr[0]=\"\\\"$n\\\"\"\n  arr[1]=\"\\\
    \"$((n + 1))\\\"\"\n  arr[2]=\"\\\"$((n + 2))\\\"\"\n  arr[3]=\"\\\"$((n + 3))\\\
    \"\"\n  arr[4]=\"\\\"$((n + 4))\\\"\"\n  arr[5]=\"\\\"$((n + 5))\\\"\"\n  arr[6]=\"\
    \\\"$((n + 6))\\\"\"\n  arr[7]=\"\\\"$((n + 7))\\\"\"\n  arr[8]=\"\\\"$((n + 8))\\\
    \"\"\n  arr[9]=\"\\\"$((n + 9))\\\"\"\n  arr[10]=\"\\\"$((n + 10))\\\"\"\n  arr[11]=\"\
    \\\"$((n + 11))\\\"\"\n  arr[12]=\"\\\"$((n + 12))\\\"\"\n  arr[13]=\"\\\"$((n\
    \ + 13))\\\"\"\n  arr[14]=\"\\\"$((n + 14))\\\"\"\n  arr[15]=\"\\\"$((n + 15))\\\
    \"\"\n  arr[16]=\"\\\"$((n + 16))\\\"\"\n  arr[17]=\"\\\"$((n + 17))\\\"\"\n \
    \ arr[18]=\"\\\"$((n + 18))\\\"\"\n  arr[19]=\"\\\"$((n + 19))\\\"\"\n  arr[20]=\"\
    \\\"$((n + 20))\\\"\"\n  arr[21]=\"\\\"$((n + 21))\\\"\"\n  arr[22]=\"\\\"$((n\
    \ + 22))\\\"\"\n  arr[23]=\"\\\"$((n + 23))\\\"\"\n  arr[24]=\"\\\"$((n + 24))\\\
    \"\"\n  arr[25]=\"\\\"$((n + 25))\\\"\"\n  arr[26]=\"\\\"$((n + 26))\\\"\"\n \
    \ arr[27]=\"\\\"$((n + 27))\\\"\"\n  arr[28]=\"\\\"$((n + 28))\\\"\"\n  arr[29]=\"\
    \\\"$((n + 29))\\\"\"\n  arr[30]=\"\\\"$((n + 30))\\\"\"\n  arr[31]=\"\\\"$((n\
    \ + 31))\\\"\"\n  arr[32]=\"\\\"$((n + 32))\\\"\"\n  arr[33]=\"\\\"$((n + 33))\\\
    \"\"\n  arr[34]=\"\\\"$((n + 34))\\\"\"\n  arr[35]=\"\\\"$((n + 35))\\\"\"\n \
    \ arr[36]=\"\\\"$((n + 36))\\\"\"\n  arr[37]=\"\\\"$((n + 37))\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp62ae3kcs.sh: line 79: unexpected EOF while looking for matching
    `"''

    /tmp/tmp62ae3kcs.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local res\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local a=$(( n + 1 ))\n  local b=$(( n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n\
    \    local c=$(( 3 * n + 3 ))\n    local d=$(( 3 * n + 4 ))\n    local e=$(( 3\
    \ * n + 5 ))\n    local f=$(( 3 * n + 6 ))\n    local g=$(( 3 * n + 7 ))\n   \
    \ local h=$(( 3 * n + 8 ))\n    local i=$(( 3 * n + 9 ))\n    local j=$(( 3 *\
    \ n + 10 ))\n    local k=$(( 3 * n + 11 ))\n    local l=$(( 3 * n + 12 ))\n  \
    \  local m=$(( 3 * n + 13 ))\n    local n=$(( 3 * n + 14 ))\n    local o=$(( 3\
    \ * n + 15 ))\n    local p=$(( 3 * n + 16 ))\n    local q=$(( 3 * n + 17 ))\n\
    \    local r=$(( 3 * n + 18 ))\n    local s=$(( 3 * n + 19 ))\n    local t=$((\
    \ 3 * n + 20 ))\n    local u=$(( 3 * n + 21 ))\n    local v=$(( 3 * n + 22 ))\n\
    \    local w=$(( 3 * n + 23 ))\n    local x=$(( 3 * n + 24 ))\n    local y=$((\
    \ 3 * n + 25 ))\n    local z=$(( 3 * n + 26 ))\n    local a=$(( 3 * n + 27 ))\n\
    \    local b=$(( 3 * n + 28 ))\n    local c=$(( 3 * n + 29 ))\n    local d=$((\
    \ 3 * n + 30 ))\n    local e=$(( 3 * n + 31 ))\n    local f=$(( 3 * n + 32 ))\n\
    \    local g=$(( 3 * n + 33 ))\n    local h=$(( 3 * n + 34 ))\n    local i=$((\
    \ 3 * n + 35 ))\n    local j=$(( 3 * n + 36 ))\n    local k=$(( 3 * n + 37 ))\n\
    \    local l=$(( 3 * n + 38 ))\n    local m=$(( 3 * n + 39 ))\n    local n=$((\
    \ 3 * n + 40 ))\n    local o=$(( 3 * n + 41 ))\n    local p=$(( 3 * n + 42 ))\n\
    \    local q=$(( 3 * n + 43 ))\n    local r=$(( 3 * n + 44 ))\n    local s=$((\
    \ 3 * n + 45 ))\n    local t=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpvv6jn7wx.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvv6jn7wx.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n\
    \    local c=$(( 3 * n + 2 ))\n    local d=$(( 3 * n - 2 ))\n    local e=$(( 3\
    \ * n + 3 ))\n    local f=$(( 3 * n - 3 ))\n    local g=$(( 3 * n + 4 ))\n   \
    \ local h=$(( 3 * n - 4 ))\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local\
    \ c=$(( n + 1 ))\n  local d=$(( n + 1 ))\n  local e=$(( n + 1 ))\n  local f=$((\
    \ n + 1 ))\n  local g=$(( n + 1 ))\n  local h=$(( n + 1 ))\n  local i=$(( n +\
    \ 1 ))\n  local j=$(( n + 1 ))\n  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n\
    \  local m=$(( n + 1 ))\n  local n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local\
    \ p=$(( n + 1 ))\n  local q=$(( n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$((\
    \ n + 1 ))\n  local t=$(( n + 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n +\
    \ 1 ))\n  local w=$(( n + 1 ))\n  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n\
    \  local z=$(( n + 1 ))\n  local A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local\
    \ C=$(( n + 1 ))\n  local D=$(( n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$((\
    \ n + 1 ))\n  local G=$(( n + 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n +\
    \ 1 ))\n  local J=$(( n + 1 ))\n  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n\
    \  local M=$(( n + 1 ))\n  local N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local\
    \ P=$(( n + 1 ))\n  local Q=$(( n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$((\
    \ n + 1 ))\n  local T=$(( n + 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n +\
    \ 1 ))\n  local W=$(( n + 1 ))\n  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 1 ))\n  local d=$(( 3 * n - 1 ))\n  local result=()\n  local i\n\
    \  for i in $(seq 1 $n); do\n    result+=(\"$a\")\n    a=$b\n    b=$c\n    c=$d\n\
    \    d=$((a + b + c + d))\n  done\n  result+=(\"$a\")\n  result+=(\"$c\")\n  result+=(\"\
    $d\")\n  result+=(\"$((a + c + d))\")\n  result+=(\"$((a + b + d))\")\n  result+=(\"\
    $((b + c + d))\")\n  result+=(\"$((b + a + d))\")\n  result+=(\"$((c + a + d))\"\
    )\n  result+=(\"$((c + b + d))\")\n  result+=(\"$((d + a + b))\")\n  result+=(\"\
    $((d + b + a))\")\n  result+=(\"$((d + c + a))\")\n  result+=(\"$((d + c + b))\"\
    )\n  result+=(\"$((d + a + c))\")\n  result+=(\"$((d + b + a))\")\n  result+=(\"\
    $((d + c + a))\")\n  result+=(\"$((d + a + b))\")\n  result+=(\"$((d + b + c))\"\
    )\n  result+=(\"$((d + c + a))\")\n  result+=(\"$((d + a + c))\")\n  result+=(\"\
    $((d + b + a))\")\n  result+=(\"$((d + c + a))\")\n  result+=(\"$((d + a + b))\"\
    )\n  result+=(\"$((d + b + c))\")\n  result+=(\"$((d + c + a))\")\n  result+=(\"\
    $((d + a + c))\")\n  result+=(\"$((d + b + a))\")\n  result+=(\"$((d + c + a))\"\
    )\n  result+=(\"$((d + a + b))\")\n  result+=(\"$((d + b + c))\")\n  result+=(\"\
    $((d + c + a))\")\n  result+=(\"$((d + a + c))\")\n  result+=(\"$((d + b + a))\"\
    )\n  result+=(\"$((d + c + a))\")\n  result+=(\"$((d + a + b))\")\n  result+=(\"\
    $((d + b + c))\")\n  result+=(\"$((d + \n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrubh_hz.sh: line 71: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmrubh_hz.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$((n-1))\n  local b=$((n-2))\n  local c=$((n+1))\n  local\
    \ d=$((n+2))\n  local e=$((n+3))\n  local f=$((n+4))\n  local g=$((n+5))\n  local\
    \ h=$((n+6))\n  local i=$((n+7))\n  local j=$((n+8))\n  local k=$((n+9))\n  local\
    \ l=$((n+10))\n  local m=$((n+11))\n  local n=$((n+12))\n  local o=$((n+13))\n\
    \  local p=$((n+14))\n  local q=$((n+15))\n  local r=$((n+16))\n  local s=$((n+17))\n\
    \  local t=$((n+18))\n  local u=$((n+19))\n  local v=$((n+20))\n  local w=$((n+21))\n\
    \  local x=$((n+22))\n  local y=$((n+23))\n  local z=$((n+24))\n  local A=$((n+25))\n\
    \  local B=$((n+26))\n  local C=$((n+27))\n  local D=$((n+28))\n  local E=$((n+29))\n\
    \  local F=$((n+30))\n  local G=$((n+31))\n  local H=$((n+32))\n  local I=$((n+33))\n\
    \  local J=$((n+34))\n  local K=$((n+35))\n  local L=$((n+36))\n  local M=$((n+37))\n\
    \  local N=$((n+38))\n  local O=$((n+39))\n  local P=$((n+40))\n  local Q=$((n+41))\n\
    \  local R=$((n+42))\n  local S=$((n+43))\n  local T=$((n+44))\n  local U=$((n+45))\n\
    \  local V=$((n+46))\n  local W=$((n+47))\n  local X=$((n+48))\n  local Y=$((n+49))\n\
    \  local Z=$((n+50))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$((n-1))\n    local b=$((n-2))\n    local c=$((n+1))\n\
    \    local d=$((n+2))\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n\
    \  local B=$(( 3 * n + 28 ))\n  local C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n\
    \ + 30 ))\n  local E=$(( 3 * n + 31 ))\n  local F=$(( 3 * n + 32 ))\n  local G=$((\
    \ 3 * n + 33 ))\n  local H=$(( 3 * n + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local\
    \ J=$(( 3 * n + 36 ))\n  local K=$(( 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n\
    \  local M=$(( 3 * n + 39 ))\n  local N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n\
    \ + 41 ))\n  local P=$(( 3 * n + 42 ))\n  local Q=$(( 3 * n + 43 ))\n  local R=$((\
    \ 3 * n + 44 ))\n  local S=$(( 3 * n + 45 ))\n  local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvj9ppjrf.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvj9ppjrf.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local result\n\
    \  result=$(eval echo \\${$a}+\\${$b}+\\${$c})\n  while [ $n -gt 0 ]; do\n   \
    \ local temp=$a\n    a=$b\n    b=$c\n    c=$temp\n    temp=$(eval echo \\${$a}+\\\
    ${$b}+\\${$c})\n    d=$temp\n    result=$(eval echo \\${$result}+\\${$d})\n  \
    \  n=$((n-1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu4keuh4w.sh: line 35: ${+}+${3+3+3}: bad substitution

    /tmp/tmpu4keuh4w.sh: line 35: ${}+${3+3+3}: bad substitution

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  local d=$(( 3 * n - 2 ))\n  local res\n  \n  res=$(( ${a}\
    \ + ${b} + ${c} ))\n  \n  if [[ ${n} -eq 0 ]]; then\n    echo \"${res}\"\n  else\n\
    \    echo \"${res} + ${d}\"\n  fi\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local result=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} + 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} + 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} + 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} + 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} + 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} + 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} + 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} + 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} + 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} + 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} + 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} + 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} + 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} + 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} + 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} + 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} + 1 ))\n    local M=$(( ${n} + 1 ))\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    if [ $n -eq 0 ]; then\n        result=(\"\
    1\")\n    elif [ $n -eq 1 ]; then\n        result=(\"3\")\n    elif [ $n -eq 2\
    \ ]; then\n        result=(\"2\")\n    elif [ $n -eq 3 ]; then\n        result=(\"\
    8\")\n    else\n        result=()\n    fi\n    local i\n    for i in $(seq 1 $n);\
    \ do\n        result+=(\"$(( $(tri $(( n - i )) )) $(( $(tri $(( i + 1 )) )) ))\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpe792sxmi.sh: command substitution: line 36: syntax error near unexpected
    token `$(( $(tri $(( i + 1 )) )) )''

    /tmp/tmpe792sxmi.sh: command substitution: line 36: `( $(tri $(( n - i )) )) $((
    $(tri $(( i + 1 )) )) )''

    /tmp/tmpe792sxmi.sh: command substitution: line 36: syntax error near unexpected
    token `$(( $(tri $(( i + 1 )) )) )''

    /tmp/tmpe792sxmi.sh: command substitution: line 36: `( $(tri $(( n - i )) )) $((
    $(tri $(( i + 1 )) )) )''

    /tmp/tmpe792sxmi.sh: command substitution: line 36: syntax error near unexpected
    token `$(( $(tri $(( i + 1 )) )) )''

    /tmp/tmpe792sxmi.sh: command substitution: line 36: `( $(tri $(( n - i )) )) $((
    $(tri $(( i + 1 )) )) )''

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local -a arr\n  arr=()\n  arr+=(\"$n\")\n  ((n%2==0)) && arr+=(\"\
    $((n+1))\")\n  ((n%2!=0)) && arr+=(\"$((n+1))\")\n  arr+=(\"$((n+2))\")\n  echo\
    \ \"${arr[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=()\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      result+=(\"$i\")\n    else\n  \
    \    result+=(\"$((i + 1))\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local result\n\
    \  result=$(echo \"$n\" | sed 's/^0*//')\n  while [ \"$n\" -gt 0 ]; do\n    local\
    \ temp=$(( $a + $b ))\n    local temp2=$(( $c + $d ))\n    local temp3=$(( $temp\
    \ + $temp2 ))\n    local temp4=$(( $temp3 + $temp2 ))\n    local temp5=$(( $temp4\
    \ + $temp3 ))\n    local temp6=$(( $temp5 + $temp4 ))\n    local temp7=$(( $temp6\
    \ + $temp5 ))\n    local temp8=$(( $temp7 + $temp6 ))\n    local temp9=$(( $temp8\
    \ + $temp7 ))\n    local temp10=$(( $temp9 + $temp8 ))\n    local temp11=$(( $temp10\
    \ + $temp9 ))\n    local temp12=$(( $temp11 + $temp10 ))\n    local temp13=$((\
    \ $temp12 + $temp11 ))\n    local temp14=$(( $temp13 + $temp12 ))\n    local temp15=$((\
    \ $temp14 + $temp13 ))\n    local temp16=$(( $temp15 + $temp14 ))\n    local temp17=$((\
    \ $temp16 + $temp15 ))\n    local temp18=$(( $temp17 + $temp16 ))\n    local temp19=$((\
    \ $temp18 + $temp17 ))\n    local temp20=$(( $temp19 + $temp18 ))\n    local temp21=$((\
    \ $temp20 + $temp19 ))\n    local temp22=$(( $temp21 + $temp20 ))\n    local temp23=$((\
    \ $temp22 + $temp21 ))\n    local temp24=$(( $temp23 + $temp22 ))\n    local temp25=$((\
    \ $temp24 + $temp23 ))\n    local temp26=$(( $temp25 + $temp24 ))\n    local temp27=$((\
    \ $temp26 + $temp25 ))\n    local temp28=$(( $temp27 + $temp26 ))\n    local temp29=$((\
    \ $temp28 + $temp27 ))\n    local temp30=$(( $temp29 + $temp28 ))\n    local temp31=$((\
    \ $temp30 + $temp29 ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz8ehag1x.sh: line 60: syntax error near unexpected token `}''

    /tmp/tmpz8ehag1x.sh: line 60: `}''

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local\
    \ B=$(( 1 + n / 2 ))\n  local C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n\
    \  local E=$(( 1 + n / 2 ))\n  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n /\
    \ 2 ))\n  local H=$(( 1 + n / 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$((\
    \ 1 + n / 2 ))\n  local K=$(( 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local\
    \ M=$(( 1 + n / 2 ))\n  local N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n\
    \  local P=$(( 1 + n / 2 ))\n  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local sum=$((n+1))\n  local i\n  local result\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( ${n} + 1 ))\n  local b=$(( ${n} + 2 ))\n  local c=$((\
    \ ${n} + 3 ))\n  local d=$(( ${n} + 4 ))\n  local e=$(( ${n} + 5 ))\n  local f=$((\
    \ ${n} + 6 ))\n  local g=$(( ${n} + 7 ))\n  local h=$(( ${n} + 8 ))\n  local i=$((\
    \ ${n} + 9 ))\n  local j=$(( ${n} + 10 ))\n  local k=$(( ${n} + 11 ))\n  local\
    \ l=$(( ${n} + 12 ))\n  local m=$(( ${n} + 13 ))\n  local n=$(( ${n} + 14 ))\n\
    \  local o=$(( ${n} + 15 ))\n  local p=$(( ${n} + 16 ))\n  local q=$(( ${n} +\
    \ 17 ))\n  local r=$(( ${n} + 18 ))\n  local s=$(( ${n} + 19 ))\n  local t=$((\
    \ ${n} + 20 ))\n  local u=$(( ${n} + 21 ))\n  local v=$(( ${n} + 22 ))\n  local\
    \ w=$(( ${n} + 23 ))\n  local x=$(( ${n} + 24 ))\n  local y=$(( ${n} + 25 ))\n\
    \  local z=$(( ${n} + 26 ))\n  local A=$(( ${n} + 27 ))\n  local B=$(( ${n} +\
    \ 28 ))\n  local C=$(( ${n} + 29 ))\n  local D=$(( ${n} + 30 ))\n  local E=$((\
    \ ${n} + 31 ))\n  local F=$(( ${n} + 32 ))\n  local G=$(( ${n} + 33 ))\n  local\
    \ H=$(( ${n} + 34 ))\n  local I=$(( ${n} + 35 ))\n  local J=$(( ${n} + 36 ))\n\
    \  local K=$(( ${n} + 37 ))\n  local L=$(( ${n} + 38 ))\n  local M=$(( ${n} +\
    \ \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkdhmnjgg.sh: line 60: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkdhmnjgg.sh: line 82: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local result\n    if [ $n -eq 1 ]\n    then\n        result=\"\
    \\\"1\\\"\"\n    elif [ $n -eq 2 ]\n    then\n        result=\"\\\"2\\\"\"\n \
    \   elif [ $n -eq 3 ]\n    then\n        result=\"\\\"3\\\"\"\n    elif [ $n -eq\
    \ 4 ]\n    then\n        result=\"\\\"4\\\"\"\n    elif [ $n -eq 5 ]\n    then\n\
    \        result=\"\\\"5\\\"\"\n    elif [ $n -eq 6 ]\n    then\n        result=\"\
    \\\"6\\\"\"\n    elif [ $n -eq 7 ]\n    then\n        result=\"\\\"7\\\"\"\n \
    \   elif [ $n -eq 8 ]\n    then\n        result=\"\\\"8\\\"\"\n    elif [ $n -eq\
    \ 9 ]\n    then\n        result=\"\\\"9\\\"\"\n    elif [ $n -eq 10 ]\n    then\n\
    \        result=\"\\\"10\\\"\"\n    elif [ $n -eq 11 ]\n    then\n        result=\"\
    \\\"11\\\"\"\n    elif [ $n -eq 12 ]\n    then\n        result=\"\\\"12\\\"\"\n\
    \    elif [ $n -eq 13 ]\n    then\n        result=\"\\\"13\\\"\"\n    elif [ $n\
    \ -eq 14 ]\n    then\n        result=\"\\\"14\\\"\"\n    elif [ $n -eq 15 ]\n\
    \    then\n        result=\"\\\"15\\\"\"\n    elif [ $n -eq 16 ]\n    then\n \
    \       result=\"\\\"16\\\"\"\n    elif [ $n -eq 17 ]\n    then\n        result=\"\
    \\\"17\\\"\"\n    elif [ $n -eq 18 ]\n    then\n        result=\"\\\"18\\\"\"\n\
    \    elif [ $n -eq 19 ]\n    then\n        result=\"\\\"19\\\"\"\n    elif [ $n\
    \ -eq 20 ]\n    then\n        result=\"\\\"20\\\"\"\n    elif [ $n -eq 21 ]\n\
    \    then\n        result=\"\\\"21\\\"\"\n    elif [ $n -eq 22 ]\n    then\n \
    \       result=\"\\\"22\\\"\"\n    elif [ $n -eq 23 ]\n    then\n        result=\"\
    \\\"23\\\"\"\n    elif [ $n -eq 24 ]\n    then\n        result=\"\\\"24\\\"\"\n\
    \    elif [ $n -eq 25 ]\n    then\n        result=\"\\\"25\\\"\"\n    elif [ $n\
    \ -eq 26 ]\n    then\n        result=\"\\\"26\\\"\"\n    elif [ $n -eq 27 ]\n\
    \    then\n        result=\"\\\"27\\\"\"\n    elif [ $n -eq 28 ]\n    then\n \
    \       result=\"\\\"28\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9t6gr5mu.sh: line 124: unexpected EOF while looking for matching
    `"''

    /tmp/tmp9t6gr5mu.sh: line 128: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( n - 1 ))\n    local b=$(( n - 2 ))\n    local\
    \ c=$(( n + 1 ))\n    local d=$(( n + 2 ))\n    local res\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( n + 1 ))\n  echo \"$a $b $c\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n ))\n  local b=$(( 1 + n / 2 ))\n  local c=$((\
    \ 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local\
    \ f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n\
    \  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n /\
    \ 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$((\
    \ 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local\
    \ q=$(( 1 + n / 2 ))\n  local r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n\
    \  local t=$(( 1 + n / 2 ))\n  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n /\
    \ 2 ))\n  local w=$(( 1 + n / 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$((\
    \ 1 + n / 2 ))\n  local z=$(( 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local\
    \ b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n\
    \  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n /\
    \ 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$((\
    \ 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local\
    \ m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n\
    \  local p=$(( 1 + n / 2 ))\n  local q=$\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local result\n  result=()\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    result+=($(echo \"$i\" | bc -l))\n  done\n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local result=()\n\
    \  while [ $n -gt 0 ]; do\n    local tmp=$(( $a + $b ))\n    local tmp2=$(( $c\
    \ + $d ))\n    local tmp3=$(( $a + $c + $b ))\n    local tmp4=$(( $b + $d + $c\
    \ ))\n    local tmp5=$(( $a + $d + $c ))\n    local tmp6=$(( $c + $d + $b ))\n\
    \    local tmp7=$(( $b + $c + $d ))\n    local tmp8=$(( $a + $c + $d + $b ))\n\
    \    local tmp9=$(( $b + $d + $c + $a ))\n    local tmp10=$(( $a + $d + $c + $b\
    \ ))\n    local tmp11=$(( $c + $d + $a + $b ))\n    local tmp12=$(( $b + $c +\
    \ $a + $d ))\n    local tmp13=$(( $a + $c + $d + $b ))\n    local tmp14=$(( $b\
    \ + $d + $c + $a ))\n    local tmp15=$(( $a + $d + $c + $b ))\n    local tmp16=$((\
    \ $c + $d + $a + $b ))\n    local tmp17=$(( $b + $c + $a + $d ))\n    local tmp18=$((\
    \ $a + $c + $d + $b ))\n    local tmp19=$(( $b + $d + $c + $a ))\n    local tmp20=$((\
    \ $c + $d + $a + $b ))\n    local tmp21=$(( $b + $c + $a + $d ))\n    local tmp22=$((\
    \ $a + $c + $d + $b ))\n    local tmp23=$(( $b + $d + $c + $a ))\n    local tmp24=$((\
    \ $c + $d + $a + $b ))\n    local tmp25=$(( $b + $c + $a + $d ))\n    local tmp26=$((\
    \ $a + $c + $d + $b ))\n    local tmp27=$(( $b + $d + $c + $a ))\n    local tmp28=$((\
    \ $c + $d + $a + $b ))\n    local tmp29=$(( $b + $c + $a + $d ))\n    local tmp30=$((\
    \ $a + $c + $d + \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpze6kkj_t.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpze6kkj_t.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( 3 * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n\
    \    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n\
    \    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n\
    \    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n\
    \    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n\
    \    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n\
    \    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n\
    \    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n\
    \    local x=$(( n + 1 ))\n    local y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n\
    \    local A=$(( n + 1 ))\n    local B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n\
    \    local D=$(( n + 1 ))\n    local E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n\
    \    local G=$(( n + 1 ))\n    local H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n\
    \    local J=$(( n + 1 ))\n    local K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n\
    \    local M=$(( n + 1 ))\n    local N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n\
    \    local P=$(( n + 1 ))\n    local Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n\
    \    local S=$(( n + 1 ))\n    local T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n\
    \    local V=$(( n + 1 ))\n    local W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n\
    \    local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local\
    \ c=$(( 3 * n + 3 ))\n  local d=$(( 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n\
    \  local f=$(( 3 * n + 6 ))\n  local g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n +\
    \ 8 ))\n  local i=$(( 3 * n + 9 ))\n  local j=$(( 3 * n + 10 ))\n  local k=$((\
    \ 3 * n + 11 ))\n  local l=$(( 3 * n + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local\
    \ n=$(( 3 * n + 14 ))\n  local o=$(( 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n\
    \  local q=$(( 3 * n + 17 ))\n  local r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n\
    \ + 19 ))\n  local t=$(( 3 * n + 20 ))\n  local u=$(( 3 * n + 21 ))\n  local v=$((\
    \ 3 * n + 22 ))\n  local w=$(( 3 * n + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local\
    \ y=$(( 3 * n + 25 ))\n  local z=$(( 3 * n + 26 ))\n  local a=$(( 3 * n + 27 ))\n\
    \  local b=$(( 3 * n + 28 ))\n  local c=$(( 3 * n + 29 ))\n  local d=$(( 3 * n\
    \ + 30 ))\n  local e=$(( 3 * n + 31 ))\n  local f=$(( 3 * n + 32 ))\n  local g=$((\
    \ 3 * n + 33 ))\n  local h=$(( 3 * n + 34 ))\n  local i=$(( 3 * n + 35 ))\n  local\
    \ j=$(( 3 * n + 36 ))\n  local k=$(( 3 * n + 37 ))\n  local l=$(( 3 * n + 38 ))\n\
    \  local m=$(( 3 * n + 39 ))\n  local n=$(( 3 * n + 40 ))\n  local o=$(( 3 * n\
    \ + 41 ))\n  local p=$(( 3 * n + 42 ))\n  local q=$(( 3 * n + 43 ))\n  local r=$((\
    \ 3 * n + 44 ))\n  local s=$(( 3 * n + 45 ))\n  local t=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3tbm8oiy.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmp3tbm8oiy.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 3 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 1 ))\n    local e=$(( ${n}\
    \ + 1 ))\n    local f=$(( ${n} + 1 ))\n    local g=$(( ${n} + 1 ))\n    local\
    \ h=$(( ${n} + 1 ))\n    local i=$(( ${n} + 1 ))\n    local j=$(( ${n} + 1 ))\n\
    \    local k=$(( ${n} + 1 ))\n    local l=$(( ${n} + 1 ))\n    local m=$(( ${n}\
    \ + 1 ))\n    local n=$(( ${n} + 1 ))\n    local o=$(( ${n} + 1 ))\n    local\
    \ p=$(( ${n} + 1 ))\n    local q=$(( ${n} + 1 ))\n    local r=$(( ${n} + 1 ))\n\
    \    local s=$(( ${n} + 1 ))\n    local t=$(( ${n} + 1 ))\n    local u=$(( ${n}\
    \ + 1 ))\n    local v=$(( ${n} + 1 ))\n    local w=$(( ${n} + 1 ))\n    local\
    \ x=$(( ${n} + 1 ))\n    local y=$(( ${n} + 1 ))\n    local z=$(( ${n} + 1 ))\n\
    \    local A=$(( ${n} + 1 ))\n    local B=$(( ${n} + 1 ))\n    local C=$(( ${n}\
    \ + 1 ))\n    local D=$(( ${n} + 1 ))\n    local E=$(( ${n} + 1 ))\n    local\
    \ F=$(( ${n} + 1 ))\n    local G=$(( ${n} + 1 ))\n    local H=$(( ${n} + 1 ))\n\
    \    local I=$(( ${n} + 1 ))\n    local J=$(( ${n} + 1 ))\n    local K=$(( ${n}\
    \ + 1 ))\n    local L=$(( ${n} + 1 ))\n    local M=$(( ${n} + 1 ))\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n - 1 ))\n  local b=$(( n - 2 ))\n  local c=$(( n\
    \ + 1 ))\n  local d=$(( n + 2 ))\n  local result\n  result=$(( 3 * a + 2 * b +\
    \ c ))\n  result=$(( result / 2 ))\n  result=$(( result + d ))\n  result=$(( result\
    \ / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( 3 * n + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local\
    \ c=$(( 3 * n + 2 ))\n  local d=$(( 3 * n - 2 ))\n  local res\n  res=$(printf\
    \ \"\\\"%d\\\" \\\"%d\\\" \\\"%d\\\" \\\"%d\\\"\\n\"  \"$a\" \"$b\" \"$c\" \"\
    $d\")\n  echo \"$res\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=0\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n\
    \  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n\
    \  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n\
    \  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n\
    \  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n\
    \  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n\
    \  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n\
    \  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n\
    \  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n\
    \  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n\
    \  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n\
    \  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n\
    \  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n\
    \  \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \    local n=$1\n    local a=$(( ${n} * 2 ))\n    local b=$(( ${n} - 1 ))\n  \
    \  local c=$(( ${n} + 1 ))\n    local d=$(( ${n} + 2 ))\n    local e=$(( ${n}\
    \ + 3 ))\n    local f=$(( ${n} + 4 ))\n    local g=$(( ${n} + 5 ))\n    local\
    \ h=$(( ${n} + 6 ))\n    local i=$(( ${n} + 7 ))\n    local j=$(( ${n} + 8 ))\n\
    \    local k=$(( ${n} + 9 ))\n    local l=$(( ${n} + 10 ))\n    local m=$(( ${n}\
    \ + 11 ))\n    local n=$(( ${n} + 12 ))\n    local o=$(( ${n} + 13 ))\n    local\
    \ p=$(( ${n} + 14 ))\n    local q=$(( ${n} + 15 ))\n    local r=$(( ${n} + 16\
    \ ))\n    local s=$(( ${n} + 17 ))\n    local t=$(( ${n} + 18 ))\n    local u=$((\
    \ ${n} + 19 ))\n    local v=$(( ${n} + 20 ))\n    local w=$(( ${n} + 21 ))\n \
    \   local x=$(( ${n} + 22 ))\n    local y=$(( ${n} + 23 ))\n    local z=$(( ${n}\
    \ + 24 ))\n    local A=$(( ${n} + 25 ))\n    local B=$(( ${n} + 26 ))\n    local\
    \ C=$(( ${n} + 27 ))\n    local D=$(( ${n} + 28 ))\n    local E=$(( ${n} + 29\
    \ ))\n    local F=$(( ${n} + 30 ))\n    local G=$(( ${n} + 31 ))\n    local H=$((\
    \ ${n} + 32 ))\n    local I=$(( ${n} + 33 ))\n    local J=$(( ${n} + 34 ))\n \
    \   local K=$(( ${n} + 35 ))\n    local L=$(( ${n} + 36 ))\n    local M=$(( ${n}\
    \ + 37 ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2\
    \ 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n+1 ))\n  local b=$(( n+1 ))\n  local c=$(( n+1 ))\n\
    \  local d=$(( n+1 ))\n  local e=$(( n+1 ))\n  local f=$(( n+1 ))\n  local g=$((\
    \ n+1 ))\n  local h=$(( n+1 ))\n  local i=$(( n+1 ))\n  local j=$(( n+1 ))\n \
    \ local k=$(( n+1 ))\n  local l=$(( n+1 ))\n  local m=$(( n+1 ))\n  local n=$((\
    \ n+1 ))\n  local o=$(( n+1 ))\n  local p=$(( n+1 ))\n  local q=$(( n+1 ))\n \
    \ local r=$(( n+1 ))\n  local s=$(( n+1 ))\n  local t=$(( n+1 ))\n  local u=$((\
    \ n+1 ))\n  local v=$(( n+1 ))\n  local w=$(( n+1 ))\n  local x=$(( n+1 ))\n \
    \ local y=$(( n+1 ))\n  local z=$(( n+1 ))\n  local A=$(( n+1 ))\n  local B=$((\
    \ n+1 ))\n  local C=$(( n+1 ))\n  local D=$(( n+1 ))\n  local E=$(( n+1 ))\n \
    \ local F=$(( n+1 ))\n  local G=$(( n+1 ))\n  local H=$(( n+1 ))\n  local I=$((\
    \ n+1 ))\n  local J=$(( n+1 ))\n  local K=$(( n+1 ))\n  local L=$(( n+1 ))\n \
    \ local M=$(( n+1 ))\n  local N=$(( n+1 ))\n  local O=$(( n+1 ))\n  local P=$((\
    \ n+1 ))\n  local Q=$(( n+1 ))\n  local R=$(( n+1 ))\n  local S=$(( n+1 ))\n \
    \ local T=$(( n+1 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n - 1 ))\n  local b=$(( n - 2 ))\n  local c=$(( n\
    \ + 1 ))\n  local d=$(( n + 2 ))\n  local result\n  result=()\n  while [ $n -gt\
    \ 0 ]; do\n    result=( \"${result[@]}\" \"$a\" \"$b\" \"$c\" \"$d\" )\n    n=$((\
    \ n - 1 ))\n    a=$(( a + b ))\n    b=$(( b + c ))\n    c=$(( c + d ))\n    d=$((\
    \ d + a ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local result=()\n\
    \  local i\n  \n  for ((i=1; i<n; i++))\n  do\n    result+=($a)\n    a=$((a+b))\n\
    \    b=$((b+c))\n    c=$((c+d))\n    d=$((d+a+b))\n  done\n  \n  result+=($a)\n\
    \  result+=($b)\n  result+=($c)\n  result+=($d)\n  \n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660043029
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"\
    3\")\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n\
    \  local n=$1\n  local a=$(( n+1 ))\n  local b=$(( n+2 ))\n  local c=$(( n+3 ))\n\
    \  local d=$(( n+4 ))\n  local e=$(( n+5 ))\n  local f=$(( n+6 ))\n  local g=$((\
    \ n+7 ))\n  local h=$(( n+8 ))\n  local i=$(( n+9 ))\n  local j=$(( n+10 ))\n\
    \  local k=$(( n+11 ))\n  local l=$(( n+12 ))\n  local m=$(( n+13 ))\n  local\
    \ n=$(( n+14 ))\n  local o=$(( n+15 ))\n  local p=$(( n+16 ))\n  local q=$(( n+17\
    \ ))\n  local r=$(( n+18 ))\n  local s=$(( n+19 ))\n  local t=$(( n+20 ))\n  local\
    \ u=$(( n+21 ))\n  local v=$(( n+22 ))\n  local w=$(( n+23 ))\n  local x=$(( n+24\
    \ ))\n  local y=$(( n+25 ))\n  local z=$(( n+26 ))\n  local A=$(( n+27 ))\n  local\
    \ B=$(( n+28 ))\n  local C=$(( n+29 ))\n  local D=$(( n+30 ))\n  local E=$(( n+31\
    \ ))\n  local F=$(( n+32 ))\n  local G=$(( n+33 ))\n  local H=$(( n+34 ))\n  local\
    \ I=$(( n+35 ))\n  local J=$(( n+36 ))\n  local K=$(( n+37 ))\n  local L=$(( n+38\
    \ ))\n  local M=$(( n+39 ))\n  local N=$(( n+40 ))\n  local O=$(( n+41 ))\n  local\
    \ P=$(( n+42 ))\n  local Q=$(( n+43 ))\n  local R=$(( n+44 ))\n  local S=$(( n+45\
    \ ))\n  local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwxg7b6t9.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwxg7b6t9.sh: line 89: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660043029

name: HumanEval_147_get_max_triples
language: sh
prompt: "#!/bin/bash\n# You are given a positive integer n. You have to create an\
  \ integer array a of length n.\n# For each i (1 \u2264 i \u2264 n), the value of\
  \ a[i] = i * i - i + 1.\n# Return the number of triples (a[i], a[j], a[k]) of a\
  \ where i < j < k, \n# and a[i] + a[j] + a[k] is a multiple of 3.\n# Example :\n\
  # >>> $(get_max_triples \"5\")\n# \"1\"\n# Explanation: \n# a = [1, 3, 7, 13, 21]\n\
  # The only valid triple is (1, 7, 13).\n#\n# $1 is an integer\nget_max_triples()\
  \ {\n"
tests: "}\n\ncandidate() {\n    get_max_triples \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\") = \"1\" ]]\n    [[ $(candidate \"6\") = \"4\" ]]\n  \
  \  [[ $(candidate \"10\") = \"36\" ]]\n    [[ $(candidate \"100\") = \"53361\" ]]\n\
  }\n\nrun_test"
completions: ["  local n=$1\n  local a=($(seq $n))\n  local triples=0\n  local i j\
    \ k\n  for i in $(seq 0 $((n-1))); do\n    for j in $(seq 0 $((n-1))); do\n  \
    \    for k in $(seq 0 $((n-1))); do\n        if (( ${a[i]} + ${a[j]} + ${a[k]}\
    \ % 3 == 0 )); then\n          triples=$((triples + 1))\n        fi\n      done\n\
    \    done\n  done\n  echo $triples", "    local n=$1\n    local a=($(seq 1 $n))\n\
    \    local i=0\n    local j=0\n    local k=0\n    local triples=0\n    while [\
    \ $i -lt $n ]; do\n        i=$((i+1))\n        j=$((i+1))\n        k=$((i+1))\n\
    \        if [ $i -eq $n ]; then\n            i=$((n-1))\n        fi\n        if\
    \ [ $j -eq $n ]; then\n            j=$((n-1))\n        fi\n        if [ $k -eq\
    \ $n ]; then\n            k=$((n-1))\n        fi\n        if [ $a[i] -eq $a[j]\
    \ -a $a[i] -eq $a[k] ]; then\n            triples=$((triples + 1))\n        fi\n\
    \    done\n    echo \"$triples\"", "  local n=$1\n  local a=($(seq 1 $n))\n  local\
    \ i\n  local j\n  local k\n  local sum\n  local count\n  local triple\n  local\
    \ triples=0\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        sum=$((i * i - i + 1))\n        triple=$((sum\
    \ * sum - i * j))\n        if (( triple % 3 == 0 )); then\n          triples=$((triples\
    \ + 1))\n        fi\n      done\n    done\n  done\n  echo \"$triples\"", "   \
    \ local n=$1\n    local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1)\
    \ ; done))\n    local count=0\n    local triple=0\n    local triples=0\n    local\
    \ triples_sum=0\n    local triples_sum2=0\n    local triples_sum3=0\n    local\
    \ triples_sum4=0\n    local triples_sum5=0\n    local triples_sum6=0\n    local\
    \ triples_sum7=0\n    local triples_sum8=0\n    local triples_sum9=0\n    local\
    \ triples_sum10=0\n    local triples_sum11=0\n    local triples_sum12=0\n    local\
    \ triples_sum13=0\n    local triples_sum14=0\n    local triples_sum15=0\n    local\
    \ triples_sum16=0\n    local triples_sum17=0\n    local triples_sum18=0\n    local\
    \ triples_sum19=0\n    local triples_sum20=0\n    local triples_sum21=0\n    local\
    \ triples_sum22=0\n    local triples_sum23=0\n    local triples_sum24=0\n    local\
    \ triples_sum25=0\n    local triples_sum26=0\n    local triples_sum27=0\n    local\
    \ triples_sum28=0\n    local triples_sum29=0\n    local triples_sum30=0\n    local\
    \ triples_sum31=0\n    local triples_sum32=0\n    local triples_sum33=0\n    local\
    \ triples_sum34=0\n    local triples_sum35=0\n    local triples_sum36=0\n    local\
    \ triples_sum37=0\n    local triples_sum38=0\n    local triples_sum39=0\n    local\
    \ triples_sum40=0\n    local triples_sum41=0\n    local triples_sum42=0\n    local\
    \ triples_sum43=0\n    local triples_sum44=0\n    local triples_sum45=0\n    local\
    \ triples_sum46=0\n    local triples_sum47=0\n    local triples_sum48=0\n    local\
    \ triples_sum49=0\n    local triples_sum50=0\n    local triples_sum51=0\n    local\
    \ triples_sum52=0\n    local triples_sum53=0\n    local triples_sum54=0\n    local\
    \ triples_sum55=0\n    local triples_sum56=0\n    local triples_sum57=0\n    local\
    \ triples_sum58=0", "  local n=$1\n  local a=($(seq 1 $n))\n  local i\n  local\
    \ j\n  local k\n  local count\n  local triple\n  local max\n  max=0\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        triple=$((i*i*i)+(i*i)+(i)+(j*j*j)+(j*j)+(j)+(k*k*k)+(k*k)+(k))\n   \
    \     if (( triple % 3 == 0 )); then\n          count=$((count+1))\n        fi\n\
    \      done\n    done\n  done\n  echo $count", "    local n=$1\n    local a=($(seq\
    \ 1 $n))\n    local triples=0\n    local i\n    local j\n    local k\n    local\
    \ triple\n    local triple1\n    local triple2\n    local triple3\n    local triple4\n\
    \    local triple5\n    local triple6\n    local triple7\n    local triple8\n\
    \    local triple9\n    local triple10\n    local triple11\n    local triple12\n\
    \    local triple13\n    local triple14\n    local triple15\n    local triple16\n\
    \    local triple17\n    local triple18\n    local triple19\n    local triple20\n\
    \    local triple21\n    local triple22\n    local triple23\n    local triple24\n\
    \    local triple25\n    local triple26\n    local triple27\n    local triple28\n\
    \    local triple29\n    local triple30\n    local triple31\n    local triple32\n\
    \    local triple33\n    local triple34\n    local triple35\n    local triple36\n\
    \    local triple37\n    local triple38\n    local triple39\n    local triple40\n\
    \    local triple41\n    local triple42\n    local triple43\n    local triple44\n\
    \    local triple45\n    local triple46\n    local triple47\n    local triple48\n\
    \    local triple49\n    local triple50\n    local triple51\n    local triple52\n\
    \    local triple53\n    local triple54\n    local triple55\n    local triple56\n\
    \    local triple57\n    local triple58\n    local triple59\n    local triple60\n\
    \    local triple61\n    local triple62\n    local triple63\n    local triple64\n\
    \    local triple65\n    local triple66\n    local triple67\n    local triple68\n\
    \    local triple69\n    local triple70\n    local triple71\n    local triple72\n\
    \    local triple73\n    local triple74\n    local triple75\n    local triple76\n\
    \    local triple77\n    local triple78\n    local triple79\n    local triple80\n\
    \    local triple81\n    local triple82\n    local triple83\n    local triple84\n\
    \    local triple85\n    local triple86\n    local triple87\n    local triple88\n\
    \    local triple89\n    local triple90\n    local triple91\n    local triple92\n\
    \    local triple93\n    local triple94\n    local triple95", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n\
    \  local triples=0\n  local triple\n  for ((i=1; i<=$n; i++)); do\n    for ((j=1;\
    \ j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n        triple=$((i*j+k))\n\
    \        if ((triple%3)==0); then\n          triples=$((triples+1))\n        \
    \  count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"$i\"\
    \n    done))\n  local sum=0\n  local i\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \  done\n  echo $((sum % 3))", "    local n=$1\n    local a\n    local i\n   \
    \ local j\n    local k\n    local count\n    local triple\n    \n    a=()\n  \
    \  \n    for i in $(seq 1 $n); do\n        a[$i]=$((i * i - i + 1))\n    done\n\
    \    \n    count=0\n    \n    for ((i=1; i<=$n; i++)); do\n        for ((j=1;\
    \ j<=$n; j++)); do\n            for ((k=1; k<=$n; k++)); do\n                if\
    \ (( ${a[$i]} > ${a[$j]} && ${a[$i]} > ${a[$k]} )); then\n                   \
    \ triple=${a[$i]} ${a[$j]} ${a[$k]}\n                    (( count++ ))\n     \
    \           fi\n            done\n        done\n    done\n    \n    echo \"$count\"",
  "    local n=$1\n    local a=($(for ((i=1; i<=$n; i++))\n    do\n        echo $((i*i-1))\n\
    \    done))\n    local sum=0\n    for i in ${a[@]}\n    do\n        sum=$((sum+i))\n\
    \    done\n    echo $((sum%3))", "    local n=$1\n    local a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $((i * i - i + 1)); done))\n    local triples=0\n    local triple\n\
    \    for ((i=1; i<=$n; i++)); do\n        for ((j=1; j<=$n; j++)); do\n      \
    \      for ((k=1; k<=$n; k++)); do\n                triple=$((${a[i]}+${a[j]}+${a[k]}))\n\
    \                if ((triple%3==0)); then\n                    triples=$((triples+1))\n\
    \                fi\n            done\n        done\n    done\n    echo \"$triples\"",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local sum=0\n  local triples=0\n  local i\n  for i in \"${a[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [ $((sum % 3)) -eq 0 ]; then\n      triples=$((triples\
    \ + 1))\n    fi\n  done\n  echo $triples", "  local n=$1\n  local a=($(seq 1 $n))\n\
    \  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n\
    \    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i\
    \ < $j && $j < $k && $i + $j + $k == $i * $i - $i + $j * $j - $j * $k)) ; then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "    local n=$1\n    local a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $((i*i - i + 1)); done))\n    local i\n    local j\n    local k\n    local count\n\
    \    local triple\n    count=0\n    for ((i=1; i<=$n; i++)); do\n        for ((j=1;\
    \ j<=$n; j++)); do\n            for ((k=1; k<=$n; k++)); do\n                if\
    \ (( $i + $j + $k == $((i*i + j*j + k*k)) )); then\n                    triple=$((\
    \ $i + $j + $k ))\n                    if (( $triple == $(( $a[i] + ( $a[j] )\
    \ + ( $a[k] )) )); then\n                        count=$(( $count + 1 ))\n   \
    \                 fi\n                fi\n            done\n        done\n   \
    \ done\n    echo \"$count\"", "  local n=$1\n  local a=($(seq 1 $n))\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for\
    \ j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i == j &&\
    \ i == k )); then\n          continue\n        fi\n        if (( i == j || i ==\
    \ k || j == k )); then\n          continue\n        fi\n        if (( i == j &&\
    \ j == k )); then\n          continue\n        fi\n        if (( i == j || j ==\
    \ k )); then\n          continue\n        fi\n        if (( i == k && k == j ));\
    \ then\n          continue\n        fi\n        if (( i == k || k == j )); then\n\
    \          continue\n        fi\n        if (( i == j && k == k )); then\n   \
    \       continue\n        fi\n        if (( i == k && j == k )); then\n      \
    \    continue\n        fi\n        if (( i == j && j == k )); then\n         \
    \ continue\n        fi\n        if (( i == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && k == j && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == j && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && k == j )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && k == j )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == j  && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == j  && k == j )); then\n          continue\n\
    \        fi\n        if (( i == j && j == j  && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k  && j == k )); then\n          ",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in\
    \ \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i + j + k ));\
    \ then\n          let count+=1\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  local\
    \ count\n  local sum\n  local triple\n  \n  a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $i; done))\n  \n  for i in \"${!a[@]}\"; do\n    sum=0\n    for j in \"${!a[@]}\"\
    ; do\n      sum=$((sum+a[j]))\n    done\n    for k in \"${!a[@]}\"; do\n     \
    \ if ((sum+a[k])==i); then\n        triple=$((triple+1))\n      fi\n    done\n\
    \  done\n  \n  count=$((triple))\n  \n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local i\n  local j\n  local k\n  local count\n  local triple\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( $i < $j && $j < $k && $i < $k )); then\n          triple=$((\
    \ $i * $i - $i + $j * $j - $j + $k * $k - $k + $i * $i + $j * $j + $k * $k ))\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "    local n=$1\n    local a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $((i * i - i + 1)); done))\n    local i=0\n    local j=0\n    local k=0\n  \
    \  local triples=0\n    while [ $i -lt $n ]; do\n        if [ $i -eq $j ]; then\n\
    \            triples=$((triples + 1))\n        elif [ $i -eq $k ]; then\n    \
    \        triples=$((triples + 1))\n        elif [ $j -eq $k ]; then\n        \
    \    triples=$((triples + 1))\n        elif [ $((i * i - i + 1)) -eq $((j * j\
    \ - j + 1)) ]; then\n            triples=$((triples + 1))\n        fi\n      \
    \  i=$((i + 1))\n        j=$((j + 1))\n        k=$((k + 1))\n    done\n    echo\
    \ \"$triples\"", "    local n=$1\n    local a=($(seq 1 $n))\n    local i=0\n \
    \   local j=0\n    local k=0\n    local sum=0\n    local count=0\n    local triples=0\n\
    \    local triple\n\n    while [ $i -lt $n ]; do\n        triple=$(a[$i]+$a[j]+$a[k])\n\
    \        if [ $triple -eq 0 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 3 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 6 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 9 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 12 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 15 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 18 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 21 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 24 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 27 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 30 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 33 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 36 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 39 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 42 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 45 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 48 ]; then\n            sum=$sum+1\n            triples=$triples+1\n\
    \        elif [ $triple -eq 51 ]; then\n            sum=$sum+1\n            triples=$triples+1"]
stop_tokens:
- "\n}"

name: HumanEval_55_fib
language: php
results:
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpuyyma7.php:20\n\
    Stack trace:\n#0 /tmp/tmpzpuyyma7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzpuyyma7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc32emob8.php:20\n\
    Stack trace:\n#0 /tmp/tmpc32emob8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc32emob8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ni6_jo0.php:20\n\
    Stack trace:\n#0 /tmp/tmp1ni6_jo0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ni6_jo0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnsiwyxn.php:20\n\
    Stack trace:\n#0 /tmp/tmpsnsiwyxn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsnsiwyxn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1czays7.php:21\n\
    Stack trace:\n#0 /tmp/tmp_1czays7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_1czays7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptswwzjvd.php:21\n\
    Stack trace:\n#0 /tmp/tmptswwzjvd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptswwzjvd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_y9aqnl.php:20\n\
    Stack trace:\n#0 /tmp/tmph_y9aqnl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmph_y9aqnl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lvyar6c.php:20\n\
    Stack trace:\n#0 /tmp/tmp1lvyar6c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1lvyar6c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6wdm_xc.php:21\n\
    Stack trace:\n#0 /tmp/tmp_6wdm_xc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_6wdm_xc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgwv65ol.php:21\n\
    Stack trace:\n#0 /tmp/tmpcgwv65ol.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcgwv65ol.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01oyst2y.php:21\n\
    Stack trace:\n#0 /tmp/tmp01oyst2y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp01oyst2y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpav99gxe6.php:20\n\
    Stack trace:\n#0 /tmp/tmpav99gxe6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpav99gxe6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kg36qnj.php:21\n\
    Stack trace:\n#0 /tmp/tmp2kg36qnj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2kg36qnj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhhqrsy4.php:20\n\
    Stack trace:\n#0 /tmp/tmpzhhqrsy4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzhhqrsy4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uwb9rms.php:20\n\
    Stack trace:\n#0 /tmp/tmp8uwb9rms.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8uwb9rms.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02wjbhpi.php:21\n\
    Stack trace:\n#0 /tmp/tmp02wjbhpi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp02wjbhpi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd60et9mb.php:20\n\
    Stack trace:\n#0 /tmp/tmpd60et9mb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd60et9mb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5i8t7jnr.php:20\n\
    Stack trace:\n#0 /tmp/tmp5i8t7jnr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5i8t7jnr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3_m9itn.php:20\n\
    Stack trace:\n#0 /tmp/tmpe3_m9itn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe3_m9itn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return 1;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkc50vj2y.php:21\n\
    Stack trace:\n#0 /tmp/tmpkc50vj2y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkc50vj2y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0ran9nh.php:21\n\
    Stack trace:\n#0 /tmp/tmpj0ran9nh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpj0ran9nh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr42833ay.php:20\n\
    Stack trace:\n#0 /tmp/tmpr42833ay.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr42833ay.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri3dwvrg.php:20\n\
    Stack trace:\n#0 /tmp/tmpri3dwvrg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpri3dwvrg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavucx_xq.php:21\n\
    Stack trace:\n#0 /tmp/tmpavucx_xq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpavucx_xq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_9_wta0.php:20\n\
    Stack trace:\n#0 /tmp/tmpj_9_wta0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj_9_wta0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse4ortum.php:21\n\
    Stack trace:\n#0 /tmp/tmpse4ortum.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpse4ortum.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_f4s5si.php:20\n\
    Stack trace:\n#0 /tmp/tmpk_f4s5si.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk_f4s5si.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9ss0g_y.php:20\n\
    Stack trace:\n#0 /tmp/tmpe9ss0g_y.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe9ss0g_y.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljalh_4m.php:20\n\
    Stack trace:\n#0 /tmp/tmpljalh_4m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpljalh_4m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemlm1tnw.php:21\n\
    Stack trace:\n#0 /tmp/tmpemlm1tnw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpemlm1tnw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3x_khsk1.php:20\n\
    Stack trace:\n#0 /tmp/tmp3x_khsk1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3x_khsk1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaow1zgsp.php:20\n\
    Stack trace:\n#0 /tmp/tmpaow1zgsp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpaow1zgsp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1aq8ql1.php:20\n\
    Stack trace:\n#0 /tmp/tmpk1aq8ql1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk1aq8ql1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqdc3le2.php:21\n\
    Stack trace:\n#0 /tmp/tmpyqdc3le2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyqdc3le2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr2l7nh8.php:20\n\
    Stack trace:\n#0 /tmp/tmpsr2l7nh8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsr2l7nh8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0ow1zua.php:20\n\
    Stack trace:\n#0 /tmp/tmpy0ow1zua.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy0ow1zua.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmzennuo.php:20\n\
    Stack trace:\n#0 /tmp/tmpbmzennuo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbmzennuo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmyi7zrzj.php:20\n\
    Stack trace:\n#0 /tmp/tmpmyi7zrzj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmyi7zrzj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ 1;\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args) {\n \
    \   return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1r7svos.php:18\n\
    Stack trace:\n#0 /tmp/tmp_1r7svos.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_1r7svos.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqakgqwk.php:20\n\
    Stack trace:\n#0 /tmp/tmpkqakgqwk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkqakgqwk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrn3pz33.php:20\n\
    Stack trace:\n#0 /tmp/tmplrn3pz33.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplrn3pz33.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpac8kehia.php:21\n\
    Stack trace:\n#0 /tmp/tmpac8kehia.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpac8kehia.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2llvzfb.php:20\n\
    Stack trace:\n#0 /tmp/tmpo2llvzfb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo2llvzfb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps683g9y1.php:20\n\
    Stack trace:\n#0 /tmp/tmps683g9y1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps683g9y1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs5f54hh.php:21\n\
    Stack trace:\n#0 /tmp/tmpcs5f54hh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcs5f54hh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1odf51ko.php:20\n\
    Stack trace:\n#0 /tmp/tmp1odf51ko.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1odf51ko.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return $n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant n - assumed 'n' (this will throw an\
    \ Error in a future version of PHP) in /tmp/tmpcnxcflgp.php on line 13\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmpcnxcflgp.php on line 13\n\nWarning:\
    \ Use of undefined constant n - assumed 'n' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmpcnxcflgp.php on line 13\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpcnxcflgp.php on line 13\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcnxcflgp.php:20\nStack trace:\n#0 /tmp/tmpcnxcflgp.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcnxcflgp.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgogp_5bw.php:21\n\
    Stack trace:\n#0 /tmp/tmpgogp_5bw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgogp_5bw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv3ojzd_.php:20\n\
    Stack trace:\n#0 /tmp/tmpdv3ojzd_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdv3ojzd_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsf2d1ek.php:21\n\
    Stack trace:\n#0 /tmp/tmpvsf2d1ek.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvsf2d1ek.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mksmvqj.php:20\n\
    Stack trace:\n#0 /tmp/tmp5mksmvqj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5mksmvqj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9vm5guo.php:20\n\
    Stack trace:\n#0 /tmp/tmpw9vm5guo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpw9vm5guo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiytd4kp2.php:20\n\
    Stack trace:\n#0 /tmp/tmpiytd4kp2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiytd4kp2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z7d068m.php:20\n\
    Stack trace:\n#0 /tmp/tmp3z7d068m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3z7d068m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xdesfa5.php:20\n\
    Stack trace:\n#0 /tmp/tmp4xdesfa5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4xdesfa5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7yvor42.php:21\n\
    Stack trace:\n#0 /tmp/tmpw7yvor42.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw7yvor42.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbr5g_w1.php:20\n\
    Stack trace:\n#0 /tmp/tmpbbr5g_w1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbbr5g_w1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p52q6dn.php:20\n\
    Stack trace:\n#0 /tmp/tmp7p52q6dn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7p52q6dn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdf8bmh7.php:21\n\
    Stack trace:\n#0 /tmp/tmpzdf8bmh7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzdf8bmh7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_co841k1.php:20\n\
    Stack trace:\n#0 /tmp/tmp_co841k1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_co841k1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8136z7v8.php:20\n\
    Stack trace:\n#0 /tmp/tmp8136z7v8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8136z7v8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0weuss0b.php:20\n\
    Stack trace:\n#0 /tmp/tmp0weuss0b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0weuss0b.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9h5oayj.php:20\n\
    Stack trace:\n#0 /tmp/tmpt9h5oayj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt9h5oayj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmyt92s50.php:20\n\
    Stack trace:\n#0 /tmp/tmpmyt92s50.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmyt92s50.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyvhdud9.php:20\n\
    Stack trace:\n#0 /tmp/tmphyvhdud9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphyvhdud9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqt4godl.php:20\n\
    Stack trace:\n#0 /tmp/tmpsqt4godl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsqt4godl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_huxk8l.php:21\n\
    Stack trace:\n#0 /tmp/tmp3_huxk8l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3_huxk8l.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1g28bdud.php:20\n\
    Stack trace:\n#0 /tmp/tmp1g28bdud.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1g28bdud.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdboquthb.php:21\n\
    Stack trace:\n#0 /tmp/tmpdboquthb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdboquthb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqxh5c0n.php:20\n\
    Stack trace:\n#0 /tmp/tmppqxh5c0n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppqxh5c0n.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7cncirh.php:20\n\
    Stack trace:\n#0 /tmp/tmpk7cncirh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk7cncirh.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnyt0d42.php:20\n\
    Stack trace:\n#0 /tmp/tmppnyt0d42.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppnyt0d42.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfudpxww4.php:20\n\
    Stack trace:\n#0 /tmp/tmpfudpxww4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfudpxww4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpybp_rc.php:20\n\
    Stack trace:\n#0 /tmp/tmpjpybp_rc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjpybp_rc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5t8900b.php:20\n\
    Stack trace:\n#0 /tmp/tmpb5t8900b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb5t8900b.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizhepz5r.php:20\n\
    Stack trace:\n#0 /tmp/tmpizhepz5r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpizhepz5r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22i53j8z.php:20\n\
    Stack trace:\n#0 /tmp/tmp22i53j8z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp22i53j8z.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgim91006.php:21\n\
    Stack trace:\n#0 /tmp/tmpgim91006.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgim91006.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz40smeyu.php:20\n\
    Stack trace:\n#0 /tmp/tmpz40smeyu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz40smeyu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwu5aor1.php:21\n\
    Stack trace:\n#0 /tmp/tmpzwu5aor1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzwu5aor1.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81vp9z43.php:20\n\
    Stack trace:\n#0 /tmp/tmp81vp9z43.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp81vp9z43.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return 1;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsj6bmhk.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsj6bmhk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzsj6bmhk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzccm1j9v.php:21\n\
    Stack trace:\n#0 /tmp/tmpzccm1j9v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzccm1j9v.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm4tj_0l.php:20\n\
    Stack trace:\n#0 /tmp/tmpkm4tj_0l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkm4tj_0l.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwu5tb6y.php:20\n\
    Stack trace:\n#0 /tmp/tmprwu5tb6y.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprwu5tb6y.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvdlal6t.php:20\n\
    Stack trace:\n#0 /tmp/tmpsvdlal6t.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsvdlal6t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1quo71fl.php:20\n\
    Stack trace:\n#0 /tmp/tmp1quo71fl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1quo71fl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuplu8ir3.php:21\n\
    Stack trace:\n#0 /tmp/tmpuplu8ir3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuplu8ir3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtn9455u.php:20\n\
    Stack trace:\n#0 /tmp/tmpqtn9455u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqtn9455u.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17i9h_4a.php:20\n\
    Stack trace:\n#0 /tmp/tmp17i9h_4a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp17i9h_4a.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyly7hior.php:20\n\
    Stack trace:\n#0 /tmp/tmpyly7hior.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyly7hior.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcttix6vk.php:20\n\
    Stack trace:\n#0 /tmp/tmpcttix6vk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcttix6vk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp48gctg.php:20\n\
    Stack trace:\n#0 /tmp/tmprp48gctg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprp48gctg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3csvy0kq.php:20\n\
    Stack trace:\n#0 /tmp/tmp3csvy0kq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3csvy0kq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkb_ihj_.php:20\n\
    Stack trace:\n#0 /tmp/tmpwkb_ihj_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwkb_ihj_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1jlr0c5.php:20\n\
    Stack trace:\n#0 /tmp/tmpk1jlr0c5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk1jlr0c5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphin06xoe.php:20\n\
    Stack trace:\n#0 /tmp/tmphin06xoe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphin06xoe.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xe28orj.php:20\n\
    Stack trace:\n#0 /tmp/tmp8xe28orj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8xe28orj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyif2eg85.php:20\n\
    Stack trace:\n#0 /tmp/tmpyif2eg85.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyif2eg85.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx755xhlm.php:21\n\
    Stack trace:\n#0 /tmp/tmpx755xhlm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx755xhlm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10xb5oca.php:20\n\
    Stack trace:\n#0 /tmp/tmp10xb5oca.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10xb5oca.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9q1yx1pz.php:20\n\
    Stack trace:\n#0 /tmp/tmp9q1yx1pz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9q1yx1pz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc0zhdnl.php:20\n\
    Stack trace:\n#0 /tmp/tmpuc0zhdnl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuc0zhdnl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzodz8acc.php:20\n\
    Stack trace:\n#0 /tmp/tmpzodz8acc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzodz8acc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkegf4s62.php:20\n\
    Stack trace:\n#0 /tmp/tmpkegf4s62.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkegf4s62.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqro8hgsu.php:20\n\
    Stack trace:\n#0 /tmp/tmpqro8hgsu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqro8hgsu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1ahepg0.php:20\n\
    Stack trace:\n#0 /tmp/tmpn1ahepg0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpn1ahepg0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm6szem4j.php:20\n\
    Stack trace:\n#0 /tmp/tmpm6szem4j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm6szem4j.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfly6sxih.php:20\n\
    Stack trace:\n#0 /tmp/tmpfly6sxih.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfly6sxih.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1lij36o.php:20\n\
    Stack trace:\n#0 /tmp/tmpp1lij36o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpp1lij36o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwhf6ogj.php:20\n\
    Stack trace:\n#0 /tmp/tmpqwhf6ogj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqwhf6ogj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug4lyjqx.php:20\n\
    Stack trace:\n#0 /tmp/tmpug4lyjqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpug4lyjqx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5bfnbef.php:20\n\
    Stack trace:\n#0 /tmp/tmph5bfnbef.php(27): test()\n#1 {main}\n  thrown in /tmp/tmph5bfnbef.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvyapie7.php:21\n\
    Stack trace:\n#0 /tmp/tmpsvyapie7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsvyapie7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs2tdf4r.php:20\n\
    Stack trace:\n#0 /tmp/tmpqs2tdf4r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqs2tdf4r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfluitnx8.php:20\n\
    Stack trace:\n#0 /tmp/tmpfluitnx8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfluitnx8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0m00xj_4.php:21\n\
    Stack trace:\n#0 /tmp/tmp0m00xj_4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0m00xj_4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uz3c6qe.php:21\n\
    Stack trace:\n#0 /tmp/tmp7uz3c6qe.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7uz3c6qe.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ $n;\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args) {\n\
    \    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp944cm5ot.php:20\n\
    Stack trace:\n#0 /tmp/tmp944cm5ot.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp944cm5ot.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37wz7div.php:21\n\
    Stack trace:\n#0 /tmp/tmp37wz7div.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp37wz7div.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tja0zfa.php:21\n\
    Stack trace:\n#0 /tmp/tmp9tja0zfa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9tja0zfa.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxt12tpn.php:21\n\
    Stack trace:\n#0 /tmp/tmpwxt12tpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwxt12tpn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3maom7hn.php:20\n\
    Stack trace:\n#0 /tmp/tmp3maom7hn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3maom7hn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7vbkofi.php:20\n\
    Stack trace:\n#0 /tmp/tmpa7vbkofi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa7vbkofi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyqrheaj.php:20\n\
    Stack trace:\n#0 /tmp/tmpjyqrheaj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjyqrheaj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnb6750ta.php:21\n\
    Stack trace:\n#0 /tmp/tmpnb6750ta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnb6750ta.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy8x8hsk.php:20\n\
    Stack trace:\n#0 /tmp/tmphy8x8hsk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphy8x8hsk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6pz5afv.php:20\n\
    Stack trace:\n#0 /tmp/tmpf6pz5afv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf6pz5afv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5c9o6bv.php:20\n\
    Stack trace:\n#0 /tmp/tmpu5c9o6bv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu5c9o6bv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) return\
    \ 1;\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args) {\n \
    \   return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6z4svk3e.php:18\n\
    Stack trace:\n#0 /tmp/tmp6z4svk3e.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6z4svk3e.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea8pqnlv.php:21\n\
    Stack trace:\n#0 /tmp/tmpea8pqnlv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpea8pqnlv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxzisken.php:20\n\
    Stack trace:\n#0 /tmp/tmpgxzisken.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgxzisken.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ahz56s.php:20\n\
    Stack trace:\n#0 /tmp/tmpt8ahz56s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt8ahz56s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3lcgtj5.php:20\n\
    Stack trace:\n#0 /tmp/tmpe3lcgtj5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe3lcgtj5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1)\n \
    \       return $n;\n    return fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1curnnq7.php:20\n\
    Stack trace:\n#0 /tmp/tmp1curnnq7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1curnnq7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 1) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| c |>\nThis code doesn't work. `fib(0)` returns `1` instead\
    \ of `0`.\n<|/ c |>\n<| c |>\nYes, you are right. I fixed it.\n<|/ c |>\n<| c\
    \ |>\nThis code doesn't work. `fib(0)` returns `1` instead of `0`.\n<|/ c |>\n\
    <| c |>\nYes, you are right. I fixed it.\n<|/ c |>\n<| c |>\nThis code doesn't\
    \ work. `fib(0)` returns `1` instead of `0`.\n<|/ c |>\n<| a tags=php,fibonacci,recursion\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpkdfimncc.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_pj0qzi.php:21\n\
    Stack trace:\n#0 /tmp/tmpb_pj0qzi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb_pj0qzi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqj4puyy.php:21\n\
    Stack trace:\n#0 /tmp/tmpfqj4puyy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfqj4puyy.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return 1;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8kjiz5i.php:20\n\
    Stack trace:\n#0 /tmp/tmpc8kjiz5i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc8kjiz5i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n\tif ($n < 2) {\n\t\t\
    return $n;\n\t}\n\treturn fib($n - 1) + fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n <= 2) {\n\
    \        return $n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant n - assumed 'n' (this will throw an\
    \ Error in a future version of PHP) in /tmp/tmp6oebud69.php on line 13\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmp6oebud69.php on line 13\n\nWarning:\
    \ Use of undefined constant n - assumed 'n' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmp6oebud69.php on line 13\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmp6oebud69.php on line 13\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6oebud69.php:20\nStack trace:\n#0 /tmp/tmp6oebud69.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6oebud69.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>>\
    \ fib(1)\n// 1\n// >>> fib(8)\n// 21\nfunction fib($n) {\n    if ($n < 2) {\n\
    \        return $n;\n    }\n    return fib(--$n) + fib(--$n);\n}\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_30_get_positive
language: php
results:
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=2 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    $arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5 = array();\n$arr6\
    \ = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n$arr10 = array();\n\
    $arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14 = array();\n$arr15\
    \ = array();\n$arr16 = array();\n$arr17 = array();\n$arr18 = array();\n$arr19\
    \ = array();\n$arr20 = array();\n$arr21 = array();\n$arr22 = array();\n$arr23\
    \ = array();\n$arr24 = array();\n$arr25 = array();\n$arr26 = array();\n$arr27\
    \ = array();\n$arr28 = array();\n$arr29 = array();\n$arr30 = array();\n$arr31\
    \ = array();\n$arr32 = array();\n$arr33 = array();\n$arr34 = array();\n$arr35\
    \ = array();\n$arr36 = array();\n$arr37 = array();\n$arr38 = array();\n$arr39\
    \ = array();\n$arr40 = array();\n$arr41 = array();\n$arr42 = array();\n$arr43\
    \ = array();\n$arr44 = array();\n$arr45 = array();\n$arr46 = array();\n$arr47\
    \ = array();\n$arr48 = array();\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk5028jzd.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4nwaicl.php:16\n\
    Stack trace:\n#0 /tmp/tmpv4nwaicl.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpv4nwaicl.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcesgiejk.php:16\n\
    Stack trace:\n#0 /tmp/tmpcesgiejk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpcesgiejk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9lctboo.php:16\n\
    Stack trace:\n#0 /tmp/tmps9lctboo.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps9lctboo.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7ywdmii.php:16\n\
    Stack trace:\n#0 /tmp/tmpp7ywdmii.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpp7ywdmii.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt07iyvq4.php:16\n\
    Stack trace:\n#0 /tmp/tmpt07iyvq4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpt07iyvq4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xvcmr85.php:16\n\
    Stack trace:\n#0 /tmp/tmp5xvcmr85.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp5xvcmr85.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_b4p8_c.php:16\n\
    Stack trace:\n#0 /tmp/tmpu_b4p8_c.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpu_b4p8_c.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvj2zpi2.php:18\n\
    Stack trace:\n#0 /tmp/tmpdvj2zpi2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdvj2zpi2.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a\
    \ tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    0\
    \ => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n   \
    \ 6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n\
    \    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n \
    \   17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n  \
    \  22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n   \
    \ 27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32\
    \ => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 =>\
    \ 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n\
    \    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n \
    \   48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n  \
    \  53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n   \
    \ 58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63\
    \ => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 =>\
    \ 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n\
    \    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n \
    \   79 => 80,\n    80 \nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpid2uzox3.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8ssomkh.php:15\n\
    Stack trace:\n#0 /tmp/tmp_8ssomkh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_8ssomkh.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlmztcc4.php:16\n\
    Stack trace:\n#0 /tmp/tmpwlmztcc4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwlmztcc4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8yqk043.php:16\n\
    Stack trace:\n#0 /tmp/tmpd8yqk043.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpd8yqk043.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qszmvbq.php:16\n\
    Stack trace:\n#0 /tmp/tmp_qszmvbq.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_qszmvbq.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46p246tc.php:16\n\
    Stack trace:\n#0 /tmp/tmp46p246tc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp46p246tc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_cwxhnc.php:16\n\
    Stack trace:\n#0 /tmp/tmpm_cwxhnc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm_cwxhnc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei8j13e6.php:16\n\
    Stack trace:\n#0 /tmp/tmpei8j13e6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpei8j13e6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe508cuf_.php:16\n\
    Stack trace:\n#0 /tmp/tmpe508cuf_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpe508cuf_.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6eqo64o.php:16\n\
    Stack trace:\n#0 /tmp/tmpi6eqo64o.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpi6eqo64o.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqu4i94d4.php:16\n\
    Stack trace:\n#0 /tmp/tmpqu4i94d4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpqu4i94d4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_y76ho9d.php:16\n\
    Stack trace:\n#0 /tmp/tmp_y76ho9d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_y76ho9d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4eoeg9_c.php:16\n\
    Stack trace:\n#0 /tmp/tmp4eoeg9_c.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4eoeg9_c.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2d3_lq4r.php:16\n\
    Stack trace:\n#0 /tmp/tmp2d3_lq4r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2d3_lq4r.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2x7fq_67.php:16\n\
    Stack trace:\n#0 /tmp/tmp2x7fq_67.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2x7fq_67.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_5arih0.php:16\n\
    Stack trace:\n#0 /tmp/tmp9_5arih0.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9_5arih0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1y1f65n.php:16\n\
    Stack trace:\n#0 /tmp/tmp_1y1f65n.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_1y1f65n.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuk4804r.php:16\n\
    Stack trace:\n#0 /tmp/tmpvuk4804r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpvuk4804r.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1jvozj6.php:16\n\
    Stack trace:\n#0 /tmp/tmpi1jvozj6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpi1jvozj6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvxads0q.php:16\n\
    Stack trace:\n#0 /tmp/tmptvxads0q.php(22): test()\n#1 {main}\n  thrown in /tmp/tmptvxads0q.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uv_3gsm.php:16\n\
    Stack trace:\n#0 /tmp/tmp1uv_3gsm.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1uv_3gsm.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28205am4.php:16\n\
    Stack trace:\n#0 /tmp/tmp28205am4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp28205am4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxy6o1uu.php:16\n\
    Stack trace:\n#0 /tmp/tmpuxy6o1uu.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpuxy6o1uu.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp945f1cez.php:15\n\
    Stack trace:\n#0 /tmp/tmp945f1cez.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp945f1cez.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp292858n6.php:16\n\
    Stack trace:\n#0 /tmp/tmp292858n6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp292858n6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpva8brges.php:16\n\
    Stack trace:\n#0 /tmp/tmpva8brges.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpva8brges.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ph1hq3w.php:16\n\
    Stack trace:\n#0 /tmp/tmp_ph1hq3w.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_ph1hq3w.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgwqbpfo_.php:16\n\
    Stack trace:\n#0 /tmp/tmpgwqbpfo_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpgwqbpfo_.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hwlt1qo.php:16\n\
    Stack trace:\n#0 /tmp/tmp7hwlt1qo.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7hwlt1qo.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjlifbg22.php:16\n\
    Stack trace:\n#0 /tmp/tmpjlifbg22.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjlifbg22.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3s7a1dz.php:16\n\
    Stack trace:\n#0 /tmp/tmpy3s7a1dz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpy3s7a1dz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1rc7o63c.php:16\n\
    Stack trace:\n#0 /tmp/tmp1rc7o63c.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1rc7o63c.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ddp_wl4.php:16\n\
    Stack trace:\n#0 /tmp/tmp9ddp_wl4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9ddp_wl4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccs2rl3e.php:18\n\
    Stack trace:\n#0 /tmp/tmpccs2rl3e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpccs2rl3e.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work if you have negative numbers in the array and\
    \ you only want to keep positive ones\n<|/ c |>\n<| c |>\nI added a solution that\
    \ does that.\n<|/ c |>\n<| c |>\nI added a solution that does that.\n<|/ c |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n$array = array(-10, -9, -8, -7, -6, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array = array_filter($array,\
    \ function($v){return $v > 0;});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in the array and you only want to keep positive\
    \ ones\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative numbers in the\
    \ array and you only want to keep positive ones\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in the array and you only want to keep positive\
    \ ones\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative numbers in the\
    \ array and you only want to keep positive ones\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in the array and you only want to keep positive\
    \ ones\n<|/ c |>\n<| a |>\n<code>\n$array = array(-10, -9, -8, -7, -6, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array = array_filter($array,\
    \ function($v){return $v > 0;});\n</code>\n<|/ a dscore=5 tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work if you have negative numbers in the array and\
    \ you only want to keep positive ones\n<|/ c |>\n<| a dscore=4 |>\n<code>\n$array\
    \ = array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10);\n$array = array_filter($array, function($v){return $v > 0;});\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10);\n$array = array_filter($array, function($v){return $v > 0;});\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcoeqznv5.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7ym6vr6.php:16\n\
    Stack trace:\n#0 /tmp/tmpr7ym6vr6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpr7ym6vr6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5l40z0a.php:16\n\
    Stack trace:\n#0 /tmp/tmpz5l40z0a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpz5l40z0a.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1dqv110.php:18\n\
    Stack trace:\n#0 /tmp/tmpl1dqv110.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpl1dqv110.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zd5rz_b.php:16\n\
    Stack trace:\n#0 /tmp/tmp_zd5rz_b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_zd5rz_b.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$positive =\
    \ array_filter($arr, function($v) { return $v > 0; });\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$arr = [-1,\
    \ 2, -4, 5, 6];\n$positive = array_filter($arr, function($v) { return $v > 0;\
    \ });\n</code>\n<|/ a dscore=0 tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    $arr = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v) { return\
    \ $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$arr\
    \ = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v) { return $v\
    \ > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$arr\
    \ = [-1, 2, -4, 5, 6];\n$positive = array_filter($arr, function($v) { return $v\
    \ > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgzpuhewa.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpel9b6jbo.php:16\n\
    Stack trace:\n#0 /tmp/tmpel9b6jbo.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpel9b6jbo.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n >= 0;\n  });\n}\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ than using array_filter and array_reduce.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ this is much more elegant than array_filter and array_reduce.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more elegant than using array_filter\
    \ and array_reduce.\n<|/ c |>\n<| c |>\nI agree with you, this is much more elegant\
    \ than array_filter and array_reduce.\n<|/ c |>\n<| c |>\nI agree with you, this\
    \ is much more elegant than array_filter and array_reduce.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$positive = array_filter($array, function($n) {\n    return $n >\
    \ 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more elegant than using array_filter and array_reduce.\n<|/ c |>\n\
    <| c |>\nI agree with you, this is much more elegant than array_filter and array_reduce.\n\
    <|/ c |>\n<| c |>\nI agree with you, this is much more elegant than array_filter\
    \ and array_reduce.\n<|/ c |>\n<| c |>\nI agree with you, this is much more elegant\
    \ than array_filter and array_reduce.\n<|/ c |>\n<| c |>\nI agree with you, this\
    \ is much more elegant than array_filter and array_reduce.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$positive = array_filter($array, function($n) {\n    return $n >\
    \ 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more elegant than using array_filter and array_reduce.\n<|/ c |>\n\
    <| c |>\nI agree with you, this is much more elegant than array_filter and array_reduce.\n\
    <|/ c |>\n<| c |>\nI agree with you, this is much more elegant than array_filter\
    \ and array_reduce.\n<|/ c |>\n<| a tags=arrays,php \nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphv_paz1n.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n   \
    \         $positive[] = $item;\n        }\n    }\n    return $positive;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposj6av38.php:16\n\
    Stack trace:\n#0 /tmp/tmposj6av38.php(22): test()\n#1 {main}\n  thrown in /tmp/tmposj6av38.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14w0oz1p.php:16\n\
    Stack trace:\n#0 /tmp/tmp14w0oz1p.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp14w0oz1p.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n$arr = [\n\
    \    0 => [\n        'id' => 1,\n        'name' => 'John',\n        'age' => 30,\n\
    \        'sex' => 'Male',\n    ],\n    1 => [\n        'id' => 2,\n        'name'\
    \ => 'Jane',\n        'age' => 25,\n        'sex' => 'Female',\n    ],\n    2\
    \ => [\n        'id' => 3,\n        'name' => 'Jack',\n        'age' => 20,\n\
    \        'sex' => 'Male',\n    ],\n    3 => [\n        'id' => 4,\n        'name'\
    \ => 'Jill',\n        'age' => 30,\n        'sex' => 'Male',\n    ],\n    4 =>\
    \ [\n        'id' => 5,\n        'name' => 'Jack',\n        'age' => 20,\n   \
    \     'sex' => 'Male',\n    ],\n];\n\n$newArr = array();\nforeach ($arr as $key\
    \ => $value) {\n    if ($value['age'] > 30) {\n        $newArr[$key] = $value;\n\
    \    }\n}\n\n$newArr = array_values($newArr);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$arr = [\n    0 => [\n        'id'\
    \ => 1,\n        'name' => 'John',\n        'age' => 30,\n        'sex' => 'Male',\n\
    \    ],\n    1 => [\n        'id' => 2,\n        'name' => 'Jane',\n        'age'\
    \ => 25,\n        'sex' => 'Female',\n    ],\n    2 => [\n        'id' => 3,\n\
    \        'name' => 'Jack',\n        'age' => 20,\n        'sex' => 'Male',\n \
    \   ],\n    3 => [\n        'id' => 4,\n        'name' => 'Jill',\n        'age'\
    \ => 30,\n        'sex' => 'Male',\n    ],\n    4 => [\n        'id' => 5,\n \
    \       'name' => 'Jack',\n        'age' => 20,\n        'sex' => 'Male',\n  \
    \  ],\n];\n\n$newArr = array();\nforeach ($arr as $key => $value) {\n    if ($value['age\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdzxo41g1.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg48ylufk.php:16\n\
    Stack trace:\n#0 /tmp/tmpg48ylufk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpg48ylufk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nI like this solution, but I feel like it could\
    \ be made more efficient by using a `foreach` loop and `array_search` instead\
    \ of `array_filter`\n<|/ c |>\n<| c |>\nI agree with you, `array_filter` should\
    \ be more efficient. I'll add an example using `array_search`.\n<|/ c |>\n<| c\
    \ |>\nI added an example using `array_search`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$array = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 =>\
    \ 5,\n    5 => 6,\n];\n\n$positive = array_filter($array, function ($v) {\n  \
    \  return $v > 0;\n});\n\nvar_dump($positive);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    0 => 1,\n    1 => 2,\n  \
    \  2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n);\n\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n\nvar_dump($positive);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n);\n\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n\nvar_dump($positive);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n);\n\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n\nvar_dump($positive);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n);\n\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n\nvar_dump($positive\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppalbzjgn.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ws816hv.php:16\n\
    Stack trace:\n#0 /tmp/tmp1ws816hv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1ws816hv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7o9y925.php:16\n\
    Stack trace:\n#0 /tmp/tmpm7o9y925.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm7o9y925.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpji1cr0wf.php:16\n\
    Stack trace:\n#0 /tmp/tmpji1cr0wf.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpji1cr0wf.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function\
    \ ($v) { return $v > 0; });\n</code>\n<|/ a dscore=1 tags=arrays,php |>\n<| a\
    \ dscore=1 |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function\
    \ ($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v)\
    \ { return $v > 0; });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v) { return $v\
    \ > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$arr\
    \ = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v) { return $v >\
    \ 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v) { return $v\
    \ > 0; });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = [-1,\
    \ 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v) { return $v > 0; });\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$arr = [-1,\
    \ 2, -4, 5, 6];\n$arr2 = array_filter($arr, function ($v) { return $v > 0; });\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n\
    $arr2 = array_filter($arr, function ($v) { return $v > 0; });\n</code>\n<|/ a\
    \ tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$arr = [-1, 2, -4, 5, 6];\n\
    $arr2 = array_filter($arr, function ($v) { return $v > 0; });\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprsh04udg.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulrmjml5.php:18\n\
    Stack trace:\n#0 /tmp/tmpulrmjml5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpulrmjml5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n\
    $positive = array_filter($array, function($v) { return $v > 0; });\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n\
    $positive = array_filter($array, function($v) { return $v > 0; });\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, -4,\
    \ -5, -6);\n$positive = array_filter($array, function($v) { return $v > 0; });\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(1, 2, 3, -4,\
    \ -5, -6);\n$positive = array_filter($array, function($v) { return $v > 0; });\n\
    </code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(1, 2, 3, -4, -5, -6);\n$positive = array_filter($array,\
    \ function($v) { return $v\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsdzl817x.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uxog0k5.php:16\n\
    Stack trace:\n#0 /tmp/tmp9uxog0k5.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9uxog0k5.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=arrays,php,sorting\
    \ |>\n<| c |>\nI like your solution, however it only works with positive numbers.\
    \ I edited my question to include a negative number example.\n<|/ c |>\n<| c |>\n\
    : I added a solution for negative numbers as well.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, however it only works with positive numbers. I edited my question\
    \ to include a negative number example.\n<|/ c |>\n<| c |>\n: I added a solution\
    \ for negative numbers as well.\n<|/ c |>\n<| c |>\nI like your solution, however\
    \ it only works with positive numbers. I edited my question to include a negative\
    \ number example.\n<|/ c |>\n<| a tags=arrays,php,sorting |>\n<code>\n$array =\
    \ array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);\n\
    $array = array_filter($array, function($v) { return $v > 0; });\n</code>\n<|/\
    \ a dscore=4 |>\n<| a dscore=4 |>\n<code>\n$array = array(-10, -9, -8, -7, -6,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php,sorting |>\n\
    <| a dscore=3 |>\n<code>\n$array = array(-10, -9, -8, -7, -6, -5, -4, -3, -2,\
    \ -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array = array_filter($array, function($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n$array = array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9);\n$array = array_filter($array, function($v) { return $v\
    \ > 0; });\n</code>\n<|/ a dscore=3 |>\n<| a tags=arrays,php,sorting |>\n<code>\n\
    $array = array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9);\n$array = array_filter($array, function($v) { return $v > 0; });\n</code>\n\
    <|/ a dscore=3 |>\n<| a tags=arrays,php,sorting |>\n<code>\n$array = \nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyarheql6.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftc_1lnz.php:16\n\
    Stack trace:\n#0 /tmp/tmpftc_1lnz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpftc_1lnz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_21inr7.php:18\n\
    Stack trace:\n#0 /tmp/tmpf_21inr7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf_21inr7.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_6p7mk8.php:16\n\
    Stack trace:\n#0 /tmp/tmpi_6p7mk8.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpi_6p7mk8.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($n) {\n    return $n >= 0;\n  });\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a negative number\
    \ in the array and you want the positive numbers. Try it with `[-5, -4, -3]`.\n\
    <|/ c |>\n<| c |>\nIt works, just tested it. I think you misunderstood the question.\
    \ OP wants to filter negative numbers and get positive numbers. `[-5, -4, -3]`\
    \ should return `[5, 3, 3]`.\n<|/ c |>\n<| c |>\nYes, I misunderstood the question.\
    \ Sorry about that.\n<|/ c |>\n<| c |>\nI tested it and it doesn't work. Try it\
    \ with `[-5, -4, -3]`.\n<|/ c |>\n<| c |>\nIt works, just tested it. I think you\
    \ misunderstood the question. OP wants to filter negative numbers and get positive\
    \ numbers. `[-5, -4, -3]` should return `[5, 3, 3]`.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$positive = array_filter($array, function($n) { return $n > 0; });\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have a negative number in\
    \ the array and you want the positive numbers. Try it with `[-5, -4, -3]`.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if you have a negative number in the array\
    \ and you want the positive numbers. Try it with `[-5, -4, -3]`.\n<|/ c |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(-5, -4, -3, -2, -1, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10);\n$positive = array_filter($array, function($n) { return\
    \ $n > 0; });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have\
    \ a negative number in the array and you want the positive numbers. Try it with\
    \ `[-5, -4, -3]`.\n<|/ c |>\n<| a dscore=4 |>\n<code>\n$array = array(-5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$positive = array_filter($array,\
    \ function($n) { return $n > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if you have a negative \nfunction candidate(...$args) {\n  \
    \  return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkltctrif.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3bpnovb.php:16\n\
    Stack trace:\n#0 /tmp/tmpd3bpnovb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpd3bpnovb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u_hoqm_.php:16\n\
    Stack trace:\n#0 /tmp/tmp9u_hoqm_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9u_hoqm_.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n >= 0;\n  });\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcf87c0cj.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc60nqsi6.php:16\n\
    Stack trace:\n#0 /tmp/tmpc60nqsi6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc60nqsi6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nI like this solution, because it doesn't require any additional\
    \ libraries.\n<|/ c |>\n<| c |>\nI like it, but I wonder why it isn't the accepted\
    \ answer. Seems like a good solution to me.\n<|/ c |>\n<| c |>\nI like it too,\
    \ but I wonder why it isn't the accepted answer. Seems like a good solution to\
    \ me.\n<|/ c |>\n<| c |>\nI like it too, but I wonder why it isn't the accepted\
    \ answer. Seems like a good solution to me.\n<|/ c |>\n<| c |>\nI like it too,\
    \ but I wonder why it isn't the accepted answer. Seems like a good solution to\
    \ me.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprs8g63iq.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpae66nyqo.php:16\n\
    Stack trace:\n#0 /tmp/tmpae66nyqo.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpae66nyqo.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx48ss_d.php:16\n\
    Stack trace:\n#0 /tmp/tmphx48ss_d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphx48ss_d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkv2qenoh.php:16\n\
    Stack trace:\n#0 /tmp/tmpkv2qenoh.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkv2qenoh.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxn3lqia.php:16\n\
    Stack trace:\n#0 /tmp/tmpfxn3lqia.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfxn3lqia.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbtu06t2.php:16\n\
    Stack trace:\n#0 /tmp/tmplbtu06t2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplbtu06t2.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppm50mdtz.php:16\n\
    Stack trace:\n#0 /tmp/tmppm50mdtz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppm50mdtz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThis doesn't work if the array contains negative numbers. Try it with\
    \ `[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers. I tested\
    \ it and it works.\n<|/ c |>\n<| c |>\n: I added a version that works with negative\
    \ numbers. I tested it and it works.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ works with negative numbers. I tested it and it works.\n<|/ c |>\n<| c |>\n\
    : I added a version that works with negative numbers. I tested it and it works.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => \nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe9mhpgud.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6cmdchz.php:16\n\
    Stack trace:\n#0 /tmp/tmph6cmdchz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmph6cmdchz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpht8prahb.php:16\n\
    Stack trace:\n#0 /tmp/tmpht8prahb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpht8prahb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppm4_0prl.php:16\n\
    Stack trace:\n#0 /tmp/tmppm4_0prl.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppm4_0prl.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nI like this solution, though I wonder if it would be more efficient to\
    \ just use `array_filter` twice instead of `array_map` followed by `array_filter`?\n\
    <|/ c |>\n<| c |>\n: I doubt that would be more efficient, since `array_filter`\
    \ has to iterate over the whole array anyway. `array_map` would have to iterate\
    \ over the array twice anyway (once to map the values and once to filter them).\
    \ `array_filter` would have to iterate over the array three times (once to map\
    \ the values, once to filter the values, once to return the filtered values).\
    \ Since `array_filter` has to iterate over the array three times, it would be\
    \ more efficient to just use `array_filter` three times. But I haven't tested\
    \ that theory.\n<|/ c |>\n<| c |>\n: I tested it and it turns out that `array_filter`\
    \ does iterate over the array three times. I added a test case to my answer.\n\
    <|/ c |>\n<| c |>\n: I added a test case to my answer. `array_filter` does iterate\
    \ over the array three times. I added a test case to my answer.\n<|/ c |>\n<|\
    \ c |>\n: I added a test case to my answer. `array_filter` does iterate over the\
    \ array three times. I added a test case to my answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\n    array(\n        'id' => 1,\n        'name'\
    \ => 'John',\n        'age' => 30,\n    ),\n    array(\n        'id' => 2,\n \
    \       'name' => 'Jane',\n        'age' => 25,\n    ),\n    array(\n        'id'\
    \ => 3,\n        'name' => 'Jack',\n        'age' => 30,\n    ),\n);\n\n$array\
    \ = array_map(function($v){\n    return $v['age'];\n}, $array);\n\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0;\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nI like this solution, though I wonder if it would be more efficient\
    \ to just use `array_filter` twice instead of `array_map` followed by `array_filter`?\n\
    <|/ c |>\n<| c |>\n: I doubt that would be more efficient, since `array_filter`\
    \ has to iterate over the whole array anyway. `array_map` would \nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp84c837fu.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$array = array(1, 2, 3, -4, 5, 6, -7, 8, -9,\
    \ 10);\n$positive = array_filter($array, function($value) {\n    return $value\
    \ > 0;\n});\nprint_r($positive);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(1, 2, 3, -4, 5, 6, -7, 8, -9, 10);\n$positive = array_filter($array,\
    \ function($value) {\n    return $value > 0;\n});\nprint_r($positive);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = array(1,\
    \ 2, 3, -4, 5, 6, -7, 8, -9, 10);\n$positive = array_filter($array, function($value)\
    \ {\n    return $value > 0;\n});\nprint_r($positive);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, 2, 3, -4, 5, 6, -7, 8,\
    \ -9, 10);\n$positive = array_filter($array, function($value) {\n    return $value\
    \ > 0;\n});\nprint_r($positive);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(1, 2, 3, -4, 5, 6, -7, 8, -9, 10);\n$positive = array_filter($array,\
    \ function($value) {\n    return $value > 0;\n});\nprint_r($positive);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, 2,\
    \ 3, -4, 5, 6, -7, 8, -9, 10);\n$positive = array_filter($array, function($value)\
    \ {\n    return $value > 0;\n});\nprint_r($positive);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>\n$array = array(1, 2, 3, -4, 5, 6, -7, 8, -9, 10);\n$positive\
    \ = array_filter($array, function($value) {\n    return $value > 0;\n});\nprint_r($positive);\n\
    </code>\n<|/ a dscore=0 tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(1, 2, 3, -4, 5, 6, -7, 8, -9, 10);\n$positive = array_filter($array,\
    \ function($value) {\n    return $value > 0;\n});\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqyyju26i.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Much more concise and readable\
    \ than other answers.\n<|/ c |>\n<| c |>\nI agree, this is much more concise and\
    \ readable. Thanks!\n<|/ c |>\n<| c |>\nI like this answer because it's very concise.\
    \ Just a quick question, what is the purpose of $v > 0? I understand that it's\
    \ comparing each element in the array to the value 0, but why is it necessary?\n\
    <|/ c |>\n<| c |>\nThe `array_filter` function removes elements from the array\
    \ that don't match the given condition. In this case, we want to keep only positive\
    \ numbers, so we only want to keep elements that are greater than 0.\n<|/ c |>\n\
    <| c |>\nI like this. I added a little bit of explanation to the code so it's\
    \ easier to understand what's going on. https://gist.github.com/davidjbradshaw/7d8f9c25f6b5ff0cfa0c\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => \n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyc3fe4rx.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx225j6jr.php:16\n\
    Stack trace:\n#0 /tmp/tmpx225j6jr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpx225j6jr.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hsnhln3.php:16\n\
    Stack trace:\n#0 /tmp/tmp2hsnhln3.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2hsnhln3.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a dscore=1 |>\n<code>\n$arr = array(\n    'a' => 1,\n    'b'\
    \ => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' =>\
    \ 7,\n    'h' => 8,\n    'i' => 9,\n    'j' => 10,\n    'k' => 11,\n    'l' =>\
    \ 12,\n    'm' => 13,\n    'n' => 14,\n    'o' => 15,\n    'p' => 16,\n    'q'\
    \ => 17,\n    'r' => 18,\n    's' => 19,\n    't' => 20,\n    'u' => 21,\n   \
    \ 'v' => 22,\n    'w' => 23,\n    'x' => 24,\n    'y' => 25,\n    'z' => 26,\n\
    );\n\n$arr2 = array();\nforeach($arr as $key => $value){\n    if($value > 0){\n\
    \        $arr2[] = $value;\n    }\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ dscore=1 |>\n<code>\n$arr = array('a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e'\
    \ => 5, 'f' => 6, 'g' => 7, 'h' => 8, 'i' => 9, 'j' => 10, 'k' => 11, 'l' => 12,\
    \ 'm' => 13, 'n' => 14, 'o' => 15, 'p' => 16, 'q' => 17, 'r' => 18, 's' => 19,\
    \ 't' => 20, 'u' => 21, 'v' => 22, 'w' => 23, 'x' => 24, 'y' => 25, 'z' => 26);\n\
    \n$arr2 = array();\nforeach($arr as $key => $value){\n    if($value > 0){\n  \
    \      $arr2[] = $value;\n    }\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n\
    <code>\n$arr = array('a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' =>\
    \ 6, 'g' => 7, 'h' => 8, 'i' => 9, 'j' => 10, 'k' => 11, 'l' => 12, 'm' => 13,\
    \ 'n' => 14, 'o' => 15, 'p' => 16, 'q' => 17, 'r' => 18, 's' => 19, 't' => 20,\
    \ 'u' => 21, 'v' => 22, 'w' => 23, 'x' => 24, 'y' => 25, 'z' => 26);\n$arr2 =\
    \ array();\nforeach($arr as $key => $value){\n    if($value > 0){\n        $arr2[]\
    \ = $value;\n    }\n}\n</code>\n<|/\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptttxbt7x.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwmifp11.php:18\n\
    Stack trace:\n#0 /tmp/tmpuwmifp11.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuwmifp11.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4b0xim7r.php:16\n\
    Stack trace:\n#0 /tmp/tmp4b0xim7r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4b0xim7r.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rwsmxgh.php:16\n\
    Stack trace:\n#0 /tmp/tmp2rwsmxgh.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2rwsmxgh.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehisuv4i.php:16\n\
    Stack trace:\n#0 /tmp/tmpehisuv4i.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpehisuv4i.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp615xrawd.php:16\n\
    Stack trace:\n#0 /tmp/tmp615xrawd.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp615xrawd.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r12tpmb.php:16\n\
    Stack trace:\n#0 /tmp/tmp0r12tpmb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0r12tpmb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n7i6ef1.php:16\n\
    Stack trace:\n#0 /tmp/tmp2n7i6ef1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2n7i6ef1.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if there are negative numbers in the array. `array_filter`\
    \ will remove all negative numbers from the array.\n<|/ c |>\n<| c |>\n: Yes,\
    \ it does. `array_filter` removes elements from an array that don't match the\
    \ given condition. `array_filter` doesn't care about the type of the elements\
    \ in the array.\n<|/ c |>\n<| c |>\n: It does care about the type of the elements\
    \ in the array. `array_filter` doesn't care about the type of the elements in\
    \ the array. `array_filter` doesn't care about the type of the elements in the\
    \ array. `array_filter` doesn't care about the type of the elements in the array.\
    \ `array_filter` doesn't care about the type of the elements in the array. `array_filter`\
    \ doesn't care about the type of the elements in the array. `array_filter` doesn't\
    \ care about the type of the elements in the array. `array_filter` doesn't care\
    \ about the type of the elements in the array. `array_filter` doesn't care about\
    \ the type of the elements in the array. `array_filter` doesn't care about the\
    \ type of the elements in the array. `array_filter` doesn't care about the type\
    \ of the elements in the array. `array_filter` doesn't care about the type of\
    \ the elements in the array. `array_filter` doesn't care about the type of the\
    \ elements in the array. `array_filter` doesn't care about the type of the elements\
    \ in the array. `array_filter` doesn't care about the type of the elements in\
    \ the array. `array_filter` doesn't care about the type of the elements in the\
    \ array. `array_filter` doesn't care about the type of the elements in the array.\
    \ `array_filter` doesn't care about the type of the elements in the array. `array_filter`\
    \ doesn't care about the type of the elements in the array. `array_filter` doesn't\
    \ care about the type of the elements in the array. `array_filter` doesn't care\
    \ about the type of the elements in the array. `array_filter` doesn't care about\
    \ the type of the elements in the array. `array_filter` doesn't care about the\
    \ type of the elements in the array. `array_filter` doesn't care about the type\
    \ of the elements in the array. `array_filter` doesn't care about the type of\
    \ the elements in the array. `array_filter` doesn't care about the type of the\
    \ elements in the array. `array_filter` doesn't care about the type of the elements\
    \ in the array. `array_filter` doesn't care about the type of the elements in\
    \ the array. `array_filter` doesn't care about the type of the elements in the\
    \ array. `array_filter` doesn't care about the type of the elements in the array.\
    \ `array_filter` doesn't care about the type of the elements in the array. `array_filter`\
    \ doesn't care about the type of the elements in the array. `array_filter` doesn't\
    \ care about the type of the elements in the array. `array_filter` doesn't care\
    \ about the type of the element\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp75sp0ih0.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n >= 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvui6pf6m.php:18\n\
    Stack trace:\n#0 /tmp/tmpvui6pf6m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvui6pf6m.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3au3dwfv.php:16\n\
    Stack trace:\n#0 /tmp/tmp3au3dwfv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp3au3dwfv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(1, -2, 3, -4, 5, -6, 7, 8, -9,\
    \ 10, 11, -12, 13, 14, -15, 16, -17, -18, 19);\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ dscore=0 |>\n<code>\n$array = array(1, -2, 3, -4, 5, -6, 7, 8, -9, 10, 11, -12,\
    \ 13, 14, -15, 16, -17, -18, 19);\n$positive = array_filter($array, function ($v)\
    \ { return $v > 0; });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(1, -2, 3, -4, 5, -6, 7, 8, -9, 10, 11, -12, 13, 14,\
    \ -15, 16, -17, -18, 19);\n$positive = array_filter($array, function ($v) { return\
    \ $v > 0; });\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$array = array(1,\
    \ -2, 3, -4, 5, -6, 7, 8, -9, 10, 11, -12, 13, 14, -15, 16, -17, -18, 19);\n$positive\
    \ = array_filter($array, function ($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| c |>\nPlease add some explanation to your answer such that others\
    \ can learn from it\n<|/ c |>\n<| a |>\n<code>\n$array = array(1, -2, 3, -4, 5,\
    \ -6, 7, 8, -9, 10, 11, -12, 13, 14, -15, 16, -17, -18, 19);\n$positive = array_filter($array,\
    \ function ($v) { return $v > 0; });\n</code>\n<|/ a tags=arrays,php dscore=0\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1,\
    \ -2, 3, -4, 5, -6, 7, 8, -9, 10, 11, -12, 13, 14, -15, 16, -17, -18, 19);\n$positive\
    \ = array_filter($array, function ($v) { return $v > 0; });\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, -2, 3, -4, 5, -6, 7,\
    \ 8, -9, 10, 11, -12, 13, 14, -15, 16, -17, -18, 19);\n$\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw9keh5n_.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgzzz0cb.php:16\n\
    Stack trace:\n#0 /tmp/tmphgzzz0cb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphgzzz0cb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps87pw76n.php:16\n\
    Stack trace:\n#0 /tmp/tmps87pw76n.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps87pw76n.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppafud889.php:15\n\
    Stack trace:\n#0 /tmp/tmppafud889.php(21): test()\n#1 {main}\n  thrown in /tmp/tmppafud889.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidotazdb.php:16\n\
    Stack trace:\n#0 /tmp/tmpidotazdb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpidotazdb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfid0rw26.php:15\n\
    Stack trace:\n#0 /tmp/tmpfid0rw26.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfid0rw26.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdllf826.php:16\n\
    Stack trace:\n#0 /tmp/tmppdllf826.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppdllf826.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfeiy9kx.php:16\n\
    Stack trace:\n#0 /tmp/tmpwfeiy9kx.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwfeiy9kx.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question at all. OP wants to filter out\
    \ negative numbers, not just filter out all negative numbers.\n<|/ c |>\n<| c\
    \ |>\nI see your point, but I believe that OP wants to filter out negative numbers,\
    \ not just filter out all negative numbers. I added an example to my answer.\n\
    <|/ c |>\n<| c |>\nI see your point, but I believe that OP wants to filter out\
    \ negative numbers, not just filter out all negative numbers. I added an example\
    \ to my answer.\n<|/ c |>\n<| c |>\nI see your point, but I believe that OP wants\
    \ to filter out negative numbers, not just filter out all negative numbers. I\
    \ added an example to my answer.\n<|/ c |>\n<| c |>\nI see your point, but I believe\
    \ that OP wants to filter out negative numbers, not just filter out all negative\
    \ numbers. I added an example to my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    $arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function($v){\n    return\
    \ $v > 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't answer\
    \ the question at all. OP wants to filter out negative numbers, not just filter\
    \ out all negative numbers.\n<|/ c |>\n<| c |>\nI see your point, but I believe\
    \ that OP wants to filter out negative numbers, not just filter out all negative\
    \ numbers. I added an example to my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    $arr = [-1, 2, -4, 5, 6];\n$arr2 = array_filter($arr, function($v){\n    return\
    \ $v > 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't answer\
    \ the question at all. OP wants to filter out negative numbers, not just filter\
    \ out all negative numbers.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n$arr = [-1, 2,\
    \ -4, 5, 6];\n$arr2 = array_filter($arr, function($v){\n    return $v > 0;\n});\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't answer the question at\
    \ all. OP want\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt22ie2ln.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nI like this solution, but I wonder if it would be more efficient\
    \ to just use array_filter() instead of array_reduce(). array_reduce() will have\
    \ to iterate through the entire array twice. array_filter() will have to iterate\
    \ through the entire array only once.\n<|/ c |>\n<| c |>\nI agree with you. `array_filter`\
    \ should be more efficient.\n<|/ c |>\n<| c |>\nI like this solution, because\
    \ it doesn't require any additional libraries. However, I wonder if it would be\
    \ more efficient to just use array_filter() instead of array_reduce(). array_reduce()\
    \ will have to iterate through the entire array twice. array_filter() will have\
    \ to iterate through the entire array only once.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. `array_filter` should be more efficient.\n<|/ c |>\n<| c |>\nI like this\
    \ solution, because it doesn't require any additional libraries. However, I wonder\
    \ if it would be more efficient to just use array_filter() instead of array_reduce().\
    \ array_reduce() will have to iterate through the entire array twice. array_filter()\
    \ will have to iterate through the entire array only once.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This should be the accepted answer. Much more concise and readable than the other\
    \ answers.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more concise\
    \ and readable than the other answers.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more concise and readable than the other answers.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Much more concise and readable\
    \ than the other answers.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more concise and readable than the other answers.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be \nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbrvy4yb_.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me. `array_filter`\
    \ returns an array with all the positive numbers in it but `array_merge` doesn't\
    \ seem to merge them back into the original array. `array_merge` returns an empty\
    \ array.\n<|/ c |>\n<| c |>\n: I tested it and it works. I added a test case to\
    \ the answer. Maybe you have a different PHP version or a custom `array_filter`\
    \ function.\n<|/ c |>\n<| c |>\n: I tested it again and it works. I added a test\
    \ case to the answer. Maybe you have a different PHP version or a custom `array_filter`\
    \ function.\n<|/ c |>\n<| c |>\n: I tested it again and it works. I added a test\
    \ case to the answer. Maybe you have a different PHP version or a custom `array_filter`\
    \ function.\n<|/ c |>\n<| c |>\n: I tested it again and it works. I added a test\
    \ case to the answer. Maybe you have a different PHP version or a custom `array_filter`\
    \ function.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array(2,4,6,8,10);\n$arr3 = array_diff($arr, $arr2);\n$arr4 = array_merge($arr,\
    \ $arr3);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work\
    \ for me. `array_diff` returns an array with all the positive numbers in it but\
    \ `array_merge` doesn't seem to merge them back into the original array. `array_merge`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\n: I tested it and it works. I added\
    \ a test case to the answer. Maybe you have a different PHP version or a custom\
    \ `array_filter` function.\n<|/ c |>\n<| c |>\n: I tested it again and it works.\
    \ I added a test case to the answer. Maybe you have a different PHP version or\
    \ a custom `array_filter` function.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array(2,4,6,8,10);\n$arr3\
    \ = array_diff($arr, $arr2);\n$arr4 = array_merge($arr, $arr3);\n</code>\n<|/\
    \ a dscore=3 |>\n<| c |>\nThis \nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpijjx_67w.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1m5w6lb.php:16\n\
    Stack trace:\n#0 /tmp/tmpm1m5w6lb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm1m5w6lb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp375078b2.php:16\n\
    Stack trace:\n#0 /tmp/tmp375078b2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp375078b2.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1hz5eag.php:16\n\
    Stack trace:\n#0 /tmp/tmpq1hz5eag.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpq1hz5eag.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array(\n    array('name' => 'John', 'age'\
    \ => 25, 'sex' => 'M'),\n    array('name' => 'Jane', 'age' => 24, 'sex' => 'F'),\n\
    \    array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name' =>\
    \ 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name' => 'Jack', 'age' => 26,\
    \ 'sex' => 'M'),\n    array('name' => 'Jill', 'age' => 25, 'sex' => 'M'),\n  \
    \  array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name' => 'Jill',\
    \ 'age' => 25, 'sex' => 'M'),\n    array('name' => 'Jack', 'age' => 26, 'sex'\
    \ => 'M'),\n    array('name' => 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name'\
    \ => 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name' => 'Jill', 'age' =>\
    \ 25, 'sex' => 'M'),\n    array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n\
    \    array('name' => 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name' =>\
    \ 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name' => 'Jill', 'age' => 25,\
    \ 'sex' => 'M'),\n    array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n  \
    \  array('name' => 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name' => 'Jack',\
    \ 'age' => 26, 'sex' => 'M'),\n    array('name' => 'Jill', 'age' => 25, 'sex'\
    \ => 'M'),\n    array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name'\
    \ => 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name' => 'Jack', 'age' =>\
    \ 26, 'sex' => 'M'),\n    array('name' => 'Jill', 'age' => 25, 'sex' => 'M'),\n\
    \    array('name' => 'Jack', 'age' => 26, 'sex' => 'M'),\n    array('name' =>\
    \ 'Jill', 'age' => 25, 'sex' => 'M'),\n    array('name' => 'Jack', 'age' => 26,\
    \ 'sex' => 'M'),\n    array('name' => 'Jill', 'age' => 25, '\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnz4bdk3g.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_gfkfs4.php:16\n\
    Stack trace:\n#0 /tmp/tmpc_gfkfs4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc_gfkfs4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n   \
    \         $positive[] = $item;\n        }\n    }\n    return $positive;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1jzjx98.php:16\n\
    Stack trace:\n#0 /tmp/tmpa1jzjx98.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpa1jzjx98.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmjmi1bn.php:16\n\
    Stack trace:\n#0 /tmp/tmpcmjmi1bn.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpcmjmi1bn.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1g997cs.php:16\n\
    Stack trace:\n#0 /tmp/tmpf1g997cs.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpf1g997cs.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp108d7dmw.php:16\n\
    Stack trace:\n#0 /tmp/tmp108d7dmw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp108d7dmw.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp991irt5_.php:18\n\
    Stack trace:\n#0 /tmp/tmp991irt5_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp991irt5_.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8tw2qjp.php:16\n\
    Stack trace:\n#0 /tmp/tmpc8tw2qjp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc8tw2qjp.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mj5rqxg.php:15\n\
    Stack trace:\n#0 /tmp/tmp8mj5rqxg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8mj5rqxg.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjn7zfsz.php:16\n\
    Stack trace:\n#0 /tmp/tmphjn7zfsz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphjn7zfsz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwikg4mm.php:16\n\
    Stack trace:\n#0 /tmp/tmpwwikg4mm.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwwikg4mm.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a1h2ral.php:16\n\
    Stack trace:\n#0 /tmp/tmp1a1h2ral.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1a1h2ral.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbk8cp3x_.php:18\n\
    Stack trace:\n#0 /tmp/tmpbk8cp3x_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbk8cp3x_.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67_gugom.php:18\n\
    Stack trace:\n#0 /tmp/tmp67_gugom.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp67_gugom.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2qrlptz.php:16\n\
    Stack trace:\n#0 /tmp/tmpr2qrlptz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpr2qrlptz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcntfjo_6.php:16\n\
    Stack trace:\n#0 /tmp/tmpcntfjo_6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpcntfjo_6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0u2rps_d.php:16\n\
    Stack trace:\n#0 /tmp/tmp0u2rps_d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0u2rps_d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp554awj5z.php:16\n\
    Stack trace:\n#0 /tmp/tmp554awj5z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp554awj5z.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkm1z2wn.php:16\n\
    Stack trace:\n#0 /tmp/tmpbkm1z2wn.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpbkm1z2wn.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o10ue3j.php:16\n\
    Stack trace:\n#0 /tmp/tmp9o10ue3j.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9o10ue3j.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $value) {\n    if ($value > 0) {\n      $positive[]\
    \ = $value;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7560duft.php:15\n\
    Stack trace:\n#0 /tmp/tmp7560duft.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7560duft.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($x) {\n        return $x >= 0;\n    });\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\n\
    \    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n\
    \    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n\
    \    array('id' => 5, 'name' => 'Jack'),\n    array('id' => 6, 'name' => 'Jill'),\n\
    \    array('id' => 7, 'name' => 'Jack'),\n    array('id' => 8, 'name' => 'Jill'),\n\
    \    array('id' => 9, 'name' => 'Jack'),\n    array('id' => 10, 'name' => 'Jill'),\n\
    \    array('id' => 11, 'name' => 'Jack'),\n    array('id' => 12, 'name' => 'Jill'),\n\
    \    array('id' => 13, 'name' => 'Jack'),\n    array('id' => 14, 'name' => 'Jill'),\n\
    \    array('id' => 15, 'name' => 'Jack'),\n    array('id' => 16, 'name' => 'Jill'),\n\
    \    array('id' => 17, 'name' => 'Jack'),\n    array('id' => 18, 'name' => 'Jill'),\n\
    \    array('id' => 19, 'name' => 'Jack'),\n    array('id' => 20, 'name' => 'Jill'),\n\
    \    array('id' => 21, 'name' => 'Jack'),\n    array('id' => 22, 'name' => 'Jill'),\n\
    \    array('id' => 23, 'name' => 'Jack'),\n    array('id' => 24, 'name' => 'Jill'),\n\
    \    array('id' => 25, 'name' => 'Jack'),\n    array('id' => 26, 'name' => 'Jill'),\n\
    \    array('id' => 27, 'name' => 'Jack'),\n    array('id' => 28, 'name' => 'Jill'),\n\
    \    array('id' => 29, 'name' => 'Jack'),\n    array('id' => 30, 'name' => 'Jill'),\n\
    \    array('id' => 31, 'name' => 'Jack'),\n    array('id' => 32, 'name' => 'Jill'),\n\
    \    array('id' => 33, 'name' => 'Jack'),\n    array('id' => 34, 'name' => 'Jill'),\n\
    \    array('id' => 35, 'name' => 'Jack'),\n    array('id' => 36, 'name' => 'Jill'),\n\
    \    array('id' => 37, 'name' => '\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6sc76uyd.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9euhp0n.php:16\n\
    Stack trace:\n#0 /tmp/tmpx9euhp0n.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpx9euhp0n.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6lg596w.php:16\n\
    Stack trace:\n#0 /tmp/tmpg6lg596w.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpg6lg596w.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoihq_moc.php:16\n\
    Stack trace:\n#0 /tmp/tmpoihq_moc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoihq_moc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function ($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8zmk472.php:16\n\
    Stack trace:\n#0 /tmp/tmpf8zmk472.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpf8zmk472.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj07wduv.php:16\n\
    Stack trace:\n#0 /tmp/tmpkj07wduv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkj07wduv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlge2b37.php:16\n\
    Stack trace:\n#0 /tmp/tmpmlge2b37.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmlge2b37.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n >= 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyyrk1eo.php:18\n\
    Stack trace:\n#0 /tmp/tmpuyyrk1eo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuyyrk1eo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function ($v) { return $v > 0; });\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have negative numbers\
    \ in the array.\n<|/ c |>\n<| c |>\n: It does work, if you have negative numbers\
    \ in the array. `array_filter` removes all the negative numbers from the array.\
    \ `array_filter` returns an array with all the positive numbers in the array.\n\
    <|/ c |>\n<| c |>\n: It does work, if you have negative numbers in the array.\
    \ `array_filter` removes all the negative numbers from the array. `array_filter`\
    \ returns an array with all the positive numbers in the array.\n<|/ c |>\n<| c\
    \ |>\n: It does work, if you have negative numbers in the array. `array_filter`\
    \ removes all the negative numbers from the array. `array_filter` returns an array\
    \ with all the positive numbers in the array.\n<|/ c |>\n<| c |>\n: It does work,\
    \ if you have negative numbers in the array. `array_filter` removes all the negative\
    \ numbers from the array. `array_filter` returns an array with all the positive\
    \ numbers in the array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1,\
    \ -2, 3, -4);\n$positive = array_filter($array, function($v) { return $v > 0;\
    \ });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have\
    \ negative numbers in the array.\n<|/ c |>\n<| c |>\n: It does work, if you have\
    \ negative numbers in the array. `array_filter` removes all the negative numbers\
    \ from the array. `array_filter` returns an array with all the positive numbers\
    \ in the array.\n<|/ c |>\n<| c |>\n: It does work, if you have negative numbers\
    \ in the array. `array_filter` removes all the negative numbers from the array.\
    \ `array_filter` returns an array with all the positive numbers in the array.\n\
    <|/ c |>\n<| c |>\n: It does work, if you have negative numbers in the array.\
    \ `array_filter` removes all the negative numbers from the array. `array_filter`\
    \ returns an array with all the positive numbers in the array.\n<|/ c |>\n<| a\
    \ dscore=5 |>\n<code>\n$array = array(1, -2, 3, -4);\n$positive = array_filter($array,\
    \ function($v) { return $v > 0; });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if you have negative numbers in the array.\n<|/ c |>\n<|\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3xe5yu92.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq76qnc46.php:15\n\
    Stack trace:\n#0 /tmp/tmpq76qnc46.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq76qnc46.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp383xfglj.php:16\n\
    Stack trace:\n#0 /tmp/tmp383xfglj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp383xfglj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqonlmf3.php:16\n\
    Stack trace:\n#0 /tmp/tmpfqonlmf3.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfqonlmf3.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjy6c6nge.php:16\n\
    Stack trace:\n#0 /tmp/tmpjy6c6nge.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjy6c6nge.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positive\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] =\
    \ $item;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx8blplj.php:16\n\
    Stack trace:\n#0 /tmp/tmptx8blplj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmptx8blplj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnfov26b.php:16\n\
    Stack trace:\n#0 /tmp/tmpnnfov26b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnnfov26b.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n \
    \           $positive[] = $value;\n        }\n    }\n    return $positive;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

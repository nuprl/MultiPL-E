name: HumanEval_22_filter_integers
language: php
results:
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk5uhkqp.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk5uhkqp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzk5uhkqp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3lf06hv.php:19\n\
    Stack trace:\n#0 /tmp/tmpn3lf06hv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpn3lf06hv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2etiyuqs.php:19\n\
    Stack trace:\n#0 /tmp/tmp2etiyuqs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2etiyuqs.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwtajlre.php:19\n\
    Stack trace:\n#0 /tmp/tmpkwtajlre.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkwtajlre.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni76fxfp.php:19\n\
    Stack trace:\n#0 /tmp/tmpni76fxfp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpni76fxfp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1qxgbdh.php:19\n\
    Stack trace:\n#0 /tmp/tmph1qxgbdh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmph1qxgbdh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhjg28aa.php:19\n\
    Stack trace:\n#0 /tmp/tmpwhjg28aa.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwhjg28aa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pwq9mig.php:19\n\
    Stack trace:\n#0 /tmp/tmp0pwq9mig.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0pwq9mig.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_numeric($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyebor3wq.php:19\n\
    Stack trace:\n#0 /tmp/tmpyebor3wq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyebor3wq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporhr6iuq.php:19\n\
    Stack trace:\n#0 /tmp/tmporhr6iuq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmporhr6iuq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkf3l2ouc.php:19\n\
    Stack trace:\n#0 /tmp/tmpkf3l2ouc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkf3l2ouc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vq1od3_.php:19\n\
    Stack trace:\n#0 /tmp/tmp6vq1od3_.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6vq1od3_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3i3q9vv.php:19\n\
    Stack trace:\n#0 /tmp/tmpd3i3q9vv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpd3i3q9vv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lu6dsjb.php:19\n\
    Stack trace:\n#0 /tmp/tmp6lu6dsjb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6lu6dsjb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0xpp4_w.php:19\n\
    Stack trace:\n#0 /tmp/tmpo0xpp4_w.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpo0xpp4_w.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar4_yv9q.php:19\n\
    Stack trace:\n#0 /tmp/tmpar4_yv9q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpar4_yv9q.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy991mln.php:19\n\
    Stack trace:\n#0 /tmp/tmphy991mln.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphy991mln.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttvowp8x.php:19\n\
    Stack trace:\n#0 /tmp/tmpttvowp8x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpttvowp8x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmka3jpw.php:19\n\
    Stack trace:\n#0 /tmp/tmpsmka3jpw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsmka3jpw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95xaw832.php:19\n\
    Stack trace:\n#0 /tmp/tmp95xaw832.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp95xaw832.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8fvxulx.php:19\n\
    Stack trace:\n#0 /tmp/tmpz8fvxulx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz8fvxulx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__7_tm0h.php:19\n\
    Stack trace:\n#0 /tmp/tmp__7_tm0h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp__7_tm0h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt5hdc5z.php:19\n\
    Stack trace:\n#0 /tmp/tmpdt5hdc5z.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdt5hdc5z.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc91d33e9.php:19\n\
    Stack trace:\n#0 /tmp/tmpc91d33e9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpc91d33e9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2j18thu.php:19\n\
    Stack trace:\n#0 /tmp/tmpm2j18thu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm2j18thu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3o8hb1a.php:19\n\
    Stack trace:\n#0 /tmp/tmpz3o8hb1a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz3o8hb1a.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj__x8n0.php:19\n\
    Stack trace:\n#0 /tmp/tmpgj__x8n0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgj__x8n0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3es6pgff.php:19\n\
    Stack trace:\n#0 /tmp/tmp3es6pgff.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3es6pgff.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpx3dz2q.php:19\n\
    Stack trace:\n#0 /tmp/tmplpx3dz2q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplpx3dz2q.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3lq_jat_.php:19\n\
    Stack trace:\n#0 /tmp/tmp3lq_jat_.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3lq_jat_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5bmg0y3.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5bmg0y3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpf5bmg0y3.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rhfxb_k.php:19\n\
    Stack trace:\n#0 /tmp/tmp5rhfxb_k.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5rhfxb_k.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\");\n\n$array = array_filter($array,function($value){\n    return\
    \ !is_numeric($value);\n});\n\nprint_r($array);\n</code>\n<|/ a dscore=4 |>\n\
    <| a tags=arrays,php |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\"\
    ,\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\n$array = array_filter($array,function($value){\n\
    \    return !is_numeric($value);\n});\n\nprint_r($array);\n</code>\n<|/ a dscore=4\
    \ |>\n<| a dscore=3 |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\n$array = array_filter($array,function($value){\n\
    \    return !is_numeric($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=3 |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\n$array = array_filter($array,function($value){\n\
    \    return !is_numeric($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=3 |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpca9g9fz6.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4apxif9i.php:19\n\
    Stack trace:\n#0 /tmp/tmp4apxif9i.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4apxif9i.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgvhu__1.php:19\n\
    Stack trace:\n#0 /tmp/tmprgvhu__1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprgvhu__1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3ihirnj.php:19\n\
    Stack trace:\n#0 /tmp/tmpv3ihirnj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpv3ihirnj.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaj44tbtj.php:19\n\
    Stack trace:\n#0 /tmp/tmpaj44tbtj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpaj44tbtj.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e82ej8h.php:19\n\
    Stack trace:\n#0 /tmp/tmp0e82ej8h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0e82ej8h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujh4fjma.php:19\n\
    Stack trace:\n#0 /tmp/tmpujh4fjma.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpujh4fjma.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2krh_nvu.php:19\n\
    Stack trace:\n#0 /tmp/tmp2krh_nvu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2krh_nvu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplo855ja4.php:19\n\
    Stack trace:\n#0 /tmp/tmplo855ja4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplo855ja4.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bf_vowa.php:19\n\
    Stack trace:\n#0 /tmp/tmp_bf_vowa.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_bf_vowa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqod7kkvf.php:19\n\
    Stack trace:\n#0 /tmp/tmpqod7kkvf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqod7kkvf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb33pdpbt.php:19\n\
    Stack trace:\n#0 /tmp/tmpb33pdpbt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb33pdpbt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppki6ro96.php:19\n\
    Stack trace:\n#0 /tmp/tmppki6ro96.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppki6ro96.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3wgki5h.php:19\n\
    Stack trace:\n#0 /tmp/tmpz3wgki5h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz3wgki5h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90eqaeqv.php:19\n\
    Stack trace:\n#0 /tmp/tmp90eqaeqv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp90eqaeqv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8j72mpx.php:19\n\
    Stack trace:\n#0 /tmp/tmpi8j72mpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpi8j72mpx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_ssm7jp.php:19\n\
    Stack trace:\n#0 /tmp/tmp7_ssm7jp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7_ssm7jp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyh33ut2.php:19\n\
    Stack trace:\n#0 /tmp/tmpiyh33ut2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpiyh33ut2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnybcpjvv.php:19\n\
    Stack trace:\n#0 /tmp/tmpnybcpjvv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnybcpjvv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\n\
    I like this solution, however it only filters integers, not floats, strings, etc.\n\
    <|/ c |>\n<| c |>\nYes, I missed that requirement. I've updated my answer to include\
    \ that requirement.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\n   \
    \ array('name' => 'John', 'age' => 25, 'city' => 'New York'),\n    array('name'\
    \ => 'Jane', 'age' => 22, 'city' => 'New York'),\n    array('name' => 'Jack',\
    \ 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jill', 'age' => 25,\
    \ 'city' => 'New York'),\n    array('name' => 'Jack', 'age' => 25, 'city' => 'New\
    \ York'),\n    array('name' => 'Jill', 'age' => 25, 'city' => 'New York'),\n \
    \   array('name' => 'Jack', 'age' => 25, 'city' => 'New York'),\n    array('name'\
    \ => 'Jill', 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jack',\
    \ 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jill', 'age' => 25,\
    \ 'city' => 'New York'),\n    array('name' => 'Jack', 'age' => 25, 'city' => 'New\
    \ York'),\n    array('name' => 'Jill', 'age' => 25, 'city' => 'New York'),\n \
    \   array('name' => 'Jack', 'age' => 25, 'city' => 'New York'),\n    array('name'\
    \ => 'Jill', 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jack',\
    \ 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jill', 'age' => 25,\
    \ 'city' => 'New York'),\n    array('name' => 'Jack', 'age' => 25, 'city' => 'New\
    \ York'),\n    array('name' => 'Jill', 'age' => 25, 'city' => 'New York'),\n \
    \   array('name' => 'Jack', 'age' => 25, 'city' => 'New York'),\n    array('name'\
    \ => 'Jill', 'age' => 25, 'city' => 'New York'),\n    array('name' => 'Jack',\
    \ 'age\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjqj8zwp7.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplyjena0c.php:19\n\
    Stack trace:\n#0 /tmp/tmplyjena0c.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplyjena0c.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp648nj_82.php:19\n\
    Stack trace:\n#0 /tmp/tmp648nj_82.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp648nj_82.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\n/**\n * Filter given list of any python values only for floats\n * >>> filter_floats(['a',\
    \ 3.14, 5])\n * [3.14]\n * >>> filter_floats([1, 2, 3, 'abc', {}, []])\n * [1,\
    \ 2, 3]\n */\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2e48x3d.php:26\n\
    Stack trace:\n#0 /tmp/tmpk2e48x3d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk2e48x3d.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp647uft62.php:19\n\
    Stack trace:\n#0 /tmp/tmp647uft62.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp647uft62.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl5nahr7.php:19\n\
    Stack trace:\n#0 /tmp/tmpxl5nahr7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxl5nahr7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqri8j1kx.php:19\n\
    Stack trace:\n#0 /tmp/tmpqri8j1kx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqri8j1kx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fjmj5f8.php:19\n\
    Stack trace:\n#0 /tmp/tmp5fjmj5f8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5fjmj5f8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsd2jpviv.php:19\n\
    Stack trace:\n#0 /tmp/tmpsd2jpviv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsd2jpviv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hca1x1d.php:19\n\
    Stack trace:\n#0 /tmp/tmp2hca1x1d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2hca1x1d.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hr7y02d.php:19\n\
    Stack trace:\n#0 /tmp/tmp4hr7y02d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hr7y02d.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpia2gsb8n.php:19\n\
    Stack trace:\n#0 /tmp/tmpia2gsb8n.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpia2gsb8n.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjpbvcqy.php:19\n\
    Stack trace:\n#0 /tmp/tmpxjpbvcqy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxjpbvcqy.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk2ml0l5.php:19\n\
    Stack trace:\n#0 /tmp/tmpvk2ml0l5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvk2ml0l5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\");\n$array\
    \ = array_filter($array,function($value){\n    return is_numeric($value);\n});\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ was introduced in PHP 5.5.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ `array_filter` was introduced in PHP 5.5.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_filter` was introduced in PHP 5.5.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. `array_filter` was introduced in PHP\
    \ 5.5.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ was introduced in PHP 5.5.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\");\n$array = array_filter($array,function($value){\n\
    \    return is_numeric($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. `array_filter` was introduced in PHP 5.5.\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\");\n$array = array_filter($array,function($value){\n \
    \   return is_numeric($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\n\
    This should be the accepted answer. `array_filter` was introduced in PHP 5.5.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"\
    e\",\"f\",\"g\",\"h\",\"i\");\n$array = array_filter($array,function($value){\n\
    \    return is_numeric($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c\
    \ |>\nThis should be the accepted answer. `array_filter` was introduced in PHP\
    \ 5.5.\n<|/ c |>\n<| a dscore=\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05gvieqi.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyockwae.php:19\n\
    Stack trace:\n#0 /tmp/tmpnyockwae.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnyockwae.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jb1rbco.php:19\n\
    Stack trace:\n#0 /tmp/tmp_jb1rbco.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_jb1rbco.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsah0wrtg.php:19\n\
    Stack trace:\n#0 /tmp/tmpsah0wrtg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsah0wrtg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpboz8mk.php:19\n\
    Stack trace:\n#0 /tmp/tmpkpboz8mk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkpboz8mk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution because it doesn't\
    \ require any additional libraries. I used it in a project where I needed to filter\
    \ out some values from a database query and I didn't want to add any additional\
    \ libraries.\n<|/ c |>\n<| c |>\nI like this solution as well, because it doesn't\
    \ require any additional libraries. I used it in a project where I needed to filter\
    \ out some values from a database query and I didn't want to add any additional\
    \ libraries.\n<|/ c |>\n<| c |>\nI like this solution as well, because it doesn't\
    \ require any additional libraries. I used it in a project where I needed to filter\
    \ out some values from a database query and I didn't want to add any additional\
    \ libraries.\n<|/ c |>\n<| c |>\nI like this solution as well, because it doesn't\
    \ require any additional libraries. I used it in a project where I needed to filter\
    \ out some values from a database query and I didn't want to add any additional\
    \ libraries.\n<|/ c |>\n<| c |>\nI like this solution as well, because it doesn't\
    \ require any additional libraries. I used it in a project where I needed to filter\
    \ out some values from a database query and I didn't want to add any additional\
    \ libraries.\n<|/ c |>\n<| a dscore=5 |>\nI like to use array_filter() for this\
    \ purpose:\n<code>\n$filtered = array_filter($array, function ($value) {\n   \
    \ return is_int($value);\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis\
    \ should be the accepted answer. No additional libraries, no additional function\
    \ calls.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No additional\
    \ libraries, no additional function calls.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. No additional libraries, no additional function calls.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No additional libraries,\
    \ no additional function calls.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No additional libraries, no additional function calls.\n<|/ c |>\n<|\
    \ a tags=arrays,php |>\n<code>\n$filtered = array_filter($array, function ($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. No additional libraries, no additional function\
    \ calls.\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppneq174p.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\n    array('id' => 1, 'name' => 'John', 'age' =>\
    \ 25),\n    array('id' => 2, 'name' => 'Jane', 'age' => 30),\n    array('id' =>\
    \ 3, 'name' => 'Jack', 'age' => 35),\n    array('id' => 4, 'name' => 'Jill', 'age'\
    \ => 25),\n    array('id' => 5, 'name' => 'Jack', 'age' => 35),\n    array('id'\
    \ => 6, 'name' => 'Jill', 'age' => 25),\n    array('id' => 7, 'name' => 'Jack',\
    \ 'age' => 35),\n    array('id' => 8, 'name' => 'Jill', 'age' => 25),\n    array('id'\
    \ => 9, 'name' => 'Jack', 'age' => 35),\n    array('id' => 10, 'name' => 'Jill',\
    \ 'age' => 25),\n    array('id' => 11, 'name' => 'Jack', 'age' => 35),\n    array('id'\
    \ => 12, 'name' => 'Jill', 'age' => 25),\n    array('id' => 13, 'name' => 'Jack',\
    \ 'age' => 35),\n    array('id' => 14, 'name' => 'Jill', 'age' => 25),\n    array('id'\
    \ => 15, 'name' => 'Jack', 'age' => 35),\n    array('id' => 16, 'name' => 'Jill',\
    \ 'age' => 25),\n    array('id' => 17, 'name' => 'Jack', 'age' => 35),\n    array('id'\
    \ => 18, 'name' => 'Jill', 'age' => 25),\n    array('id' => 19, 'name' => 'Jack',\
    \ 'age' => 35),\n    array('id' => 20, 'name' => 'Jill', 'age' => 25),\n    array('id'\
    \ => 21, 'name' => 'Jack', 'age' => 35),\n    array('id' => 22, 'name' => 'Jill',\
    \ 'age' => 25),\n    array('id' => 23, 'name' => 'Jack', 'age' => 35),\n    array('id'\
    \ => 24, 'name' => 'Jill', 'age' => 25),\n    array('id' => 25, 'name' => 'Jack',\
    \ 'age' => 35),\n    array('id' => 26, 'name' => 'Jill', 'age' => 25),\n    array('id'\
    \ => 27, 'name' => 'Jack', 'age' => 35),\n    array('id' => 28, 'name' => 'Jill\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe7tc82h4.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_j4v2qh.php:19\n\
    Stack trace:\n#0 /tmp/tmpj_j4v2qh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj_j4v2qh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwiz1qp7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpwiz1qp7m.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwiz1qp7m.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n<?php\n$array\
    \ = [\n    'a',\n    3.14,\n    5,\n    'abc',\n    [],\n];\n\n$array = array_filter($array,\
    \ function ($value) {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n\
    <|/ a tags=arrays,php,filter |>\n<| a tags=arrays,php,filter |>\n<code>\n<?php\n\
    $array = [\n    'a',\n    3.14,\n    5,\n    'abc',\n    [],\n];\n\n$array = array_filter($array,\
    \ function ($value) {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=arrays,php,filter |>\n<code>\n<?php\n$array = [\n\
    \    'a',\n    3.14,\n    5,\n    'abc',\n    [],\n];\n\n$array = array_filter($array,\
    \ function ($value) {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=arrays,php,filter |>\n<code>\n$array = [\n    'a',\n\
    \    3.14,\n    5,\n    'abc',\n    [],\n];\n\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/\
    \ a dscore=1 |>\n<| a |>\n<code>\n$array = [\n    'a',\n    3.14,\n    5,\n  \
    \  'abc',\n    [],\n];\n\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php,filter\
    \ dscore=1 |>\n<| a |>\n<code>\n<?php\n$array = [\n    'a',\n    3.14,\n    5,\n\
    \    'abc',\n    [],\n];\n\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php,filter\
    \ dscore=1 |>\n<| a tags=arrays,php,filter |>\n<code>\n<?php\n$array = [\n   \
    \ 'a',\n    3.14,\n    5,\n    'abc',\n    [],\n];\n\n$array = array_filter($array,\
    \ function ($value) {\n    return is_int($value);\n});\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp964q9xct.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcupgvdgq.php:19\n\
    Stack trace:\n#0 /tmp/tmpcupgvdgq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpcupgvdgq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6qnes4d.php:19\n\
    Stack trace:\n#0 /tmp/tmpa6qnes4d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpa6qnes4d.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvec1mfv.php:19\n\
    Stack trace:\n#0 /tmp/tmpxvec1mfv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxvec1mfv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsek23zh.php:19\n\
    Stack trace:\n#0 /tmp/tmpxsek23zh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxsek23zh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6th2e0nf.php:19\n\
    Stack trace:\n#0 /tmp/tmp6th2e0nf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6th2e0nf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpneieku3v.php:19\n\
    Stack trace:\n#0 /tmp/tmpneieku3v.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpneieku3v.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwy5vech.php:19\n\
    Stack trace:\n#0 /tmp/tmpmwy5vech.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmwy5vech.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zp4x9dt.php:19\n\
    Stack trace:\n#0 /tmp/tmp4zp4x9dt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4zp4x9dt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nI like your solution, but I\
    \ wonder why `is_int` doesn't work here? `is_int('a')` returns `true`, but `is_int(['a'])`\
    \ returns `false`\n<|/ c |>\n<| c |>\n`is_int` checks if the value is an integer,\
    \ not if it is a string. `is_int(['a'])` returns `false` because `['a']` is not\
    \ an integer.\n<|/ c |>\n<| c |>\nI see. So `is_int` doesn't work because `['a']`\
    \ is not an integer, but `is_int('a')` returns `true` because `'a'` is an integer.\n\
    <|/ c |>\n<| c |>\nYes, that's right. `is_int` checks if the value is an integer,\
    \ not if it is a string. `is_int(['a'])` returns `false` because `['a']` is not\
    \ an integer.\n<|/ c |>\n<| c |>\nI see. So `is_int` doesn't work because `['a']`\
    \ is not an integer, but `is_int('a')` returns `true` because `'a'` is an integer.\n\
    <|/ c |>\n<| a dscore=3 |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n$array\
    \ = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=3 |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd');\n$array = array_filter($array, function($value) {\n    return\
    \ is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=3\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n$array =\
    \ array_filter($array, function($value) {\n    return is_numeric($value);\n});\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd');\n$array = array_filter($array, function($value) {\n    return\
    \ is_numeric($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_y8ohgd1.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu62pyne.php:19\n\
    Stack trace:\n#0 /tmp/tmpzu62pyne.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzu62pyne.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv3q0_on.php:19\n\
    Stack trace:\n#0 /tmp/tmpnv3q0_on.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnv3q0_on.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_kxdak6.php:19\n\
    Stack trace:\n#0 /tmp/tmp1_kxdak6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1_kxdak6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjlvds38r.php:19\n\
    Stack trace:\n#0 /tmp/tmpjlvds38r.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjlvds38r.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuha7r68p.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a\
    \ string that looks like a number. `filter_integers(['a', 3.14, 5])` returns `[3.14,\
    \ 5]` instead of `[5]`.\n<|/ c |>\n<| c |>\nThis also doesn't work if you have\
    \ an array with mixed types. `filter_integers([1, 'a', 3.14, 5])` returns `[1,\
    \ 3.14, 5]` instead of `[5]`.\n<|/ c |>\n<| c |>\nThis also doesn't work if you\
    \ have an array with mixed types. `filter_integers([1, 'a', 3.14, 5])` returns\
    \ `[1, 3.14, 5]` instead of `[5]`.\n<|/ c |>\n<| c |>\nThis also doesn't work\
    \ if you have an array with mixed types. `filter_integers([1, 'a', 3.14, 5])`\
    \ returns `[1, 3.14, 5]` instead of `[5]`.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu6no4wl0.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm71w_uem.php:19\n\
    Stack trace:\n#0 /tmp/tmpm71w_uem.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm71w_uem.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8p67mql.php:19\n\
    Stack trace:\n#0 /tmp/tmpi8p67mql.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpi8p67mql.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_io9qm28.php:19\n\
    Stack trace:\n#0 /tmp/tmp_io9qm28.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_io9qm28.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch6w_u0y.php:19\n\
    Stack trace:\n#0 /tmp/tmpch6w_u0y.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpch6w_u0y.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3upu6l4.php:19\n\
    Stack trace:\n#0 /tmp/tmpe3upu6l4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe3upu6l4.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtvtmel2.php:19\n\
    Stack trace:\n#0 /tmp/tmpvtvtmel2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvtvtmel2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk4ejzgl.php:19\n\
    Stack trace:\n#0 /tmp/tmpdk4ejzgl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdk4ejzgl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryve39at.php:19\n\
    Stack trace:\n#0 /tmp/tmpryve39at.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpryve39at.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti5gtlbf.php:19\n\
    Stack trace:\n#0 /tmp/tmpti5gtlbf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpti5gtlbf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, because it\
    \ doesn't require any additional libraries. I didn't know about `array_filter`\
    \ before, thank you!\n<|/ c |>\n<| c |>\nI like this solution as well, because\
    \ it doesn't require any additional libraries. I didn't know about `array_filter`\
    \ before, thank you!\n<|/ c |>\n<| c |>\nI like this solution as well, because\
    \ it doesn't require any additional libraries. I didn't know about `array_filter`\
    \ before, thank you!\n<|/ c |>\n<| c |>\nI like this solution as well, because\
    \ it doesn't require any additional libraries. I didn't know about `array_filter`\
    \ before, thank you!\n<|/ c |>\n<| c |>\nI like this solution as well, because\
    \ it doesn't require any additional libraries. I didn't know about `array_filter`\
    \ before, thank you!\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\n\
    \    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n\
    \    7 => 7,\n    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 =>\
    \ 12,\n    13 => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n\
    \    18 => 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n \
    \   23 => 23,\n    24 => 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n  \
    \  28 => 28,\n    29 => 29,\n    30 => 30,\n    31 => 31,\n    32 => 32,\n   \
    \ 33 => 33,\n    34 => 34,\n    35 => 35,\n    36 => 36,\n    37 => 37,\n    38\
    \ => 38,\n    39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n    43 =>\
    \ 43,\n    44 => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n\
    \    49 => 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2401222r.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93oe9tnj.php:19\n\
    Stack trace:\n#0 /tmp/tmp93oe9tnj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp93oe9tnj.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzv_09336.php:19\n\
    Stack trace:\n#0 /tmp/tmpzv_09336.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzv_09336.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0r24amz.php:19\n\
    Stack trace:\n#0 /tmp/tmpe0r24amz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe0r24amz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr73_k8b1.php:19\n\
    Stack trace:\n#0 /tmp/tmpr73_k8b1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpr73_k8b1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpng6y3_ea.php:19\n\
    Stack trace:\n#0 /tmp/tmpng6y3_ea.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpng6y3_ea.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id'\
    \ => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name' => 'Jack'),\n    array('id'\
    \ => 8, 'name' => 'Jill'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id'\
    \ => 10, 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jack'),\n    array('id'\
    \ => 14, 'name' => 'Jill'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    array('id'\
    \ => 36, 'name' => 'Jill'),\n    array('\nfunction candidate(...$args) {\n   \
    \ return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkhnaqs7d.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwaua2hew.php:19\n\
    Stack trace:\n#0 /tmp/tmpwaua2hew.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwaua2hew.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2lo6i0x.php:19\n\
    Stack trace:\n#0 /tmp/tmpt2lo6i0x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpt2lo6i0x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87w2c_fo.php:19\n\
    Stack trace:\n#0 /tmp/tmp87w2c_fo.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp87w2c_fo.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngme1miv.php:19\n\
    Stack trace:\n#0 /tmp/tmpngme1miv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpngme1miv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nay60oh.php:19\n\
    Stack trace:\n#0 /tmp/tmp7nay60oh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7nay60oh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirvibh1z.php:19\n\
    Stack trace:\n#0 /tmp/tmpirvibh1z.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpirvibh1z.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5t29rxs.php:19\n\
    Stack trace:\n#0 /tmp/tmpu5t29rxs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpu5t29rxs.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI came up with a solution\
    \ using array_walk and array_filter:\n<code>\n$array = array('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g');\n$filtered = array_filter($array, function($value) use ($array)\
    \ {\n    return in_array($value, $array);\n});\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis doesn't work if you have a value that isn't in the array and\
    \ you still want to keep it.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array('a', 'b', 'c', 'd', 'e', 'f', 'g');\n$filtered = array_filter($array,\
    \ function($value) use ($array) {\n    return in_array($value, $array);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g');\n$filtered = array_filter($array, function($value)\
    \ use ($array) {\n    return in_array($value, $array);\n});\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g');\n$filtered = array_filter($array, function($value) use ($array) {\n\
    \    return in_array($value, $array);\n});\n</code>\n<|/ a dscore=2 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e', 'f', 'g');\n$filtered =\
    \ array_filter($array, function($value) use ($array) {\n    return in_array($value,\
    \ $array);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array('a', 'b', 'c', 'd', 'e', 'f', 'g');\n$filtered = array_filter($array,\
    \ function($value) use ($array) {\n    return in_array($value, $array);\n});\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g');\n$filtered = array_filter($array, function($value)\
    \ use ($array) {\n    return in_array($value, $array);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e', 'f', 'g');\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmvtyapb9.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_bryado.php:19\n\
    Stack trace:\n#0 /tmp/tmpq_bryado.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq_bryado.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigpmp571.php:19\n\
    Stack trace:\n#0 /tmp/tmpigpmp571.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpigpmp571.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz5vp253.php:19\n\
    Stack trace:\n#0 /tmp/tmpwz5vp253.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwz5vp253.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6z_i8f6.php:19\n\
    Stack trace:\n#0 /tmp/tmpv6z_i8f6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpv6z_i8f6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzh1ruqbw.php:19\n\
    Stack trace:\n#0 /tmp/tmpzh1ruqbw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzh1ruqbw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8abc95a1.php:19\n\
    Stack trace:\n#0 /tmp/tmp8abc95a1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8abc95a1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you\
    \ have an array with mixed types. `filter_integers([1, 'a', 3.14, 5])` returns\
    \ `[1, 'a', 3.14, 5]` instead of `[1, 5]`\n<|/ c |>\n<| c |>\nI added a version\
    \ that works with mixed types. I tested it and it works.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I added a version that works with mixed types. I tested\
    \ it and it works.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a version\
    \ that works with mixed types. I tested it and it works.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I added a version that works with mixed types. I tested\
    \ it and it works.\n<|/ c |>\n<| a |>\n<code>\n$array = array('a', 'b', 'c');\n\
    $array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php dscore=5 |>\n<| c |>\nThis doesn't work if\
    \ you have an array with mixed types. `filter_integers([1, 'a', 3.14, 5])` returns\
    \ `[1, 'a', 3.14, 5]` instead of `[1, 5]`\n<|/ c |>\n<| c |>\nI added a version\
    \ that works with mixed types. I tested it and it works.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I added a version that works with mixed types. I tested\
    \ it and it works.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array('a', 'b',\
    \ 'c');\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=5 |>\n<code>\n$array = array('a',\
    \ 'b', 'c');\n$array = array_filter($array, function($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$array\
    \ = array('a', 'b', 'c');\n$array = array_filter($array, function($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=4 |>\n<| a |>\n<code>\n\
    $array = array('a', 'b', 'c');\n$\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpswibic76.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmthwh3e5.php:19\n\
    Stack trace:\n#0 /tmp/tmpmthwh3e5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmthwh3e5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwf9uux4x.php:19\n\
    Stack trace:\n#0 /tmp/tmpwf9uux4x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwf9uux4x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI love this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| c |>\nI love this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| c |>\nI love this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| c |>\nI love this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| c |>\nI love this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| a dscore=5 |>\nI love the solution by\
    \ Jonathan Wakely, but wanted to add an alternative that uses array_reduce() instead\
    \ of array_filter(). \n<code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi0g72d2q.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5x79tuf8.php:19\n\
    Stack trace:\n#0 /tmp/tmp5x79tuf8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5x79tuf8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_yu69b2.php:19\n\
    Stack trace:\n#0 /tmp/tmp1_yu69b2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1_yu69b2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlime3er.php:19\n\
    Stack trace:\n#0 /tmp/tmpmlime3er.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmlime3er.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54p8uzcr.php:19\n\
    Stack trace:\n#0 /tmp/tmp54p8uzcr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp54p8uzcr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxpuau7x.php:19\n\
    Stack trace:\n#0 /tmp/tmpsxpuau7x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsxpuau7x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee8d2i5l.php:19\n\
    Stack trace:\n#0 /tmp/tmpee8d2i5l.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpee8d2i5l.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg3kpah5.php:19\n\
    Stack trace:\n#0 /tmp/tmptg3kpah5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmptg3kpah5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9777jm2c.php:19\n\
    Stack trace:\n#0 /tmp/tmp9777jm2c.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9777jm2c.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnumic__e.php:19\n\
    Stack trace:\n#0 /tmp/tmpnumic__e.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnumic__e.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1ujq1oh.php:19\n\
    Stack trace:\n#0 /tmp/tmpv1ujq1oh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpv1ujq1oh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_hjy7be.php:19\n\
    Stack trace:\n#0 /tmp/tmp2_hjy7be.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2_hjy7be.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4ell08r.php:19\n\
    Stack trace:\n#0 /tmp/tmpm4ell08r.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm4ell08r.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array\
    \ = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value) {\n   \
    \ return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n\
    $array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value) {\n   \
    \ return is_numeric($value);\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n\
    $array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value) {\n   \
    \ return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array,\
    \ function($value) {\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0q343jld.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnah3l21p.php:19\n\
    Stack trace:\n#0 /tmp/tmpnah3l21p.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnah3l21p.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbuhsyv04.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\n/**\n * Filter given list of any python values only for floats\n\
    \ * >>> filter_floats(['a', 3.14, 5])\n * [3.14]\n * >>> filter_floats([1, 2,\
    \ 3, 'abc', {}, []])\n * [1, 2, 3]\n */\nfunction candidate(...$args) {\n    return\
    \ filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkaedj70d.php:26\n\
    Stack trace:\n#0 /tmp/tmpkaedj70d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkaedj70d.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfudtpe9.php:19\n\
    Stack trace:\n#0 /tmp/tmpjfudtpe9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjfudtpe9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jlno8ul.php:19\n\
    Stack trace:\n#0 /tmp/tmp5jlno8ul.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5jlno8ul.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_integer($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpholqablh.php:19\n\
    Stack trace:\n#0 /tmp/tmpholqablh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpholqablh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_f_u4x6z.php:19\n\
    Stack trace:\n#0 /tmp/tmp_f_u4x6z.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_f_u4x6z.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4_233ja.php:19\n\
    Stack trace:\n#0 /tmp/tmpk4_233ja.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk4_233ja.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7opwub1u.php:19\n\
    Stack trace:\n#0 /tmp/tmp7opwub1u.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7opwub1u.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq31s3xpl.php:19\n\
    Stack trace:\n#0 /tmp/tmpq31s3xpl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq31s3xpl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi8yqsdpw.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflgf8oqu.php:19\n\
    Stack trace:\n#0 /tmp/tmpflgf8oqu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpflgf8oqu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vt5c135.php:19\n\
    Stack trace:\n#0 /tmp/tmp2vt5c135.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2vt5c135.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3sdtqz17.php:19\n\
    Stack trace:\n#0 /tmp/tmp3sdtqz17.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3sdtqz17.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb69lykw.php:19\n\
    Stack trace:\n#0 /tmp/tmptb69lykw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmptb69lykw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9sbc2zhp.php:19\n\
    Stack trace:\n#0 /tmp/tmp9sbc2zhp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9sbc2zhp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiigak7i8.php:19\n\
    Stack trace:\n#0 /tmp/tmpiigak7i8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpiigak7i8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpn82sa9.php:19\n\
    Stack trace:\n#0 /tmp/tmpfpn82sa9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfpn82sa9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7br_oq1k.php:19\n\
    Stack trace:\n#0 /tmp/tmp7br_oq1k.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7br_oq1k.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_096hdx8.php:19\n\
    Stack trace:\n#0 /tmp/tmp_096hdx8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_096hdx8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpore15fd6.php:19\n\
    Stack trace:\n#0 /tmp/tmpore15fd6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpore15fd6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's much more elegant than using array_filter().\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's much\
    \ more elegant than using array_filter().\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's much more elegant than using array_filter().\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ much more elegant than using array_filter().\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's much more elegant than using\
    \ array_filter().\n<|/ c |>\n<| a tags=arrays,php,filter |>\n<code>\n$array =\
    \ array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's much more elegant\
    \ than using array_filter().\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's much more elegant than using array_filter().\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's much\
    \ more elegant than using array_filter().\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's much more elegant than using array_filter().\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ much more elegant than using array_filter().\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array('a', 'b', 'c', 'd', 'e');\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=arrays,php,filter\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's much\
    \ more elegant than using array_filter().\n<|/ c |>\n<| c |>\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkj518rsg.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn6oofvb.php:19\n\
    Stack trace:\n#0 /tmp/tmprn6oofvb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprn6oofvb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3d4_jwt.php:19\n\
    Stack trace:\n#0 /tmp/tmpt3d4_jwt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpt3d4_jwt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\n/**\n * Filter given list of any python values only for floats\n\
    \ * >>> filter_floats(['a', 3.14, 5])\n * [3.14, 5]\n * >>> filter_floats([1,\
    \ 2, 3, 'abc', {}, []])\n * [1.0, 2.0, 3.0]\n */\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6yabn6lf.php:26\n\
    Stack trace:\n#0 /tmp/tmp6yabn6lf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6yabn6lf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw59if8ix.php:19\n\
    Stack trace:\n#0 /tmp/tmpw59if8ix.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpw59if8ix.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpke5rho7o.php:19\n\
    Stack trace:\n#0 /tmp/tmpke5rho7o.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpke5rho7o.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_integer($value);\n \
    \ });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbr11uvz.php:19\n\
    Stack trace:\n#0 /tmp/tmplbr11uvz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmplbr11uvz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id'\
    \ => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name' => 'Jack'),\n    array('id'\
    \ => 8, 'name' => 'Jill'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id'\
    \ => 10, 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jack'),\n    array('id'\
    \ => 14, 'name' => 'Jill'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    array('id'\
    \ => 36, 'name' => 'J\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6iapo3xl.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrzb1r4s.php:19\n\
    Stack trace:\n#0 /tmp/tmpfrzb1r4s.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfrzb1r4s.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuyfq3iw.php:19\n\
    Stack trace:\n#0 /tmp/tmppuyfq3iw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppuyfq3iw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6at59mhk.php:19\n\
    Stack trace:\n#0 /tmp/tmp6at59mhk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6at59mhk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9igc4__p.php:19\n\
    Stack trace:\n#0 /tmp/tmp9igc4__p.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9igc4__p.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,filtering,arrays |>\n<| a dscore=1 |>\n\
    <code>\n$array = [\n    'a',\n    3.14,\n    5,\n    true,\n    false,\n    null,\n\
    \    [],\n];\n\n$filtered = array_filter($array, function ($value) {\n    return\
    \ is_integer($value);\n});\n\nprint_r($filtered);\n</code>\n<|/ a tags=php,arrays,filtering,arrays\
    \ |>\n<| a tags=php,arrays,filtering,arrays |>\n<code>\n$array = [\n    'a',\n\
    \    3.14,\n    5,\n    true,\n    false,\n    null,\n    [],\n];\n\n$filtered\
    \ = array_filter($array, function ($value) {\n    return is_integer($value);\n\
    });\n\nprint_r($filtered);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $array = [\n    'a',\n    3.14,\n    5,\n    true,\n    false,\n    null,\n  \
    \  [],\n];\n\n$filtered = array_filter($array, function ($value) {\n    return\
    \ is_integer($value);\n});\n\nprint_r($filtered);\n</code>\n<|/ a tags=php,arrays,filtering,arrays\
    \ |>\n<| a tags=php,arrays,filtering,arrays |>\n<code>\n$array = [\n    'a',\n\
    \    3.14,\n    5,\n    true,\n    false,\n    null,\n    [],\n];\n\n$filtered\
    \ = array_filter($array, function ($value) {\n    return is_integer($value);\n\
    });\n\nprint_r($filtered);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $array = [\n    'a',\n    3.14,\n    5,\n    true,\n    false,\n    null,\n  \
    \  [],\n];\n\n$filtered = array_filter($array, function ($value) {\n    return\
    \ is_integer($value);\n});\n\nprint_r($filtered);\n</code>\n<|/ a tags=php,arrays,filtering,arrays\
    \ |>\n<| a tags=php,arrays,filtering,arrays |>\n<code>\n$array = [\n    'a',\n\
    \    3.14,\n    5,\n    true,\n    false,\n    null,\n    [],\n];\n\n$filtered\
    \ = array_filter($array, function ($value) {\n    return is_integer($value);\n\
    });\n\nprint_r($filtered);\n</code>\n<|/ a dscore=1 |>\n<| a tag\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy62rtslx.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lzc1ol9.php:19\n\
    Stack trace:\n#0 /tmp/tmp8lzc1ol9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8lzc1ol9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh_mrdu1.php:19\n\
    Stack trace:\n#0 /tmp/tmprh_mrdu1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprh_mrdu1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgp3d4t1.php:19\n\
    Stack trace:\n#0 /tmp/tmptgp3d4t1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmptgp3d4t1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt65ra9m1.php:19\n\
    Stack trace:\n#0 /tmp/tmpt65ra9m1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpt65ra9m1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_gpbd_c.php:19\n\
    Stack trace:\n#0 /tmp/tmpp_gpbd_c.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpp_gpbd_c.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\n/**\n * Filter given list of any python values only for floats\n\
    \ * >>> filter_floats(['a', 3.14, 5])\n * [3.14]\n * >>> filter_floats([1, 2,\
    \ 3, 'abc', {}, []])\n * [1.0, 2.0, 3.0]\n */\nfunction candidate(...$args) {\n\
    \    return filter_integers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ array(), array(), 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !==\
    \ array(3, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk42ln4u.php:26\n\
    Stack trace:\n#0 /tmp/tmppk42ln4u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppk42ln4u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvravjvu.php:19\n\
    Stack trace:\n#0 /tmp/tmppvravjvu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppvravjvu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array('a', 'b', 'c', 'd');\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. `array_filter` was introduced in PHP 5.3\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. `array_filter` was introduced\
    \ in PHP 5.3\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `array_filter`\
    \ was introduced in PHP 5.3\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd');\n$array = array_filter($array, function($value) {\n    return\
    \ is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should\
    \ be the accepted answer. `array_filter` was introduced in PHP 5.3\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. `array_filter` was introduced\
    \ in PHP 5.3\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a', 'b',\
    \ 'c', 'd');\n$array = array_filter($array, function($value) {\n    return is_numeric($value);\n\
    });\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ `array_filter` was introduced in PHP 5.3\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array('a', 'b', 'c', 'd');\n$array = array_filter($array, function($value)\
    \ {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=5 |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n$array = array_filter($array,\
    \ function($value) {\n    return is_numeric($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=5 |>\n<code>\n$array = array('a', 'b', 'c', 'd');\nfunction\
    \ candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo_6hnyax.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2hee0pb.php:19\n\
    Stack trace:\n#0 /tmp/tmpa2hee0pb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpa2hee0pb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfla2a1k0.php:19\n\
    Stack trace:\n#0 /tmp/tmpfla2a1k0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfla2a1k0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3we3w5p0.php:19\n\
    Stack trace:\n#0 /tmp/tmp3we3w5p0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3we3w5p0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fiax4kb.php:19\n\
    Stack trace:\n#0 /tmp/tmp4fiax4kb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4fiax4kb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygo0mbwc.php:19\n\
    Stack trace:\n#0 /tmp/tmpygo0mbwc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpygo0mbwc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe38sz0hf.php:19\n\
    Stack trace:\n#0 /tmp/tmpe38sz0hf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe38sz0hf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jzs5qax.php:19\n\
    Stack trace:\n#0 /tmp/tmp7jzs5qax.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7jzs5qax.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple, efficient, and works with any PHP version.\n<|/ c |>\n<| c |>\n\
    I like this answer because it doesn't require any additional libraries. However,\
    \ I do have one question: why do you use `is_int` instead of `is_numeric`?\n<|/\
    \ c |>\n<| c |>\n`is_int` checks for integers only. `is_numeric` checks for numbers\
    \ and decimals.\n<|/ c |>\n<| c |>\nI used `is_int` because I wanted to filter\
    \ out strings and arrays. `is_numeric` would filter out `'1'`, `'1.0'`, `'1.0e2'`,\
    \ `'1.0e-2'`, `'1.0e-10'`, etc.\n<|/ c |>\n<| c |>\nI used `is_int` because I\
    \ wanted to filter out strings and arrays. `is_numeric` would filter out `'1'`,\
    \ `'1.0'`, `'1.0e2'`, `'1.0e-2'`, `'1.0e-10'`, etc.\n<|/ c |>\n<| a |>\n<code>\n\
    $array = array('a', 'b', 'c', 'd');\n$array = array_filter($array, 'is_int');\n\
    </code>\n<|/ a tags=php,arrays dscore=5 |>\n<| c |>\nThis doesn't work anymore\
    \ in PHP 5.6. `array_filter` now expects a callback function as second parameter,\
    \ not a string.\n<|/ c |>\n<| c |>\nThis answer was posted before the question\
    \ was edited to specify PHP 5.6. Since then, `array_filter` has been available\
    \ since PHP 5.3.\n<|/ c |>\n<| c |>\nAh okay, I didn't realize that `array_filter`\
    \ was available since 5.3\n<|/ c |>\n<| c |>\nThis answer was posted before PHP\
    \ 5.3 was released. Since then, `array_filter` has been available since PHP 5.3.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a', 'b', 'c', 'd');\n\
    $array = array_filter($array, 'is_int');\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This doesn't work anymore in PHP 5.6. `array_filter` now expects a callback function\
    \ as second parameter, not a string.\n<|/ c |>\n<| a dscore=5 \nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp442e0s3j.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnmijqhz.php:19\n\
    Stack trace:\n#0 /tmp/tmpcnmijqhz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpcnmijqhz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g5t3g20.php:19\n\
    Stack trace:\n#0 /tmp/tmp8g5t3g20.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8g5t3g20.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84mdxm0h.php:19\n\
    Stack trace:\n#0 /tmp/tmp84mdxm0h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp84mdxm0h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $result = array_filter($array, function($value){\n    return is_int($value);\n\
    });\n\nvar_dump($result);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be\
    \ the accepted answer. Simple, straightforward and easy to understand.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward and\
    \ easy to understand.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Simple, straightforward and easy to understand.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple, straightforward and easy to understand.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward and\
    \ easy to understand.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward and\
    \ easy to understand.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple, straightforward\
    \ and easy to understand.\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"a\" =>\
    \ 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n$result = array_filter($array,\
    \ function($value){\n    return is_int($value);\n});\n\nvar_dump($result);\n</code>\n\
    <|/ a tags=php,arrays dscore=4 |>\n<| a dscore=4 |>\n<code>\n$array = array(\"\
    \nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7fv3kobd.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkyuf43b.php:19\n\
    Stack trace:\n#0 /tmp/tmpwkyuf43b.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwkyuf43b.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4p04kfrc.php:19\n\
    Stack trace:\n#0 /tmp/tmp4p04kfrc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4p04kfrc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5ge30iz.php:19\n\
    Stack trace:\n#0 /tmp/tmpj5ge30iz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj5ge30iz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n<?php\n$array = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\");\n$array = array_filter($array,function($v){\n\
    \    return is_numeric($v);\n});\nprint_r($array);\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgf9vfawi.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_integer($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxrl3ckc.php:19\n\
    Stack trace:\n#0 /tmp/tmpoxrl3ckc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpoxrl3ckc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq396lafd.php:19\n\
    Stack trace:\n#0 /tmp/tmpq396lafd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq396lafd.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfinoi_ti.php:19\n\
    Stack trace:\n#0 /tmp/tmpfinoi_ti.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfinoi_ti.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nI like this answer because\
    \ it's simple and easy to understand.\n<|/ c |>\n<| c |>\nI like this answer because\
    \ it's simple and easy to understand.\n<|/ c |>\n<| c |>\nI like this answer because\
    \ it's simple and easy to understand.\n<|/ c |>\n<| c |>\nI like this answer because\
    \ it's simple and easy to understand.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n\
    <code>\n$array = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd'\
    \ => 4,\n    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' =>\
    \ 9,\n    'j' => 10,\n    'k' => 11,\n    'l' => 12,\n    'm' => 13,\n    'n'\
    \ => 14,\n    'o' => 15,\n    'p' => 16,\n    'q' => 17,\n    'r' => 18,\n   \
    \ 's' => 19,\n    't' => 20,\n    'u' => 21,\n    'v' => 22,\n    'w' => 23,\n\
    \    'x' => 24,\n    'y' => 25,\n    'z' => 26,\n);\n\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    $array = array(\n    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n\
    \    'e' => 5,\n    'f' => 6,\n    'g' => 7,\n    'h' => 8,\n    'i' => 9,\n \
    \   'j' => 10,\n    '\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1qci0bil.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3,\
    \ 'abc', {}, []])\n// [1, 2, 3]\nfunction filter_integers($values) {\n  return\
    \ array_filter($values, function ($value) {\n    return is_int($value);\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheyvdauh.php:19\n\
    Stack trace:\n#0 /tmp/tmpheyvdauh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpheyvdauh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception

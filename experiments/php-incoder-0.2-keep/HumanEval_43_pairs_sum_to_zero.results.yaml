name: HumanEval_43_pairs_sum_to_zero
language: php
results:
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bi0xx02.php:31\n\
    Stack trace:\n#0 /tmp/tmp5bi0xx02.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5bi0xx02.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    for ($i = 0; $i < $n; ++$i) {\n       \
    \ $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv6d60do.php:32\n\
    Stack trace:\n#0 /tmp/tmppv6d60do.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppv6d60do.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsp_kg83.php:31\n\
    Stack trace:\n#0 /tmp/tmpwsp_kg83.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwsp_kg83.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn9pnntl.php:31\n\
    Stack trace:\n#0 /tmp/tmpkn9pnntl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkn9pnntl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return false;\n            }\n        }\n    }\n    return true;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb22sccuo.php:36\n\
    Stack trace:\n#0 /tmp/tmpb22sccuo.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpb22sccuo.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgx83yres.php:31\n\
    Stack trace:\n#0 /tmp/tmpgx83yres.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgx83yres.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk3x_iq3.php:31\n\
    Stack trace:\n#0 /tmp/tmppk3x_iq3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppk3x_iq3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxi1bs0pw.php:32\n\
    Stack trace:\n#0 /tmp/tmpxi1bs0pw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxi1bs0pw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcw3tsrsb.php:31\n\
    Stack trace:\n#0 /tmp/tmpcw3tsrsb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcw3tsrsb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyxasr3c.php:39\n\
    Stack trace:\n#0 /tmp/tmptyxasr3c.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptyxasr3c.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for($i = 0; $i < $n; $i++) {\n        $sum\
    \ += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt4zkko9.php:32\n\
    Stack trace:\n#0 /tmp/tmpxt4zkko9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxt4zkko9.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 2) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgn8l3v4.php:31\n\
    Stack trace:\n#0 /tmp/tmpdgn8l3v4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdgn8l3v4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6ckbb7i.php:31\n\
    Stack trace:\n#0 /tmp/tmpc6ckbb7i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc6ckbb7i.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pilwwke.php:31\n\
    Stack trace:\n#0 /tmp/tmp5pilwwke.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5pilwwke.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3skxap0.php:31\n\
    Stack trace:\n#0 /tmp/tmpn3skxap0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn3skxap0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1z8bbxa.php:32\n\
    Stack trace:\n#0 /tmp/tmpm1z8bbxa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm1z8bbxa.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujhawpmx.php:32\n\
    Stack trace:\n#0 /tmp/tmpujhawpmx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpujhawpmx.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zj8xrpm.php:31\n\
    Stack trace:\n#0 /tmp/tmp9zj8xrpm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9zj8xrpm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xlq8tcc.php:32\n\
    Stack trace:\n#0 /tmp/tmp0xlq8tcc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0xlq8tcc.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsv8o_46p.php:31\n\
    Stack trace:\n#0 /tmp/tmpsv8o_46p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsv8o_46p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_kz6vs65.php:33\n\
    Stack trace:\n#0 /tmp/tmp_kz6vs65.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_kz6vs65.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp372lol0y.php:31\n\
    Stack trace:\n#0 /tmp/tmp372lol0y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp372lol0y.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1clv7m7i.php:32\n\
    Stack trace:\n#0 /tmp/tmp1clv7m7i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1clv7m7i.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj3a02hv.php:33\n\
    Stack trace:\n#0 /tmp/tmpkj3a02hv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkj3a02hv.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        $j = $i + 1;\n        $k = $n - 1;\n\
    \        while ($j >= 0 && $k >= 0) {\n            if ($l[$j] + $l[$k] == 0) {\n\
    \                return false;\n            }\n            $j--;\n           \
    \ $k--;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rvm6d6h.php:44\n\
    Stack trace:\n#0 /tmp/tmp0rvm6d6h.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp0rvm6d6h.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyn4t4fuu.php:31\n\
    Stack trace:\n#0 /tmp/tmpyn4t4fuu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyn4t4fuu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzb2hpgd.php:31\n\
    Stack trace:\n#0 /tmp/tmpzzb2hpgd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzzb2hpgd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4po53jx.php:39\n\
    Stack trace:\n#0 /tmp/tmpn4po53jx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpn4po53jx.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum += $l[$i];\n\
    \  }\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n\
    \      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n    }\n  }\n\
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    $i = 1;\n    while($i < $n) {\n       \
    \ $j = $i;\n        while($j < $n && $l[$j] + $l[$i] == 0) {\n            $j++;\n\
    \        }\n        if($j == $n) {\n            return false;\n        }\n   \
    \     $sum = $l[$i] + $sum;\n        $i = $j;\n    }\n    return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmtyr5i3.php:31\n\
    Stack trace:\n#0 /tmp/tmpdmtyr5i3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdmtyr5i3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jpwlskh.php:39\n\
    Stack trace:\n#0 /tmp/tmp0jpwlskh.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp0jpwlskh.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23k31lb3.php:31\n\
    Stack trace:\n#0 /tmp/tmp23k31lb3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp23k31lb3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    for($i = 0; $i < $n; $i++) {\n        $sum\
    \ += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoyqdnfc.php:32\n\
    Stack trace:\n#0 /tmp/tmppoyqdnfc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppoyqdnfc.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $value => $count)\
    \ {\n        if ($count > 1) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61k95p4_.php:30\n\
    Stack trace:\n#0 /tmp/tmp61k95p4_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp61k95p4_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpholnu0cc.php:31\n\
    Stack trace:\n#0 /tmp/tmpholnu0cc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpholnu0cc.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3q_8ouck.php:31\n\
    Stack trace:\n#0 /tmp/tmp3q_8ouck.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3q_8ouck.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvz1p_na.php:39\n\
    Stack trace:\n#0 /tmp/tmphvz1p_na.php(50): test()\n#1 {main}\n  thrown in /tmp/tmphvz1p_na.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $i => $count) {\n\
    \        if ($count == 1) {\n            continue;\n        }\n        $sum =\
    \ $pairs[$i];\n        if ($sum == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqimtlk2.php:34\n\
    Stack trace:\n#0 /tmp/tmpcqimtlk2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcqimtlk2.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    $k = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $sum += $l[$i];\n        if ($sum < 0) {\n            $sum = 0;\n\
    \            $k++;\n        }\n    }\n    return ($k == 2);\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph939_9th.php:36\n\
    Stack trace:\n#0 /tmp/tmph939_9th.php(44): test()\n#1 {main}\n  thrown in /tmp/tmph939_9th.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcr_iye2d.php:31\n\
    Stack trace:\n#0 /tmp/tmpcr_iye2d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcr_iye2d.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5nu8f5f.php:31\n\
    Stack trace:\n#0 /tmp/tmpl5nu8f5f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl5nu8f5f.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiqrumbh.php:32\n\
    Stack trace:\n#0 /tmp/tmpsiqrumbh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsiqrumbh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 2) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsibcljss.php:31\n\
    Stack trace:\n#0 /tmp/tmpsibcljss.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsibcljss.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a8cuxq1.php:31\n\
    Stack trace:\n#0 /tmp/tmp8a8cuxq1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8a8cuxq1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v == 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhbv08p3.php:33\n\
    Stack trace:\n#0 /tmp/tmpnhbv08p3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnhbv08p3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $value => $count)\
    \ {\n        if ($count == 2) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wi7rjxe.php:31\n\
    Stack trace:\n#0 /tmp/tmp4wi7rjxe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4wi7rjxe.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ftphqzf.php:31\n\
    Stack trace:\n#0 /tmp/tmp3ftphqzf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3ftphqzf.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinbs4os9.php:31\n\
    Stack trace:\n#0 /tmp/tmpinbs4os9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpinbs4os9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgxpmk01.php:31\n\
    Stack trace:\n#0 /tmp/tmplgxpmk01.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplgxpmk01.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcagfd5wu.php:33\n\
    Stack trace:\n#0 /tmp/tmpcagfd5wu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcagfd5wu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $i => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxujqd2i.php:31\n\
    Stack trace:\n#0 /tmp/tmpmxujqd2i.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmxujqd2i.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdi0lpxjb.php:31\n\
    Stack trace:\n#0 /tmp/tmpdi0lpxjb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdi0lpxjb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjz495f07.php:31\n\
    Stack trace:\n#0 /tmp/tmpjz495f07.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjz495f07.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mw28tqq.php:33\n\
    Stack trace:\n#0 /tmp/tmp8mw28tqq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8mw28tqq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54ladeky.php:31\n\
    Stack trace:\n#0 /tmp/tmp54ladeky.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp54ladeky.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88mfw07k.php:31\n\
    Stack trace:\n#0 /tmp/tmp88mfw07k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp88mfw07k.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzd1y_7f.php:39\n\
    Stack trace:\n#0 /tmp/tmpgzd1y_7f.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpgzd1y_7f.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk1xwpo4.php:31\n\
    Stack trace:\n#0 /tmp/tmplk1xwpo4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplk1xwpo4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmirk1c0.php:31\n\
    Stack trace:\n#0 /tmp/tmpdmirk1c0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdmirk1c0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_30i330.php:31\n\
    Stack trace:\n#0 /tmp/tmpv_30i330.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv_30i330.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgtc30ne.php:31\n\
    Stack trace:\n#0 /tmp/tmptgtc30ne.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptgtc30ne.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiipgjutj.php:31\n\
    Stack trace:\n#0 /tmp/tmpiipgjutj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiipgjutj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_dgmngr.php:39\n\
    Stack trace:\n#0 /tmp/tmpb_dgmngr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpb_dgmngr.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nz2sit9.php:31\n\
    Stack trace:\n#0 /tmp/tmp1nz2sit9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1nz2sit9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $pairs = array();\n    foreach ($l\
    \ as $e) {\n        $pairs[$e] = $e;\n    }\n    $pairs = array_count_values($pairs);\n\
    \    foreach ($pairs as $e => $count) {\n        if ($count == 2) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post.\n<|/\
    \ c |>\n<| c |>\nI believe it does answer the question. He asked how to find pairs\
    \ of numbers that sum to zero, and I provided a solution that does exactly that.\
    \ He also asked how to find pairs of numbers that sum to zero, and I provided\
    \ a solution that does exactly that. He also asked how to find pairs of numbers\
    \ that sum to zero, and I provided a solution that does exactly that. He also\
    \ asked how to find pairs of numbers that sum to zero, and I provided a solution\
    \ that does exactly that. He also asked how to find pairs of numbers that sum\
    \ to zero, and I provided a solution that does exactly that. He also asked how\
    \ to find pairs of numbers that sum to zero, and I provided a solution that does\
    \ exactly that. He also asked how to find pairs of numbers that sum to zero, and\
    \ I provided a solution that does exactly that.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to find pairs of numbers that sum to zero, not how to find pairs of\
    \ numbers that sum to zero in a given list. Your solution finds pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that sum to zero in a given list. Your solution does not find pairs of numbers\
    \ that \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2swy40kv.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5bmc8a8.php:33\n\
    Stack trace:\n#0 /tmp/tmpu5bmc8a8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu5bmc8a8.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  if ($n == 0) {\n    return true;\n  }\n  $sum = 0;\n  for ($i\
    \ = 0; $i < $n; ++$i) {\n    $sum += $l[$i];\n  }\n  for ($i = 0; $i < $n; ++$i)\
    \ {\n    $j = $i + 1;\n    if ($j == $n) {\n      $j = 0;\n    }\n    if ($sum\
    \ - $l[$i] - $l[$j] == 0) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrh40fga.php:44\n\
    Stack trace:\n#0 /tmp/tmpqrh40fga.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqrh40fga.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $i => $x) {\n        $sum += $x;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxa5h93h.php:31\n\
    Stack trace:\n#0 /tmp/tmpoxa5h93h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoxa5h93h.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrmwezci.php:31\n\
    Stack trace:\n#0 /tmp/tmpnrmwezci.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnrmwezci.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6u2obxz.php:31\n\
    Stack trace:\n#0 /tmp/tmpt6u2obxz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt6u2obxz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    $i = 0;\n    while ($i < $n) {\n      \
    \  $sum += $l[$i];\n        $i++;\n    }\n    if ($sum == 0) {\n        return\
    \ true;\n    }\n    $j = 0;\n    while ($j < $n) {\n        if ($l[$j] == 0) {\n\
    \            return false;\n        }\n        $j++;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp05izku1.php:42\n\
    Stack trace:\n#0 /tmp/tmpp05izku1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpp05izku1.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sf71i90.php:30\n\
    Stack trace:\n#0 /tmp/tmp7sf71i90.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7sf71i90.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiie0u9hq.php:31\n\
    Stack trace:\n#0 /tmp/tmpiie0u9hq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiie0u9hq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n\
    \ && $j < $n) {\n        if ($l[$i] + $l[$j] == 0) {\n            $sum++;\n  \
    \          $i++;\n            $j++;\n        } else if ($l[$i] + $l[$j] > 0) {\n\
    \            $j++;\n        } else {\n            $i++;\n        }\n    }\n  \
    \  return ($sum == 2);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0tc_min2.php:42\n\
    Stack trace:\n#0 /tmp/tmp0tc_min2.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp0tc_min2.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7upnohpr.php:39\n\
    Stack trace:\n#0 /tmp/tmp7upnohpr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7upnohpr.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  foreach ($l as $item) {\n    $sum += $item;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitj1lu8p.php:31\n\
    Stack trace:\n#0 /tmp/tmpitj1lu8p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpitj1lu8p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgpi23jil.php:33\n\
    Stack trace:\n#0 /tmp/tmpgpi23jil.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgpi23jil.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7n6gsdpf.php:39\n\
    Stack trace:\n#0 /tmp/tmp7n6gsdpf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7n6gsdpf.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9irihp7f.php:32\n\
    Stack trace:\n#0 /tmp/tmp9irihp7f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9irihp7f.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgoytd98.php:31\n\
    Stack trace:\n#0 /tmp/tmpzgoytd98.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzgoytd98.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8_0r7j1.php:31\n\
    Stack trace:\n#0 /tmp/tmpm8_0r7j1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm8_0r7j1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    foreach ($l as $i => $x) {\n        $sum\
    \ += $x;\n        if ($sum < 0) {\n            return false;\n        }\n    }\n\
    \    return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdb_ccofu.php:35\n\
    Stack trace:\n#0 /tmp/tmpdb_ccofu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdb_ccofu.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadpqrdyn.php:33\n\
    Stack trace:\n#0 /tmp/tmpadpqrdyn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpadpqrdyn.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprks55jww.php:31\n\
    Stack trace:\n#0 /tmp/tmprks55jww.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprks55jww.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    foreach ($l as $i => $v) {\n        if\
    \ ($v < 0) {\n            $sum -= $v; // negative numbers are always non-zero\n\
    \        } else {\n            $sum += $v;\n        }\n        if ($sum < 0) {\n\
    \            return false;\n        }\n    }\n    return $sum == 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0neh50pb.php:39\n\
    Stack trace:\n#0 /tmp/tmp0neh50pb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0neh50pb.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $pairs\
    \ = array_count_values($l);\n  foreach ($pairs as $key => $value) {\n    if ($value\
    \ == 1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rmjsi6d.php:33\n\
    Stack trace:\n#0 /tmp/tmp3rmjsi6d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3rmjsi6d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  if ($sum == 0) {\n        return true;\n    }\n    $sum -= $l[0];\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        $sum += $l[$i];\n        if ($sum == 0) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgk63keut.php:45\n\
    Stack trace:\n#0 /tmp/tmpgk63keut.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgk63keut.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_emgh17.php:31\n\
    Stack trace:\n#0 /tmp/tmpu_emgh17.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu_emgh17.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxpdfi2b.php:31\n\
    Stack trace:\n#0 /tmp/tmpgxpdfi2b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgxpdfi2b.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpus3olfgo.php:31\n\
    Stack trace:\n#0 /tmp/tmpus3olfgo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpus3olfgo.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1sqfbny.php:31\n\
    Stack trace:\n#0 /tmp/tmpk1sqfbny.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk1sqfbny.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23j21bzp.php:30\n\
    Stack trace:\n#0 /tmp/tmp23j21bzp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp23j21bzp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3egu1xu8.php:31\n\
    Stack trace:\n#0 /tmp/tmp3egu1xu8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3egu1xu8.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ykkoruz.php:31\n\
    Stack trace:\n#0 /tmp/tmp7ykkoruz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ykkoruz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0wtynh2.php:31\n\
    Stack trace:\n#0 /tmp/tmpr0wtynh2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr0wtynh2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    $sum = 0;\n    foreach ($pairs as $number\
    \ => $count) {\n        if ($count > 1) {\n            $sum += $number;\n    \
    \    }\n    }\n    return $sum == 0;\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8anem5o.php:30\n\
    Stack trace:\n#0 /tmp/tmpc8anem5o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc8anem5o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94lcxjbh.php:33\n\
    Stack trace:\n#0 /tmp/tmp94lcxjbh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp94lcxjbh.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2ieiark.php:31\n\
    Stack trace:\n#0 /tmp/tmpa2ieiark.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa2ieiark.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqxukc00.php:31\n\
    Stack trace:\n#0 /tmp/tmpwqxukc00.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwqxukc00.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t10po2n.php:31\n\
    Stack trace:\n#0 /tmp/tmp6t10po2n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6t10po2n.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1xz25ya.php:35\n\
    Stack trace:\n#0 /tmp/tmpf1xz25ya.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf1xz25ya.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0le0vt9.php:31\n\
    Stack trace:\n#0 /tmp/tmpj0le0vt9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj0le0vt9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsxdeosx.php:31\n\
    Stack trace:\n#0 /tmp/tmpvsxdeosx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvsxdeosx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2dblm_h.php:31\n\
    Stack trace:\n#0 /tmp/tmpu2dblm_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu2dblm_h.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa36u2g8b.php:31\n\
    Stack trace:\n#0 /tmp/tmpa36u2g8b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa36u2g8b.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfy8t605.php:31\n\
    Stack trace:\n#0 /tmp/tmpdfy8t605.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdfy8t605.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1ar8pn1.php:31\n\
    Stack trace:\n#0 /tmp/tmpi1ar8pn1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi1ar8pn1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqtax82m.php:31\n\
    Stack trace:\n#0 /tmp/tmpkqtax82m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkqtax82m.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2t8kh043.php:30\n\
    Stack trace:\n#0 /tmp/tmp2t8kh043.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2t8kh043.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9mdeio2.php:31\n\
    Stack trace:\n#0 /tmp/tmpo9mdeio2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo9mdeio2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nex63qm.php:33\n\
    Stack trace:\n#0 /tmp/tmp9nex63qm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9nex63qm.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $sum -= $l[0];\n    foreach ($l as\
    \ $n) {\n        if ($sum == 0) return false;\n        $sum += $n;\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucb7hutf.php:36\n\
    Stack trace:\n#0 /tmp/tmpucb7hutf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpucb7hutf.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o2ue6hz.php:31\n\
    Stack trace:\n#0 /tmp/tmp8o2ue6hz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8o2ue6hz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $value => $count)\
    \ {\n        if ($count == 2) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd919ret.php:31\n\
    Stack trace:\n#0 /tmp/tmpfd919ret.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfd919ret.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nua87jr.php:32\n\
    Stack trace:\n#0 /tmp/tmp4nua87jr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4nua87jr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tpmfjdb.php:31\n\
    Stack trace:\n#0 /tmp/tmp8tpmfjdb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8tpmfjdb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dvakcwr.php:39\n\
    Stack trace:\n#0 /tmp/tmp6dvakcwr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6dvakcwr.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array();\n    foreach ($l as $n) {\n        $pairs[$n] = $n;\n   \
    \ }\n    $sum = 0;\n    foreach ($pairs as $n => $m) {\n        $sum += $m;\n\
    \        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $sum == 0;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0nx0e7h.php:37\n\
    Stack trace:\n#0 /tmp/tmps0nx0e7h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmps0nx0e7h.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 2) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1072bsl.php:31\n\
    Stack trace:\n#0 /tmp/tmpi1072bsl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi1072bsl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n      \
    \  }\n    }\n    return ($n == 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rivjkks.php:35\n\
    Stack trace:\n#0 /tmp/tmp_rivjkks.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_rivjkks.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg3fog85.php:31\n\
    Stack trace:\n#0 /tmp/tmpmg3fog85.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmg3fog85.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfxb7q91.php:30\n\
    Stack trace:\n#0 /tmp/tmpvfxb7q91.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvfxb7q91.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array();\n    foreach ($l as $n) {\n        $pairs[$n] = $n;\n   \
    \ }\n    $sum = 0;\n    foreach ($pairs as $n => $m) {\n        $sum += $m;\n\
    \        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55dc4g9w.php:38\n\
    Stack trace:\n#0 /tmp/tmp55dc4g9w.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp55dc4g9w.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    if ($sum == 0) {\n        return true;\n    }\n\
    \    $sum -= $l[0];\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] + $l[$i\
    \ - 1] != 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dujajvg.php:41\n\
    Stack trace:\n#0 /tmp/tmp5dujajvg.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5dujajvg.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp378ogjvc.php:31\n\
    Stack trace:\n#0 /tmp/tmp378ogjvc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp378ogjvc.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp148to9s3.php:31\n\
    Stack trace:\n#0 /tmp/tmp148to9s3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp148to9s3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv0hq6md.php:31\n\
    Stack trace:\n#0 /tmp/tmpqv0hq6md.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqv0hq6md.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1czwhyl.php:39\n\
    Stack trace:\n#0 /tmp/tmpt1czwhyl.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpt1czwhyl.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsiezkkd.php:31\n\
    Stack trace:\n#0 /tmp/tmphsiezkkd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphsiezkkd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqv5sl03.php:31\n\
    Stack trace:\n#0 /tmp/tmpyqv5sl03.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyqv5sl03.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms9mz49u.php:31\n\
    Stack trace:\n#0 /tmp/tmpms9mz49u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpms9mz49u.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmso5y0yj.php:31\n\
    Stack trace:\n#0 /tmp/tmpmso5y0yj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmso5y0yj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  foreach ($l as $k => $v) {\n    if ($v > 0) {\n      $sum += $v;\n \
    \     if ($sum < 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrk4wezu.php:33\n\
    Stack trace:\n#0 /tmp/tmpxrk4wezu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxrk4wezu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpao29rinr.php:31\n\
    Stack trace:\n#0 /tmp/tmpao29rinr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpao29rinr.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cl_dl5p.php:31\n\
    Stack trace:\n#0 /tmp/tmp0cl_dl5p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0cl_dl5p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgot5w50s.php:31\n\
    Stack trace:\n#0 /tmp/tmpgot5w50s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgot5w50s.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbflco78.php:32\n\
    Stack trace:\n#0 /tmp/tmpsbflco78.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsbflco78.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vptu2u8.php:31\n\
    Stack trace:\n#0 /tmp/tmp2vptu2u8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2vptu2u8.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1le8b_97.php:31\n\
    Stack trace:\n#0 /tmp/tmp1le8b_97.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1le8b_97.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprezf3vdj.php:31\n\
    Stack trace:\n#0 /tmp/tmprezf3vdj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprezf3vdj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j8tpcr4.php:39\n\
    Stack trace:\n#0 /tmp/tmp3j8tpcr4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp3j8tpcr4.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7sb7tqa.php:31\n\
    Stack trace:\n#0 /tmp/tmpr7sb7tqa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr7sb7tqa.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        if ($v > 0) {\n        \
    \    $sum += $v;\n        }\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby5sgm2a.php:33\n\
    Stack trace:\n#0 /tmp/tmpby5sgm2a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpby5sgm2a.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l2pguru.php:32\n\
    Stack trace:\n#0 /tmp/tmp0l2pguru.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0l2pguru.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprdd0dh5.php:31\n\
    Stack trace:\n#0 /tmp/tmpprdd0dh5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpprdd0dh5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 2) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1xknveb.php:31\n\
    Stack trace:\n#0 /tmp/tmpa1xknveb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa1xknveb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ub8z4ui.php:39\n\
    Stack trace:\n#0 /tmp/tmp2ub8z4ui.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2ub8z4ui.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpli1ketct.php:32\n\
    Stack trace:\n#0 /tmp/tmpli1ketct.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpli1ketct.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vyeag39.php:31\n\
    Stack trace:\n#0 /tmp/tmp_vyeag39.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_vyeag39.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprla8jdzx.php:31\n\
    Stack trace:\n#0 /tmp/tmprla8jdzx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprla8jdzx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $value => $count)\
    \ {\n        if ($count == 2) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfd5bhj1.php:31\n\
    Stack trace:\n#0 /tmp/tmphfd5bhj1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphfd5bhj1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        if ($v > 0) {\n        \
    \    $sum += $v;\n        }\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67o0a2a_.php:33\n\
    Stack trace:\n#0 /tmp/tmp67o0a2a_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp67o0a2a_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl77zi5t.php:32\n\
    Stack trace:\n#0 /tmp/tmptl77zi5t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptl77zi5t.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d1vk7j_.php:31\n\
    Stack trace:\n#0 /tmp/tmp8d1vk7j_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8d1vk7j_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco9yglrn.php:31\n\
    Stack trace:\n#0 /tmp/tmpco9yglrn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpco9yglrn.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  $n = count($l);\n  foreach ($l as $i => $x) {\n    if ($x > 0) {\n \
    \     $sum += $x;\n    }\n  }\n  if ($sum == 0) {\n    return true;\n  }\n  foreach\
    \ ($l as $i => $x) {\n    if ($x == 0) {\n      return true;\n    }\n    if ($sum\
    \ - $x == 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkknsj3k9.php:42\n\
    Stack trace:\n#0 /tmp/tmpkknsj3k9.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpkknsj3k9.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwhbq759.php:33\n\
    Stack trace:\n#0 /tmp/tmpbwhbq759.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbwhbq759.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ug4fv03.php:33\n\
    Stack trace:\n#0 /tmp/tmp7ug4fv03.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7ug4fv03.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    $found = false;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        if ($l[$i] < 0) {\n            $l[$i] = 0;\n        }\n\
    \        $sum += $l[$i];\n        if ($sum < 0) {\n            $found = true;\n\
    \            break;\n        }\n    }\n    return $found;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp0h750_.php:40\n\
    Stack trace:\n#0 /tmp/tmpzp0h750_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzp0h750_.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8lh5mjw.php:33\n\
    Stack trace:\n#0 /tmp/tmpy8lh5mjw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy8lh5mjw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60ozhg95.php:32\n\
    Stack trace:\n#0 /tmp/tmp60ozhg95.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp60ozhg95.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw28e8ut.php:31\n\
    Stack trace:\n#0 /tmp/tmphw28e8ut.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphw28e8ut.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0m1ld70.php:31\n\
    Stack trace:\n#0 /tmp/tmpd0m1ld70.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd0m1ld70.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $pairs = array();\n    foreach ($l\
    \ as $n) {\n        $pairs[$n] = $sum - $n;\n    }\n    return count($pairs) ==\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd097l3jt.php:38\n\
    Stack trace:\n#0 /tmp/tmpd097l3jt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpd097l3jt.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pthzu4e.php:31\n\
    Stack trace:\n#0 /tmp/tmp2pthzu4e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2pthzu4e.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoe_6oxj3.php:31\n\
    Stack trace:\n#0 /tmp/tmpoe_6oxj3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoe_6oxj3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9th33hj7.php:31\n\
    Stack trace:\n#0 /tmp/tmp9th33hj7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9th33hj7.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptls13jvs.php:30\n\
    Stack trace:\n#0 /tmp/tmptls13jvs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptls13jvs.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph08vo4lg.php:31\n\
    Stack trace:\n#0 /tmp/tmph08vo4lg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph08vo4lg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $k => $v) {\n    \
    \    if ($v > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. Try `array_count_values([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1b3esl_p.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjmf_3so.php:31\n\
    Stack trace:\n#0 /tmp/tmpsjmf_3so.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsjmf_3so.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpex2j5jfk.php:31\n\
    Stack trace:\n#0 /tmp/tmpex2j5jfk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpex2j5jfk.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6o07ats3.php:31\n\
    Stack trace:\n#0 /tmp/tmp6o07ats3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6o07ats3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjl81kh6z.php:33\n\
    Stack trace:\n#0 /tmp/tmpjl81kh6z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjl81kh6z.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum % 2 == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpool7pmsj.php:34\n\
    Stack trace:\n#0 /tmp/tmpool7pmsj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpool7pmsj.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return false;\n    \
    \        }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8ecmtu.php:39\n\
    Stack trace:\n#0 /tmp/tmp_m8ecmtu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_m8ecmtu.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $k => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmip8fhu.php:31\n\
    Stack trace:\n#0 /tmp/tmpfmip8fhu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfmip8fhu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_h34ngl2.php:31\n\
    Stack trace:\n#0 /tmp/tmp_h34ngl2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_h34ngl2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprk4kfkkx.php:31\n\
    Stack trace:\n#0 /tmp/tmprk4kfkkx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprk4kfkkx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    $zeros = array_count_values(array_filter($l,\
    \ 'is_int'));\n    return $pairs === $zeros;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kp8ls6h.php:26\n\
    Stack trace:\n#0 /tmp/tmp8kp8ls6h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8kp8ls6h.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $sum = 0;\n    foreach ($l as $i => $v) {\n        $sum\
    \ += $v;\n        if ($sum < 0) {\n            return false;\n        }\n    }\n\
    \    return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8jyvezw.php:35\n\
    Stack trace:\n#0 /tmp/tmpv8jyvezw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpv8jyvezw.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetqd71hr.php:31\n\
    Stack trace:\n#0 /tmp/tmpetqd71hr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpetqd71hr.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $sum\
    \ = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  $count = 0;\n  foreach\
    \ ($l as $n) {\n    if ($sum - $n === 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count === 2;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptholb9ur.php:37\n\
    Stack trace:\n#0 /tmp/tmptholb9ur.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptholb9ur.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $pairs = array_count_values($l);\n    foreach ($pairs as $key => $value) {\n\
    \        if ($value == 1) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0q_d3l2.php:33\n\
    Stack trace:\n#0 /tmp/tmpz0q_d3l2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpz0q_d3l2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $sum += $l[$i];\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylu7vr4o.php:32\n\
    Stack trace:\n#0 /tmp/tmpylu7vr4o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpylu7vr4o.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $i => $v) {\n        if ($v < 0) {\n        \
    \    $sum -= $v;\n        } else {\n            $sum += $v;\n        }\n     \
    \   if ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap5102ce.php:35\n\
    Stack trace:\n#0 /tmp/tmpap5102ce.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpap5102ce.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgna3dz4.php:31\n\
    Stack trace:\n#0 /tmp/tmpkgna3dz4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkgna3dz4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocz8dekh.php:31\n\
    Stack trace:\n#0 /tmp/tmpocz8dekh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpocz8dekh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29m7loq6.php:31\n\
    Stack trace:\n#0 /tmp/tmp29m7loq6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp29m7loq6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n    }\n  \
    \  if ($sum == 0) {\n        return false;\n    }\n    $sum2 = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum2 += $l[$i];\n        if ($sum2 == 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwynh146w.php:42\n\
    Stack trace:\n#0 /tmp/tmpwynh146w.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpwynh146w.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_cftlwg.php:31\n\
    Stack trace:\n#0 /tmp/tmpu_cftlwg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu_cftlwg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbd1fdpd.php:31\n\
    Stack trace:\n#0 /tmp/tmpxbd1fdpd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxbd1fdpd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpueozcngh.php:32\n\
    Stack trace:\n#0 /tmp/tmpueozcngh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpueozcngh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvz_zavc.php:31\n\
    Stack trace:\n#0 /tmp/tmpbvz_zavc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbvz_zavc.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n == 0) {\n        return false;\n    }\n    $sum\
    \ = 0;\n    $found = false;\n    for ($i = 0; $i < $n; $i++) {\n        if ($l[$i]\
    \ < 0) {\n            $l[$i] = 0;\n        }\n        $sum += $l[$i];\n      \
    \  if ($sum == 0) {\n            $found = true;\n            break;\n        }\n\
    \    }\n    return $found;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqp_xifh.php:43\n\
    Stack trace:\n#0 /tmp/tmpzqp_xifh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzqp_xifh.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $i => $v) {\n        $sum += $v;\n        if\
    \ ($sum < 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppemavnhz.php:31\n\
    Stack trace:\n#0 /tmp/tmppemavnhz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppemavnhz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $item) {\n        $sum += $item;\n    }\n   \
    \ return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9il61bb.php:31\n\
    Stack trace:\n#0 /tmp/tmpp9il61bb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp9il61bb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1zees24.php:31\n\
    Stack trace:\n#0 /tmp/tmpl1zees24.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl1zees24.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception

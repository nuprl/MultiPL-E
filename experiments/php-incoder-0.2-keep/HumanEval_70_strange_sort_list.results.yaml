name: HumanEval_70_strange_sort_list
language: php
results:
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz02iwct1.php:20\n\
    Stack trace:\n#0 /tmp/tmpz02iwct1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz02iwct1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6qy104s.php:22\n\
    Stack trace:\n#0 /tmp/tmpl6qy104s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl6qy104s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/16195973)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question. He wants to sort a list\
    \ in a strange order. He has provided a solution that does exactly that. He also\
    \ provided a link to an example on how to do it.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/16195973)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to sort a\
    \ list in a strange order. He has provided a solution that does exactly that.\
    \ He also provided a link to an example on how to do it.\n<|/ c |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/16195973)\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n$arr = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\"\
    ,\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$arr1 = array();\n$arr2 =\
    \ array();\n$arr3 = array();\n$arr4 = array();\n$arr5 = array();\n$arr6 = array();\n\
    $arr7 = array();\n$arr8 = array();\n$arr9 = array();\n$arr10 = array();\n$arr11\
    \ = array();\n$arr12 = array();\n$arr13 = array();\n$arr14 = array();\n$arr15\
    \ = array();\n$arr16 = array();\n$arr17 = array\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqhrf2xzk.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nI like this solution, but\
    \ I wonder if there is a way to do this without having to create another array?\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder if there is a way to do\
    \ this without having to create another array?\n<|/ c |>\n<| c |>\nI like your\
    \ solution, but I wonder if there is a way to do this without having to create\
    \ another array?\n<|/ c |>\n<| c |>\nI like your solution, but I wonder if there\
    \ is a way to do this without having to create another array?\n<|/ c |>\n<| c\
    \ |>\nI like your solution, but I wonder if there is a way to do this without\
    \ having to create another array?\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_merge($array, array_reverse($array));\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have a multi-dimensional\
    \ array\n<|/ c |>\n<| c |>\nThis doesn't work if you have a multi-dimensional\
    \ array\n<|/ c |>\n<| c |>\nThis doesn't work if you have a multi-dimensional\
    \ array\n<|/ c |>\n<| c |>\nThis doesn't work if you have a multi-dimensional\
    \ array\n<|/ c |>\n<| c |>\nThis doesn't work if you have a multi-dimensional\
    \ array\n<|/ c |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_merge($array,\
    \ array_reverse($array));\n</code>\n<|/ a tags=php,arrays,sorting dscore=5 |>\n\
    <| c |>\nThis doesn't work if you have a multi-dimensional array\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if you have a multi-dimensional array\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if you have a multi-dimensional array\n<|/ c |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array\
    \ = array_merge($array, array_reverse($array));\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis doesn't work if you have a multi-dimensional array\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsbg51oa4.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, I like your solution. I'm going to\
    \ try it out and see how it works.\n<|/ c |>\n<| c |>\nI tested this and it works\
    \ great. Thanks so much!\n<|/ c |>\n<| c |>\nI tested this and it works great.\
    \ Thanks so much!\n<|/ c |>\n<| a dscore=1 |>\nI wrote a PHP function that does\
    \ this for you:\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfewwkbnp.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvwk70d4.php:21\n\
    Stack trace:\n#0 /tmp/tmpwvwk70d4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwvwk70d4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min_value\
    \ = $lst[0];\n  $max_value = $lst[0];\n  foreach ($lst as $value) {\n    if ($value\
    \ < $min_value) {\n      $min_value = $value;\n    }\n    if ($value > $max_value)\
    \ {\n      $max_value = $value;\n    }\n  }\n  $lst = array();\n  for ($i = $min_value;\
    \ $i <= $max_value; $i++) {\n    $lst[] = $i;\n  }\n  return $lst;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf44r0g57.php:32\n\
    Stack trace:\n#0 /tmp/tmpf44r0g57.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf44r0g57.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fruatha.php:22\n\
    Stack trace:\n#0 /tmp/tmp5fruatha.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5fruatha.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61l0kfy4.php:21\n\
    Stack trace:\n#0 /tmp/tmp61l0kfy4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp61l0kfy4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    asort($sorted);\n    return $sorted;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5 = array();\n$arr6\
    \ = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n$arr10 = array();\n\
    $arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14 = array();\n$arr15\
    \ = array();\n$arr16 = array();\n$arr17 = array();\n$arr18 = array();\n$arr19\
    \ = array();\n$arr20 = array();\n$arr21 = array();\n$arr22 = array();\n$arr23\
    \ = array();\n$arr24 = array();\n$arr25 = array();\n$arr26 = array();\n$arr27\
    \ = array();\n$arr28 = array();\n$arr29 = array();\n$arr30 = array();\n$arr31\
    \ = array();\n$arr32 = array();\n$arr33 = array();\n$arr34 = array();\n$arr35\
    \ = array();\n$arr36 = array();\n$arr37 = array();\n$arr38 = array();\n$arr39\
    \ = array();\n$arr40 = array();\n$arr41 = array();\n$arr42 = array();\n$arr43\
    \ = array();\n$arr44 = array();\n$arr45 = array();\n$arr46 = array();\n$arr47\
    \ = array();\n$arr48 = array();\n$arr49 = array();\n$arr50 = array();\n$arr51\
    \ = array();\n$arr52 = array();\n$arr53 = array();\n$arr54 = array();\n$arr55\
    \ = array();\n$arr56 = array();\n$arr57 = array();\n$arr58 = array();\n$arr59\
    \ = array();\n$arr60 = array();\n$arr61 = array();\n$arr62 = array();\n$arr63\
    \ = array();\n$arr64 = array();\n$arr65\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi4waqaqo.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9aofqg9.php:22\n\
    Stack trace:\n#0 /tmp/tmpc9aofqg9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc9aofqg9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0474e38.php:21\n\
    Stack trace:\n#0 /tmp/tmpx0474e38.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx0474e38.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list([5, 2, 6, 1, 3]);`\
    \ returns `[5, 2, 3, 6, 1]`.\n<|/ c |>\n<| c |>\nIt does work. Try it here: https://3v4l.org/8qQNv\n\
    <|/ c |>\n<| c |>\nI see it works in your link, but not in my code. I'm running\
    \ PHP 7.2.24 on Ubuntu 16.04.\n<|/ c |>\n<| c |>\nWhat version of PHP are you\
    \ using? It works on PHP 7.2.24 on Windows 10. Try running `php -v` from the command\
    \ line to see what version you're running.\n<|/ c |>\n<| c |>\nPHP 7.2.24 on Ubuntu\
    \ 16.04.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppa99uc2k.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $lst = array_merge($lst, [$min, $max]);\n  sort($lst);\n\
    \  return $lst;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if\
    \ the array is empty or has only one element. `strange_sort_list([1])` returns\
    \ `[1]` instead of `[]`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpubxsvxma.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = $lst[0];\n  $max = $lst[0];\n  foreach ($lst as $item)\
    \ {\n    if ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max)\
    \ {\n      $max = $item;\n    }\n  }\n  while ($min < $max) {\n    $sorted[] =\
    \ $min;\n    $min++;\n    $sorted[] = $max;\n    $max--;\n  }\n  return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate numbers in the array.\n<|/ c |>\n<| c |>\nI added a version that\
    \ works with duplicates.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers,\
    \ it just sorts them from lowest to highest.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for negative numbers, it just sorts them from lowest to highest.\n<|/ c\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    \n$arr1 = array();\n$arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5\
    \ = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n\
    $arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14\
    \ = array();\n$arr15 = array();\n$arr16 = array();\n$arr17 = array();\n$arr18\
    \ = array();\n$arr19 = array();\n$arr20 = array();\n$arr21 = array\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0os0ntp9.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $item) {\n        if ($item < $min) {\n            $sorted[] = $min;\n  \
    \      } else if ($item > $max) {\n            $sorted[] = $max;\n        } else\
    \ {\n            $sorted[] = $item;\n        }\n    }\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw28ydo7.php:29\n\
    Stack trace:\n#0 /tmp/tmpzw28ydo7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzw28ydo7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl45m_o05.php:22\n\
    Stack trace:\n#0 /tmp/tmpl45m_o05.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl45m_o05.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $value)\
    \ {\n        if ($value < $min) {\n            $result[] = $min;\n        } else\
    \ if ($value > $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $value;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for me. Thank you so much\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_4yyz4u5.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    foreach ($lst as $k => $v) {\n      \
    \  if ($v < $min) {\n            $lst[$k] = $min;\n        } else if ($v > $max)\
    \ {\n            $lst[$k] = $max;\n        }\n    }\n    return $lst;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$array = array_reverse($array);\nprint_r($array);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if your array has negative\
    \ numbers. `array_reverse` reverses the order of the array and doesn't change\
    \ the order of the negative numbers.\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ your array has negative numbers. `array_reverse` reverses the order of the array\
    \ and doesn't change the order of the negative numbers.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if your array has negative numbers. `array_reverse` reverses the\
    \ order of the array and doesn't change the order of the negative numbers.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if your array has negative numbers. `array_reverse`\
    \ reverses the order of the array and doesn't change the order of the negative\
    \ numbers.\n<|/ c |>\n<| c |>\nThis doesn't work if your array has negative numbers.\
    \ `array_reverse` reverses the order of the array and doesn't change the order\
    \ of the negative numbers.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work if your array has negative numbers. `array_reverse`\
    \ reverses the order of the array and doesn't change the order of the negative\
    \ numbers.\n<|/ c |>\n<| c |>\nThis doesn't work if your array has negative numbers.\
    \ `array_reverse` reverses the order of the array and doesn't change the order\
    \ of the negative numbers.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work if your array has negative numbers. `array_reverse`\
    \ reverses the order \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9w4x4uyw.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,sorting |>\n<code>\n<?php\n$arr = [\n    1 =>\
    \ 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 =>\
    \ 7,\n    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 => 12,\n\
    \    13 => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n \
    \   18 => 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n  \
    \  23 => 23,\n    24 => 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n   \
    \ 28 => 28,\n    29 => 29,\n    30 => 30,\n    31 => 31,\n    32 => 32,\n    33\
    \ => 33,\n    34 => 34,\n    35 => 35,\n    36 => 36,\n    37 => 37,\n    38 =>\
    \ 38,\n    39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n    43 => 43,\n\
    \    44 => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n \
    \   49 => 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\n    53 => 53,\n  \
    \  54 => 54,\n    55 => 55,\n    56 => 56,\n    57 => 57,\n    58 => 58,\n   \
    \ 59 => 59,\n    60 => 60,\n    61 => 61,\n    62 => 62,\n    63 => 63,\n    64\
    \ => 64,\n    65 => 65,\n    66 => 66,\n    67 => 67,\n    68 => 68,\n    69 =>\
    \ 69,\n    70 => 70,\n    71 => 71,\n    7\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7957mzin.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $i => $val) {\n        if ($val < $min) {\n            $sorted[] = $min;\n\
    \            $min = $val;\n        } elseif ($val > $max) {\n            $sorted[]\
    \ = $max;\n            $max = $val;\n        } else {\n            $sorted[] =\
    \ $val;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nI like this solution, but I wonder if there is a way to do it without\
    \ using an extra array. Maybe with array_reduce?\n<|/ c |>\n<| c |>\nYes, it can\
    \ be done with array_reduce, but I wouldn't recommend it. It's not as readable\
    \ as my solution, and it requires more memory and time.\n<|/ c |>\n<| c |>\nI\
    \ agree with you, it's more readable, but I wonder if there is a way to do it\
    \ without using an extra array. Maybe with array_reduce?\n<|/ c |>\n<| c |>\n\
    Yes, you can do it with array_reduce, but I wouldn't recommend it. It's not as\
    \ readable as my solution, and it requires more memory and time. I'll post my\
    \ solution in a minute.\n<|/ c |>\n<| c |>\nI added my solution to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\nI came up with a solution using\
    \ array_reduce. \n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxc_c79ja.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjw9twpc.php:22\n\
    Stack trace:\n#0 /tmp/tmpwjw9twpc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwjw9twpc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $i => $value) {\n        if ($value < $min) {\n            $result[] = $value;\n\
    \        } else if ($value > $max) {\n            $result[] = $value;\n      \
    \  } else {\n            $result[] = $min + $i;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a |>\n<| a tags=sorting,php |>\n<code>\n<?php\n$array\
    \ = array(1, 5, 6, 2, 7, 3, 8, 4, 9, 0);\n$array = array_reverse($array);\nprint_r($array);\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_qmzl6o8.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it with `strange_sort_list([5, 10, 15, 20, 25])`.\
    \ It returns `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `strange_sort_list([5, 10, 15, 20, 25])`. It returns `[5, 10, 15, 20, 25]`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `strange_sort_list([5, 10, 15, 20,\
    \ 25])`. It returns `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| c |>\nIt does work. Try\
    \ it with `strange_sort_list([5, 10, 15, 20, 25])`. It returns `[5, 10, 15, 20,\
    \ 25]`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `strange_sort_list([5, 10,\
    \ 15, 20, 25])`. It returns `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [5, 10, 15, 20, 25];\n$min = min($arr);\n$max = max($arr);\n\
    $result = [];\nfor ($i = $min; $i <= $max; $i++) {\n    $result[] = $i;\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with `strange_sort_list([5,\
    \ 10, 15, 20, 25])`. It returns `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try it with `strange_sort_list([5, 10, 15, 20, 25])`. It returns\
    \ `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `strange_sort_list([5,\
    \ 10, 15, 20, 25])`. It returns `[5, 10, 15, 20, 25]`.\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try it with `strange_sort_list([5, 10, 15, 20, 25])`. It returns\
    \ `[5, 10, 15, 20, 25]`.\n<|/ c |>\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsiucfjpg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhxz1im_.php:22\n\
    Stack trace:\n#0 /tmp/tmplhxz1im_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplhxz1im_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted_lst\
    \ = array();\n  $min_val = min($lst);\n  $max_val = max($lst);\n  foreach ($lst\
    \ as $key => $val) {\n    if ($val < $min_val) {\n      $sorted_lst[] = $min_val;\n\
    \    } else if ($val > $max_val) {\n      $sorted_lst[] = $max_val;\n    } else\
    \ {\n      $sorted_lst[] = $val;\n    }\n  }\n  return $sorted_lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpqonc9f.php:29\n\
    Stack trace:\n#0 /tmp/tmpbpqonc9f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbpqonc9f.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpptpzmr0d.php:22\n\
    Stack trace:\n#0 /tmp/tmpptpzmr0d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpptpzmr0d.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = min($lst);\n  $max = max($lst);\n  foreach ($lst as $key =>\
    \ $value) {\n    if ($value < $min) {\n      $sorted[] = $value;\n    } else if\
    \ ($value > $max) {\n      $sorted[] = $value;\n    } else {\n      $sorted[]\
    \ = $key;\n    }\n  }\n  return $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=php,sorting |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps0k_lhbl.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have duplicate\
    \ values in your array. For example, `strange_sort_list([1,2,2,3,4])` returns\
    \ `[1,2,3,4]`\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting, and\
    \ it does work. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it myself and it\
    \ doesn't work. Try it yourself. `strange_sort_list([1,2,2,3,4])` returns `[1,2,3,4]`\n\
    <|/ c |>\n<| c |>\nI tested it myself and it does work. Try it yourself. `strange_sort_list([1,2,2,3,4])`\
    \ returns `[1,2,3,4]`\n<|/ c |>\n<| c |>\nI tested it myself and it does work.\
    \ Try it yourself. `strange_sort_list([1,2,2,3,4])` returns `[1,2,3,4]`\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbrhqro_c.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $k => $v) {\n        if ($v < $min) {\n            $result[] = $min;\n  \
    \          $min = $v;\n        } else if ($v > $max) {\n            $result[]\
    \ = $max;\n            $max = $v;\n        } else {\n            $result[] = $v;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhde28wi.php:32\n\
    Stack trace:\n#0 /tmp/tmpbhde28wi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbhde28wi.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv17v63q.php:20\n\
    Stack trace:\n#0 /tmp/tmpqv17v63q.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqv17v63q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $lst = array_map(function($v) use ($min, $max) {\n   \
    \ return $min > $v ? $min : $v > $max ? $v : $max;\n  }, $lst);\n  return $lst;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your solution\
    \ works fine for small lists, but it fails for large lists. I tested it on [this\
    \ list](https://gist.github.com/anonymous/9f99f334ff9d6b7d09f47) which has about\
    \ 500 elements and it took about 5 seconds to sort it (on my machine).\n<|/ c\
    \ |>\n<| c |>\nI added a version that sorts large lists in O(n) time.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your solution works fine for small lists, but\
    \ it fails for large lists. I tested it on [this list](https://gist.github.com/anonymous/9f99f334ff9d6b7d09f47)\
    \ which has about 500 elements and it took about 5 seconds to sort it (on my machine).\n\
    <|/ c |>\n<| c |>\nI added a version that sorts large lists in O(n) time.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. Your solution works fine for small lists,\
    \ but it fails for large lists. I tested it on [this list](https://gist.github.com/anonymous/9f99f334ff9d6b7d09f47)\
    \ which has about 500 elements and it took about 5 seconds to sort it (on my machine).\n\
    <|/ c |>\n<| a dscore=1 |>\nI came up with a solution that sorts in O(n) time\
    \ using two pointers. I used a binary search to find the middle of the list, and\
    \ I used a binary search to find the middle of the sorted list. Then, I just moved\
    \ the pointers until they meet in the middle. \n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvduxvj3_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $sorted[] = $min;\n \
    \       } else if ($item == $max) {\n            $sorted[] = $max;\n        }\
    \ else {\n            $sorted[] = $item;\n        }\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works\
    \ fine, but I cannot understand why my code doesn't work. Can you explain it?\n\
    <|/ c |>\n<| c |>\nI added some comments to my answer, hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your explanation. Your code works fine, but I cannot understand\
    \ why my code doesn't work. Can you explain it?\n<|/ c |>\n<| c |>\nI added some\
    \ comments to my answer, hope it helps.\n<|/ c |>\n<| c |>\nThanks for your explanation.\
    \ Your code works fine, but I cannot understand why my code doesn't work. Can\
    \ you explain it?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzec7wj5r.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $item;\n        } else\
    \ if ($item == $max) {\n            $result[] = $item;\n        } else {\n   \
    \         $result[] = $min;\n            $result[] = $max;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjlaqwmu.php:31\n\
    Stack trace:\n#0 /tmp/tmppjlaqwmu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppjlaqwmu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $max = array_shift($lst);\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        } else {\n            $sorted[]\
    \ = $item;\n        }\n    }\n    return array_merge($sorted, array($min, $max));\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nI like this solution, although it does\
    \ require a lot of extra memory and processing power. I'm going to try and implement\
    \ this and see how it goes.\n<|/ c |>\n<| c |>\nThis solution works perfectly\
    \ for my needs. Thanks so much!\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfrk_pd75.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb3zwi60.php:21\n\
    Stack trace:\n#0 /tmp/tmpwb3zwi60.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwb3zwi60.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if there are two equal numbers in\
    \ the list.\n<|/ c |>\n<| c |>\nI added a version that doesn't require a loop\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are two equal numbers in the list.\n\
    <|/ c |>\n<| c |>\nI added a version that doesn't require a loop\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if there are two equal numbers in the list.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5];\n$arr2 = [1, 2, 3, 4,\
    \ 5];\n$arr3 = [1, 2, 3, 4, 5];\n$arr4 = [1, 2, 3, 4, 5];\n$arr5 = [1, 2, 3, 4,\
    \ 5];\n$arr6 = [1, 2, 3, 4, 5];\n$arr7 = [1, 2, 3, 4, 5];\n$arr8 = [1, 2, 3, 4,\
    \ 5];\n$arr9 = [1, 2, 3, 4, 5];\n$arr10 = [1, 2, 3, 4, 5];\n$arr11 = [1, 2, 3,\
    \ 4, 5];\n$arr12 = [1, 2, 3, 4, 5];\n$arr13 = [1, 2, 3, 4, 5];\n$arr14 = [1, 2,\
    \ 3, 4, 5];\n$arr15 = [1, 2, 3, 4, 5];\n$arr16 = [1, 2, 3, 4, 5];\n$arr17 = [1,\
    \ 2, 3, 4, 5];\n$arr18 = [1, 2, 3, 4, 5];\n$arr19 = [1, 2, 3, 4, 5];\n$arr20 =\
    \ [1, 2, 3, 4, 5];\n$arr21 = [1, 2, 3, 4, 5];\n$arr22 = [1, 2, 3, 4, 5];\n$arr23\
    \ = [1, 2, 3, 4, 5];\n$arr24 = [1, 2, 3, 4, 5];\n$arr25 = [1, 2, 3, 4, 5];\n$arr26\
    \ = [1, 2, 3, 4, 5];\n$arr27 = [1, 2, 3, 4, 5];\n$arr28 = [1, 2, 3, 4, 5];\n$arr29\
    \ = [1, 2, 3, 4, 5];\n$arr30 = [1, 2, 3, 4, 5];\n$arr31 = [1, 2, 3, 4, 5];\n$arr32\
    \ = [1, 2, 3, 4, 5];\n$arr33 = [1, 2, 3, 4, 5];\n$arr34 = [1, 2, 3, 4, 5];\n$arr35\
    \ = [1, 2, 3, 4, 5\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp008_g8o3.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $item;\n        } else\
    \ if ($item == $max) {\n            $result[] = $item;\n        } else {\n   \
    \         $result[] = $min;\n            $result[] = $max;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis doesn't\
    \ work if there are multiple equal numbers in the list. For example, `strange_sort_list([2,\
    \ 2, 2, 2])` returns `[2, 2, 2, 2]`.\n<|/ c |>\n<| c |>\nI added a fix for that\
    \ case.\n<|/ c |>\n<| c |>\nI added a fix for that case.\n<|/ c |>\n<| c |>\n\
    This doesn't work if there are multiple equal numbers in the list. For example,\
    \ `strange_sort_list([2, 2, 2, 2])` returns `[2, 2, 2, 2]`.\n<|/ c |>\n<| c |>\n\
    I added a fix for that case.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3kxpp2w9.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = array();\n  foreach ($lst as $key => $value)\
    \ {\n    if ($value < $min) {\n      $result[] = $value;\n    } else if ($value\
    \ > $max) {\n      $result[] = $value;\n    } else {\n      $result[] = $key;\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `strange_sort_list(array(1,5,2,3,4))`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it with `strange_sort_list(array(1,5,2,3,4))`.\n<|/ c |>\n<|\
    \ c |>\nIt does work. Try it with `strange_sort_list(array(1,5,2,3,4))`.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it with `strange_sort_list(array(1,5,2,3,4))`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `strange_sort_list(array(1,5,2,3,4))`.\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo8q71m05.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphp1ze5s_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $result[] = $min;\n \
    \       } else if ($item == $max) {\n            $result[] = $max;\n        }\
    \ else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7b18dlnu.php:30\n\
    Stack trace:\n#0 /tmp/tmp7b18dlnu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7b18dlnu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9pjoxh7.php:21\n\
    Stack trace:\n#0 /tmp/tmpz9pjoxh7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz9pjoxh7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = min($lst);\n  $max = max($lst);\n  foreach ($lst as $key\
    \ => $value) {\n    if ($value < $min) {\n      $sorted[] = $value;\n    } else\
    \ if ($value > $max) {\n      $sorted[] = $value;\n    } else {\n      $sorted[]\
    \ = $key;\n    }\n  }\n  return $sorted;\n}\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3830kow5.php:29\n\
    Stack trace:\n#0 /tmp/tmp3830kow5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3830kow5.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouopq8dz.php:22\n\
    Stack trace:\n#0 /tmp/tmpouopq8dz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpouopq8dz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $mid = $min + ($max - $min) / 2;\n  $lst = array();\n\
    \  foreach ($lst as $item) {\n    if ($item == $min) {\n      $lst[] = $mid;\n\
    \    } else if ($item == $max) {\n      $lst[] = $min;\n    } else {\n      $lst[]\
    \ = $item;\n    }\n  }\n  return $lst;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't seem to work. Try it with `strange_sort_list(array(1, 5, 3, 2));`\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `strange_sort_list(array(1, 5,\
    \ 3, 2));`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `strange_sort_list(array(1,\
    \ 5, 3, 2));`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `strange_sort_list(array(1,\
    \ 5, 3, 2));`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `strange_sort_list(array(1,\
    \ 5, 3, 2));`\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg99w1lpr.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list([5, 2, 7, 1, 3]);`\
    \ returns `[5, 7, 1, 3, 2]`\n<|/ c |>\n<| c |>\nI tested it and it works fine.\
    \ Maybe you didn't reload the page?\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine. Maybe you didn't reload the page?\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works fine. Maybe you didn't reload the page?\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine. Maybe you didn't reload the page?\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbf5fellf.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_v8d9kd.php:21\n\
    Stack trace:\n#0 /tmp/tmpx_v8d9kd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx_v8d9kd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $key\
    \ => $value) {\n        if ($value < $min) {\n            $result[] = $value;\n\
    \        } else if ($value > $max) {\n            $result[] = $value;\n      \
    \  } else {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplf70i2ha.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $max = $lst[0];\n  foreach ($lst as $item) {\n    if ($item\
    \ < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n      $max =\
    \ $item;\n    }\n  }\n  $sorted[] = $min;\n  foreach ($lst as $item) {\n    if\
    \ ($item == $min) {\n      $sorted[] = $item;\n    }\n    if ($item == $max) {\n\
    \      $sorted[] = $item;\n    }\n  }\n  $sorted[] = $max;\n  return $sorted;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpubuf96yj.php:37\n\
    Stack trace:\n#0 /tmp/tmpubuf96yj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpubuf96yj.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $k => $v) {\n        if ($v == $min) {\n            $sorted[] = $min;\n \
    \           unset($lst[$k]);\n        } else if ($v == $max) {\n            $sorted[]\
    \ = $max;\n            unset($lst[$k]);\n        } else {\n            $sorted[]\
    \ = $v;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't seem to work. `strange_sort_list([5, 10, 15, 20])\
    \ == [5, 10, 15, 20]` but `strange_sort_list([5, 10, 15, 20, 25]) == [5, 10, 15,\
    \ 20, 25]`\n<|/ c |>\n<| c |>\nI added a fix for that case\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [5, 10, 15, 20, 25];\n$arr2 = array();\n$arr3 = array();\n\
    $arr4 = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n$arr8\
    \ = array();\n$arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12 =\
    \ array();\n$arr13 = array();\n$arr14 = array();\n$arr15 = array();\n$arr16 =\
    \ array();\n$arr17 = array();\n$arr18 = array();\n$arr19 = array();\n$arr20 =\
    \ array();\n$arr21 = array();\n$arr22 = array();\n$arr23 = array();\n$arr24 =\
    \ array();\n$arr25 = array();\n$arr26 = array();\n$arr27 = array();\n$arr28 =\
    \ array();\n$arr29 = array();\n$arr30 = array();\n$arr31 = array();\n$arr32 =\
    \ array();\n$arr33 = array();\n$arr34 = array();\n$arr35 = array();\n$arr36 =\
    \ array();\n$arr37 = array();\n$arr38 = array();\n$arr39 = array();\n$arr40 =\
    \ array();\n$arr41 = array();\n$arr42 = array();\n$arr43 = array();\n$arr44 =\
    \ array();\n$arr45 = array();\n$arr4\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsphjb43j.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tulzuyo.php:22\n\
    Stack trace:\n#0 /tmp/tmp1tulzuyo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1tulzuyo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst as $key\
    \ => $value) {\n        if ($value < $min) {\n            $sorted[] = $min;\n\
    \            $min = $value;\n        } elseif ($value > $max) {\n            $sorted[]\
    \ = $max;\n            $max = $value;\n        } else {\n            $sorted[]\
    \ = $value;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5j7m8aui.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $mid = ($min + $max) / 2;\n  $lst_sorted = array();\n\
    \  foreach ($lst as $k => $v) {\n    if ($v == $mid) {\n      $lst_sorted[$k]\
    \ = $v;\n    } else if ($v < $mid) {\n      $lst_sorted[$k] = $v;\n    } else\
    \ {\n      $lst_sorted[$k] = $mid;\n    }\n  }\n  return $lst_sorted;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmmgx2w4q.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $lst = array_map(function ($value) use\
    \ ($min, $max) {\n        return $min > $value ? $min : $value;\n    }, $lst);\n\
    \    array_map(function ($value) use ($min, $max) {\n        return $min > $value\
    \ ? $max : $value;\n    }, $lst);\n    return $lst;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(1, 5, 3, 7, 2, 6, 4, 8);\n$array\
    \ = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/10298783)\n<|/ c |>\n<| c |>\nThis does provide\
    \ an answer to the question. He wants to reverse the order of the array and this\
    \ is how he does it.\n<|/ c |>\n<| c |>\nIt does provide an answer to the question.\
    \ He wants to reverse the order of the array and this is how he does it.\n<|/\
    \ c |>\n<| c |>\nIt does provide an answer to the question. He wants to reverse\
    \ the order of the array and this is how he does it. He wants to reverse the order\
    \ of the array and this is how he does it.\n<|/ c |>\n<| c |>\nIt does provide\
    \ an answer to the question. He wants to reverse the order of the array and this\
    \ is how he does it. He wants to reverse the order of the array and this is how\
    \ he does it.\n<|/ c |>\n<| a |>\n<code>\n$array = array(1, 5, 3, 7, 2, 6, 4,\
    \ 8);\n$array = array_reverse($array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/10298783)\n<|/ c |>\n<| c |>\nThis does\
    \ provide an answer to the question. He wants to reverse the order of the array\
    \ and this is how he does it.\n<|/ c |>\n<| a \nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6588ieyn.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [\n    1 => [\n        'name' => 'A'\n    ],\n    2 => [\n     \
    \   'name' => 'B'\n    ],\n    3 => [\n        'name' => 'C'\n    ],\n    4 =>\
    \ [\n        'name' => 'D'\n    ],\n    5 => [\n        'name' => 'E'\n    ],\n\
    \    6 => [\n        'name' => 'F'\n    ],\n    7 => [\n        'name' => 'G'\n\
    \    ],\n    8 => [\n        'name' => 'H'\n    ],\n    9 => [\n        'name'\
    \ => 'I'\n    ],\n    10 => [\n        'name' => 'J'\n    ],\n    11 => [\n  \
    \      'name' => 'K'\n    ],\n    12 => [\n        'name' => 'L'\n    ],\n   \
    \ 13 => [\n        'name' => 'M'\n    ],\n    14 => [\n        'name' => 'N'\n\
    \    ],\n    15 => [\n        'name' => 'O'\n    ],\n    16 => [\n        'name'\
    \ => 'P'\n    ],\n    17 => [\n        'name' => 'Q'\n    ],\n    18 => [\n  \
    \      'name' => 'R'\n    ],\n    19 => [\n        'name' => 'S'\n    ],\n   \
    \ 20 => [\n        'name' => 'T'\n    ],\n    21 => [\n        'name' => 'U'\n\
    \    ],\n    22 => [\n        'name' => 'V'\n    ],\n    23 => [\n        'name'\
    \ => 'W'\n    ],\n    24 => [\n        'name' => 'X'\n    ],\n    25 => [\n  \
    \      'name' => 'Y'\n    ],\n    26 => [\n        'name' => 'Z'\n    ],\n];\n\
    \n$arr1 = array_map(function($v){\n    return $v['name'];\n}, $arr);\n\n$arr2\
    \ = array_map(function($v){\n    return $v['name'];\n}, $arr1);\n\n$arr3 = array_merge($arr2,\
    \ $arr1);\n\n$arr4 = array_map(function($v){\n    return $v['name'];\n}, $arr3);\n\
    \n$arr5 = array_merge($arr4, $arr3);\n\n$arr6 = array_map(function($v){\n    return\
    \ $v['name'];\n}, $arr5);\n\n$arr7 = array_merge($arr6, \nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpef78m3b2.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $lst[0];\n  $max = $lst[0];\n  foreach ($lst as $item) {\n \
    \   if ($item < $min) {\n      $min = $item;\n    } else if ($item > $max) {\n\
    \      $max = $item;\n    }\n  }\n  foreach ($lst as $item) {\n    if ($item ==\
    \ $min) {\n      $sorted[] = $item;\n    } else if ($item == $max) {\n      $sorted[]\
    \ = $item;\n    } else {\n      $sorted[] = $min;\n      $sorted[] = $max;\n \
    \   }\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5hyzurv.php:38\n\
    Stack trace:\n#0 /tmp/tmpv5hyzurv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpv5hyzurv.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6682ns_h.php:22\n\
    Stack trace:\n#0 /tmp/tmp6682ns_h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6682ns_h.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $lst[0];\n  $max = $lst[0];\n  foreach ($lst as $item) {\n \
    \   if ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n\
    \      $max = $item;\n    }\n  }\n  for ($i = $min; $i <= $max; $i++) {\n    $sorted[]\
    \ = $i;\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnb9b6x4.php:32\n\
    Stack trace:\n#0 /tmp/tmpjnb9b6x4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjnb9b6x4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp011ejctk.php:22\n\
    Stack trace:\n#0 /tmp/tmp011ejctk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp011ejctk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  array_multisort($sorted, SORT_ASC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq37fw2_k.php:22\n\
    Stack trace:\n#0 /tmp/tmpq37fw2_k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq37fw2_k.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg078ium5.php:20\n\
    Stack trace:\n#0 /tmp/tmpg078ium5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg078ium5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ elements in the array. For example, `strange_sort_list([5, 6, 5, 5])` returns\
    \ `[5, 5, 5, 6]`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ it. I just added a comment to the code explaining why it works.\n<|/ c |>\n\
    <| c |>\nI tested it again and it doesn't work. `strange_sort_list([5, 6, 5, 5])`\
    \ returns `[5, 5, 5, 6]`.\n<|/ c |>\n<| c |>\nI tested it again and it doesn't\
    \ work. `strange_sort_list([5, 6, 5, 5])` returns `[5, 5, 5, 6]`.\n<|/ c |>\n\
    <| c |>\nI tested it again and it doesn't work. `strange_sort_list([5, 6, 5, 5])`\
    \ returns `[5, 5, 5, 6]`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpttmeoc5f.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = array_shift($lst);\n    $max = array_pop($lst);\n   \
    \ foreach ($lst as $item) {\n        if ($item < $min) {\n            $sorted[]\
    \ = $min;\n            $min = $item;\n        } elseif ($item > $max) {\n    \
    \        $sorted[] = $max;\n            $max = $item;\n        } else {\n    \
    \        $sorted[] = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't seem to work if you have\
    \ duplicate values in the array. For example, if your array is `[1,2,2,3]` then\
    \ `strange_sort_list([1,2,2,3])` returns `[1,2,2,3]` instead of `[1,2,3]`.\n<|/\
    \ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv_rk1ehk.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6vbra04.php:22\n\
    Stack trace:\n#0 /tmp/tmpk6vbra04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk6vbra04.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    asort($sorted);\n    return $sorted;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=php,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz3e4igq3.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j1wzulp.php:21\n\
    Stack trace:\n#0 /tmp/tmp1j1wzulp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1j1wzulp.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = $max = reset($lst);\n  foreach ($lst as $item) {\n    if\
    \ ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n    \
    \  $max = $item;\n    }\n  }\n  while ($min < $max) {\n    $sorted[] = $min;\n\
    \    $min++;\n    $sorted[] = $max;\n    $max--;\n  }\n  return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbts8zih.php:34\n\
    Stack trace:\n#0 /tmp/tmpkbts8zih.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkbts8zih.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadetrzfh.php:22\n\
    Stack trace:\n#0 /tmp/tmpadetrzfh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpadetrzfh.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvflv4724.php:21\n\
    Stack trace:\n#0 /tmp/tmpvflv4724.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvflv4724.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $ret = [];\n  for ($i = $min; $i <= $max; $i++) {\n  \
    \  $ret[] = $i;\n  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev8cuwu3.php:24\n\
    Stack trace:\n#0 /tmp/tmpev8cuwu3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpev8cuwu3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    foreach ($lst as $key => $val) {\n  \
    \      if ($val < $min) {\n            $lst[$key] = $min;\n        } else if ($val\
    \ > $max) {\n            $lst[$key] = $max;\n        }\n    }\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_cy9jqr.php:27\n\
    Stack trace:\n#0 /tmp/tmp6_cy9jqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6_cy9jqr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = $max = reset($lst);\n  foreach ($lst as $item) {\n    if\
    \ ($item < $min) {\n      $min = $item;\n    } else if ($item > $max) {\n    \
    \  $max = $item;\n    }\n    $sorted[] = $item;\n  }\n  return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_ma21x_.php:28\n\
    Stack trace:\n#0 /tmp/tmpv_ma21x_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv_ma21x_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9x_v8pm.php:22\n\
    Stack trace:\n#0 /tmp/tmpv9x_v8pm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv9x_v8pm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8r1zslw.php:21\n\
    Stack trace:\n#0 /tmp/tmpf8r1zslw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf8r1zslw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    foreach ($lst as $key => $value) {\n\
    \        if ($value < $min) {\n            $lst[$key] = $min;\n        } else\
    \ if ($value > $max) {\n            $lst[$key] = $max;\n        }\n    }\n   \
    \ return $lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg9olg5m.php:26\n\
    Stack trace:\n#0 /tmp/tmpdg9olg5m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdg9olg5m.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $max = $lst[0];\n    foreach ($lst as $item) {\n    \
    \    if ($item < $min) {\n            $min = $item;\n        } else if ($item\
    \ > $max) {\n            $max = $item;\n        }\n    }\n    $sorted = array($min);\n\
    \    foreach ($lst as $item) {\n        if ($item == $min) {\n            $sorted[]\
    \ = $max;\n            $max = $item;\n        } else if ($item == $max) {\n  \
    \          $sorted[] = $min;\n            $min = $item;\n        } else {\n  \
    \          $sorted[] = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. Try it with `strange_sort_list(array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm2z3dpqd.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    for ($i = $min; $i\
    \ <= $max; $i++) {\n        $result[] = $i;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting |>\n<| c |>\nThis doesn't work for me. `strange_sort_list([1,2,3,4,5,6,7,8,9,10])`\
    \ returns `[1,2,3,4,5,6,7,8,9,10]`\n<|/ c |>\n<| c |>\nThis doesn't work for me.\
    \ strange_sort_list([1,2,3,4,5,6,7,8,9,10]) returns [1,2,3,4,5,6,7,8,9,10]\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list([1,2,3,4,5,6,7,8,9,10])\
    \ returns [1,2,3,4,5,6,7,8,9,10]\n<|/ c |>\n<| c |>\nThis doesn't work for me.\
    \ strange_sort_list([1,2,3,4,5,6,7,8,9,10]) returns [1,2,3,4,5,6,7,8,9,10]\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for me. strange_sort_list([1,2,3,4,5,6,7,8,9,10])\
    \ returns [1,2,3,4,5,6,7,8,9,10]\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr14nrgmw.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdpqy2ap6.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjljmb94.php:21\n\
    Stack trace:\n#0 /tmp/tmpgjljmb94.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgjljmb94.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi7ikxym.php:22\n\
    Stack trace:\n#0 /tmp/tmpfi7ikxym.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfi7ikxym.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your solution works\
    \ but is too slow for my needs. I need a solution that is faster than the one\
    \ I posted in the question. Thanks again.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that is faster than the one I posted in the question.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\nI finally found a solution that is faster than the one I posted in the question.\
    \ Thanks to everyone who tried to help.\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptbw49o6b.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id'\
    \ => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name' => 'Jane'),\n    array('id'\
    \ => 8, 'name' => 'John'),\n    array('id' => 9, 'name' => 'Jack'),\n    array('id'\
    \ => 10, 'name' => 'Jill'),\n    array('id' => 11, 'name' => 'Jack'),\n    array('id'\
    \ => 12, 'name' => 'Jill'),\n    array('id' => 13, 'name' => 'Jane'),\n    array('id'\
    \ => 14, 'name' => 'John'),\n    array('id' => 15, 'name' => 'Jack'),\n    array('id'\
    \ => 16, 'name' => 'Jill'),\n    array('id' => 17, 'name' => 'Jack'),\n    array('id'\
    \ => 18, 'name' => 'Jill'),\n    array('id' => 19, 'name' => 'Jack'),\n    array('id'\
    \ => 20, 'name' => 'Jill'),\n    array('id' => 21, 'name' => 'Jack'),\n    array('id'\
    \ => 22, 'name' => 'Jill'),\n    array('id' => 23, 'name' => 'Jack'),\n    array('id'\
    \ => 24, 'name' => 'Jill'),\n    array('id' => 25, 'name' => 'Jack'),\n    array('id'\
    \ => 26, 'name' => 'Jill'),\n    array('id' => 27, 'name' => 'Jack'),\n    array('id'\
    \ => 28, 'name' => 'Jill'),\n    array('id' => 29, 'name' => 'Jack'),\n    array('id'\
    \ => 30, 'name' => 'Jill'),\n    array('id' => 31, 'name' => 'Jack'),\n    array('id'\
    \ => 32, 'name' => 'Jill'),\n    array('id' => 33, 'name' => 'Jack'),\n    array('id'\
    \ => 34, 'name' => 'Jill'),\n    array('id' => 35, 'name' => 'Jack'),\n    array('id'\
    \ => 36, 'name\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpifi6ycdq.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvefnsrp.php:21\n\
    Stack trace:\n#0 /tmp/tmpkvefnsrp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkvefnsrp.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $key => $value) {\n        if ($value < $min) {\n            $sorted[$key]\
    \ = $min;\n        } elseif ($value > $max) {\n            $sorted[$key] = $max;\n\
    \        } else {\n            $sorted[$key] = $value;\n        }\n    }\n   \
    \ return $sorted;\n}\n</code>\n<|/ a |>\n<| c |>\nI like your solution, however\
    \ it fails for `strange_sort_list([5, 5, 5, 5])` which should return `[5, 5, 5,\
    \ 5]` but returns `[5, 5, 5, 5]`\n<|/ c |>\n<| c |>\nI added a fix for that case\n\
    <|/ c |>\n<| c |>\nThanks for your solution, however I prefer my solution as it\
    \ uses less memory and runs faster. Your solution uses more memory and runs slower.\n\
    <|/ c |>\n<| a |>\nI came up with a solution that uses less memory and runs faster.\
    \ \n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7dt3c477.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mrbapmg.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mrbapmg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6mrbapmg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $i) {\n        if ($i < $min) {\n            $sorted[] = $min;\n        }\
    \ else if ($i > $max) {\n            $sorted[] = $max;\n        } else {\n   \
    \         $sorted[] = $i;\n        }\n    }\n    return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusbr3n45.php:29\n\
    Stack trace:\n#0 /tmp/tmpusbr3n45.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpusbr3n45.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd62dvgj.php:21\n\
    Stack trace:\n#0 /tmp/tmpwd62dvgj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwd62dvgj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $key => $value) {\n\
    \    if ($value < $min) {\n      $result[] = $value;\n    } else if ($value >\
    \ $max) {\n      $result[] = $value;\n    } else if ($value == $min) {\n     \
    \ $result[] = $max;\n    } else if ($value == $max) {\n      $result[] = $min;\n\
    \    } else {\n      $result[] = $value;\n    }\n  }\n  return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting |>\n<| c |>\nThis doesn't seem to work for me. Can you\
    \ please explain how it works?\n<|/ c |>\n<| c |>\nThis doesn't seem to work for\
    \ me. Can you please explain how it works?\n<|/ c |>\n<| c |>\nThis doesn't seem\
    \ to work for me. Can you please explain how it works?\n<|/ c |>\n<| c |>\nThis\
    \ doesn't seem to work for me. Can you please explain how it works?\n<|/ c |>\n\
    <| c |>\nThis doesn't seem to work for me. Can you please explain how it works?\n\
    <|/ c |>\n<| a tags=php,sorting |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiduz1wwe.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $max = $min2 = $max2 = null;\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        }\n     \
    \   if ($item > $max) {\n            $max = $item;\n        }\n        if ($item\
    \ == $min) {\n            $min2 = $item;\n        }\n        if ($item == $max)\
    \ {\n            $max2 = $item;\n        }\n        $sorted[] = $item;\n    }\n\
    \    if ($min2 !== null) {\n        $sorted[] = $min2;\n    }\n    if ($max2 !==\
    \ null) {\n        $sorted[] = $max2;\n    }\n    if ($min < $max) {\n       \
    \ $sorted[] = $min;\n        $sorted[] = $max;\n    }\n    return $sorted;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if you have two equal numbers\
    \ in the list. Try `strange_sort_list([1,1,2,1])`\n<|/ c |>\n<| c |>\nYes, I forgot\
    \ about that. Thanks for pointing it out. I've updated my answer.\n<|/ c |>\n\
    <| a tags=php,sorting |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0bpgd09s.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work\
    \ if there are duplicate numbers in the list. Try `strange_sort_list([1,2,2,3,4])`\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated my answer with a new function\
    \ that should work.\n<|/ c |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu3hqrecx.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdgkk3z0.php:22\n\
    Stack trace:\n#0 /tmp/tmpmdgkk3z0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmdgkk3z0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        }\n    }\n    for ($i =\
    \ $min; $i <= $max; $i++) {\n        $sorted[] = $i;\n    }\n    return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp465zwphm.php:31\n\
    Stack trace:\n#0 /tmp/tmp465zwphm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp465zwphm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $key\
    \ => $value) {\n        if ($value < $min) {\n            $result[] = $value;\n\
    \        } else if ($value > $max) {\n            $result[] = $value;\n      \
    \  } else {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjygvww4.php:30\n\
    Stack trace:\n#0 /tmp/tmpcjygvww4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcjygvww4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $lst = array_map(function($v) use ($min, $max) {\n   \
    \ return $v < $min ? $min : $v > $max ? $max : $v;\n  }, $lst);\n  return $lst;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `strange_sort_list([5,5,5,5])` returns `[5, 5, 5, 5]`\n<|/ c |>\n<| c |>\nI\
    \ tested it and it works fine. Can you give me an example where it fails?\n<|/\
    \ c |>\n<| c |>\n`strange_sort_list([5,5,5,5])` returns `[5, 5, 5, 5]`\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine. Can you give me an example where\
    \ it fails?\n<|/ c |>\n<| c |>\n`strange_sort_list([5,5,5,5])` returns `[5, 5,\
    \ 5, 5]`\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpncgh8yu2.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    for ($i = $min; $i\
    \ <= $max; $i++) {\n        $result[] = $i;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works fine but i\
    \ want to know why my code is not working ?\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works fine\
    \ but i want to know why my code is not working ?\n<|/ c |>\n<| c |>\nI added\
    \ some explanation to the answer.\n<|/ c |>\n<| a dscore=0 |>\nThe problem is\
    \ with your strange_sort_list function. It does not return anything if $lst is\
    \ empty. \n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg1wps716.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2zok72h.php:22\n\
    Stack trace:\n#0 /tmp/tmpj2zok72h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpj2zok72h.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis does not provide an\
    \ answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post.\n<|/ c |>\n<| c |>\nI thought it was an answer\
    \ to the question. He asked how to sort an array in descending order. He also\
    \ asked how to sort an array in descending order. He also asked how to sort an\
    \ array in descending order. He also asked how to sort an array in descending\
    \ order. He also asked how to sort an array in descending order. He also asked\
    \ how to sort an array in descending order. He also asked how to sort an array\
    \ in descending order. He also asked how to sort an array in descending order.\
    \ He also asked how to sort an array in descending order. He also asked how to\
    \ sort an array in descending order. He also asked how to sort an array in descending\
    \ order. He also asked how to sort an array in descending order. He also asked\
    \ how to sort an array in descending order. He also asked how to sort an array\
    \ in descending order. He also asked how to sort an array in descending order.\
    \ He also asked how to sort an array in descending order. He also asked how to\
    \ sort an array in descending order. He also asked how to sort an array in descending\
    \ order. He also asked how to sort an array in descending order. He also asked\
    \ how to sort an array in descending order. He also asked how to sort an array\
    \ in descending order. He also asked how to sort an array in descending order.\
    \ He also asked how to sort an array in descending order. He also asked how to\
    \ sort an array in descending order. He also asked how to sort an array in descending\
    \ order. He also asked how to sort an array in descending order. He also asked\
    \ how to sort an array in descending order. He also asked how to sort an array\
    \ in descending order. He also asked how to sort an array in descending order.\
    \ He also asked how to sort an array in descending order. He also asked how to\
    \ sort an array in desc\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptcl0u0a0.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  natsort($sorted);\n  return $sorted;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2aheifyg.php:22\n\
    Stack trace:\n#0 /tmp/tmp2aheifyg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2aheifyg.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        } else {\n            $sorted[]\
    \ = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprvwotzuq.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $value) {\n    if ($value\
    \ < $min) {\n      $result[] = $min;\n    } else if ($value > $max) {\n      $result[]\
    \ = $max;\n    } else {\n      $result[] = $value;\n    }\n  }\n  return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work for me. I'm getting\
    \ `[5, 5, 5, 5]` instead of `[5, 5, 5, 5]`.\n<|/ c |>\n<| c |>\nI tested it on\
    \ PHP 7.2.17 and it works. What PHP version are you using?\n<|/ c |>\n<| c |>\n\
    I'm using PHP 7.3.10\n<|/ c |>\n<| c |>\nI tested it on PHP 7.3.10 and it works.\
    \ What PHP version are you using?\n<|/ c |>\n<| c |>\nI'm using PHP 7.3.10\n<|/\
    \ c |>\n<| a dscore=0 |>\nI believe this should work:\n<code>\n<?php\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvwfthx6q.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis is not the correct answer, it just sorts the array in ascending\
    \ order. Try it with `strange_sort_list([5, 10, 15, 20, 25])`\n<|/ c |>\n<| c\
    \ |>\nI added a comment to my answer, I hope it helps you.\n<|/ c |>\n<| c |>\n\
    This is not the correct answer, it just sorts the array in ascending order. Try\
    \ it with `strange_sort_list([5, 10, 15, 20, 25])`\n<|/ c |>\n<| c |>\nI added\
    \ a comment to my answer, I hope it helps you.\n<|/ c |>\n<| c |>\nThis is not\
    \ the correct answer, it just sorts the array in ascending order. Try it with\
    \ `strange_sort_list([5, 10, 15, 20, 25])`\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6_vtvnlr.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    foreach ($lst as $key => $value) {\n\
    \        if ($value < $min) {\n            $lst[$key] = $min;\n        } elseif\
    \ ($value > $max) {\n            $lst[$key] = $max;\n        } else {\n      \
    \      $lst[$key] = $value;\n        }\n    }\n    return $lst;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [\n    1 => 2,\n  \
    \  2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13\
    \ => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 =>\
    \ 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n\
    \    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n \
    \   29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n  \
    \  34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n   \
    \ 39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44\
    \ => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 =>\
    \ 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n\
    \    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n \
    \   60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n  \
    \  65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n   \
    \ 70 => 71,\n    71 => \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp10wqumik.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $key => $value) {\n        if ($min == $max) {\n            $result[] = $value;\n\
    \        } else {\n            $result[] = $value;\n            $result[] = $min;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work if the list contains duplicates. For example, [1, 1, 2, 3] returns [1,\
    \ 2, 3, 1]\n<|/ c |>\n<| c |>\nThis doesn't work if the list contains duplicates.\
    \ For example, [1, 1, 2, 3] returns [1, 2, 3, 1]\n<|/ c |>\n<| a dscore=3 |>\n\
    <code>\n<?php\n$array = [1, 2, 3, 4, 5];\n$array = array_reverse($array);\nprint_r($array);\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz0wq19df.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwg_xwy7.php:21\n\
    Stack trace:\n#0 /tmp/tmpzwg_xwy7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzwg_xwy7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. The\
    \ OP wants to sort a list by descending order. Your code sorts by ascending order.\n\
    <|/ c |>\n<| c |>\nI see your point. I've edited my answer to reflect this.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question. The OP wants to sort a list\
    \ by descending order. Your code sorts by ascending order.\n<|/ c |>\n<| c |>\n\
    I see your point. I've edited my answer to reflect this.\n<|/ c |>\n<| a tags=php,sorting,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3qe8zbbz.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1oqsj4bb.php:22\n\
    Stack trace:\n#0 /tmp/tmp1oqsj4bb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1oqsj4bb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting |>\n<| c |>\nI like this solution, it's very elegant. Although\
    \ it does require a little more memory than my solution, it's still a lot faster\
    \ than the other solutions.\n<|/ c |>\n<| c |>\nThis solution doesn't work for\
    \ me. My array is `[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,20\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprwqjt5dy.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $result[] = $min;\n \
    \       } else if ($item == $max) {\n            $result[] = $max;\n        }\
    \ else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxydeb3w.php:30\n\
    Stack trace:\n#0 /tmp/tmpxxydeb3w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxxydeb3w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $lst[0];\n  $max = $lst[0];\n  foreach ($lst as $item) {\n \
    \   if ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n\
    \      $max = $item;\n    }\n  }\n  $sorted = array_merge([$min], $sorted, array_reverse($lst));\n\
    \  $sorted = array_merge($sorted, [$max]);\n  return $sorted;\n}\n</code>\n<|/\
    \ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr\
    \ = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n\
    \    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n\
    \    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n\
    \    'x',\n    'y',\n    'z',\n];\n\n$arr = array_map(function($v){\n    return\
    \ $v[0];\n}, array_chunk($arr, 2));\n\n$arr = array_merge($arr, array_reverse($arr));\n\
    \nprint_r($arr);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in the array\n<|/ c |>\n<| a |>\n<code>\n$arr = [\n   \
    \ 'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n\
    \    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n\
    \    'q',\n    'r',\n    's',\n    't',\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphq0whg5y.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $val)\
    \ {\n        if ($val < $min) {\n            $min = $val;\n        } else if ($val\
    \ > $max) {\n            $max = $val;\n        }\n    }\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($i == 0) {\n            $sorted[] = $min;\n\
    \            $sorted[] = $max;\n        } else {\n            if ($lst[$i] < $sorted[$i\
    \ - 1]) {\n                $sorted[] = $min;\n            } else {\n         \
    \       $sorted[] = $max;\n            }\n        }\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppnxkqbud.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $result[] = $min;\n \
    \       } elseif ($item == $max) {\n            $result[] = $max;\n        } else\
    \ {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxjku5ccm.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    for ($i = $min; $i\
    \ <= $max; $i++) {\n        $result[] = $i;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to do it without looping through the entire array. Maybe with array_reduce?\n\
    <|/ c |>\n<| c |>\nYes, it can be done with array_reduce. I'll post an answer\
    \ with it.\n<|/ c |>\n<| a tags=php,sorting |>\n<code>\n<?php\n$arr = [1, 2, 3,\
    \ 4, 5];\n$arr2 = array_reverse($arr);\n$arr3 = array_merge($arr, $arr2);\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting |>\n<code>\n<?php\n$arr = [1,\
    \ 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n$arr3 = array_merge($arr, $arr2);\n\
    print_r($arr3);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n$arr3 = array_merge($arr,\
    \ $arr2);\nprint_r($arr3);\n</code>\n<|/ a tags=php,sorting |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n$arr3\
    \ = array_merge($arr, $arr2);\nprint_r($arr3);\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_reverse($arr);\n\
    $arr3 = array_merge($arr, $arr2);\nprint_r($arr3);\n</code>\n<|/ a tags=php,sorting\
    \ |>\n<| a tags=php,sorting |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5];\n$arr2\
    \ = array_reverse($arr);\n$arr3 = array_merge($arr, $arr2);\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3,\
    \ 4, 5];\n$arr2 = array_reverse($arr);\n$arr3 = array_merge($arr, $arr2);\nprint_r($arr3);\n\
    </code>\n<|/ a tags=php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmke8_owg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $ret = [];\n  foreach ($lst as $item) {\n    if ($item\
    \ == $min) {\n      $ret[] = $min;\n    } else if ($item == $max) {\n      $ret[]\
    \ = $max;\n    } else {\n      $ret[] = $item;\n    }\n  }\n  return $ret;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ng21h_7.php:29\n\
    Stack trace:\n#0 /tmp/tmp0ng21h_7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0ng21h_7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = $max = $lst[0];\n  foreach ($lst as $item) {\n    if ($item\
    \ < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n      $max =\
    \ $item;\n    }\n  }\n  $sorted[] = $min;\n  for ($i = $min + 1; $i <= $max; $i++)\
    \ {\n    $sorted[] = $i;\n  }\n  $sorted[] = $max;\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzex34c_s.php:32\n\
    Stack trace:\n#0 /tmp/tmpzex34c_s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzex34c_s.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted_lst\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted_lst[] = $value;\n\
    \    if ($key > 0) {\n      $sorted_lst[] = $lst[$key - 1];\n    }\n  }\n  return\
    \ $sorted_lst;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04hws_c9.php:25\n\
    Stack trace:\n#0 /tmp/tmp04hws_c9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp04hws_c9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_k8kl2l.php:22\n\
    Stack trace:\n#0 /tmp/tmpx_k8kl2l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx_k8kl2l.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  ksort($sorted);\n  return $sorted;\n}\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsszuw_z.php:22\n\
    Stack trace:\n#0 /tmp/tmppsszuw_z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppsszuw_z.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    foreach ($lst as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach ($sorted as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    foreach (\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw1b7mgmd.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs1yywlj.php:22\n\
    Stack trace:\n#0 /tmp/tmpcs1yywlj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcs1yywlj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_ASC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchrpxppy.php:22\n\
    Stack trace:\n#0 /tmp/tmpchrpxppy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpchrpxppy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $key => $value) {\n\
    \    if ($value < $min) {\n      $result[] = $value;\n    } else if ($value >\
    \ $max) {\n      $result[] = $value;\n    } else {\n      $result[] = $key;\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n\
    <| c |>\nThis doesn't work if the array is empty or contains only a single element.\
    \ `strange_sort_list([1])` returns `[1]` instead of `[]`.\n<|/ c |>\n<| c |>\n\
    This doesn't work if the array is empty or contains only a single element. strange_sort_list([1])\
    \ returns [1] instead of [].\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq6lm5yd1.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $max = array_shift($lst);\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        } else {\n            $sorted[]\
    \ = $item;\n        }\n    }\n    return array_merge($sorted, array($min, $max));\n\
    }\n</code>\n<|/ a tags=php,sorting |>\n<| c |>\nThis doesn't work for me. `strange_sort_list([5,\
    \ 10, 15, 20, 25])` returns `[5, 10, 15, 20, 25]` instead of `[5, 10, 15, 25,\
    \ 20]`.\n<|/ c |>\n<| c |>\nI tested it and it works. I used PHP 5.3.10\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and it works. I used PHP 5.3.10\n<|/\
    \ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works. I used PHP 5.3.10\n<|/\
    \ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works. I used PHP 5.3.10\n<|/\
    \ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0irsij11.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokfecppb.php:22\n\
    Stack trace:\n#0 /tmp/tmpokfecppb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpokfecppb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufcjrpu8.php:20\n\
    Stack trace:\n#0 /tmp/tmpufcjrpu8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpufcjrpu8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp_9fxn2l.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [\n    1 =>\
    \ [\n        'id' => 1,\n        'name' => 'John',\n        'age' => 25,\n   \
    \ ],\n    2 => [\n        'id' => 2,\n        'name' => 'Jane',\n        'age'\
    \ => 24,\n    ],\n    3 => [\n        'id' => 3,\n        'name' => 'Jack',\n\
    \        'age' => 23,\n    ],\n];\n\n$newArr = array();\nforeach ($arr as $key\
    \ => $value) {\n    $newArr[$value['id']] = $value;\n}\n\nksort($newArr);\n\n\
    print_r($newArr);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [\n    1 => [\n        'id' => 1,\n        'name' => 'John',\n \
    \       'age' => 25,\n    ],\n    2 => [\n        'id' => 2,\n        'name' =>\
    \ 'Jane',\n        'age' => 24,\n    ],\n    3 => [\n        'id' => 3,\n    \
    \    'name' => 'Jack',\n        'age' => 23,\n    ],\n];\n\n$newArr = array();\n\
    foreach ($arr as $key => $value) {\n    $newArr[$value['id']] = $value;\n}\n\n\
    ksort($newArr);\n\nprint_r($newArr);\n</code>\n<|/ a tags=arrays,php |>\n<| a\
    \ tags=arrays,php |>\n<code>\n<?php\n$arr = [\n    1 => [\n        'id' => 1,\n\
    \        'name' => 'John',\n        'age' => 25,\n    ],\n    2 => [\n       \
    \ 'id' => 2,\n        'name' => 'Jane',\n        'age' => 24,\n    ],\n    3 =>\
    \ [\n        'id' => 3,\n        'name' => 'Jack',\n        'age' => 23,\n   \
    \ ],\n];\n\n$newArr = array();\nforeach ($arr as $key => $value) {\n    $newArr[$value['id']]\
    \ = $value;\n}\n\nksort($newArr);\n\nprint_r($newArr);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [\n    1 => [\n        'id' => 1,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy_gq6k_h.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm571wqyv.php:23\n\
    Stack trace:\n#0 /tmp/tmpm571wqyv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm571wqyv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckq5t47i.php:22\n\
    Stack trace:\n#0 /tmp/tmpckq5t47i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpckq5t47i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } else if\
    \ ($item > $max) {\n            $max = $item;\n        }\n    }\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $sorted[] = $item;\n\
    \        } else if ($item == $max) {\n            $sorted[] = $item;\n       \
    \ } else {\n            $sorted[] = $min;\n            $sorted[] = $max;\n   \
    \     }\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwst9zpj.php:38\n\
    Stack trace:\n#0 /tmp/tmptwst9zpj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptwst9zpj.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $key\
    \ => $value) {\n        if ($value < $min) {\n            $result[] = $value;\n\
    \        } else if ($value > $max) {\n            $result[] = $value;\n      \
    \  } else {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n<?php\n$array = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n\
    \    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n\
    \    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n \
    \   15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n  \
    \  20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n   \
    \ 25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30\
    \ => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 =>\
    \ 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n\
    \    41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n \
    \   46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n  \
    \  51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n   \
    \ 56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61\
    \ => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 =>\
    \ 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwsvny3p2.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $result[] = $item;\n\
    \        } else if ($item == $max) {\n            $result[] = $item;\n       \
    \ } else {\n            $result[] = $min;\n            $result[] = $max;\n   \
    \     }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqnfbmaj.php:31\n\
    Stack trace:\n#0 /tmp/tmpgqnfbmaj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgqnfbmaj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    foreach ($lst as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [\n\
    \    0 => [\n        'id' => 1,\n        'name' => 'abc',\n    ],\n    1 => [\n\
    \        'id' => 2,\n        'name' => 'def',\n    ],\n    2 => [\n        'id'\
    \ => 3,\n        'name' => 'ghi',\n    ],\n    3 => [\n        'id' => 4,\n  \
    \      'name' => 'jkl',\n    ],\n    4 => [\n        'id' => 5,\n        'name'\
    \ => 'mno',\n    ],\n];\n\n$arr2 = [];\nforeach ($arr as $key => $value) {\n \
    \   $arr2[$value['id']] = $value;\n}\n\n$arr3 = [];\nforeach ($arr2 as $key =>\
    \ $value) {\n    $arr3[$value['id']] = $value;\n}\n\n$arr4 = array_merge(array_flip($arr3),\
    \ array_flip($arr2));\n\nprint_r($arr4);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [\n    0 => [\n        'id' => 1,\n        'name' => 'abc',\n\
    \    ],\n    1 => [\n        'id' => 2,\n        'name' => 'def',\n    ],\n  \
    \  2 => [\n        'id' => 3,\n        'name' => 'ghi',\n    ],\n    3 => [\n\
    \        'id' => 4,\n        'name' => 'jkl',\n    ],\n    4 => [\n        'id'\
    \ => 5,\n        'name' => 'mno',\n    ],\n];\n\n$arr2 = [];\nforeach ($arr as\
    \ $key => $value) {\n    $arr2[$value['id']] = $value;\n}\n\n$arr3 = [];\nforeach\
    \ ($arr2 as $key => $value) {\n    $arr3[$value['id']] = $value;\n}\n\n$arr4 =\
    \ array_merge(array_flip($arr3), array_flip($arr2));\n\nprint_r($arr4);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    0 =>\
    \ [\n        'id' => 1,\n        'name' => 'abc',\n    ],\n    1 => [\n      \
    \  'id' => 2,\n        'name' => 'def',\n    ],\n    2 => [\n        'id' => 3,\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphqwnm39w.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9x63zup.php:21\n\
    Stack trace:\n#0 /tmp/tmph9x63zup.php(32): test()\n#1 {main}\n  thrown in /tmp/tmph9x63zup.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = $max = reset($lst);\n  foreach ($lst as $item) {\n    if\
    \ ($item < $min) {\n      $min = $item;\n    } else if ($item > $max) {\n    \
    \  $max = $item;\n    }\n    $sorted[] = $item;\n  }\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq11ilhp.php:27\n\
    Stack trace:\n#0 /tmp/tmpxq11ilhp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxq11ilhp.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $item) {\n    if ($item\
    \ == $min) {\n      $result[] = $min;\n    } else if ($item == $max) {\n     \
    \ $result[] = $max;\n    } else {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha1jwjd4.php:30\n\
    Stack trace:\n#0 /tmp/tmpha1jwjd4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpha1jwjd4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = array();\n  for ($i = $min; $i <= $max; $i++)\
    \ {\n    $result[] = $i;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7kaiime.php:23\n\
    Stack trace:\n#0 /tmp/tmpi7kaiime.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi7kaiime.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwyixs_4.php:21\n\
    Stack trace:\n#0 /tmp/tmpzwyixs_4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzwyixs_4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  ksort($sorted);\n  return $sorted;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThis doesn't seem to work. `strange_sort_list([5, 5, 5, 5])` returns `[5,\
    \ 5, 5, 5]` instead of `[5, 5, 5, 5]`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ yourself. It returns `[5, 5, 5, 5]` as expected.\n<|/ c |>\n<| c |>\nAh, I see\
    \ what you mean. Yes, it does work. Sorry for the misunderstanding.\n<|/ c |>\n\
    <| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr5bzmytp.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    foreach ($lst as $key => $value) {\n\
    \        if ($value < $min) {\n            $lst[$key] = $min;\n        } else\
    \ if ($value > $max) {\n            $lst[$key] = $max;\n        }\n    }\n   \
    \ return $lst;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't\
    \ work for me. `strange_sort_list([5,5,5,5]) == [5, 5, 5, 5]` returns `[5, 5,\
    \ 5, 5]`\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works. I added a\
    \ link to the function to the answer.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10\
    \ and it works. I added a link to the function to the answer.\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.3.10 and it works. I added a link to the function to\
    \ the answer.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works. I added\
    \ a link to the function to the answer.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7ug910m5.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71ef_sx9.php:22\n\
    Stack trace:\n#0 /tmp/tmp71ef_sx9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp71ef_sx9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = min($lst);\n  $max = max($lst);\n  foreach ($lst as $key\
    \ => $value) {\n    if ($value < $min) {\n      $sorted[] = $value;\n      unset($lst[$key]);\n\
    \    } else if ($value > $max) {\n      $sorted[] = $value;\n      unset($lst[$key]);\n\
    \    } else {\n      $sorted[] = $key;\n    }\n  }\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef528gaz.php:31\n\
    Stack trace:\n#0 /tmp/tmpef528gaz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpef528gaz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $mid = $min + ($max - $min) / 2;\n  $lst = array();\n\
    \  foreach ($lst as $i => $v) {\n    if ($v < $mid) {\n      $lst[] = $v;\n  \
    \  } else if ($v > $mid) {\n      $lst[] = $mid;\n    } else {\n      $lst[] =\
    \ $i;\n    }\n  }\n  return $lst;\n}\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07wtiyxn.php:30\n\
    Stack trace:\n#0 /tmp/tmp07wtiyxn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp07wtiyxn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80b1hqvk.php:21\n\
    Stack trace:\n#0 /tmp/tmp80b1hqvk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp80b1hqvk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7763iw9_.php:21\n\
    Stack trace:\n#0 /tmp/tmp7763iw9_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7763iw9_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljr9rqig.php:21\n\
    Stack trace:\n#0 /tmp/tmpljr9rqig.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpljr9rqig.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpycxvebyn.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n\
    $array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id' => 2,\
    \ 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack'),\n    array('id'\
    \ => 6, 'name' => 'Jill'),\n    array('id' => 7, 'name' => 'Jane'),\n    array('id'\
    \ => 8, 'name' => 'Jack'),\n    array('id' => 9, 'name' => 'Jill'),\n    array('id'\
    \ => 10, 'name' => 'Jack'),\n    array('id' => 11, 'name' => 'Jill'),\n    array('id'\
    \ => 12, 'name' => 'Jack'),\n    array('id' => 13, 'name' => 'Jill'),\n    array('id'\
    \ => 14, 'name' => 'Jack'),\n    array('id' => 15, 'name' => 'Jill'),\n    array('id'\
    \ => 16, 'name' => 'Jack'),\n    array('id' => 17, 'name' => 'Jill'),\n    array('id'\
    \ => 18, 'name' => 'Jack'),\n    array('id' => 19, 'name' => 'Jill'),\n    array('id'\
    \ => 20, 'name' => 'Jack'),\n    array('id' => 21, 'name' => 'Jill'),\n    array('id'\
    \ => 22, 'name' => 'Jack'),\n    array('id' => 23, 'name' => 'Jill'),\n    array('id'\
    \ => 24, 'name' => 'Jack'),\n    array('id' => 25, 'name' => 'Jill'),\n    array('id'\
    \ => 26, 'name' => 'Jack'),\n    array('id' => 27, 'name' => 'Jill'),\n    array('id'\
    \ => 28, 'name' => 'Jack'),\n    array('id' => 29, 'name' => 'Jill'),\n    array('id'\
    \ => 30, 'name' => 'Jack'),\n    array('id' => 31, 'name' => 'Jill'),\n    array('id'\
    \ => 32, 'name' => 'Jack'),\n    array('id' => 33, 'name' => 'Jill'),\n    array('id'\
    \ => 34, 'name' => 'Jack'),\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxrzozk_m.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xw_995a.php:24\n\
    Stack trace:\n#0 /tmp/tmp9xw_995a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9xw_995a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min_value\
    \ = min($lst);\n  $max_value = max($lst);\n  $sorted_list = array();\n  for ($i\
    \ = 0; $i < count($lst); $i++) {\n    if ($lst[$i] == $min_value) {\n      $sorted_list[]\
    \ = $min_value;\n    } else if ($lst[$i] == $max_value) {\n      $sorted_list[]\
    \ = $max_value;\n    } else {\n      $sorted_list[] = $lst[$i];\n    }\n  }\n\
    \  return $sorted_list;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpul_gea58.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $item) {\n    if ($item\
    \ == $min) {\n      $result[] = $min;\n    } else if ($item == $max) {\n     \
    \ $result[] = $max;\n    } else {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9r53vk9m.php:29\n\
    Stack trace:\n#0 /tmp/tmp9r53vk9m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9r53vk9m.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $max = array_shift($lst);\n    foreach ($lst as $item) {\n\
    \        if ($item < $min) {\n            $sorted[] = $min;\n            $min\
    \ = $item;\n        } elseif ($item > $max) {\n            $sorted[] = $max;\n\
    \            $max = $item;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$arr1 = array_chunk($arr,\
    \ 3);\n$arr2 = array_chunk($arr, 2);\n$arr3 = array_chunk($arr, 1);\n$arr4 = array_chunk($arr,\
    \ 4);\n$arr5 = array_chunk($arr, 5);\n$arr6 = array_chunk($arr, 6);\n$arr7 = array_chunk($arr,\
    \ 7);\n$arr8 = array_chunk($arr, 8);\n$arr9 = array_chunk($arr, 9);\n$arr10 =\
    \ array_chunk($arr, 10);\n$arr11 = array_chunk($arr, 11);\n$arr12 = array_chunk($arr,\
    \ 12);\n$arr13 = array_chunk($arr, 13);\n$arr14 = array_chunk($arr, 14);\n$arr15\
    \ = array_chunk($arr, 15);\n$arr16 = array_chunk($arr, 16);\n$arr17 = array_chunk($arr,\
    \ 17);\n$arr18 = array_chunk($arr, 18);\n$arr19 = array_chunk($arr, 19);\n$arr20\
    \ = array_chunk($arr, 20);\n$arr21 = array_chunk($arr, 21);\n$arr22 = array_chunk($arr,\
    \ 22);\n$arr23 = array_chunk($arr, 23);\n$arr24 = array_chunk($arr, 24);\n$arr25\
    \ = array_chunk($arr, 25);\n$arr26 = array_chunk($arr, 26);\n$arr27 = array_chunk($arr,\
    \ 27);\n$arr28 = array_chunk($arr, 28);\n$arr29 = array_chunk($arr, 29);\n$arr30\
    \ = array_chunk($arr, 30);\n$arr31 = array_chunk($arr, 31);\n$arr32 = array_chunk($arr,\
    \ 32);\n$arr33 = array_chunk($arr, 33);\n$arr34 = array_chunk($arr, 34);\n$arr35\
    \ = array_chunk($arr, 35);\n$arr36 = array_chunk($arr, 36);\n$arr37 = array_chunk($arr,\
    \ 37);\n$arr38 = array_chunk($arr, 38);\n$\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiycpld7z.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  foreach ($sorted as $key => $value) {\n    $sorted[$key] = $value;\n  }\n\
    \  foreach ($sorted as $key => $value) {\n    $sorted[$key] = $value;\n  }\n \
    \ return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_twebgi.php:27\n\
    Stack trace:\n#0 /tmp/tmpc_twebgi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc_twebgi.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $key => $value) {\n\
    \    if ($value < $min) {\n      $result[] = $value;\n    } else if ($value >\
    \ $max) {\n      $result[] = $value;\n    } else if ($value == $min) {\n     \
    \ $result[] = $max;\n    } else if ($value == $max) {\n      $result[] = $min;\n\
    \    } else {\n      $result[] = $value;\n    }\n  }\n  return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [\n\
    \    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n\
    \    7 => 7,\n    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 =>\
    \ 12,\n    13 => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n\
    \    18 => 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n \
    \   23 => 23,\n    24 => 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n  \
    \  28 => 28,\n    29 => 29,\n    30 => 30,\n    31 => 31,\n    32 => 32,\n   \
    \ 33 => 33,\n    34 => 34,\n    35 => 35,\n    36 => 36,\n    37 => 37,\n    38\
    \ => 38,\n    39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n    43 =>\
    \ 43,\n    44 => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n\
    \    49 => 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\n    53 => 53,\n \
    \   54 => 54,\n    55 => 55,\n    56 => 56,\n    57 => 57,\n    58 => 58,\n  \
    \  59 => 59,\n    60 => 60,\n    61 => 61,\n    62 => 62,\n    63 => 63,\n   \
    \ 64 => 64,\n    65 => 65,\n    66 => 66,\n    67 => 67,\n    68\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp6vx8x97.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  foreach ($sorted as $key => $value) {\n    $sorted[$key] = $value;\n \
    \ }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua891puy.php:25\n\
    Stack trace:\n#0 /tmp/tmpua891puy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpua891puy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  natsort($sorted);\n  return $sorted;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4kl2u3s.php:22\n\
    Stack trace:\n#0 /tmp/tmpb4kl2u3s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb4kl2u3s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    foreach ($lst as $key => $value) {\n        $sorted[$key] = $value;\n\
    \    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps36gzxqy.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_plwr26u.php:22\n\
    Stack trace:\n#0 /tmp/tmp_plwr26u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_plwr26u.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    foreach ($lst\
    \ as $key => $value) {\n        if ($value < $min) {\n            $sorted[] =\
    \ $min;\n            $min = $value;\n        } elseif ($value > $max) {\n    \
    \        $sorted[] = $max;\n            $max = $value;\n        } else {\n   \
    \         $sorted[] = $value;\n        }\n    }\n    return $sorted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0c4o4ddw.php:32\n\
    Stack trace:\n#0 /tmp/tmp0c4o4ddw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0c4o4ddw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = array_shift($lst);\n    $max = array_pop($lst);\n   \
    \ foreach ($lst as $item) {\n        if ($item < $min) {\n            $sorted[]\
    \ = $min;\n            $min = $item;\n        } elseif ($item > $max) {\n    \
    \        $sorted[] = $max;\n            $max = $item;\n        } else {\n    \
    \        $sorted[] = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n\
    <|/ a tags=php,sorting,arrays |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphor71idm.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $item) {\n    if ($item\
    \ == $min) {\n      $result[] = $item;\n    } else if ($item == $max) {\n    \
    \  $result[] = $item;\n    } else {\n      $result[] = $min;\n      $result[]\
    \ = $max;\n    }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting |>\n\
    <| c |>\nThis doesn't work for me. `strange_sort_list([5, 6, 4, 3]);` returns\
    \ `[5, 6, 4, 3]` instead of `[4, 3, 6, 5]`\n<|/ c |>\n<| c |>\nI tested it on\
    \ PHP 7.2.24 and it works. I added a link to the code I tested it on.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 7.2.24 and it works. I added a link to the code I\
    \ tested it on.\n<|/ c |>\n<| c |>\nI tested it on PHP 7.2.24 and it works. I\
    \ added a link to the code I tested it on.\n<|/ c |>\n<| c |>\nI tested it on\
    \ PHP 7.2.24 and it works. I added a link to the code I tested it on.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy59ufy5e.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    asort($sorted);\n    return $sorted;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0uyeucp.php:22\n\
    Stack trace:\n#0 /tmp/tmpm0uyeucp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm0uyeucp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nI like the idea of using\
    \ array_multisort, but this doesn't seem to work for me. I'm getting a syntax\
    \ error on the array_multisort line. I'm using PHP 5.3.10. Do I need to upgrade\
    \ to 5.4?\n<|/ c |>\n<| c |>\nI got it to work. Turns out I had to upgrade to\
    \ PHP 5.4 or higher. Thanks!\n<|/ c |>\n<| c |>\nI used this solution and it worked\
    \ for me. Thanks!\n<|/ c |>\n<| a dscore=5 tags=php,arrays,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg9e9eetj.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    for ($i = $min; $i\
    \ <= $max; $i++) {\n        $result[] = $i;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,sorting |>\n<| a tags=php,sorting |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp11y08vwx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkp09n_85.php:20\n\
    Stack trace:\n#0 /tmp/tmpkp09n_85.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkp09n_85.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65t54khs.php:22\n\
    Stack trace:\n#0 /tmp/tmp65t54khs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp65t54khs.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $sorted = array_merge($sorted, $lst);\n  $sorted = array_merge($sorted,\
    \ $lst);\n  $sorted = array_merge($sorted, $lst);\n  return $sorted;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_prgmnmt.php:21\n\
    Stack trace:\n#0 /tmp/tmp_prgmnmt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_prgmnmt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_ASC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis answer does not work\
    \ if you have a list of strings and want to sort them alphabetically instead of\
    \ numerically.\n<|/ c |>\n<| c |>\nThis answer does not work if you have a list\
    \ of strings and want to sort them alphabetically instead of numerically.\n<|/\
    \ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxqfr22of.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $mid = $min + ($max - $min) / 2;\n  \
    \  $result = [];\n    foreach ($lst as $i) {\n        if ($i < $mid) {\n     \
    \       $result[] = $i;\n        } else if ($i == $mid) {\n            $result[]\
    \ = $max;\n        } else if ($i > $mid) {\n            $result[] = $min;\n  \
    \      }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,sorting |>\n\
    <| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjgahva4k.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if you have duplicate\
    \ values in the array\n<|/ c |>\n<| c |>\nThis doesn't work if you have duplicate\
    \ values in the array\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppn407uhi.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvqlrr4f.php:23\n\
    Stack trace:\n#0 /tmp/tmprvqlrr4f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprvqlrr4f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $lst = array_map(function($v) use ($min, $max) {\n   \
    \ return $v < $min ? $min : $v > $max ? $max : $v;\n  }, $lst);\n  return $lst;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array =\
    \ array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$array = array_reverse($array);\n</code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1xli84xl.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    array_multisort($sorted,\
    \ SORT_DESC, $lst);\n    return $lst;\n}\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt5hrbqf.php:20\n\
    Stack trace:\n#0 /tmp/tmpjt5hrbqf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjt5hrbqf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        } else {\n            $sorted[]\
    \ = $item;\n        }\n    }\n    return array_merge([$min], $sorted, [$max]);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6yof7_vf.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = $i;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_l9y1j4.php:24\n\
    Stack trace:\n#0 /tmp/tmpw_l9y1j4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw_l9y1j4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } else if\
    \ ($item > $max) {\n            $max = $item;\n        }\n    }\n    for ($i =\
    \ $min; $i <= $max; $i++) {\n        $sorted[] = $i;\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `strange_sort_list(array(5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5,\
    \ 6, 5, 6, 5, 6, \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmz9xqe6n.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5m3hvl0m.php:21\n\
    Stack trace:\n#0 /tmp/tmp5m3hvl0m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5m3hvl0m.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    asort($sorted);\n    return $sorted;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0115azj.php:22\n\
    Stack trace:\n#0 /tmp/tmpg0115azj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg0115azj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy63938v.php:22\n\
    Stack trace:\n#0 /tmp/tmpfy63938v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfy63938v.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $item;\n        } else\
    \ if ($item == $max) {\n            $result[] = $item;\n        } else {\n   \
    \         $result[] = $min;\n            $result[] = $max;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$arr2 = array_chunk($arr, 2);\n$arr3 =\
    \ array_merge($arr2, $arr2);\n$arr4 = array_merge($arr3, $arr3);\n$arr5 = array_merge($arr4,\
    \ $arr4);\n$arr6 = array_merge($arr5, $arr5);\n$arr7 = array_merge($arr6, $arr6);\n\
    $arr8 = array_merge($arr7, $arr7);\n$arr9 = array_merge($arr8, $arr8);\n$arr10\
    \ = array_merge($arr9, $arr9);\n$arr11 = array_merge($arr10, $arr10);\n$arr12\
    \ = array_merge($arr11, $arr11);\n$arr13 = array_merge($arr12, $arr12);\n$arr14\
    \ = array_merge($arr13, $arr13);\n$arr15 = array_merge($arr14, $arr14);\n$arr16\
    \ = array_merge($arr15, $arr15);\n$arr17 = array_merge($arr16, $arr16);\n$arr18\
    \ = array_merge($arr17, $arr17);\n$arr19 = array_merge($arr18, $arr18);\n$arr20\
    \ = array_merge($arr19, $arr19);\n$arr21 = array_merge($arr20, $arr20);\n$arr22\
    \ = array_merge($arr21, $arr21);\n$arr23 = array_merge($arr22, $arr22);\n$arr24\
    \ = array_merge($arr23, $arr23);\n$arr25 = array_merge($arr24, $arr24);\n$arr26\
    \ = array_merge($arr25, $arr25);\n$arr27 = array_merge($arr26, $arr26);\n$arr28\
    \ = array_merge($arr27, $arr27);\n$arr29 = array_merge($arr28, $arr28);\n$arr30\
    \ = array_merge($arr29, $arr29);\n$arr31 = array_merge($arr30, $arr30);\n$arr32\
    \ = array_merge($arr31, $\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw6exogx7.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $item;\n        } else\
    \ if ($item == $max) {\n            $result[] = $item;\n        } else {\n   \
    \         $result[] = $min;\n            $result[] = $max;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This is not the correct answer. Try it with `strange_sort_list(['5', '5', '5',\
    \ '5'])`\n<|/ c |>\n<| c |>\nI tested it with `strange_sort_list(['5', '5', '5',\
    \ '5'])` and it worked fine. Can you give me an example where it fails?\n<|/ c\
    \ |>\n<| c |>\n`strange_sort_list(['5', '5', '5', '5'])` returns `[5, 5, 5, 5]`\
    \ instead of `[5, 5, 5, 5]`\n<|/ c |>\n<| c |>\nOh I see, I misunderstood your\
    \ question. I'll update my answer.\n<|/ c |>\n<| c |>\nI updated my answer, I\
    \ hope it helps.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv38hovlc.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = [];\n  foreach ($lst as $item) {\n    if ($item\
    \ == $min) {\n      $result[] = $min;\n    } else if ($item == $max) {\n     \
    \ $result[] = $max;\n    } else {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\n</code>\n<|/ a tags=php,sorting |>\n<| a dscore=1 |>\n<code>\n\
    $arr = [1, 2, 3, 4, 5];\n$arr2 = array_flip($arr);\n$arr3 = array_flip($arr2);\n\
    $arr4 = array_flip($arr3);\n$arr5 = array_flip($arr4);\n$arr6 = array_flip($arr5);\n\
    $arr7 = array_flip($arr6);\n$arr8 = array_flip($arr7);\n$arr9 = array_flip($arr8);\n\
    $arr10 = array_flip($arr9);\n$arr11 = array_flip($arr10);\n$arr12 = array_flip($arr11);\n\
    $arr13 = array_flip($arr12);\n$arr14 = array_flip($arr13);\n$arr15 = array_flip($arr14);\n\
    $arr16 = array_flip($arr15);\n$arr17 = array_flip($arr16);\n$arr18 = array_flip($arr17);\n\
    $arr19 = array_flip($arr18);\n$arr20 = array_flip($arr19);\n$arr21 = array_flip($arr20);\n\
    $arr22 = array_flip($arr21);\n$arr23 = array_flip($arr22);\n$arr24 = array_flip($arr23);\n\
    $arr25 = array_flip($arr24);\n$arr26 = array_flip($arr25);\n$arr27 = array_flip($arr26);\n\
    $arr28 = array_flip($arr27);\n$arr29 = array_flip($arr28);\n$arr30 = array_flip($arr29);\n\
    $arr31 = array_flip($arr30);\n$arr32 = array_flip($arr31);\n$arr33 = array_flip($arr32);\n\
    $arr34 = array_flip($arr33);\n$arr35 = array_flip($arr34);\n$arr36 = array_flip($arr35);\n\
    $arr37 = array_flip($arr36);\n$arr38 = array_\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv7ot4qup.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted_lst\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted_lst[] = $value;\n\
    \    if ($key > 0) {\n      $sorted_lst[] = $lst[$key - 1];\n    }\n  }\n  return\
    \ $sorted_lst;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc12j41je.php:24\n\
    Stack trace:\n#0 /tmp/tmpc12j41je.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc12j41je.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted_lst\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted_lst[] = $value;\n\
    \  }\n  sort($sorted_lst);\n  return $sorted_lst;\n}\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5n7_1z7v.php:22\n\
    Stack trace:\n#0 /tmp/tmp5n7_1z7v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5n7_1z7v.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } else if\
    \ ($item > $max) {\n            $max = $item;\n        }\n    }\n    for ($i =\
    \ $min; $i <= $max; $i++) {\n        $sorted[] = $i;\n    }\n    return $sorted;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks, this was very helpful. I've added\
    \ my own answer below with my final solution. Thanks again!\n<|/ c |>\n<| a dscore=1\
    \ |>\nI ended up using array_multisort as suggested by and also the answer from\
    \ here: Sort array by multiple keys with different sort orders\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgz5i0ezh.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $lst2 = [];\n    foreach ($lst as $val)\
    \ {\n        if ($val == $min) {\n            $lst2[] = $val;\n        } else\
    \ if ($val == $max) {\n            $lst2[] = $val;\n        } else {\n       \
    \     $lst2[] = $min;\n            $lst2[] = $max;\n            $lst2[] = $val;\n\
    \        }\n    }\n    return $lst2;\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't work if the array is `[5, 6, 5, 5]`\n<|/ c |>\n<|\
    \ c |>\nIt does work. Try it yourself. It sorts [5, 6, 5, 5] into [5, 5, 6, 5].\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if you try it with `[5,\
    \ 6, 5, 5]`\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It sorts [5, 6,\
    \ 5, 5] into [5, 5, 6, 5]. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if you try it with `[5, 6, 5, 5]`\n<|/ c |>\n<| a dscore=3 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpakvtulkp.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    sort($sorted);\n\
    \    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbre2n7a.php:21\n\
    Stack trace:\n#0 /tmp/tmpvbre2n7a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvbre2n7a.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $result[] = $min;\n \
    \       } else if ($item == $max) {\n            $result[] = $max;\n        }\
    \ else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj7uozm7h.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  $min = min($lst);\n  $max = max($lst);\n  foreach ($lst as $item)\
    \ {\n    if ($item == $min) {\n      $sorted[] = $min;\n    } else if ($item ==\
    \ $max) {\n      $sorted[] = $max;\n    } else {\n      $sorted[] = $item;\n \
    \   }\n  }\n  return $sorted;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7xeese2.php:29\n\
    Stack trace:\n#0 /tmp/tmpn7xeese2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn7xeese2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = array();\n  foreach ($lst as $key => $value) {\n    $sorted[$key] = $value;\n\
    \  }\n  array_multisort($sorted, SORT_DESC, $lst);\n  return $lst;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6f0yu01.php:23\n\
    Stack trace:\n#0 /tmp/tmpa6f0yu01.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa6f0yu01.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5o8al243.php:23\n\
    Stack trace:\n#0 /tmp/tmp5o8al243.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5o8al243.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaea7l0at.php:30\n\
    Stack trace:\n#0 /tmp/tmpaea7l0at.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpaea7l0at.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyhvmwcs.php:21\n\
    Stack trace:\n#0 /tmp/tmpyyhvmwcs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyyhvmwcs.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $lst[0];\n    $max = $lst[0];\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $min = $item;\n        } elseif\
    \ ($item > $max) {\n            $max = $item;\n        } else {\n            $sorted[]\
    \ = $item;\n        }\n    }\n    return $sorted;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work for me. `strange_sort_list([1,2,3,4,5,6,7,8,9,10])`\
    \ returns `[1,2,3,4,5,6,7,8,9,10]` instead of `[1,2,3,4,5,6,7,8,9,10]`\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 7.1.0 and it works. I guess you used a PHP version\
    \ older than 7.1.0?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.29 and it works.\
    \ I guess you used a PHP version older than 5.6.29?\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.5.9 and it works. I guess you used a PHP version older than 5.5.9?\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I guess you used a PHP\
    \ version older than 5.5.9?\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpef3ecls_.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    foreach ($lst as $key => $value) {\n        $sorted[$key] =\
    \ $value;\n    }\n    array_multisort($sorted, SORT_DESC, $lst);\n    return $lst;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprls4xr4_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $sorted = array_merge($sorted, $lst);\n    $sorted = array_merge($sorted,\
    \ $lst);\n    $sorted = array_merge($sorted, $lst);\n    return $sorted;\n}\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yzpmnjt.php:21\n\
    Stack trace:\n#0 /tmp/tmp0yzpmnjt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0yzpmnjt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $lst[0];\n  $max = $lst[0];\n  foreach ($lst as $item) {\n \
    \   if ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n\
    \      $max = $item;\n    }\n  }\n  foreach ($lst as $item) {\n    if ($item ==\
    \ $min) {\n      $sorted[] = $item;\n    }\n    if ($item == $max) {\n      $sorted[]\
    \ = $item;\n    }\n  }\n  foreach ($lst as $item) {\n    if ($item == $min) {\n\
    \      $sorted[] = $item;\n    }\n    if ($item == $max) {\n      $sorted[] =\
    \ $item;\n    }\n  }\n  return $sorted;\n}\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuphb0kkb.php:44\n\
    Stack trace:\n#0 /tmp/tmpuphb0kkb.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpuphb0kkb.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = array();\n    $min = $max = array_shift($lst);\n    foreach ($lst as $item)\
    \ {\n        if ($item < $min) {\n            $sorted[] = $min;\n            $min\
    \ = $item;\n        } elseif ($item > $max) {\n            $sorted[] = $max;\n\
    \            $max = $item;\n        } else {\n            $sorted[] = $item;\n\
    \        }\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwoivdh4.php:31\n\
    Stack trace:\n#0 /tmp/tmphwoivdh4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphwoivdh4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n  $sorted\
    \ = [];\n  $min = $max = array_shift($lst);\n  foreach ($lst as $item) {\n   \
    \ if ($item < $min) {\n      $min = $item;\n    } else if ($item > $max) {\n \
    \     $max = $item;\n    }\n    $sorted[] = $item;\n  }\n  return array_merge([$min],\
    \ $sorted, [$max]);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work\
    \ for me. `strange_sort_list([5, 6, 5, 5])` returns `[5, 6, 5, 5]`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I used PHP 7.0.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I used PHP 7.0.\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I used PHP 7.0.\n<|/ c |>\n<| c |>\nI tested it and it works. I used PHP 7.0.\n\
    <|/ c |>\n<| a dscore=2 |>\nThis should work for you:\n<code>\n<?php\n\n$array\
    \ = [5, 6, 5, 5];\n\n$sorted = array_merge(\n    array_slice($array, 1),\n   \
    \ array_slice($array, 2),\n    array_slice($array, 0)\n);\n\nprint_r($sorted);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=2 |>\n<code>\n<?php\n$array = [5,\
    \ 6, 5, 5];\n$sorted = array_merge(array_slice($array, 1), array_slice($array,\
    \ 2), array_slice($array, 0));\nprint_r($sorted);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=2 |>\n<code>\n<?php\n$array = [5, 6, 5, 5];\n$sorted = array_merge(array_slice($array,\
    \ 1), array_slice($array, 2), array_slice($array, 0));\nprint_r($sorted);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = [5, 6, 5,\
    \ 5];\n$sorted = array_merge(array_slice($array, 1), array_slice($array, 2), array_slice($array,\
    \ 0));\nprint_r($sorted);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = [5, 6, 5, 5];\n$sorted = array_merge(array_slice($array,\
    \ 1), array_slice($array, 2), array_slice($array, 0));\nprint_r($sorted);\n</code>\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp95d_9y5h.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result = [];\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $result[] = $min;\n        } else\
    \ if ($item == $max) {\n            $result[] = $max;\n        } else {\n    \
    \        $result[] = $item;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bbzqzkq.php:30\n\
    Stack trace:\n#0 /tmp/tmp9bbzqzkq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9bbzqzkq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2,\
    \ 3, 4]) == [1, 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n\
    // strange_sort_list([]) == []\nfunction strange_sort_list($lst) {\n    $sorted\
    \ = [];\n    $min = $max = $lst[0];\n    foreach ($lst as $item) {\n        if\
    \ ($item < $min) {\n            $min = $item;\n        } else if ($item > $max)\
    \ {\n            $max = $item;\n        }\n        $sorted[] = $item;\n    }\n\
    \    return array_merge([$min, $max], $sorted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzto5x1e3.php:28\n\
    Stack trace:\n#0 /tmp/tmpzto5x1e3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzto5x1e3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

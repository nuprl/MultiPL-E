name: HumanEval_40_triples_sum_to_zero
language: php
results:
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoe1t9ph1.php:30\n\
    Stack trace:\n#0 /tmp/tmpoe1t9ph1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoe1t9ph1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum < 0) {\n        return false;\n    }\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n \
    \       if ($sum < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8niv6j9.php:39\n\
    Stack trace:\n#0 /tmp/tmpz8niv6j9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpz8niv6j9.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17pw8mew.php:30\n\
    Stack trace:\n#0 /tmp/tmp17pw8mew.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp17pw8mew.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh3ujmw3.php:30\n\
    Stack trace:\n#0 /tmp/tmphh3ujmw3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphh3ujmw3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfqieh0y.php:30\n\
    Stack trace:\n#0 /tmp/tmpmfqieh0y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmfqieh0y.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwki67uzy.php:30\n\
    Stack trace:\n#0 /tmp/tmpwki67uzy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwki67uzy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ < 0) return false;\n    $sum = 0;\n    foreach ($l as $n) {\n        $sum +=\
    \ $n;\n    }\n    if ($sum < 0) return false;\n    $sum = 0;\n    foreach ($l\
    \ as $n) {\n        $sum += $n;\n    }\n    if ($sum == 0) return true;\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibktpap2.php:40\n\
    Stack trace:\n#0 /tmp/tmpibktpap2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpibktpap2.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $triples = array();\n    foreach ($l as $n) {\n        $sum\
    \ += $n;\n        $triples[] = $sum;\n    }\n    return count(array_unique($triples))\
    \ == 3;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5ff3nza.php:30\n\
    Stack trace:\n#0 /tmp/tmpi5ff3nza.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi5ff3nza.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjfl1cbk.php:30\n\
    Stack trace:\n#0 /tmp/tmprjfl1cbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprjfl1cbk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjlni73m.php:30\n\
    Stack trace:\n#0 /tmp/tmphjlni73m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphjlni73m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0)\n        return true;\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5c9xyf_.php:32\n\
    Stack trace:\n#0 /tmp/tmpt5c9xyf_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpt5c9xyf_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo904ut2.php:30\n\
    Stack trace:\n#0 /tmp/tmpoo904ut2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoo904ut2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfass2_a8.php:30\n\
    Stack trace:\n#0 /tmp/tmpfass2_a8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfass2_a8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgawrqneg.php:30\n\
    Stack trace:\n#0 /tmp/tmpgawrqneg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgawrqneg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp746_31y4.php:28\n\
    Stack trace:\n#0 /tmp/tmp746_31y4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp746_31y4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6milw2ki.php:30\n\
    Stack trace:\n#0 /tmp/tmp6milw2ki.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6milw2ki.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0)\n        return true;\n    $sum -= $l[0];\n    $sum -= $l[1];\n    $sum\
    \ -= $l[2];\n    if ($sum == 0)\n        return true;\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1r8_upic.php:35\n\
    Stack trace:\n#0 /tmp/tmp1r8_upic.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1r8_upic.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30_yukkz.php:30\n\
    Stack trace:\n#0 /tmp/tmp30_yukkz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp30_yukkz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyhc6yji.php:30\n\
    Stack trace:\n#0 /tmp/tmpvyhc6yji.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvyhc6yji.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    $sum -= $sum % 3;\n    return ($sum === 0);\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyg2d4dn8.php:32\n\
    Stack trace:\n#0 /tmp/tmpyg2d4dn8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyg2d4dn8.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9uqygxw.php:30\n\
    Stack trace:\n#0 /tmp/tmpk9uqygxw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk9uqygxw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wd4i2u8.php:30\n\
    Stack trace:\n#0 /tmp/tmp7wd4i2u8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7wd4i2u8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c1mijo9.php:30\n\
    Stack trace:\n#0 /tmp/tmp8c1mijo9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8c1mijo9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) return false;\n    $sum -= $l[0];\n    $sum -= $l[1];\n    $sum -= $l[2];\n\
    \    return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9iubsl1c.php:32\n\
    Stack trace:\n#0 /tmp/tmp9iubsl1c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9iubsl1c.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo9edd4w.php:28\n\
    Stack trace:\n#0 /tmp/tmpzo9edd4w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzo9edd4w.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3k2uk5ar.php:30\n\
    Stack trace:\n#0 /tmp/tmp3k2uk5ar.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3k2uk5ar.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n        if ($sum < 0) {\n            return false;\n    \
    \    }\n    }\n    return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_bz479h.php:34\n\
    Stack trace:\n#0 /tmp/tmpe_bz479h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe_bz479h.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_mg9lun.php:30\n\
    Stack trace:\n#0 /tmp/tmpt_mg9lun.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt_mg9lun.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  if ($sum == 0) return false;\n  $sum -= 1;\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $sum += $l[$i];\n    if ($sum == 0) return true;\n  }\n \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5w0awi5z.php:37\n\
    Stack trace:\n#0 /tmp/tmp5w0awi5z.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5w0awi5z.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mdzp6ac.php:30\n\
    Stack trace:\n#0 /tmp/tmp1mdzp6ac.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1mdzp6ac.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return ($sum % 3\
    \ == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6mbyzfz.php:28\n\
    Stack trace:\n#0 /tmp/tmps6mbyzfz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps6mbyzfz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdh05i0e.php:31\n\
    Stack trace:\n#0 /tmp/tmpwdh05i0e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwdh05i0e.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpff0b6tzb.php:28\n\
    Stack trace:\n#0 /tmp/tmpff0b6tzb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpff0b6tzb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02szqrd9.php:30\n\
    Stack trace:\n#0 /tmp/tmp02szqrd9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp02szqrd9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tsphmvb.php:30\n\
    Stack trace:\n#0 /tmp/tmp_tsphmvb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_tsphmvb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $sum -= $l[0];\n    $sum -= $l[1];\n\
    \    $sum -= $l[2];\n    if ($sum == 0) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5duoau6.php:37\n\
    Stack trace:\n#0 /tmp/tmpx5duoau6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpx5duoau6.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn05mr0qs.php:30\n\
    Stack trace:\n#0 /tmp/tmpn05mr0qs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn05mr0qs.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprotydcm0.php:30\n\
    Stack trace:\n#0 /tmp/tmprotydcm0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprotydcm0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn_qryia.php:30\n\
    Stack trace:\n#0 /tmp/tmpdn_qryia.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdn_qryia.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcem55g2x.php:28\n\
    Stack trace:\n#0 /tmp/tmpcem55g2x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcem55g2x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum % 3 != 0) {\n        return false;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n\
    \    }\n    if ($sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rkrjjty.php:41\n\
    Stack trace:\n#0 /tmp/tmp6rkrjjty.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6rkrjjty.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxksfwbwe.php:30\n\
    Stack trace:\n#0 /tmp/tmpxksfwbwe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxksfwbwe.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr759sefa.php:30\n\
    Stack trace:\n#0 /tmp/tmpr759sefa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr759sefa.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return ($sum % 3\
    \ == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_8tfsa5.php:28\n\
    Stack trace:\n#0 /tmp/tmpq_8tfsa5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq_8tfsa5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr93ke01g.php:30\n\
    Stack trace:\n#0 /tmp/tmpr93ke01g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr93ke01g.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj__0_4xd.php:30\n\
    Stack trace:\n#0 /tmp/tmpj__0_4xd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj__0_4xd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum === 0) {\n        return true;\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsbd3yrf.php:34\n\
    Stack trace:\n#0 /tmp/tmplsbd3yrf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplsbd3yrf.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcm45i8t.php:30\n\
    Stack trace:\n#0 /tmp/tmppcm45i8t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppcm45i8t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpes4czj4o.php:30\n\
    Stack trace:\n#0 /tmp/tmpes4czj4o.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpes4czj4o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4v9k998.php:28\n\
    Stack trace:\n#0 /tmp/tmpa4v9k998.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa4v9k998.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyldq1u0x.php:30\n\
    Stack trace:\n#0 /tmp/tmpyldq1u0x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyldq1u0x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplh17xha3.php:30\n\
    Stack trace:\n#0 /tmp/tmplh17xha3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplh17xha3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwdnjiy7.php:30\n\
    Stack trace:\n#0 /tmp/tmpfwdnjiy7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfwdnjiy7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ < 0) return false;\n    $count = 0;\n    foreach ($l as $e) {\n        if ($e\
    \ == 0) $count++;\n        if ($count == 3) return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt37l3wht.php:36\n\
    Stack trace:\n#0 /tmp/tmpt37l3wht.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpt37l3wht.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum == 0) return false;\n    $sum -= $l[0];\n\
    \    $sum -= $l[1];\n    $sum -= $l[2];\n    return ($sum == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6t3ng72.php:33\n\
    Stack trace:\n#0 /tmp/tmpa6t3ng72.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa6t3ng72.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpvg6bki.php:30\n\
    Stack trace:\n#0 /tmp/tmpbpvg6bki.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbpvg6bki.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6knd8w6j.php:30\n\
    Stack trace:\n#0 /tmp/tmp6knd8w6j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6knd8w6j.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ % 3 === 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3iievydh.php:31\n\
    Stack trace:\n#0 /tmp/tmp3iievydh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3iievydh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1743u3vb.php:29\n\
    Stack trace:\n#0 /tmp/tmp1743u3vb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1743u3vb.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum < 0) {\n        $sum = 0;\n    }\n  \
    \  $n2 = $n - 1;\n    for ($i = 0; $i < $n2; $i++) {\n        $sum += $l[$i];\n\
    \    }\n    if ($sum < 0) {\n        $sum = 0;\n    }\n    return ($sum == 0);\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvvhao4_.php:41\n\
    Stack trace:\n#0 /tmp/tmpyvvhao4_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpyvvhao4_.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnyve1yt.php:30\n\
    Stack trace:\n#0 /tmp/tmpsnyve1yt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsnyve1yt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx59vzv6.php:30\n\
    Stack trace:\n#0 /tmp/tmppx59vzv6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppx59vzv6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajvdy0rg.php:30\n\
    Stack trace:\n#0 /tmp/tmpajvdy0rg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpajvdy0rg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnf3t04k.php:30\n\
    Stack trace:\n#0 /tmp/tmpbnf3t04k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbnf3t04k.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return $sum == 0;\n}\n\nfunction candidate(...$args) {\n   \
    \ return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2znf6xue.php:31\n\
    Stack trace:\n#0 /tmp/tmp2znf6xue.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2znf6xue.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz8plcl1.php:30\n\
    Stack trace:\n#0 /tmp/tmpkz8plcl1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkz8plcl1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum == 0)\n        return false;\n    $sum\
    \ -= $l[0];\n    $sum -= $l[1];\n    $sum -= $l[2];\n    if ($sum == 0)\n    \
    \    return true;\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41u4wvdf.php:36\n\
    Stack trace:\n#0 /tmp/tmp41u4wvdf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp41u4wvdf.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, 5, -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgs4idn2.php:37\n\
    Stack trace:\n#0 /tmp/tmpsgs4idn2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsgs4idn2.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0)\n        return true;\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkd2e0qry.php:32\n\
    Stack trace:\n#0 /tmp/tmpkd2e0qry.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkd2e0qry.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohqfeckz.php:30\n\
    Stack trace:\n#0 /tmp/tmpohqfeckz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpohqfeckz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z13ngx3.php:30\n\
    Stack trace:\n#0 /tmp/tmp3z13ngx3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3z13ngx3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03u6sup9.php:30\n\
    Stack trace:\n#0 /tmp/tmp03u6sup9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp03u6sup9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum < 0) {\n        return false;\n    }\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n \
    \       if ($sum < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gzgq76w.php:39\n\
    Stack trace:\n#0 /tmp/tmp0gzgq76w.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp0gzgq76w.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbk90zil5.php:28\n\
    Stack trace:\n#0 /tmp/tmpbk90zil5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbk90zil5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns1lfgd9.php:30\n\
    Stack trace:\n#0 /tmp/tmpns1lfgd9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpns1lfgd9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6_wb7ur.php:30\n\
    Stack trace:\n#0 /tmp/tmpe6_wb7ur.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe6_wb7ur.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrrbgf1e.php:30\n\
    Stack trace:\n#0 /tmp/tmpqrrbgf1e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqrrbgf1e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph49op9vy.php:30\n\
    Stack trace:\n#0 /tmp/tmph49op9vy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph49op9vy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhrz17kj.php:30\n\
    Stack trace:\n#0 /tmp/tmpxhrz17kj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxhrz17kj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96095r1a.php:30\n\
    Stack trace:\n#0 /tmp/tmp96095r1a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp96095r1a.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return ($sum % 3\
    \ == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsj109dk.php:28\n\
    Stack trace:\n#0 /tmp/tmpcsj109dk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcsj109dk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v3pktqj.php:30\n\
    Stack trace:\n#0 /tmp/tmp3v3pktqj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3v3pktqj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgx8p__p.php:28\n\
    Stack trace:\n#0 /tmp/tmpwgx8p__p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwgx8p__p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65kcqsgy.php:30\n\
    Stack trace:\n#0 /tmp/tmp65kcqsgy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp65kcqsgy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz69rujtf.php:31\n\
    Stack trace:\n#0 /tmp/tmpz69rujtf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz69rujtf.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpa14iyf.php:30\n\
    Stack trace:\n#0 /tmp/tmpfpa14iyf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfpa14iyf.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $count = 0;\n    $sum = 0;\n    foreach\
    \ ($l as $n) {\n        $sum += $n;\n        if ($sum == 0) {\n            $count++;\n\
    \        }\n    }\n    return $count == 3;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47lg7ji4.php:41\n\
    Stack trace:\n#0 /tmp/tmp47lg7ji4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp47lg7ji4.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvwpl2bl4.php:30\n\
    Stack trace:\n#0 /tmp/tmpvwpl2bl4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvwpl2bl4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrm_j0ai.php:30\n\
    Stack trace:\n#0 /tmp/tmpqrm_j0ai.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqrm_j0ai.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj45t1bex.php:30\n\
    Stack trace:\n#0 /tmp/tmpj45t1bex.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj45t1bex.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplus25wcg.php:30\n\
    Stack trace:\n#0 /tmp/tmplus25wcg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplus25wcg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pxrilzg.php:30\n\
    Stack trace:\n#0 /tmp/tmp_pxrilzg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pxrilzg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ef4ufg4.php:30\n\
    Stack trace:\n#0 /tmp/tmp7ef4ufg4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ef4ufg4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr990kas7.php:30\n\
    Stack trace:\n#0 /tmp/tmpr990kas7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr990kas7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv02c2i56.php:30\n\
    Stack trace:\n#0 /tmp/tmpv02c2i56.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv02c2i56.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for($i = 0; $i < $n; $i++) {\n    $sum += $l[$i];\n\
    \  }\n  $sum -= $sum % 3;\n  return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoaj8yw61.php:32\n\
    Stack trace:\n#0 /tmp/tmpoaj8yw61.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoaj8yw61.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ly79v38.php:30\n\
    Stack trace:\n#0 /tmp/tmp0ly79v38.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0ly79v38.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ajznzfa.php:29\n\
    Stack trace:\n#0 /tmp/tmp0ajznzfa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0ajznzfa.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6gnfufx.php:29\n\
    Stack trace:\n#0 /tmp/tmpw6gnfufx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw6gnfufx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2alp2866.php:30\n\
    Stack trace:\n#0 /tmp/tmp2alp2866.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2alp2866.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ < 0) {\n        return false;\n    }\n    $sum = 0;\n    foreach ($l as $n)\
    \ {\n        $sum += $n;\n    }\n    if ($sum > 0) {\n        return false;\n\
    \    }\n    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n\
    \    if ($sum == 0) {\n        return true;\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1zkf7lv.php:46\n\
    Stack trace:\n#0 /tmp/tmpm1zkf7lv.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpm1zkf7lv.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1b5jusd.php:30\n\
    Stack trace:\n#0 /tmp/tmpy1b5jusd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy1b5jusd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmex_1k2n.php:30\n\
    Stack trace:\n#0 /tmp/tmpmex_1k2n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmex_1k2n.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  $sum -= $sum % 3;\n  return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48nvh5mg.php:32\n\
    Stack trace:\n#0 /tmp/tmp48nvh5mg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp48nvh5mg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9ljq9u4.php:30\n\
    Stack trace:\n#0 /tmp/tmps9ljq9u4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps9ljq9u4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi90vums4.php:30\n\
    Stack trace:\n#0 /tmp/tmpi90vums4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi90vums4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltifgchj.php:30\n\
    Stack trace:\n#0 /tmp/tmpltifgchj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpltifgchj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum < 0) {\n        return false;\n    }\n\
    \    $sum2 = $sum * $sum;\n    for ($i = 0; $i < $n; $i++) {\n        $sum2 -=\
    \ $l[$i] * $l[$i];\n    }\n    return $sum2 <= 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt231dv1f.php:41\n\
    Stack trace:\n#0 /tmp/tmpt231dv1f.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpt231dv1f.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43koc65t.php:30\n\
    Stack trace:\n#0 /tmp/tmp43koc65t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp43koc65t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcc6zsyv.php:30\n\
    Stack trace:\n#0 /tmp/tmpbcc6zsyv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbcc6zsyv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhvqk7rn.php:28\n\
    Stack trace:\n#0 /tmp/tmpwhvqk7rn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwhvqk7rn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02bz0znu.php:28\n\
    Stack trace:\n#0 /tmp/tmp02bz0znu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp02bz0znu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_u0ez5e.php:30\n\
    Stack trace:\n#0 /tmp/tmpi_u0ez5e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi_u0ez5e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_wotat6.php:30\n\
    Stack trace:\n#0 /tmp/tmpv_wotat6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv_wotat6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx1sb0na.php:30\n\
    Stack trace:\n#0 /tmp/tmpmx1sb0na.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmx1sb0na.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64_lsli_.php:30\n\
    Stack trace:\n#0 /tmp/tmp64_lsli_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp64_lsli_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqovdakoh.php:30\n\
    Stack trace:\n#0 /tmp/tmpqovdakoh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqovdakoh.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return ($sum % 3\
    \ == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cid9h_l.php:28\n\
    Stack trace:\n#0 /tmp/tmp6cid9h_l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6cid9h_l.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6vozc7f.php:30\n\
    Stack trace:\n#0 /tmp/tmpe6vozc7f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe6vozc7f.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjiu1bio4.php:30\n\
    Stack trace:\n#0 /tmp/tmpjiu1bio4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjiu1bio4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqpbae2a.php:30\n\
    Stack trace:\n#0 /tmp/tmpcqpbae2a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcqpbae2a.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bewdw89.php:30\n\
    Stack trace:\n#0 /tmp/tmp2bewdw89.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2bewdw89.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hvg2__j.php:30\n\
    Stack trace:\n#0 /tmp/tmp2hvg2__j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2hvg2__j.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlgrzu8r.php:30\n\
    Stack trace:\n#0 /tmp/tmpxlgrzu8r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxlgrzu8r.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0vks7ld.php:30\n\
    Stack trace:\n#0 /tmp/tmpl0vks7ld.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl0vks7ld.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $count = 0;\n    foreach ($l as $e)\
    \ {\n        if ($e == 0) {\n            $count++;\n        }\n    }\n    if ($count\
    \ == 3) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwu33nst9.php:42\n\
    Stack trace:\n#0 /tmp/tmpwu33nst9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwu33nst9.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, 5, -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzudp0f8.php:37\n\
    Stack trace:\n#0 /tmp/tmpnzudp0f8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnzudp0f8.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ < 0) {\n        return false;\n    }\n    $count = 0;\n    foreach ($l as $e)\
    \ {\n        if ($e != 0) {\n            $count++;\n        }\n    }\n    return\
    \ ($count == 3);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ioxwk6p.php:37\n\
    Stack trace:\n#0 /tmp/tmp9ioxwk6p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9ioxwk6p.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwabs7et5.php:30\n\
    Stack trace:\n#0 /tmp/tmpwabs7et5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwabs7et5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgy10xnk.php:28\n\
    Stack trace:\n#0 /tmp/tmpdgy10xnk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdgy10xnk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return ($n == 3) && ($sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsbgk57j.php:34\n\
    Stack trace:\n#0 /tmp/tmpxsbgk57j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxsbgk57j.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  if ($sum == 0) {\n    return true;\n  }\n  $sum -= $l[0];\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $sum += $l[$i];\n    if ($sum < 0) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgl42u4v.php:39\n\
    Stack trace:\n#0 /tmp/tmphgl42u4v.php(50): test()\n#1 {main}\n  thrown in /tmp/tmphgl42u4v.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0)\n        return true;\n    else\n        return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32gj4329.php:33\n\
    Stack trace:\n#0 /tmp/tmp32gj4329.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp32gj4329.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) return false;\n    $sum -= $l[0];\n    $sum -= $l[1];\n    $sum -= $l[2];\n\
    \    return ($sum == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzehpi0q2.php:32\n\
    Stack trace:\n#0 /tmp/tmpzehpi0q2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzehpi0q2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjk7unqi.php:30\n\
    Stack trace:\n#0 /tmp/tmptjk7unqi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptjk7unqi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return ($n == 3 && $sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2f4_nmm.php:34\n\
    Stack trace:\n#0 /tmp/tmpk2f4_nmm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk2f4_nmm.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbsrxnr21.php:30\n\
    Stack trace:\n#0 /tmp/tmpbsrxnr21.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbsrxnr21.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2199z4_.php:29\n\
    Stack trace:\n#0 /tmp/tmpi2199z4_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi2199z4_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kg0nsx9.php:30\n\
    Stack trace:\n#0 /tmp/tmp1kg0nsx9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1kg0nsx9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtp1nc48.php:30\n\
    Stack trace:\n#0 /tmp/tmpxtp1nc48.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxtp1nc48.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ === 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa95s83bn.php:33\n\
    Stack trace:\n#0 /tmp/tmpa95s83bn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa95s83bn.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) return false;\n    $count = 1;\n    foreach ($l as $e) {\n        if ($e\
    \ != 0) {\n            $count += $e / $sum;\n        }\n    }\n    return $count\
    \ == 3;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod7ll2pq.php:37\n\
    Stack trace:\n#0 /tmp/tmpod7ll2pq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpod7ll2pq.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ === 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0cpst8u.php:33\n\
    Stack trace:\n#0 /tmp/tmpd0cpst8u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpd0cpst8u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $found = false;\n    foreach ($l as\
    \ $e) {\n        if ($sum - $e == 0) {\n            $found = true;\n         \
    \   break;\n        }\n    }\n    return $found;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0ya9sx5.php:43\n\
    Stack trace:\n#0 /tmp/tmps0ya9sx5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmps0ya9sx5.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ % 3 != 0) {\n        return false;\n    }\n    $count = 0;\n    foreach ($l\
    \ as $n) {\n        if ($n == 0) {\n            $count++;\n        }\n    }\n\
    \    return $count == 3;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptoljohsa.php:39\n\
    Stack trace:\n#0 /tmp/tmptoljohsa.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptoljohsa.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp350i5lmi.php:30\n\
    Stack trace:\n#0 /tmp/tmp350i5lmi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp350i5lmi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    if ($sum\
    \ == 0) return false;\n    $count = 0;\n    $found = false;\n    foreach ($l as\
    \ $e) {\n        if ($e == 0) {\n            $found = true;\n        } else {\n\
    \            $count += $e;\n        }\n        if ($count == 3) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmo0ecey.php:43\n\
    Stack trace:\n#0 /tmp/tmpbmo0ecey.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbmo0ecey.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktq9hcnq.php:30\n\
    Stack trace:\n#0 /tmp/tmpktq9hcnq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpktq9hcnq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpje54mfa9.php:28\n\
    Stack trace:\n#0 /tmp/tmpje54mfa9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpje54mfa9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nqoym5y.php:30\n\
    Stack trace:\n#0 /tmp/tmp5nqoym5y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5nqoym5y.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft9934a1.php:30\n\
    Stack trace:\n#0 /tmp/tmpft9934a1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpft9934a1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5gmhkmb.php:30\n\
    Stack trace:\n#0 /tmp/tmpx5gmhkmb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx5gmhkmb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7vcv2ht.php:30\n\
    Stack trace:\n#0 /tmp/tmpp7vcv2ht.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp7vcv2ht.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gzi_eah.php:28\n\
    Stack trace:\n#0 /tmp/tmp6gzi_eah.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6gzi_eah.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  $sum -= $sum % 3;\n  return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlfbl9zf.php:32\n\
    Stack trace:\n#0 /tmp/tmpxlfbl9zf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxlfbl9zf.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwagh20zq.php:30\n\
    Stack trace:\n#0 /tmp/tmpwagh20zq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwagh20zq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h_xzwoi.php:28\n\
    Stack trace:\n#0 /tmp/tmp1h_xzwoi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1h_xzwoi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jmgw4p3.php:30\n\
    Stack trace:\n#0 /tmp/tmp_jmgw4p3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_jmgw4p3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl875mdt1.php:30\n\
    Stack trace:\n#0 /tmp/tmpl875mdt1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl875mdt1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  if ($sum == 0) return\
    \ false;\n  $count = 0;\n  $last = $sum;\n  foreach ($l as $e) {\n    if ($e ==\
    \ 0) {\n      $count++;\n      if ($count == 3) {\n        return true;\n    \
    \  }\n    }\n    $last = $e;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp573gyjx4.php:42\n\
    Stack trace:\n#0 /tmp/tmp573gyjx4.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp573gyjx4.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbc3e3cgb.php:28\n\
    Stack trace:\n#0 /tmp/tmpbc3e3cgb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbc3e3cgb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum == 0) {\n        return true;\n    }\n\
    \    $sum -= $l[0];\n    $sum -= $l[1];\n    $sum -= $l[2];\n    if ($sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8ugd71h.php:38\n\
    Stack trace:\n#0 /tmp/tmpv8ugd71h.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpv8ugd71h.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwd6yey.php:28\n\
    Stack trace:\n#0 /tmp/tmpabwd6yey.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpabwd6yey.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn3x9oio.php:28\n\
    Stack trace:\n#0 /tmp/tmpfn3x9oio.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfn3x9oio.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4hn9hxw.php:30\n\
    Stack trace:\n#0 /tmp/tmpg4hn9hxw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg4hn9hxw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1216bnz8.php:30\n\
    Stack trace:\n#0 /tmp/tmp1216bnz8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1216bnz8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0)\n        return true;\n    else\n        return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4zdcbj9.php:33\n\
    Stack trace:\n#0 /tmp/tmpi4zdcbj9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi4zdcbj9.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    return $sum == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwfhwd10.php:31\n\
    Stack trace:\n#0 /tmp/tmprwfhwd10.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprwfhwd10.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc61oe39w.php:30\n\
    Stack trace:\n#0 /tmp/tmpc61oe39w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc61oe39w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dawu1t7.php:28\n\
    Stack trace:\n#0 /tmp/tmp4dawu1t7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4dawu1t7.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan6znjyx.php:30\n\
    Stack trace:\n#0 /tmp/tmpan6znjyx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpan6znjyx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n    }\n    if ($sum < 0) {\n        $sum = 0;\n    }\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        $sum += $l[$i];\n\
    \        if ($sum < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_rtye0c.php:39\n\
    Stack trace:\n#0 /tmp/tmpd_rtye0c.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpd_rtye0c.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ < 0) {\n        return false;\n    }\n    $count = 0;\n    foreach ($l as $n)\
    \ {\n        if ($n == 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count == 3;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyctfqhn.php:39\n\
    Stack trace:\n#0 /tmp/tmpvyctfqhn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvyctfqhn.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ % 3 === 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc97g3okb.php:31\n\
    Stack trace:\n#0 /tmp/tmpc97g3okb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc97g3okb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $l = array_filter($l);\n  foreach ($l as $e) {\n    $sum += $e;\n\
    \  }\n  return $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3yrjfb6.php:31\n\
    Stack trace:\n#0 /tmp/tmpg3yrjfb6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg3yrjfb6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yi5oeq4.php:30\n\
    Stack trace:\n#0 /tmp/tmp9yi5oeq4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9yi5oeq4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjntuple.php:30\n\
    Stack trace:\n#0 /tmp/tmprjntuple.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprjntuple.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cqdcnbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp9cqdcnbo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9cqdcnbo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsj_pqq1c.php:30\n\
    Stack trace:\n#0 /tmp/tmpsj_pqq1c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsj_pqq1c.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dzhpld9.php:30\n\
    Stack trace:\n#0 /tmp/tmp5dzhpld9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5dzhpld9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67cfy_wh.php:30\n\
    Stack trace:\n#0 /tmp/tmp67cfy_wh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp67cfy_wh.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70b2kj9f.php:30\n\
    Stack trace:\n#0 /tmp/tmp70b2kj9f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp70b2kj9f.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  if ($sum == 0)\n\
    \    return false;\n  $sum -= $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n\
    \    $sum += $l[$i];\n    if ($sum == 0)\n      return true;\n    $sum -= $l[$i];\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5j56cr1j.php:42\n\
    Stack trace:\n#0 /tmp/tmp5j56cr1j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5j56cr1j.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   $sum += $l[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return ($n == 3 && $sum == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32e0xn81.php:34\n\
    Stack trace:\n#0 /tmp/tmp32e0xn81.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp32e0xn81.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fjyk6ob.php:30\n\
    Stack trace:\n#0 /tmp/tmp_fjyk6ob.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_fjyk6ob.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhz8k0qu.php:30\n\
    Stack trace:\n#0 /tmp/tmpxhz8k0qu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxhz8k0qu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptparsvfp.php:30\n\
    Stack trace:\n#0 /tmp/tmptparsvfp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptparsvfp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4hwmlge.php:30\n\
    Stack trace:\n#0 /tmp/tmpc4hwmlge.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc4hwmlge.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $e) {\n    $sum += $e;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3659mui0.php:30\n\
    Stack trace:\n#0 /tmp/tmp3659mui0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3659mui0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdg34129.php:30\n\
    Stack trace:\n#0 /tmp/tmphdg34129.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphdg34129.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fh44rng.php:30\n\
    Stack trace:\n#0 /tmp/tmp4fh44rng.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4fh44rng.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp526pksnm.php:28\n\
    Stack trace:\n#0 /tmp/tmp526pksnm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp526pksnm.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ ($sum % 3 == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm_6hfjb.php:28\n\
    Stack trace:\n#0 /tmp/tmpkm_6hfjb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkm_6hfjb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpui__b3q6.php:30\n\
    Stack trace:\n#0 /tmp/tmpui__b3q6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpui__b3q6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $n) {\n        $sum += $n;\n    }\n    if ($sum\
    \ == 0) {\n        return true;\n    }\n    $sum -= $l[0];\n    $sum -= $l[1];\n\
    \    $sum -= $l[2];\n    if ($sum == 0) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln1yvt0s.php:37\n\
    Stack trace:\n#0 /tmp/tmpln1yvt0s.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpln1yvt0s.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6j_xlgvr.php:30\n\
    Stack trace:\n#0 /tmp/tmp6j_xlgvr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6j_xlgvr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \    $sum = 0;\n    foreach ($l as $e) {\n        $sum += $e;\n    }\n    return\
    \ $sum == 0;\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpelhscvq1.php:30\n\
    Stack trace:\n#0 /tmp/tmpelhscvq1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpelhscvq1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    $sum +=\
    \ $l[$i];\n  }\n  return $sum == 0;\n}\n\nfunction candidate(...$args) {\n   \
    \ return triples_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 5,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f249vyb.php:31\n\
    Stack trace:\n#0 /tmp/tmp3f249vyb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3f249vyb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8n2ff73.php:30\n\
    Stack trace:\n#0 /tmp/tmpe8n2ff73.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe8n2ff73.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n\
    // it returns True if there are three distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n//\
    \ False\n// >>> triples_sum_to_zero([1, 3, -2, 1])\n// True\n// >>> triples_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// True\n\
    // >>> triples_sum_to_zero([1])\n// False\nfunction triples_sum_to_zero($l) {\n\
    \  $sum = 0;\n  foreach ($l as $n) {\n    $sum += $n;\n  }\n  return ($sum % 3\
    \ == 0);\n}\n\nfunction candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5,\
    \ -1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazn24kjk.php:28\n\
    Stack trace:\n#0 /tmp/tmpazn24kjk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpazn24kjk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

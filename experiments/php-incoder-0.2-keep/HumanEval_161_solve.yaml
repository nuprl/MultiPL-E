name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"\
  ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nfunction solve($s) {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s\
    \ = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/18376124)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question, since it does exactly\
    \ what the OP asked for. He asked for a function that would reverse the case of\
    \ a string. He also asked for help on how to do it, so I provided a solution that\
    \ does exactly that. He also asked for help on how to do it, so I provided a solution\
    \ that does exactly that. He also asked for help on how to do it, so I provided\
    \ a solution that does exactly that. He also asked for help on how to do it, so\
    \ I provided a solution that does exactly that. He also asked for help on how\
    \ to do it, so I provided a solution that does exactly that. He also asked for\
    \ help on how to do it, so I provided a solution that does exactly that. He also\
    \ asked for help on how to do it, so I provided a solution that does exactly that.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question, since it does exactly\
    \ what the OP asked for. He asked for a function that would reverse the case of\
    \ a string. He also asked for help on how to do it, so I provided a solution that\
    \ does exactly that. He also asked for help on how to do it, so I provided a solution\
    \ that does exactly that. He also asked for help on how to do it, so I provided\
    \ a solution that does exactly that. He also asked for help on how to do it, so\
    \ I provided a solution that does exactly that. He also asked for help on how\
    \ to do it, so I provided a solution that does exactly that. He also asked for\
    \ help on how to do it, so I provided a solution that does exactly that. He also\
    \ asked for help on how to do it, so I provided a solution that does exactly that.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question, since it does exactly\
    \ what the OP asked for. He asked for a function that would reverse the case of\
    \ a string. He also as", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ strtoupper($s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = '#a@C';\n\
    $string = preg_replace('/[^A-Z]/', '', $string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\necho $string;", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $string = \"Hello World\";\n$string = strtolower($string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\necho $string;", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-zA-Z]/',\
    \ '', $s);\n    $s = strtolower($s);\n    $s = preg_replace('/([a-z])/', '$1',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n  \
    \  $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n\
    \    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n\
    \    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n\
    \    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n\
    \    $s = str_replace(\"`\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n\
    \    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n\
    \    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n\
    \    $s = str_replace(\"`\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\".\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n\
    \    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\"", " \
    \   $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis\
    \ doesn't work if the string contains numbers. For example: `solve(\"12\")` returns\
    \ `1` instead of `12`.\n<|/ c |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. For example: `solve(\"12\")` returns `1` instead of `12`.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if the string contains numbers. For example: `solve(\"\
    12\")` returns `1` instead of `12`.\n<|/ c |>\n<| c |>\nThis doesn't work if the\
    \ string contains numbers. For example: `solve(\"12\")` returns `1` instead of\
    \ `12`.\n<|/ c |>\n<| c |>\nThis doesn't work if the string contains numbers.\
    \ For example: `solve(\"12\")` returns `1` instead of `12`.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n\
    \    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n\
    \    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n\
    \    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n\
    \    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n\
    \    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\",\
    \ $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"?\", \"\
    \", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\",\",\
    \ \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work if you have a string like `#a@C`\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I even tested it on `#a@C` but got\
    \ `#A@c`\n<|/ c |>\n<| c |>\nYeah I tested it on `#a@C` but got `#A@c`\n<|/ c\
    \ |>\n<| c |>\nYeah I tested it on `#a@C` but got `#A@c`\n<|/ c |>\n<| c |>\n\
    I tested it on `#a@C` but got `#A@c`\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n   \
    \ $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n  \
    \  $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n\
    \    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n\
    \    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n\
    \    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n\
    \    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\"\
    , $s);\n    $s = str_replace(\"~\", \"\", $s);\n    $s = str_replace(\"`\", \"\
    \", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"+\",\
    \ \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $", "    $s\
    \ = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php\n$string\
    \ = '#a@C';\n$string = strtolower($string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\necho $string;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n \
    \   $s = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n\
    \    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n\
    \    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n\
    \    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n\
    \    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n\
    \    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\".\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\",\
    \ $s);\n    $s = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"%\", \"\
    #\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"&\"\
    , \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    |\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"$\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"^\", \"^\", $s);\n\
    \    $s = str_replace(\"&\", \"&\", $s);\n    $s = str_replace(\"*\", \"*\", $s);\n\
    \    $s = str_replace(\"+\", \"+\", $s);\n    $s = str_replace(\",\", \",\", $s);\n\
    \    $s = str_replace(\";\", \";\", $s);\n    $s = str_replace(\":\", \":\", $s);\n\
    \    $s = str_replace(\"?\", \"?\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n\
    \    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n\
    \    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = ", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php |>\n<| c |>\nThanks so much for this! I really appreciate it!\n<|/\
    \ c |>\n<| a tags=php |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = '#a@C';\n$string = strtolower($string);\n\
    $string = preg_replace('/[^a-z]/', '', $string);\necho $string;", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n\
    \    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n\
    \    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n\
    \    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php |>\n<code>\n<?php", "    $s\
    \ = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"\
    @\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"\
    %\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"\
    &\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n    $s = str_replace(\"\
    `\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ~\", \"\", $s);\n    $s = str_replace(\"`\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\"", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-zA-Z]/',\
    \ '', $s);\n    $s = strtoupper($s);\n    return $s;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nThis doesn't work. `solve(\"ab\")` returns `AB` instead of `aB`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    ^\", \"^\", $s);\n    $s = str_replace(\"&\", \"&\", $s);\n    $s = str_replace(\"\
    *\", \"*\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n    $s = str_replace(\"\
    )\", \")\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n    $s = str_replace(\"\
    ]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n    $s = str_replace(\"\
    }\", \"}\", $s);\n    $s = str_replace(\",\", \",\", $s);\n    $s = str_replace(\"\
    .\", \".\", $s);\n    $s = str_replace(\"?\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"!\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"\
    ?\", \"?\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"\
    ?\", \"?\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"\
    ?\", \"?\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n\
    \    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n\
    \    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n\
    \    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n\
    \    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n\
    \    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"{\", \"\",\
    \ $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"[\", \"\
    \", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"(\",\
    \ \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ 'a', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\",\
    \ $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\", \"\
    $\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\"\
    , \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"\
    ^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"_\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    :\", \",\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\":\", \",\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"", "    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s !== \"\"\
    \ ? $s : strtoupper(preg_replace('/[a-z]/', '', $s));\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a |>\n<code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = \"hello\";\n$string = strtolower($string);\n$string\
    \ = preg_replace('/[^a-z]/', '', $string);\necho $string;", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n \
    \   $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n\
    \    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n\
    \    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n\
    \    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\"~\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"~\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\"~\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"~\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\"~\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"~\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add\
    \ some explanation to your answer such that others can learn from it\n<|/ c |>\n\
    <| c |>\nThis doesn't work for \"#a@C\"\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for \"#a@C\"\n<|/ c |>\n<| c |>\nThis doesn't work for \"#a@C\"\n<|/ c |>\n\
    <| c |>\nThis doesn't work for \"#a@C\"\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n \
    \   $s = str_replace(\"$\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"^\", \"^\", $s);\n    $s = str_replace(\"&\", \"&\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n\
    \    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\",\", \",\", $s);\n\
    \    $s = str_replace(\".\", \".\", $s);\n    $s = str_replace(\";\", \";\", $s);\n\
    \    $s = str_replace(\":\", \":\", $s);\n    $s = str_replace(\"?\", \"?\", $s);\n\
    \    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n\
    \    $s = str_replace(\"_\", \"_\", $s);\n    $s = str_replace(\"+\", \"+\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"$\", \"$\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"^\", \"^\", $s);\n    $s = str_replace(\"&\", \"&\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n\
    \    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\"[\", \"[\", $s);\n\
    \    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"{\", \"{\", $s);\n\
    \    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\",\", \",\", $s);\n\
    \    $s = str_replace(\".\", \".\", $s);\n    $s = str_replace(\";\", \";\", $s);\n\
    \    $s = str_replace(\":\", \":\", $s);\n    $s = str_replace(\"?\", \"?\", $s);\n\
    \    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n\
    \    $s = str_replace(\"_\", \"_\", $s);\n    $s = str_replace(\"+\", \"+\", $s);\n\
    \    $s = str_replace(\"", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThanks bro\
    \ it works but i want to know what is the problem in my code ?\n<|/ c |>\n<| c\
    \ |>\nThe problem is in your code. Your code is not working because you used `preg_replace`\
    \ instead of `preg_replace_callback`. `preg_replace` replaces all occurrences\
    \ of your pattern. `preg_replace_callback` replaces only the first occurrence.\n\
    <|/ c |>\n<| c |>\nThanks bro i got it now :)\n<|/ c |>\n<| c |>\nNo problem.\
    \ Glad I could help.\n<|/ c |>\n<| a tags=php |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,string |>\n<code>", "    $s = strtolower($s);\n \
    \   $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. `solve(\"ab\")` returns `aB`\n<|/ c\
    \ |>\n<| c |>\nYes, it does. I tested it before posting.\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting.\n<|/ c |>\n<| c |>\nIt doesn't work.\
    \ `solve(\"ab\")` returns `aB`\n<|/ c |>\n<| c |>\nIt does work. `solve(\"ab\"\
    )` returns `aB`\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    $s = preg_replace('/([a-z])/', '$1', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a tags=php |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/15193037)\n<|/ c |>\n<| c |>\n\
    This does provide an answer to the question. He asked how to reverse the case\
    \ of a string. He also asked how to reverse the case of a string without using\
    \ any built-in PHP functions. He also asked how to reverse the case of a string\
    \ without using any built-in PHP functions. He also asked how to reverse the case\
    \ of a string without using any built-in PHP functions. He also asked how to reverse\
    \ the case of a string without using any built-in PHP functions. He also asked\
    \ how to reverse the case of a string without using any built-in PHP functions.\
    \ He also asked how to reverse the case of a string without using any built-in\
    \ PHP functions. He also asked how to reverse the case of a string without using\
    \ any built-in PHP functions. He also asked how to reverse the case of a string\
    \ without using any built-in PHP functions. He also asked how to reverse the case\
    \ of a string without using any built-in PHP functions. He also asked how to reverse\
    \ the case of a string without using any built-in PHP functions. He also asked\
    \ how to reverse the case of a string without using any built-in PHP functions.\
    \ He also asked how to reverse the case of a string without using any built-in\
    \ PHP functions. He also asked how to reverse the case of a string without using\
    \ any built-in PHP functions. He also asked how to reverse the case of a string\
    \ without using any built-in PHP functions. He also asked how to reverse the case\
    \ of a string without using any built-in PHP functions. He also asked how to reverse\
    \ the case of a string without using any built-in PHP functions. He also asked\
    \ how to reverse the case of a string without using any built-in PHP functions.\
    \ He also asked how to reverse the case of a string without using any built-in\
    \ PHP functions. He also asked how to reverse the case of a string without using\
    \ any built-in PHP functions. He also asked how to reverse the case of a string\
    \ without using any built-in PHP functions. He also asked how to reverse the case\
    \ of a string without using any built-in PHP functions. He also asked ", "   \
    \ $s = preg_replace('/[^a-zA-Z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    ^\", \"&\", $s);\n    $s = str_replace(\"&\", \"^\", $s);\n    $s = str_replace(\"\
    *\", \"~\", $s);\n    $s = str_replace(\"~\", \"*\", $s);\n    $s = str_replace(\"\
    ,\", \";\", $s);\n    $s = str_replace(\";\", \",\", $s);\n    $s = str_replace(\"\
    ?\", \"!\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str_replace(\"!\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"?\", $s);\n    $s = str", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if the string contains numbers. Try `solve(\"123\")`.\n<|/ c |>\n<| c |>\n\
    I didn't see that requirement in the question. Updated my answer to handle that\
    \ case.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n\
    \    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n\
    \    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n\
    \    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace", "    $s = preg_replace('/[^a-zA-Z]/', '', $s);\n    $s\
    \ = strtoupper($s);\n    $s = preg_replace('/[^a-zA-Z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/[a-z]/i', '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,string |>\n<code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[a-z]/', 'a$1', $s);\n    return $s;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/26829188)\n<|/ c |>\n<| c |>\nThis does\
    \ provide an answer to the question. He wants to reverse the case of the letters\
    \ in a string. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also wants to remove\
    \ all non-letters. He also wants to remove all non-letters. He also want", " \
    \   $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"\
    ^\", \"&\", $s);\n    $s = str_replace(\"&\", \"^\", $s);\n    $s = str_replace(\"\
    *\", \"&\", $s);\n    $s = str_replace(\"&\", \"*\", $s);\n    $s = str_replace(\"\
    [\", \"(\", $s);\n    $s = str_replace(\"]\", \")\", $s);\n    $s = str_replace(\"\
    (\", \"[\", $s);\n    $s = str_replace(\")\", \"]\", $s);\n    $s = str_replace(\"\
    {\", \"[\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = str_replace(\"\
    ]\", \"}\", $s);\n    $s = str_replace(\"[\", \"{\", $s);\n    $s = str_replace(\"\
    {\", \"[\", $s);\n    $s = str_replace(\"(\", \"{\", $s);\n    $s = str_replace(\"\
    )\", \"}\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = str_replace(\"\
    ]\", \"}\", $s);\n    $s = str_replace(\"{\", \"[\", $s);\n    $s = str_replace(\"\
    [\", \"{\", $s);\n    $s = str_replace(\"(\", \"{\", $s);\n    $s = str_replace(\"\
    )\", \"}\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = str_replace(\"\
    ]\", \"}\", $s);\n    $s = str_replace(\"{\", \"[\", $s);\n    $s = str_replace(\"\
    [\", \"{\", $s);\n    $s = str_replace(\"(\", \"{\", $s);\n    $s = str_replace(\"\
    )\", \"}\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = str_replace(\"\
    ]\", \"}\", $s);\n    $s = str_replace(\"{\", \"[\", $s);\n    $s = str_replace(\"\
    [\", \"{\", $s);\n    $s = str_replace(\"(\", \"{\", $s);\n    $s = str_replace(\"\
    )\", \"}\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = str_replace(\"\
    ]\", \"}\", $s);\n    $s = str_replace(\"{\", \"[\", $s);\n    $s = str_replace(\"\
    [\", \"{\", $s);\n    $s = str_replace(\"(\", \"{\", $s);\n    $s = str_replace(\"\
    )\", \"}\", $s);\n    $s = str_replace(\"}\", \"]\", $s);\n    $s = ", "    $s\
    \ = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/i',\
    \ '\\U\\1', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| c |>\nI missed that\
    \ case. Thanks for pointing it out. I've updated the answer.\n<|/ c |>\n<| a |>\n\
    <code>\n<?php", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n\
    \    $s = preg_replace('/[a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a |>\n<code>", "    $s = strtolower($s);\n    $s = str_replace(\"\
    #\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"\
    $\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"\
    ^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    *\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    \\\\\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"(\"", "    $s = strtolower($s);\n    $s\
    \ = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine for lower case letters\
    \ but for upper case letters it doesn't work. Example: solve(\"ab\") returns \"\
    AB\" instead of \"ab\"\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works\
    \ fine for lower case letters but for upper case letters it doesn't work. Example:\
    \ solve(\"ab\") returns \"AB\" instead of \"ab\"\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. Your code works fine for lower case letters but for upper case\
    \ letters it doesn't work. Example: solve(\"ab\") returns \"AB\" instead of \"\
    ab\"\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works fine for lower\
    \ case letters but for upper case letters it doesn't work. Example: solve(\"ab\"\
    ) returns \"AB\" instead of \"ab\"\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for lower case letters but for upper case letters it doesn't\
    \ work. Example: solve(\"ab\") returns \"AB\" instead of \"ab\"\n<|/ c |>\n<|\
    \ a tags=php |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a tags=php |>\n<| a tags=php |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| c |>\nThis doesn't work for strings like `'#a@C'`\n<|/\
    \ c |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `'#a@C'` because `'#a@C'` becomes `'#A@c'` which is `'#A@c'`\n<|/ c\
    \ |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n<|/ c |>\n<| c |>\nIt does work.\
    \ `#a@C` is `#A@c`\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string = '#a@C';\n$string\
    \ = preg_replace('/[^a-zA-Z]/', '', $string);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work for strings like `'#a@C'`\n<|/ c |>\n<| c |>\n\
    It does work. `#a@C` is `#A@c`\n<|/ c |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n\
    <|/ c |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n<|/ c |>\n<| c |>\nIt does\
    \ work. `#a@C` is `#A@c`\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string = '#a@C';\n\
    $string = preg_replace('/[^a-zA-Z]/', '', $string);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work for strings like `'#a@C'`\n<|/ c |>\n<| c |>\n\
    It does work. `#a@C` is `#A@c`\n<|/ c |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n\
    <|/ c |>\n<| c |>\nIt does work. `#a@C` is `#A@c`\n<|/ c ", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| c |>\nThis doesn't work if you have a string like `'#a@C'`\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. I just added the\
    \ comment to the OP's question.\n<|/ c |>\n<| c |>\nI tested it and it doesn't\
    \ work. `solve('#a@C')` returns `'#A@c'`\n<|/ c |>\n<| c |>\nI tested it and it\
    \ works fine. `solve('#a@C')` returns `'#A@c'`\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works fine. `solve('#a@C')` returns `'#A@c'`\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/([a-z])/', '$1', $s);\n    return $s;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `solve(\"aBcD\")`.\n\
    <|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what it does. You also don't explain why it works.\n<|/ c |>\n<| c |>\nI added\
    \ a comment to the code explaining what it does.\n<|/ c |>\n<| c |>\nI added a\
    \ comment to the code explaining what it does.\n<|/ c |>\n<| c |>\nI added a comment\
    \ to the code explaining what it does.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n  \
    \  $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n\
    \    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n\
    \    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n\
    \    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n\
    \    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n\
    \    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\",\
    \ $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\
    \", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"(\",\
    \ \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works perfectly for me. Try\
    \ it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it\
    \ with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works for me too. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nIt works for me too. Try it with `solve(\"ab\")`.\n\
    <|/ c |>\n<| a tags=php |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s\
    \ = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n  \
    \  $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n\
    \    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n\
    \    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n\
    \    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n\
    \    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\",\
    \ $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"?\", \"\
    \", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\",\",\
    \ \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\"\
    , $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\", \"\
    $\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\"\
    , \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace",
  "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"\
    @\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"\
    %\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"\
    &\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    %\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"\
    @\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"\
    &\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = ", "    $s = preg_replace('/[^a-z]/', '', $s);\n   \
    \ $s = strtolower($s);\n    $s = preg_replace('/[a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/17376138)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to reverse\
    \ the case of a string and if there are no letters then reverse the string. He\
    \ also stated that he was given a string so I provided a solution that would work\
    \ for any string.\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/17376138)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to reverse the case of a string\
    \ and if there are no letters then reverse the string. He also stated that he\
    \ was given a string so I provided a solution that would work for any string.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/17376138)\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = '#a@C';\n\
    $string = preg_replace('/[^A-Z]/', '', $string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\necho $string;", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[a-z]/', 'a', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\
    \", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"$\",\
    \ \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"\
    ^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    *\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n \
    \   $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace", "    $s = strtolower($s);\n    $s = str_replace(\"#\"\
    , \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n    $s = str_replace(\"\
    $\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"\
    ^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    *\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    +\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/i',\
    \ '\\U$0', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n\
    \    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\", \"$\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThanks for your answer. Unfortunately this doesn't work\
    \ for me. I get \"Fatal error: Call to undefined function preg_replace()\" when\
    \ I run your code. I'm running PHP 5.5.9-1ubuntu4.14\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.5.9 and it works. Maybe you don't have `preg_replace` installed.\
    \ Try `preg_replace('/[^a-z]/', '', $s);` instead.\n<|/ c |>\n<| c |>\nThanks\
    \ again! I figured out my problem. I was using an older version of PHP. Your code\
    \ works perfectly on PHP 5.5.9. Thanks again!\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = '#a@C';\n$string = preg_replace('/[^a-z]/', '',\
    \ $string);\necho $string;", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n\
    \    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n\
    \    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n\
    \    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n\
    \    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", ",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if the\
    \ string contains only letters.\n<|/ c |>\n<| c |>\nIt does work, try it out.\
    \ `solve(\"aBc\")` returns `abc`\n<|/ c |>\n<| c |>\nIt doesn't work if the string\
    \ contains only letters. Try it out. `solve(\"aBc\")` returns `abc`\n<|/ c |>\n\
    <| c |>\nIt does work, try it out. `solve(\"aBc\")` returns `abc`\n<|/ c |>\n\
    <| c |>\nIt does work, try it out. `solve(\"aBc\")` returns `abc`\n<|/ c |>\n\
    <| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a |>\n<| c |>\nI believe this solution\
    \ is incorrect - it returns `#A@c` for `#a@C` which should be `#A@C`\n<|/ c |>\n\
    <| c |>\nThanks for pointing that out. I've fixed the code.\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n\
    \    $s = preg_replace('/([a-z])/', '$1', $s);\n    return $s;\n}\n</code>\n<|/\
    \ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26827377)\n\
    <|/ c |>\n<| c |>\nThe question was \"How to solve this problem?\" I provided\
    \ an answer that solves the problem and I provided a link to an online PHP sandbox\
    \ that shows the code works. I provided a link to an online PHP sandbox that shows\
    \ the code works. I provided a link to an online PHP sandbox that shows the code\
    \ works. I provided a link to an online PHP sandbox that shows the code works.\
    \ I provided a link to an online PHP sandbox that shows the code works. I provided\
    \ a link to an online PHP sandbox that shows the code works. I provided a link\
    \ to an online PHP sandbox that shows the code works. I provided a link to an\
    \ online PHP sandbox that shows the code works. I provided a link to an online\
    \ PHP sandbox that shows the code works. I provided a link to an online PHP sandbox\
    \ that shows the code works. I provided a link to an online PHP sandbox that shows\
    \ the code works. I provided a link to an online PHP sandbox that shows the code\
    \ works. I provided a link to an online PHP sandbox that shows the code works.\
    \ I provided a link to an online PHP sandbox that shows the code works. I provided\
    \ a link to an online PHP sandbox that shows the code works. I provided a link\
    \ to an online PHP sandbox that shows the code works. I provided a link to an\
    \ online PHP sandbox that shows the code works. I provided a link to an online\
    \ PHP sandbox that shows the code works. I provided a link to an online PHP sandbox\
    \ that shows the code works. I provided a link to an online PHP sandbox that shows\
    \ the code works. I provided a link to an online PHP sandbox that shows the code\
    \ works. I provided a link to an online PHP sandbox that shows the code works.\
    \ I provided a link to an online PHP sandbox that shows the code works. I provided\
    \ a link to an online PHP sandbox that shows the code works. I provided a link\
    \ to an online PHP sandbox that ", "    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    $s = strtoupper($s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/16305394)\n<|/ c |>\n<| c |>\nThe question\
    \ was \"How to solve this problem using PHP?\" I provided a solution that solves\
    \ the problem using PHP. How is that not an answer?\n<|/ c |>\n<| c |>\nThe question\
    \ was \"How to solve this problem using PHP?\" I provided a solution that solves\
    \ the problem using PHP. How is that not an answer?\n<|/ c |>\n<| c |>\nThe question\
    \ was \"How to solve this problem using PHP?\" I provided a solution that solves\
    \ the problem using PHP. How is that not an answer?\n<|/ c |>\n<| c |>\nThe question\
    \ was \"How to solve this problem using PHP?\" I provided a solution that solves\
    \ the problem using PHP. How is that not an answer?\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s !==\
    \ \"\" ? $s : strtoupper(preg_replace('/[a-z]/', '', $s));\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nThis doesn't work for all cases. For example, `solve(\"ab\")` returns\
    \ `AB` instead of `aB`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it now.\
    \ Thanks.\n<|/ c |>\n<| c |>\nThis doesn't work for all cases. For example, `solve(\"\
    ab\")` returns `AB` instead of `aB`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/[a-z]/i', '\\U$0', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = \"Hello World!\";\n$string =\
    \ strtolower($string);\n$string = preg_replace('/[^a-z]/', '', $string);\n$string\
    \ = preg_replace('/[a-z]/i', '\\U$0', $string);\necho $string;", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s =\
    \ str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n  \
    \  $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n\
    \    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n\
    \    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n\
    \    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", ",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer. Can you please explain\
    \ me the code you wrote in detail?\n<|/ c |>\n<| c |>\nI added comments to the\
    \ code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Can you please\
    \ explain me the code you wrote in detail?\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. Can you please explain me the code you wrote in detail?\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Can you please explain me the code you wrote\
    \ in detail?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n \
    \   $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if the\
    \ string contains numbers. Try `solve(\"12\")`.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing out. I've updated the answer to include a regex to remove all non-letters.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s\
    \ = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n\
    \    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n\
    \    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n\
    \    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n\
    \    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/([a-z])/', '$1', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/17445874)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He is asking how to reverse a string in PHP. He has\
    \ provided an example and explained what he wants to do. He has also provided\
    \ a link to his previous question that does exactly what he wants to do. He has\
    \ also provided a link to his previous question that does exactly what he wants\
    \ to do. He has also provided a link to his previous question that does exactly\
    \ what he wants to do. He has also provided a link to his previous question that\
    \ does exactly what he wants to do. He has also provided a link to his previous\
    \ question that does exactly what he wants to do. He has also provided a link\
    \ to his previous question that does exactly what he wants to do. He has also\
    \ provided a link to his previous question that does exactly what he wants to\
    \ do. He has also provided a link to his previous question that does exactly what\
    \ he wants to do. He has also provided a link to his previous question that does\
    \ exactly what he wants to do. He has also provided a link to his previous question\
    \ that does exactly what he wants to do. He has also provided a link to his previous\
    \ question that does exactly what he wants to do. He has also provided a link\
    \ to his previous question that does exactly what he wants to do. He has also\
    \ provided a link to his previous question that does exactly what he wants to\
    \ do. He has also provided a link to his previous question that does exactly what\
    \ he wants to do. He has also provided a link to his previous question that does\
    \ exactly what he wants to do. He has also provided a link to his previous question\
    \ that does exactly what he wants to do. He has also provided a link to his previous\
    \ question that does exactly what he wants to do. He has also provided a link\
    \ to his previous question that does exactly what he wants to do. He has also\
    \ provided ", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    $s = preg_replace('/[a-z]/', 'a', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n\
    \    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n\
    \    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n\
    \    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n\
    \    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n\
    \    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n\
    \    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"|\", \"\",\
    \ $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\",\", \"\
    \", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\\\"\"\
    , \"-\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"-\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s\
    \ = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n\
    \    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n\
    \    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n\
    \    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n\
    \    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n\
    \    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\":\", \"#\", $s);\n\
    \    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n\
    \    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n\
    \    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n\
    \    $s = str_replace(\":\", \"#\", $s);\n    $s = str_replace(\"'", "    $s =\
    \ strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"\
    ^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"+\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n  \
    \  return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "    $s\
    \ = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"\
    @\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    $\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"\
    *\", \"\", $s);\n    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"-\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"\\\"\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\"=\", \"-\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer.\
    \ I'm still new to PHP and I didn't know about preg_replace. Thanks for teaching\
    \ me something new!\n<|/ c |>\n<| c |>\nNo problem! I added some comments to help\
    \ you understand how it works.\n<|/ c |>\n<| a tags=string,php,reverse |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| a tags=php |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/[a-z]/i', '\\U$0', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = preg_replace('/[^a-z]/i',\
    \ '', $s);\n    $s = strtolower($s);\n    $s = preg_replace('/[a-z]/i', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work for\
    \ `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| c |>\nI didn't see that requirement in\
    \ the question. I'll update my answer.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ with a new solution that works with your new requirements.\n<|/ c |>\n<| c |>\n\
    Thanks so much for your help!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", " \
    \   $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s\
    \ = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$string = '#a@C';\n$string = preg_replace('/[^a-z]/', '',\
    \ $string);\n$string = strtolower($string);\n$string = preg_replace('/[^A-Z]/',\
    \ '', $string);\n$string = ucfirst($string);\necho $string;", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| a |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"\
    @\", \"#\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"\
    %\", \"$\", $s);\n    $s = str_replace(\"^\", \"&\", $s);\n    $s = str_replace(\"\
    &\", \"^\", $s);\n    $s = str_replace(\"*\", \"&\", $s);\n    $s = str_replace(\"\
    &\", \"*\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    #\", \")\", $s);\n    $s = str_replace(\")\", \"(\", $s);\n    $s = str_replace(\"\
    ,\", \"&\", $s);\n    $s = str_replace(\"&\", \",\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"#\", \"=\", $s);\n    $s = str_replace(\"\
    =\", \"*\", $s);\n    $s = str_replace(\"*\", \"=\", $s);\n    $s = str_replace(\"\
    ?\", \"&\", $s);\n    $s = str_replace(\"&\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"&\", $s);\n    $s = str_replace(\"&\", \"!\", $s);\n    $s = str_replace(\"\
    |\", \"&\", $s);\n    $s = str_replace(\"&\", \"|\", $s);\n    $s = str_replace(\"\
    !\", \"|\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    #\", \")\", $s);\n    $s = str_replace(\")\", \"(\", $s);\n    $s = str_replace(\"\
    ,\", \"&\", $s);\n    $s = str_replace(\"&\", \",\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"#\", \"=\", $s);\n    $s = str_replace(\"\
    =\", \"*\", $s);\n    $s = str_replace(\"*\", \"=\", $s);\n    $s = str_replace(\"\
    ?\", \"&\", $s);\n    $s = str_replace(\"&\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"&\", $s);\n    $s = str_replace(\"&\", \"!\", $s);\n    $s = str_replace(\"\
    |\", \"&\", $s);\n    $s = str_replace(\"&\", \"|\", $s);\n    $s = str_replace(\"\
    !\", \"|\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    #\", \")\", $s);\n    $s = str_replace(\")\", \"(\", $s);\n    $s = str_replace(\"\
    ,\", \"&\", $s);\n    $s = str", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11348272)\n\
    <|/ c |>\n<| c |>\nIt does provide an answer. He asked how to solve the problem\
    \ and I provided a solution. He did not ask for code to be written for him. He\
    \ asked how to solve the problem and I provided a solution. He did not ask for\
    \ code to be written for him. He asked how to solve the problem and I provided\
    \ a solution. He did not ask for code to be written for him. He asked how to solve\
    \ the problem and I provided a solution. He did not ask for code to be written\
    \ for him. He asked how to solve the problem and I provided a solution. He did\
    \ not ask for code to be written for him. He asked how to solve the problem and\
    \ I provided a solution. He did not ask for code to be written for him. He asked\
    \ how to solve the problem and I provided a solution. He did not ask for code\
    \ to be written for him. He asked how to solve the problem and I provided a solution.\
    \ He did not ask for code to be written for him. He asked how to solve the problem\
    \ and I provided a solution. He did not ask for code to be written for him. He\
    \ asked how to solve the problem and I provided a solution. He did not ask for\
    \ code to be written for him. He asked how to solve the problem and I provided\
    \ a solution. He did not ask for code to be written for him. He asked how to solve\
    \ the problem and I provided a solution. He did not ask for code to be written\
    \ for him. He asked how to solve the problem and I provided a solution. He did\
    \ not ask for code to be written for him. He asked how to solve the problem and\
    \ I provided a solution. He did not ask for code to be written for him. He asked\
    \ how to solve the problem and I provided a solution. He did not ask for code\
    \ to be written for him. He asked how to solve the problem and I provided a solution.\
    \ He did not ask", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"\
    #\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"%\"\
    , \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"\
    &\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"\
    #\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n    $s = str_replace(\"%\"\
    , \"$\", $s);\n    $s = str_replace(\"^\", \"&\", $s);\n    $s = str_replace(\"\
    &\", \"^\", $s);\n    $s = str_replace(\"*\", \"&\", $s);\n    $s = str_replace(\"\
    &\", \"*\", $s);\n    $s = str_replace(\"(\", \"[\", $s);\n    $s = str_replace(\"\
    )\", \"]\", $s);\n    $s = str_replace(\"[\", \"(\", $s);\n    $s = str_replace(\"\
    ]\", \")\", $s);\n    $s = str_replace(\"{\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"{\", $s);\n    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\"|\", \"|\", $s);\n    $s = str_replace(\"",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s\
    \ = preg_replace('/[^a-z]/', '', $s);\n    $s = strtolower($s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18497347)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also asked how to\
    \ reverse the case of a string and I provided a solution. He also as", "    $s\
    \ = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if there are\
    \ multiple consecutive letters.\n<|/ c |>\n<| c |>\nI didn't downvote you, but\
    \ I suspect it's because you didn't explain how it works.\n<|/ c |>\n<| c |>\n\
    I added some explanation\n<|/ c |>\n<| c |>\nThis doesn't work if there are multiple\
    \ consecutive letters.\n<|/ c |>\n<| c |>\nI added some explanation\n<|/ c |>\n\
    <| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/27859523)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to reverse the case of a\
    \ string and I provided a solution that does exactly that. He also asked how to\
    \ reverse the case of a string and I provided a solution that does exactly that.\
    \ He also asked how to reverse the case of a string and I provided a solution\
    \ that does exactly that. He also asked how to reverse the case of a string and\
    \ I provided a solution that does exactly that. He also asked how to reverse the\
    \ case of a string and I provided a solution that does exactly that. He also asked\
    \ how to reverse the case of a string and I provided a solution that does exactly\
    \ that. He also asked how to reverse the case of a string and I provided a solution\
    \ that does exactly that. He also asked how to reverse the case of a string and\
    \ I provided a solution that does exactly that. He also asked how to reverse the\
    \ case of a string and I provided a solution that does exactly that. He also asked\
    \ how to reverse the case of a string and I provided a solution that does exactly\
    \ that.\n<|/ c |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/27859523)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to reverse the case of a\
    \ string and I provided a solution that does exactly that. He also asked how to\
    \ reverse the case of a string and I provided a solution that does exactly that.\
    \ He also asked how to reverse the case of a string and I provided a solution\
    \ that does exactly that. He also asked how to reverse the case of a string and\
    \ I provided a solution that does exactly that. He also asked how to reverse the\
    \ case of a string and I provided a solution that does exactly that. He also asked ",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with\
    \ `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting\
    \ it. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nIt works. Try it yourself.\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work\
    \ for \"#a@C\" which should return \"#A@c\"\n<|/ c |>\n<| c |>\nIt does work,\
    \ check it out here: https://3v4l.org/5X5KK\n<|/ c |>\n<| c |>\nIt does work,\
    \ check it out here: https://3v4l.org/5X5KK\n<|/ c |>\n<| c |>\nIt does work,\
    \ check it out here: https://3v4l.org/5X5KK\n<|/ c |>\n<| c |>\nIt does work,\
    \ check it out here: https://3v4l.org/5X5KK\n<|/ c |>\n<| a tags=php,string |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\",\
    \ $s);\n    $s = str_replace(\"$\", \"$\", $s);\n    $s = str_replace(\"%\", \"\
    %\", $s);\n    $s = str_replace(\"^\", \"^\", $s);\n    $s = str_replace(\"&\"\
    , \"&\", $s);\n    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"\
    (\", \"(\", $s);\n    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\"\
    [\", \"[\", $s);\n    $s = str_replace(\"]\", \"]\", $s);\n    $s = str_replace(\"\
    {\", \"{\", $s);\n    $s = str_replace(\"}\", \"}\", $s);\n    $s = str_replace(\"\
    |\", \"|\", $s);\n    $s = str_replace(\";\", \";\", $s);\n    $s = str_replace(\"\
    ,\", \",\", $s);\n    $s = str_replace(\"?\", \"?\", $s);\n    $s = str_replace(\"\
    !\", \"!\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"'\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"~\", \"~\", $s);\n    $s = str_replace(\"\
    `\", \"`\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"\
    '\", '\"', $s);\n    $s = str_replace(\"\\\"\", \"", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"@\", \"#\", $s);",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"\
    @\", \"\", $s);\n    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"\
    %\", \"\", $s);\n    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"\
    &\", \"\", $s);\n    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    _\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    |\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"<\", \"\", $s);\n    $s = str_replace(\"\
    >\", \"\", $s);\n    $s = str_replace(\"~\", \"\", $s);\n    $s = str_replace(\"\
    `\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    \\\"\", \"\", $s);\n    $s = str_replace(\"\\\\\", \"\", $s);\n    $s = str_replace(\"\
    $\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n    $s = str_replace(\"\
    ^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    *\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    <\", \"\", $s);\n    $s = str", "    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    $s = strtoupper($s);\n    $s = preg_replace('/[a-z]/', '', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if the\
    \ string contains numbers, e.g. `solve(\"123\") = \"321\"`\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting it.\n<|/ c |>\n<| c |>\nI tested it again\
    \ and it works. I must have missed something when I first tested it.\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I must have missed something when I first\
    \ tested it.\n<|/ c |>\n<| c |>\nI tested it again and it works. I must have missed\
    \ something when I first tested it.\n<|/ c |>\n<| a tags=php,string |>\n<code>",
  "    $s = preg_replace('/[^a-z]/i', '', $s);\n    $s = strtoupper($s);\n    $s =\
    \ preg_replace('/[a-z]/i', '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n   \
    \ $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n<?php", "    $s = strtolower($s);\n   \
    \ $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a |>\n<code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a |>\n<| a tags=php,string |>\n<code>",
  "    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26839517)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He wants to know\
    \ why his code doesn't work. He wants to know why his code doesn't work. He wants\
    \ to know why his code doesn't work. He wants to know why his code doesn't work.\
    \ He wants to know why his code doesn't work. He wants to know why his code doesn't\
    \ work. He wants to know why his code doesn't work. He wants to know why his code\
    \ doesn't work. He wants to know why his code doesn't work. He wants to know why\
    \ his code doesn't work. He wants to know why his code doesn't work. He wants\
    \ to know why his code doesn't work. He wants to know why his code doesn't work.\
    \ He wants to know why his code doesn't work. He wants to know why his code doesn't\
    \ work. He wants to know why his code doesn't work. He wants to know why his code\
    \ doesn't work. He wants to know why his code doesn't work. He wants to know why\
    \ his code doesn't work. He wants to know why his code doesn't work. He wants\
    \ to know why his code doesn't work. He wants to know why his code doesn't work.\
    \ He wants to know why his code doesn't work. He wants to know why his code doesn't\
    \ work. He wants to know why his code doesn't work. He wants to know why his code\
    \ doesn't work. He wants to know why his code doesn't work. He wants to know why\
    \ his code doesn't work. He wants to know why his code doesn't work. He wants\
    \ to know why his code doesn't work. He wants to know why his code doesn't work.\
    \ He wants to know why his code doesn't work. He wants to know why his code doesn't\
    \ work. He wants to know why his code doesn't work. He wants to know why his code\
    \ doesn't work. He wants to know why his code doesn't work. He wants to know why\
    \ his code doesn't work", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[^A-Z]/', '', $s);\n    return $s;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s\
    \ = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace", "    $s = preg_replace('/[^a-zA-Z]/', '', $s);\n    $s\
    \ = strtolower($s);\n    $s = preg_replace('/([a-z])/', '$1', $s);\n    return\
    \ $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n<?php",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"\
    ^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/[a-z]/i', '', $s);\n    return $s;\n}\n</code>\n<|/ a |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s !== '' ? strrev($s) : strrev($s);\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\n\
    It works fine for me. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `solve(\"ab\")`. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\n\
    It works for me. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works for\
    \ me too. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string |>\n<code>\n\
    <?php\n$string = \"Hello World!\";\n$string = strtolower($string);\n$string =\
    \ preg_replace('/[^a-z]/', '', $string);\necho $string;", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s =\
    \ preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = preg_replace('/[a-z]/i', '\\U$0', $s);\n    return $s;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);\n\
    \    $s = str_replace(\"#\", \"@\", $s);\n    $s = str_replace(\"#\", \"@\", $s);",
  "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $s =\
    \ preg_replace('/[a-z]/', 'a$0', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,string |>\n<code>", "    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    $s = strtolower($s);\n    $s = preg_replace('/[a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $string = \"abc\";\n$string = preg_replace('/[^a-z]/', '', $string);\n$string\
    \ = strtolower($string);\n$string = preg_replace('/[a-z]/', '', $string);\necho\
    \ $string;", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    $s = preg_replace('/([a-z])/', '$1', $s);\n    return $s;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis doesn't work for `solve(\"ab\") = \"AB\"\
    `\n<|/ c |>\n<| c |>\nThis doesn't work for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n\
    <| c |>\nThis doesn't work for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    $s =\
    \ strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = strtolower($s);\n    $s = preg_replace('/([a-z])/e', '$1\
    \ $2', $s);\n    return $s;\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\",\
    \ $s);\n    $s = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"%\", \"\
    #\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"&\"\
    , \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    :\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    :\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    :\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    :\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[^A-Z]/',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    $s = preg_replace('/[a-z]/', 'a' . $s, $s);\n    return $s;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis doesn't work for `solve(\"ab\") = \"AB\"\
    `\n<|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case to the answer.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n<?php", "    $s = preg_replace('/[^a-z]/i',\
    \ '', $s);\n    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '',\
    \ $s);\n    return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't\
    \ work for `solve(\"ab\") = \"AB\"`\n<|/ c |>\n<| c |>\nIt does. I tested it before\
    \ posting it.\n<|/ c |>\n<| c |>\nI tested it before posting it, and it doesn't.\
    \ `solve(\"ab\") = \"AB\"` returns `\"AB\"` instead of `\"ab\"`.\n<|/ c |>\n<|\
    \ c |>\nI tested it again and it works. I must have missed something when I first\
    \ tested it.\n<|/ c |>\n<| c |>\nI tested it again and it works. I must have missed\
    \ something when I first tested it.\n<|/ c |>\n<| a |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = str_replace(\"#\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n\
    \    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n\
    \    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n\
    \    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n\
    \    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n\
    \    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"|\", \"\", $s);\n\
    \    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n\
    \    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n\
    \    $s = str_replace(\"=\", \"\", $s);\n    $s = str_replace(\"%\", \"\", $s);\n\
    \    $s = str_replace(\"$\", \"\", $s);\n    $s = str_replace(\"@\", \"\", $s);\n\
    \    $s = str_replace(\"^\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n\
    \    $s = str_replace(\"*\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n\
    \    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"_\", \"\", $s);\n\
    \    $s = str_replace(\"+\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"|\", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n\
    \    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"=\", \"\", $s);\n\
    \    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n\
    \    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n",
  "    $s = strtolower($s);\n    $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"#\", $s);\n    $s = str_replace(\"%\", \"#\", $s);\n    $s = str_replace(\"\
    ^\", \"#\", $s);\n    $s = str_replace(\"&\", \"#\", $s);\n    $s = str_replace(\"\
    *\", \"#\", $s);\n    $s = str_replace(\"(\", \"#\", $s);\n    $s = str_replace(\"\
    )\", \"#\", $s);\n    $s = str_replace(\"_\", \"#\", $s);\n    $s = str_replace(\"\
    +\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"\\\\\", \"#\", $s);\n    $s = str_replace(\"\
    |\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\"=\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    \\\\\", \"#\", $s);\n    $s = str_replace(\"|\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    =\", \"#\", $s);\n    $s = str_replace(\"{\", \"#\", $s);\n    $s = str_replace(\"\
    }\", \"#\", $s);\n    $s = str_replace(\"[\", \"#\", $s);\n    $s = str_replace(\"\
    ]\", \"#\", $s);\n    $s = str_replace(\"\\\\\", \"#\", $s);\n    $s = str_replace(\"\
    |\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n  \
    \  return $s;\n}\n</code>\n<|/ a tags=php,string |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $s = strtolower($s);\n    $s = preg_replace('/[^a-z]/', '', $s);\n\
    \    return $s;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s === '' ? $s : $s[0] .\
    \ $s[strlen($s) - 1];\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThis doesn't work\
    \ for strings like `'#a@C'` which should return `'#A@c'`\n<|/ c |>\n<| c |>\n\
    I thought the question was about reversing only letters, not numbers or special\
    \ characters. But I see that your solution also works for numbers and special\
    \ characters. Thanks for pointing that out.\n<|/ c |>\n<| a tags=php |>\n<code>",
  "    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s === '' ? $s : $s[0] .\
    \ $s[strlen($s) - 1];\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't\
    \ work if there are multiple letters in the string. For example, `solve(\"ab\"\
    )` returns `\"A\"` instead of `\"AB\"`.\n<|/ c |>\n<| c |>\nIt doesn't work if\
    \ there are multiple letters in the string. For example, `solve(\"ab\")` returns\
    \ `\"A\"` instead of `\"AB\"`.\n<|/ c |>\n<| c |>\nI added a solution that doesn't\
    \ require a regex.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require\
    \ a regex.\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    $s = strtolower($s);\n \
    \   $s = str_replace(\"@\", \"#\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"$\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace", "    $s = strtolower($s);\n    $s = str_replace(\"@\"\
    , \"#\", $s);\n    $s = str_replace(\"$\", \"#\", $s);\n    $s = str_replace(\"\
    %\", \"#\", $s);\n    $s = str_replace(\"^\", \"#\", $s);\n    $s = str_replace(\"\
    &\", \"#\", $s);\n    $s = str_replace(\"*\", \"#\", $s);\n    $s = str_replace(\"\
    (\", \"#\", $s);\n    $s = str_replace(\")\", \"#\", $s);\n    $s = str_replace(\"\
    [\", \"#\", $s);\n    $s = str_replace(\"]\", \"#\", $s);\n    $s = str_replace(\"\
    {\", \"#\", $s);\n    $s = str_replace(\"}\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $s);\n    $s = str_replace(\"\
    ?\", \"#\", $s);\n    $s = str_replace(\",\", \"#\", $s);\n    $s = str_replace(\"\
    ;\", \"#\", $s);\n    $s = str_replace(\"'\", \"#\", $s);\n    $s = str_replace(\"\
    !\", \"#\", $s);\n    $s = str_replace(\"?\", \"#\", $s);\n    $s = str_replace(\"\
    ,\", \"#\", $s);\n    $s = str_replace(\";\", \"#\", $s);\n    $s = str_replace(\"\
    '\", \"#\", $s);\n    $s = str_replace(\"!\", \"#\", $", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nThis doesn't work if you have a string like \"#a@C\"\n<|/ c |>\n\
    <| c |>\nIt does work. Try it yourself. It doesn't matter what characters you\
    \ put in the regex, it just removes everything that isn't a letter. Try it out\
    \ and you'll see.\n<|/ c |>\n<| c |>\nIt does work, just not as expected. Try\
    \ it out with your example string and you'll see it fails.\n<|/ c |>\n<| c |>\n\
    It does work. Try it out with your example string and you'll see it fails.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it out with your example string and you'll\
    \ see it fails.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n \
    \   $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php |>\n<| a dscore=0 |>\n<code>\n<?php", "    $s = strtolower($s);\n \
    \   $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a tags=php,string |>\n<code>", "    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work if you have a string like \"#a@C\"\n\
    <|/ c |>\n<| c |>\nIt works fine for me. Can you give an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\nIt doesn't work for me on \"#a@C\" it returns \"#A@c\"\
    \n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" it returns \"#A@c\"\n<|/ c |>\n<|\
    \ c |>\nI tested it on \"#a@C\" it returns \"#A@c\"\n<|/ c |>\n<| a |>\n<code>\n\
    <?php"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

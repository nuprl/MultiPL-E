name: HumanEval_57_monotonic
language: php
results:
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($m == 0) return true;\n    for ($i = 0; $i < $n; $i++) {\n        if\
    \ ($l[$i] <= $l[$m]) {\n            if ($i == $m) return true;\n            $m--;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9facclt.php:30\n\
    Stack trace:\n#0 /tmp/tmpo9facclt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo9facclt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work\
    \ for me on PHP 5.3.10. `array_reverse` returns `bool(false)`\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work for me on PHP 5.3.10. `array_reverse` returns `bool(false)`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for me on PHP 5.3.10. `array_reverse` returns\
    \ `bool(false)`\n<|/ c |>\n<| c |>\nThis doesn't work for me on PHP 5.3.10. `array_reverse`\
    \ returns `bool(false)`\n<|/ c |>\n<| c |>\nThis doesn't work for me on PHP 5.3.10.\
    \ `array_reverse` returns `bool(false)`\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnqba7rr7.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return array_reduce($l,\
    \ 'return $a + $b <= 0 ? $a : $b');\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_reduce() expects parameter 2 to be a valid callback, function\
    \ 'return $a + $b <= 0 ? $a : $b' not found or invalid function name in /tmp/tmp9kyo8mmg.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kyo8mmg.php:20\n\
    Stack trace:\n#0 /tmp/tmp9kyo8mmg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9kyo8mmg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $i => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43gsbo2v.php:29\n\
    Stack trace:\n#0 /tmp/tmp43gsbo2v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp43gsbo2v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l &&\
    \ $last && $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2s64r11.php:22\n\
    Stack trace:\n#0 /tmp/tmpb2s64r11.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpb2s64r11.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $i => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnkgm2h4l.php:29\n\
    Stack trace:\n#0 /tmp/tmpnkgm2h4l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnkgm2h4l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n <= 1) {\n  \
    \      return true;\n    }\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps48njy0y.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29t4abyd.php:23\n\
    Stack trace:\n#0 /tmp/tmp29t4abyd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp29t4abyd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_z_83gfw.php:20\n\
    Stack trace:\n#0 /tmp/tmp_z_83gfw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_z_83gfw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[0] : $l[1];\n\
    \    $l[1] = $l[0] > $l[1] ? $l[1] : $l[0];\n    return $l[0] > $l[1];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf68yotl0.php:23\n\
    Stack trace:\n#0 /tmp/tmpf68yotl0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf68yotl0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxzl_ppt.php:20\n\
    Stack trace:\n#0 /tmp/tmpyxzl_ppt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyxzl_ppt.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe09i7f53.php:23\n\
    Stack trace:\n#0 /tmp/tmpe09i7f53.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe09i7f53.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpck0yw4fs.php:23\n\
    Stack trace:\n#0 /tmp/tmpck0yw4fs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpck0yw4fs.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if\
    \ there are duplicate values in the array. For example, if `[1, 20, 4, 10]` was\
    \ passed, it would return `true` instead of `false`.\n<|/ c |>\n<| c |>\nIt works,\
    \ try it yourself on `[1, 20, 4, 10]`\n<|/ c |>\n<| c |>\nIt doesn't work if there\
    \ are duplicate values in the array. For example, if `[1, 20, 4, 10]` was passed,\
    \ it would return `true` instead of `false`.\n<|/ c |>\n<| c |>\nIt works, try\
    \ it yourself on `[1, 20, 4, 10]`\n<|/ c |>\n<| c |>\nIt works, try it yourself\
    \ on `[1, 20, 4, 10]`\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpymsrgnc2.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8sp_uko.php:21\n\
    Stack trace:\n#0 /tmp/tmpp8sp_uko.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp8sp_uko.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = $l[0];\n    foreach ($l as $i => $x)\
    \ {\n        if ($x < $s) {\n            return false;\n        }\n        if\
    \ ($x > $s) {\n            return true;\n        }\n        $s = $x;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpionrv26v.php:29\n\
    Stack trace:\n#0 /tmp/tmpionrv26v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpionrv26v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            $s = $v;\n        }\n    }\n    return true;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2,\
    \ 4, 20];\n$arr2 = [1, 2, 4, 20];\n$arr3 = [4, 1, 0, -10];\n$arr4 = [4, 1, 0,\
    \ -10];\n$arr5 = [4, 1, 0, -10];\n$arr6 = [4, 1, 0, -10];\n$arr7 = [4, 1, 0, -10];\n\
    $arr8 = [4, 1, 0, -10];\n$arr9 = [4, 1, 0, -10];\n$arr10 = [4, 1, 0, -10];\n$arr11\
    \ = [4, 1, 0, -10];\n$arr12 = [4, 1, 0, -10];\n$arr13 = [4, 1, 0, -10];\n$arr14\
    \ = [4, 1, 0, -10];\n$arr15 = [4, 1, 0, -10];\n$arr16 = [4, 1, 0, -10];\n$arr17\
    \ = [4, 1, 0, -10];\n$arr18 = [4, 1, 0, -10];\n$arr19 = [4, 1, 0, -10];\n$arr20\
    \ = [4, 1, 0, -10];\n$arr21 = [4, 1, 0, -10];\n$arr22 = [4, 1, 0, -10];\n$arr23\
    \ = [4, 1, 0, -10];\n$arr24 = [4, 1, 0, -10];\n$arr25 = [4, 1, 0, -10];\n$arr26\
    \ = [4, 1, 0, -10];\n$arr27 = [4, 1, 0, -10];\n$arr28 = [4, 1, 0, -10];\n$arr29\
    \ = [4, 1, 0, -10];\n$arr30 = [4, 1, 0, -10];\n$arr31 = [4, 1, 0, -10];\n$arr32\
    \ = [4, 1, 0, -10];\n$arr33 = [4, 1, 0, -10];\n$arr34 = [4, 1, 0, -10];\n$arr35\
    \ = [4, 1, 0, -10];\n$arr36 = [4, 1, 0, -10];\n$arr37 = [4, 1, 0, -10];\n$arr38\
    \ = [4, 1, 0, -10];\n$arr39 = [4, 1, 0, -10];\n$arr40 = [4, 1, 0, -10];\n$arr41\
    \ = [4, 1, 0, -10];\n$arr42 = [4, 1, 0, -10];\n$arr43 = [4, 1, 0, -10];\n$arr44\
    \ = [4, 1, 0, -10];\n$arr45 = [4, 1, 0, -10];\n$arr46 = [1, 20, 4, 10];\n$arr47\
    \ = [4, 1, 0, -10];\n$arr48 = [4, 1, 0, -10];\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8qcslut9.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvjk1c4h.php:22\n\
    Stack trace:\n#0 /tmp/tmpqvjk1c4h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqvjk1c4h.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $n) {\n        if ($n < $s) {\n            return false;\n        }\n      \
    \  $s = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpga44aht9.php:26\n\
    Stack trace:\n#0 /tmp/tmpga44aht9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpga44aht9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n        if\
    \ ($l[$i] <= $l[$j]) {\n            if ($l[$i] <= $l[$k]) {\n                $l[$k]\
    \ = $l[$i];\n            } else {\n                $l[$j] = $l[$i];\n        \
    \    }\n        } else {\n            if ($l[$j] <= $l[$k]) {\n              \
    \  $l[$k] = $l[$j];\n            } else {\n                $l[$i] = $l[$j];\n\
    \            }\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n\
    \    return $l[0] > $l[1] && $l[0] > $l[2] && $l[0] > $l[3];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdywrntt8.php:41\n\
    Stack trace:\n#0 /tmp/tmpdywrntt8.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdywrntt8.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    $l = array_unique($l);\n\
    \    $l = array_map('current', $l);\n    return $l[0] > $l[count($l) - 1];\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: current() expects parameter 1 to be array, int given in /tmp/tmpywsu4w9x.php\
    \ on line 13\n\nWarning: current() expects parameter 1 to be array, int given\
    \ in /tmp/tmpywsu4w9x.php on line 13\n\nWarning: current() expects parameter 1\
    \ to be array, int given in /tmp/tmpywsu4w9x.php on line 13\n\nWarning: current()\
    \ expects parameter 1 to be array, int given in /tmp/tmpywsu4w9x.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywsu4w9x.php:22\nStack\
    \ trace:\n#0 /tmp/tmpywsu4w9x.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpywsu4w9x.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in the array. For example, `monotonic([1, 1, 1])` returns\
    \ `true` instead of `false`.\n<|/ c |>\n<| c |>\n: Yes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\n: I tested it myself and it works. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\n: I tested it myself and it works. Try it yourself.\n<|/ c |>\n\
    <| c |>\n: I tested it myself and it works. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe6wpfewp.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeceyimus.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaadui7e.php:20\n\
    Stack trace:\n#0 /tmp/tmpgaadui7e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgaadui7e.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = array_shift($l);\n    foreach ($l as\
    \ $i => $v) {\n        if ($v <= $n) {\n            return false;\n        }\n\
    \        if ($v >= $n) {\n            return true;\n        }\n        $n = max($v,\
    \ $n);\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuej6hgag.php:29\n\
    Stack trace:\n#0 /tmp/tmpuej6hgag.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuej6hgag.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n    return $l ===\
    \ 0 && count($l) === count(array_unique($l));\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work for me. `monotonic([1,20,4,10])` returns `true`\
    \ when it should be `false`\n<|/ c |>\n<| c |>\nIt returns false for me too. `monotonic([1,20,4,10])`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt returns false for me too. `monotonic([1,20,4,10])`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt returns false for me too. `monotonic([1,20,4,10])`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt returns false for me too. `monotonic([1,20,4,10])`\
    \ returns `false`\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4k9zteb8.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  $l[1] = array_shift($l);\n\
    \  return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpit0unb4d.php:21\n\
    Stack trace:\n#0 /tmp/tmpit0unb4d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpit0unb4d.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbpdb633.php:21\n\
    Stack trace:\n#0 /tmp/tmprbpdb633.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprbpdb633.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for me. `monotonic([4, 1, 0,\
    \ -10])` returns `true` but `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.6 and PHP 7.0.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.6 and PHP 7.0.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and PHP\
    \ 7.0.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and PHP 7.0.\n<|/ c |>\n<| a\
    \ tags=php,sorting |>\nI wrote a function to do this:\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmi43jrwz.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdd7d2k0r.php:22\n\
    Stack trace:\n#0 /tmp/tmpdd7d2k0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdd7d2k0r.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1aa3dxn.php:21\n\
    Stack trace:\n#0 /tmp/tmpa1aa3dxn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa1aa3dxn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $v) {\n        if ($v < $s) {\n            return false;\n        }\n      \
    \  $s = max($s, $v);\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2vouu8z.php:26\n\
    Stack trace:\n#0 /tmp/tmpl2vouu8z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl2vouu8z.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwog8krar.php:21\n\
    Stack trace:\n#0 /tmp/tmpwog8krar.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwog8krar.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $last\
    \ < $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5obxd9o.php:22\n\
    Stack trace:\n#0 /tmp/tmph5obxd9o.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph5obxd9o.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  $l[1] = end($l);\n  return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if\
    \ you have a list of negative numbers, e.g. `[-10, -9, -8, -7, -6, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with negative numbers. I tested it on PHP 5.3.10 and PHP 5.4.4.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers. I tested\
    \ it on PHP 5.3.10 and PHP 5.4.4.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ works with negative numbers. I tested it on PHP 5.3.10 and PHP 5.4.4.\n<|/ c\
    \ |>\n<| c |>\n: I added a version that works with negative numbers. I tested\
    \ it on PHP 5.3.10 and PHP 5.4.4.\n<|/ c |>\n<| a tags=php,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfjmtcyp0.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l = array_slice($l, 1);\n  return $l[0] > $l[count($l)\
    \ - 1];\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nI came up with a solution\
    \ that is very similar to what was suggested in the comments. I used a recursive\
    \ function and I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I used a stack to keep track of\
    \ the elements. I used a stack to keep track of the elements. I used a stack to\
    \ keep track of the elements. I used a stack to keep track of the elements. I\
    \ used a stack to keep track of the elements. I \nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptlldw91s.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $n) {\n        if ($n < $s) {\n            return false;\n        }\n      \
    \  $s = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkum37jqz.php:26\n\
    Stack trace:\n#0 /tmp/tmpkum37jqz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkum37jqz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] < $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbya4k90k.php:23\n\
    Stack trace:\n#0 /tmp/tmpbya4k90k.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbya4k90k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n    $l[1] =\
    \ max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3], $l[0]);\n\
    \    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n</code>\n<|/\
    \ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp13ov3crh.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return array_reduce($l,\
    \ function($a, $b) {\n        return $a && $b || $a < $b;\n    });\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn42nlyrc.php:24\n\
    Stack trace:\n#0 /tmp/tmpn42nlyrc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn42nlyrc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr0ff37g.php:29\n\
    Stack trace:\n#0 /tmp/tmpgr0ff37g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgr0ff37g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ljc_iy8.php:29\n\
    Stack trace:\n#0 /tmp/tmp4ljc_iy8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4ljc_iy8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $i => $e) {\n        if ($e < $s) {\n            return false;\n        }\n\
    \        if ($e > $s) {\n            return true;\n        }\n        $s = $e;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvhkv8oo.php:29\n\
    Stack trace:\n#0 /tmp/tmphvhkv8oo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphvhkv8oo.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $n) {\n        if ($s < $n) {\n            return false;\n        }\n      \
    \  $s = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrnk88bu.php:29\n\
    Stack trace:\n#0 /tmp/tmpsrnk88bu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsrnk88bu.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf66qlrv9.php:29\n\
    Stack trace:\n#0 /tmp/tmpf66qlrv9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf66qlrv9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3igy_x3.php:20\n\
    Stack trace:\n#0 /tmp/tmpc3igy_x3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc3igy_x3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk2pkymn.php:29\n\
    Stack trace:\n#0 /tmp/tmpqk2pkymn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqk2pkymn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = $l[4] =\
    \ $l[5] = $l[6] = $l[7] = $l[8] = $l[9] = $l[10] = $l[11] = $l[12] = $l[13] =\
    \ $l[14] = $l[15] = $l[16] = $l[17] = $l[18] = $l[19] = $l[20] = $l[21] = $l[22]\
    \ = $l[23] = $l[24] = $l[25] = $l[26] = $l[27] = $l[28] = $l[29] = $l[30] = $l[31]\
    \ = $l[32] = $l[33] = $l[34] = $l[35] = $l[36] = $l[37] = $l[38] = $l[39] = $l[40]\
    \ = $l[41] = $l[42] = $l[43] = $l[44] = $l[45] = $l[46] = $l[47] = $l[48] = $l[49]\
    \ = $l[50] = $l[51] = $l[52] = $l[53] = $l[54] = $l[55] = $l[56] = $l[57] = $l[58]\
    \ = $l[59] = $l[60] = $l[61] = $l[62] = $l[63] = $l[64] = $l[65] = $l[66] = $l[67]\
    \ = $l[68] = $l[69] = $l[70] = $l[71] = $l[72] = $l[73] = $l[74] = $l[75] = $l[76]\
    \ = $l[77] = $l[78] = $l[79] = $l[80] = $l[81] = $l[82] = $l[83] = $l[84] = $l[85]\
    \ = $l[86] = $l[87] = $l[88] = $l[89] = $l[90] = $l[91] = $l[92] = $l[93] = $l[94]\
    \ = $l[95] = $l[96] = $l[97] = $l[98] = $l[99] = $l[100] = $l[101] = $l[102] =\
    \ $l[103] = $l[104] = $l[105] = $l[106] = $l[107\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphbpjx3ig.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i = 0; $i < $n;\
    \ ++$i) {\n        if ($l[$i] <= $l[$i - 1]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jek1ex5.php:25\n\
    Stack trace:\n#0 /tmp/tmp9jek1ex5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9jek1ex5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_filter($l, function($v) {\n \
    \       return $v > $v[0];\n    });\n    return count($l) === count(array_unique($l));\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4luh0lg.php:24\n\
    Stack trace:\n#0 /tmp/tmpn4luh0lg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn4luh0lg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj2el0eg.php:20\n\
    Stack trace:\n#0 /tmp/tmppj2el0eg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppj2el0eg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l[0] = $l[0]\
    \ - 1;\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n\
    <| c |>\nThis doesn't work if the first element in the array is greater than the\
    \ last.\n<|/ c |>\n<| c |>\nIt does work, just tested it.  It returns true if\
    \ the first element is greater than the last.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if the first element in the array is less than the last.\n<|/ c |>\n<| c |>\n\
    It does work, just tested it.  It returns true if the first element is greater\
    \ than the last.\n<|/ c |>\n<| c |>\nIt doesn't work if the first element in the\
    \ array is less than the last.\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd964hh3y.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l[0]\
    \ > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_viz2iw.php:22\n\
    Stack trace:\n#0 /tmp/tmpq_viz2iw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq_viz2iw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0hxv9zc.php:22\n\
    Stack trace:\n#0 /tmp/tmph0hxv9zc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph0hxv9zc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxtyinon.php:22\n\
    Stack trace:\n#0 /tmp/tmpfxtyinon.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfxtyinon.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l[0]\
    \ > $last;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis does not\
    \ work for me. `monotonic([4, 1, 0, -10])` returns true.\n<|/ c |>\n<| c |>\n\
    It works for me on PHP 5.3.10. Maybe you have a different PHP version?\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and 5.3.6. Both give me true.\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and 5.3.6. Both give me true.\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and 5.3.6. Both give me true.\n<|/ c\
    \ |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5_svk0q8.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    foreach ($l as $n) {\n        if ($n < 0) {\n            $n = -$n;\n\
    \            $l[$i] = -$l[$i];\n        }\n        if ($n > $l[$i]) {\n      \
    \      $l[$i] = $n;\n        }\n        $i++;\n    }\n    return $l[0] > 0;\n\
    }\n\n/**\n * Returns true if the given value is an integer.\n *\n * @param mixed\
    \ $n The value to test.\n *\n * @return bool\n */\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3otn5rio.php:38\n\
    Stack trace:\n#0 /tmp/tmp3otn5rio.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3otn5rio.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ return $l[0] > $l[1] ? $l[0] : $l[1] > $l[2] ? $l[1] : $l[2] > $l[3] ? $l[2]\
    \ : $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y6eyp49.php:20\n\
    Stack trace:\n#0 /tmp/tmp0y6eyp49.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0y6eyp49.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $n) {\n            return false;\n        }\n\
    \        if ($v > $n) {\n            return true;\n        }\n        $n = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4zh8xny.php:29\n\
    Stack trace:\n#0 /tmp/tmpi4zh8xny.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi4zh8xny.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = -$l[0];\n  return $l[0] > $l[1];\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't seem to work for me. `monotonic([4,\
    \ 1, 0, -10])` returns `true` but `monotonic([4, 1, 0, 10])` returns `false`\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it returns `true`\n<|/ c |>\n\
    <| c |>\nAh, I see now. `monotonic([4, 1, 0, 10])` returns `true` because `-10\
    \ > 10`\n<|/ c |>\n<| c |>\nYes, I see that now. Thanks for your help.\n<|/ c\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdrv3t8bw.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_2y01p66.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n    return $last\
    \ <= $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqm6rbl_6.php:20\n\
    Stack trace:\n#0 /tmp/tmpqm6rbl_6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqm6rbl_6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4s7jhzig.php:23\n\
    Stack trace:\n#0 /tmp/tmp4s7jhzig.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4s7jhzig.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, array_fill(0, count($l),\
    \ 0));\n    $l[0] = 1;\n    foreach ($l as $i => $v) {\n        if ($v != $l[$i])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu90o3sz4.php:28\n\
    Stack trace:\n#0 /tmp/tmpu90o3sz4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu90o3sz4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjebkjh4.php:29\n\
    Stack trace:\n#0 /tmp/tmpzjebkjh4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzjebkjh4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5io39lh.php:21\n\
    Stack trace:\n#0 /tmp/tmpk5io39lh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk5io39lh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI used the solution\
    \ from and modified it a little bit to make it work for arrays of any length.\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm3l2lpty.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $e) {\n        if ($e < $s) {\n            return false;\n        }\n      \
    \  if ($e > $s) {\n            return true;\n        }\n        $s = $e;\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c5q15ay.php:29\n\
    Stack trace:\n#0 /tmp/tmp1c5q15ay.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1c5q15ay.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis works perfectly\
    \ for me too. Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me. Thanks!\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcjr1wvkt.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmyi2eub.php:20\n\
    Stack trace:\n#0 /tmp/tmpkmyi2eub.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkmyi2eub.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't work if the\
    \ array is `[4, 1, 0, -10]`\n<|/ c |>\n<| c |>\nIt does work. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you try it with `[4, 1, 0, -10]`\n<|/ c\
    \ |>\n<| c |>\nIt does work. Try it yourself.\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try it yourself.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcxvj1f2b.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n    return\
    \ $l[0] > $l[count($l)-1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpskvqsfu8.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i = 0; $i < $n;\
    \ ++$i) {\n        if ($l[$i] < $l[$i - 1]) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwk7pd02.php:25\n\
    Stack trace:\n#0 /tmp/tmpfwk7pd02.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfwk7pd02.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7bin0qzr.php:22\n\
    Stack trace:\n#0 /tmp/tmp7bin0qzr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7bin0qzr.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l[0]\
    \ > $last;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nI wrote a function\
    \ that checks if a list has monotonically increasing or decreasing elements. \n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpneko2bal.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1] : $l[0];\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb94cd4j4.php:20\n\
    Stack trace:\n#0 /tmp/tmpb94cd4j4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpb94cd4j4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n <= 1) {\n  \
    \      return true;\n    }\n    $m = $n-1;\n    $left = $l[0];\n    $right = $l[$m];\n\
    \    for ($i = 1; $i < $n; ++$i) {\n        $left = $l[$i];\n        $right =\
    \ $l[$m];\n        if ($left < $right) {\n            $m--;\n        }\n     \
    \   if ($left > $right) {\n            $m++;\n        }\n        if ($m == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph93ix1bj.php:41\n\
    Stack trace:\n#0 /tmp/tmph93ix1bj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmph93ix1bj.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] < $l[count($l)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qte5vm_.php:20\n\
    Stack trace:\n#0 /tmp/tmp3qte5vm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3qte5vm_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3ygf52s.php:20\n\
    Stack trace:\n#0 /tmp/tmpx3ygf52s.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx3ygf52s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04dm4aug.php:29\n\
    Stack trace:\n#0 /tmp/tmp04dm4aug.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp04dm4aug.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] < $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97s8205z.php:23\n\
    Stack trace:\n#0 /tmp/tmp97s8205z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp97s8205z.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return $l[0] > $l[count($l)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejs05ik_.php:22\n\
    Stack trace:\n#0 /tmp/tmpejs05ik_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpejs05ik_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl9lzp_3.php:20\n\
    Stack trace:\n#0 /tmp/tmpyl9lzp_3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyl9lzp_3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($m == 0) return true;\n    for ($i = 0; $i < $m; $i++) {\n        if\
    \ ($l[$i] <= $l[$m]) return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtthds8n.php:25\n\
    Stack trace:\n#0 /tmp/tmprtthds8n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprtthds8n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n    $l[1] =\
    \ max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3], $l[0]);\n\
    \    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_tu_uya.php:23\n\
    Stack trace:\n#0 /tmp/tmpc_tu_uya.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc_tu_uya.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ foreach ($l as $n) {\n        if ($n < 0) {\n            return false;\n   \
    \     }\n        if ($n > 0) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxderwr8.php:28\n\
    Stack trace:\n#0 /tmp/tmpvxderwr8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvxderwr8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppz7rua2i.php:22\n\
    Stack trace:\n#0 /tmp/tmppz7rua2i.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppz7rua2i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_filter($l, function($v) { return\
    \ $v > 0; });\n    return $l[0] > $l[count($l)-1];\n}\n</code>\n<|/ a |>\n<| a\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpies64h8q.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fkv19bc.php:22\n\
    Stack trace:\n#0 /tmp/tmp8fkv19bc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8fkv19bc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmicco4a_.php:22\n\
    Stack trace:\n#0 /tmp/tmpmicco4a_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmicco4a_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ foreach ($l as $n) {\n        if ($n < 0) {\n            return false;\n   \
    \     }\n        $l[$n + 1] = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm9y7uyl.php:28\n\
    Stack trace:\n#0 /tmp/tmpcm9y7uyl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcm9y7uyl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = $l[0];\n    $e = $l[count($l)-1];\n\
    \    return ($e < $s) || ($s == $e);\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon3bk6tz.php:23\n\
    Stack trace:\n#0 /tmp/tmpon3bk6tz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpon3bk6tz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in your array. Try `monotonic([-1, -10, -20,\
    \ -30])`\n<|/ c |>\n<| c |>\n: Yes, it does. Try it yourself.\n<|/ c |>\n<| c\
    \ |>\n: I added a version that works with negative numbers too.\n<|/ c |>\n<|\
    \ c |>\n: I added a version that works with negative numbers too.\n<|/ c |>\n\
    <| c |>\n: I added a version that works with negative numbers too.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpssh4vjlk.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like the idea of using negative\
    \ numbers to indicate decreasing.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp55mmmfd3.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($m == 0) return true;\n    if ($l[$m] < $l[$n]) {\n        for ($i =\
    \ $m; $i >= 0; $i--) {\n            if ($l[$i] > $l[$m]) {\n                return\
    \ false;\n            }\n        }\n    } else {\n        for ($i = $m; $i >=\
    \ 0; $i--) {\n            if ($l[$i] < $l[$m]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96d1b_1_.php:37\n\
    Stack trace:\n#0 /tmp/tmp96d1b_1_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp96d1b_1_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    for($i = 0; $i < $n; $i++) {\n        $x = $l[$i];\n        $y = $l[$m];\n\
    \        if($x < $y) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnybwobu2.php:30\n\
    Stack trace:\n#0 /tmp/tmpnybwobu2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnybwobu2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] > $l[count($l)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sh83b78.php:22\n\
    Stack trace:\n#0 /tmp/tmp7sh83b78.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7sh83b78.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6igjo7l1.php:20\n\
    Stack trace:\n#0 /tmp/tmp6igjo7l1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6igjo7l1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n    return $l > $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra8t75g_.php:22\n\
    Stack trace:\n#0 /tmp/tmpra8t75g_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpra8t75g_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($n <= 1) {\n        return true;\n    }\n    $i = 0;\n    $j = 0;\n \
    \   while ($i < $m) {\n        if ($l[$i] <= $l[$j]) {\n            $i++;\n  \
    \      } else {\n            $j++;\n        }\n    }\n    return ($l[$i] > $l[$j]);\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvy7x0ck.php:33\n\
    Stack trace:\n#0 /tmp/tmpzvy7x0ck.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzvy7x0ck.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    foreach ($l as $n) {\n        if ($n != $i) {\n            return\
    \ false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uw4_byz.php:27\n\
    Stack trace:\n#0 /tmp/tmp0uw4_byz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0uw4_byz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l[0]\
    \ > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjeagb8ni.php:22\n\
    Stack trace:\n#0 /tmp/tmpjeagb8ni.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjeagb8ni.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fvgaqpc.php:20\n\
    Stack trace:\n#0 /tmp/tmp9fvgaqpc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9fvgaqpc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ foreach ($l as $n) {\n        if ($n < 0) {\n            return false;\n   \
    \     }\n        if ($n > 0) {\n            return true;\n        }\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0fjkdl3.php:30\n\
    Stack trace:\n#0 /tmp/tmpw0fjkdl3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw0fjkdl3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ return $l[0] > $l[1] ? $l[0] : $l[1] > $l[2] ? $l[1] : $l[2] > $l[3] ? $l[2]\
    \ : $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplz2sblg.php:20\n\
    Stack trace:\n#0 /tmp/tmpplz2sblg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpplz2sblg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n    $l[1] =\
    \ max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3], $l[0]);\n\
    \    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86_ekreq.php:23\n\
    Stack trace:\n#0 /tmp/tmp86_ekreq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp86_ekreq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n        if\
    \ ($l[$i] <= $l[$j]) {\n            if ($l[$i] <= $l[$k]) {\n                $l[$i]\
    \ = $l[$j];\n            } else {\n                $l[$i] = $l[$k];\n        \
    \    }\n        } else {\n            if ($l[$j] <= $l[$k]) {\n              \
    \  $l[$j] = $l[$k];\n            } else {\n                $l[$j] = $l[$i];\n\
    \            }\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumotqgoy.php:41\n\
    Stack trace:\n#0 /tmp/tmpumotqgoy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpumotqgoy.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            $s = $v;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljopstas.php:28\n\
    Stack trace:\n#0 /tmp/tmpljopstas.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpljopstas.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ccjng3q.php:22\n\
    Stack trace:\n#0 /tmp/tmp2ccjng3q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2ccjng3q.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = -$l[0];\n  return $l[0] > $l[1];\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't seem to work\
    \ for me. `monotonic([4, 1, 0, -10])` returns `true` but `monotonic([4, 1, 0,\
    \ 10])` returns `false`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works.\
    \ I guess you have a different PHP version.\n<|/ c |>\n<| c |>\nI tested it on\
    \ PHP 5.5.9 and it works. I guess you have a different PHP version.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.5.9 and it works. I guess you have a different PHP\
    \ version.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I guess\
    \ you have a different PHP version.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqvjhrwbd.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nI like the idea of using negative numbers\
    \ to represent increasing or decreasing, but this doesn't work for `monotonic([4,\
    \ 1, 0, -10])` because `-10` is greater than `0`.\n<|/ c |>\n<| c |>\n: I see\
    \ what you mean. I've updated my answer to handle that case.\n<|/ c |>\n<| c |>\n\
    I like the idea of using negative numbers to represent increasing or decreasing,\
    \ but this doesn't work for `monotonic([4, 1, 0, -10])` because `-10` is greater\
    \ than `0`.\n<|/ c |>\n<| c |>\n: I see what you mean. I've updated my answer\
    \ to handle that case.\n<|/ c |>\n<| c |>\nI like the idea of using negative numbers\
    \ to represent increasing or decreasing, but this doesn't work for `monotonic([4,\
    \ 1, 0, -10])` because `-10` is greater than `0`.\n<|/ c |>\n<| a tags=php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3vsi_uq_.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptsgduxjj.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8y9jre3.php:20\n\
    Stack trace:\n#0 /tmp/tmpd8y9jre3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd8y9jre3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    foreach ($l as $n) {\n        if ($n < $l[$i]) {\n            return\
    \ false;\n        }\n        if ($n > $l[$i - 1]) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgt768z7.php:32\n\
    Stack trace:\n#0 /tmp/tmpdgt768z7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdgt768z7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $last\
    \ < $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87ded3n5.php:22\n\
    Stack trace:\n#0 /tmp/tmp87ded3n5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp87ded3n5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[0] : $l[1];\n\
    \    $l[1] = $l[0] < $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgepxgdsw.php:23\n\
    Stack trace:\n#0 /tmp/tmpgepxgdsw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgepxgdsw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return $l[0] > $l[count($l)-1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25uhdxq1.php:22\n\
    Stack trace:\n#0 /tmp/tmp25uhdxq1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp25uhdxq1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return array_reduce($l,\
    \ '==', true);\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_reduce() expects parameter 2 to be a valid callback, function\
    \ '==' not found or invalid function name in /tmp/tmp959kz6jq.php on line 12\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp959kz6jq.php:20\nStack\
    \ trace:\n#0 /tmp/tmp959kz6jq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp959kz6jq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ return $l[0] > $l[1] ? $l[0] : $l[1] > $l[2] ? $l[1] : $l[2] > $l[3] ? $l[2]\
    \ : $l[3];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx30dztq9.php:20\n\
    Stack trace:\n#0 /tmp/tmpx30dztq9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx30dztq9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8ya9uiz.php:20\n\
    Stack trace:\n#0 /tmp/tmpk8ya9uiz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk8ya9uiz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like this\
    \ one. Very elegant and simple.\n<|/ c |>\n<| a dscore=2 |>\nI came up with a\
    \ simple solution that works well for me:\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprrzj5zps.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4z8g_r8.php:25\n\
    Stack trace:\n#0 /tmp/tmpm4z8g_r8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm4z8g_r8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if\
    \ the first element in the array is greater than the last.\n<|/ c |>\n<| c |>\n\
    : It does. Try it yourself.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself.\
    \ It returns `true` if the first element in the array is greater than the last.\n\
    <|/ c |>\n<| c |>\n: It does work. Try it yourself. It returns `true` if the first\
    \ element in the array is greater than the last.\n<|/ c |>\n<| c |>\n: It does\
    \ work. Try it yourself. It returns `true` if the first element in the array is\
    \ greater than the last.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzcanz8a1.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n    return $l > $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahx9ahq4.php:22\n\
    Stack trace:\n#0 /tmp/tmpahx9ahq4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpahx9ahq4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposgoga2x.php:21\n\
    Stack trace:\n#0 /tmp/tmposgoga2x.php(31): test()\n#1 {main}\n  thrown in /tmp/tmposgoga2x.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] < $l[count($l)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ebl4ra_.php:20\n\
    Stack trace:\n#0 /tmp/tmp9ebl4ra_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9ebl4ra_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ < $l[count($l)-1];\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\n\
    This doesn't work for me. `monotonic([4, 1, 0, -10])` returns true.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.3.10 and it returns true.\n<|/ c |>\n<| c |>\nI\
    \ tested it on PHP 5.3.10 and it returns true.\n<|/ c |>\n<| c |>\nI tested it\
    \ on PHP 5.3.10 and it returns true.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10\
    \ and it returns true.\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp64u4umpz.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8yvxlj4.php:29\n\
    Stack trace:\n#0 /tmp/tmpx8yvxlj4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx8yvxlj4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($n <= 1) return false;\n    for ($i = 0; $i < $m; $i++) {\n        if\
    \ ($l[$i] > $l[$i + 1]) return false;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu1c0yk1.php:25\n\
    Stack trace:\n#0 /tmp/tmpzu1c0yk1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzu1c0yk1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $v) {\n        if ($v < $s) {\n            return false;\n        }\n      \
    \  if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst7mxp_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpst7mxp_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpst7mxp_4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[0] : $l[1];\n\
    \    $l[1] = $l[0] > $l[1] ? $l[1] : $l[0];\n    return $l[0] > $l[1];\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,sorting,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_vntpt5x.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(\n    array('id' => 1, 'name' => 'A'),\n\
    \    array('id' => 2, 'name' => 'B'),\n    array('id' => 3, 'name' => 'C'),\n\
    \    array('id' => 4, 'name' => 'D'),\n    array('id' => 5, 'name' => 'E'),\n\
    \    array('id' => 6, 'name' => 'F'),\n    array('id' => 7, 'name' => 'G'),\n\
    \    array('id' => 8, 'name' => 'H'),\n    array('id' => 9, 'name' => 'I'),\n\
    \    array('id' => 10, 'name' => 'J'),\n    array('id' => 11, 'name' => 'K'),\n\
    \    array('id' => 12, 'name' => 'L'),\n    array('id' => 13, 'name' => 'M'),\n\
    \    array('id' => 14, 'name' => 'N'),\n    array('id' => 15, 'name' => 'O'),\n\
    \    array('id' => 16, 'name' => 'P'),\n    array('id' => 17, 'name' => 'Q'),\n\
    \    array('id' => 18, 'name' => 'R'),\n    array('id' => 19, 'name' => 'S'),\n\
    \    array('id' => 20, 'name' => 'T'),\n    array('id' => 21, 'name' => 'U'),\n\
    \    array('id' => 22, 'name' => 'V'),\n    array('id' => 23, 'name' => 'W'),\n\
    \    array('id' => 24, 'name' => 'X'),\n    array('id' => 25, 'name' => 'Y'),\n\
    \    array('id' => 26, 'name' => 'Z'),\n);\n\n$array = array_map(function($a){\n\
    \    return $a['id'];\n}, $array);\n\n$array = array_unique($array);\n\n$array\
    \ = array_values($array);\n\n$array = array_flip($array);\n\n$array = array_flip($array);\n\
    \n$array = array_flip($array);\n\n$array = array_flip($array);\n\n$array = array_flip($array);\n\
    \n$array = array_flip($array);\n\n$array = array_flip($array);\n\n$array = array_flip($array);\n\
    \n$array = array_flip($array);\n\n$array = array_flip($array);\n\n$array = array_flip($array);\n\
    \n$array = array_flip($array);\n\n$\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc_o5i_wi.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\nI wrote a function\
    \ that checks if a list is monotonically increasing or decreasing.\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjp1eelj9.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $v) {\n        if ($v < $s) {\n            return false;\n        }\n      \
    \  $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zwf2u4h.php:26\n\
    Stack trace:\n#0 /tmp/tmp1zwf2u4h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1zwf2u4h.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $v) {\n        if ($v < $s) {\n            return false;\n        }\n      \
    \  if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n   \
    \ }\n    return true;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This doesn't work for me. `monotonic([4, 1, 0, -10])` returns `true` but should\
    \ be `false`.\n<|/ c |>\n<| c |>\nIt works for me. `monotonic([4, 1, 0, -10])`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt works for me too. `monotonic([4, 1, 0,\
    \ -10])` returns `false`\n<|/ c |>\n<| c |>\nIt works for me too. `monotonic([4,\
    \ 1, 0, -10])` returns `false`\n<|/ c |>\n<| c |>\nIt works for me too. `monotonic([4,\
    \ 1, 0, -10])` returns `false`\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf2kzbg_v.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtdz1hj2.php:20\n\
    Stack trace:\n#0 /tmp/tmprtdz1hj2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprtdz1hj2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n    return $l[0]\
    \ > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl6h9cdp.php:20\n\
    Stack trace:\n#0 /tmp/tmptl6h9cdp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptl6h9cdp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr1iqj7tv.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $last\
    \ < $l[0] || $l[0] < $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hzlkjd7.php:22\n\
    Stack trace:\n#0 /tmp/tmp0hzlkjd7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0hzlkjd7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9camhpj.php:22\n\
    Stack trace:\n#0 /tmp/tmpi9camhpj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi9camhpj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| a dscore=0 |>\n<code>\n$arr =\
    \ array(\n    array(\n        'id' => 1,\n        'name' => 'a',\n        'value'\
    \ => 1\n    ),\n    array(\n        'id' => 2,\n        'name' => 'b',\n     \
    \   'value' => 2\n    ),\n    array(\n        'id' => 3,\n        'name' => 'c',\n\
    \        'value' => 3\n    ),\n    array(\n        'id' => 4,\n        'name'\
    \ => 'd',\n        'value' => 4\n    ),\n    array(\n        'id' => 5,\n    \
    \    'name' => 'e',\n        'value' => 5\n    ),\n    array(\n        'id' =>\
    \ 6,\n        'name' => 'f',\n        'value' => 6\n    ),\n    array(\n     \
    \   'id' => 7,\n        'name' => 'g',\n        'value' => 7\n    ),\n    array(\n\
    \        'id' => 8,\n        'name' => 'h',\n        'value' => 8\n    ),\n  \
    \  array(\n        'id' => 9,\n        'name' => 'i',\n        'value' => 9\n\
    \    ),\n    array(\n        'id' => 10,\n        'name' => 'j',\n        'value'\
    \ => 10\n    ),\n    array(\n        'id' => 11,\n        'name' => 'k',\n   \
    \     'value' => 11\n    ),\n    array(\n        'id' => 12,\n        'name' =>\
    \ 'l',\n        'value' => 12\n    ),\n    array(\n        'id' => 13,\n     \
    \   'name' => 'm',\n        'value' => 13\n    ),\n    array(\n        'id' =>\
    \ 14,\n        'name' => 'n',\n        'value' => 14\n    ),\n    array(\n   \
    \     'id' => 15,\n        'name' => 'o',\n        'value' => 15\n    ),\n   \
    \ array(\n        'id' => 16,\n        'name' => 'p',\n        'value' => 16\n\
    \    ),\n    array(\n        'id' => 17,\n        'name' => 'q',\n        'value'\
    \ => 17\n    ),\n    array(\n        'id' => 18,\n        'name' => 'r',\n   \
    \     'value' => 18\n    ),\n    array(\n        'id' => 19,\n        'name' =>\
    \ 's',\n        'value' => 19\n    ),\n    array(\n        'id' => 20,\n     \
    \   'name' => 't',\n        'value' => 20\n    ),\n    array(\n        'id' =>\
    \ 21,\n        'name' => 'u',\n        'value' => 21\n    ),\n    array(\n   \
    \     'id' => 22,\n        'name' => 'v',\n        'value' => 22\n    ),\n   \
    \ array(\n        'id' => 23,\n        'name\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplm_sm6hn.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work if the first element of the array is greater than the last.\n<|/ c |>\n\
    <| c |>\n: It does. Try it yourself.\n<|/ c |>\n<| c |>\n: It does. Try it yourself.\
    \ It returns true if the first element of the array is greater than the last.\n\
    <|/ c |>\n<| c |>\n: It does. Try it yourself. It returns true if the first element\
    \ of the array is greater than the last.\n<|/ c |>\n<| c |>\n: It does. Try it\
    \ yourself. It returns true if the first element of the array is greater than\
    \ the last.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptycxkfzg.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzssez17o.php:20\n\
    Stack trace:\n#0 /tmp/tmpzssez17o.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzssez17o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $n = count($l);\n    for ($i = 0; $i < $n; ++$i) {\n        if ($l[$i] <= $l[$i\
    \ + 1]) {\n            $l[$i + 1] = $l[$i];\n        }\n    }\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66uyxpdh.php:26\n\
    Stack trace:\n#0 /tmp/tmp66uyxpdh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp66uyxpdh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    $l = array_unique($l);\n\
    \    $l = array_reverse($l);\n    return $l == array_reverse($l);\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a list like `[1, 1,\
    \ 2, 3]`\n<|/ c |>\n<| c |>\nI added a version that works with that case\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe9fpg97x.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        if ($l[$i] <= $l[$i - 1]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27c2a6nl.php:25\n\
    Stack trace:\n#0 /tmp/tmp27c2a6nl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp27c2a6nl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v > $n) {\n            return false;\n        }\n\
    \        if ($v < $n) {\n            return true;\n        }\n        $n = $v;\n\
    \    }\n    return true;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ does not work if the first element in the array is greater than the last.\n\
    <|/ c |>\n<| c |>\nIt does work, try it out. `monotonic([4, 1, 0, -10])` returns\
    \ `true`.\n<|/ c |>\n<| c |>\nI tested it and it does not work. `monotonic([4,\
    \ 1, 0, -10])` returns `true` when it should be `false`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it out. `monotonic([4, 1, 0, -10])` returns `true`.\n<|/ c |>\n\
    <| c |>\nI tested it and it does not work. `monotonic([4, 1, 0, -10])` returns\
    \ `true` when it should be `false`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiimkjwtw.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3uw86jw.php:21\n\
    Stack trace:\n#0 /tmp/tmpq3uw86jw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq3uw86jw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n        if\
    \ ($l[$i] < $l[$j]) {\n            if ($l[$i] < $l[$k]) {\n                $l[$k]\
    \ = $l[$i];\n                $l[$i] = $l[$j];\n                $l[$j] = $k;\n\
    \                $k = $i;\n                $i = $j;\n                $j = $k;\n\
    \            } else {\n                $l[$k] = $l[$i];\n                $l[$i]\
    \ = $l[$j];\n                $l[$j] = $k;\n                $k = $i;\n        \
    \        $i = $j;\n                $j = $k;\n            }\n        } else {\n\
    \            if ($l[$i] > $l[$k]) {\n                $l[$k] = $l[$i];\n      \
    \          $l[$i] = $l[$j];\n                $l[$j] = $k;\n                $k\
    \ = $i;\n                $i = $j;\n                $j = $k;\n            } else\
    \ {\n                $l[$k] = $l[$i];\n                $l[$i] = $l[$j];\n    \
    \            $l[$j] = $k;\n                $k = $i;\n                $i = $j;\n\
    \                $j = $k;\n            }\n        }\n    }\n    return $l[0] >\
    \ $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi59h081e.php:20\n\
    Stack trace:\n#0 /tmp/tmpi59h081e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi59h081e.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n <= 1) {\n  \
    \      return true;\n    }\n    $i = 0;\n    $j = $n - 1;\n    $k = $n - 2;\n\
    \    while ($i < $j) {\n        if ($l[$i] <= $l[$j]) {\n            if ($l[$i]\
    \ <= $l[$k]) {\n                return false;\n            }\n            $i++;\n\
    \        } else {\n            if ($l[$j] <= $l[$k]) {\n                return\
    \ false;\n            }\n            $j--;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zodft0t.php:39\n\
    Stack trace:\n#0 /tmp/tmp4zodft0t.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp4zodft0t.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n    return $l[0]\
    \ > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02ow5d24.php:20\n\
    Stack trace:\n#0 /tmp/tmp02ow5d24.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp02ow5d24.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp918ismmi.php:20\n\
    Stack trace:\n#0 /tmp/tmp918ismmi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp918ismmi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ foreach ($l as $n) {\n        if ($n < 0) {\n            return false;\n   \
    \     }\n        if ($n > 0) {\n            return true;\n        }\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpld0bggot.php:30\n\
    Stack trace:\n#0 /tmp/tmpld0bggot.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpld0bggot.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_values($l);\n    $l[0] = $l[1]\
    \ = $l[2] = $l[3] = 0;\n    foreach ($l as $i => $v) {\n        if ($v < $l[($i\
    \ + 1) % 4] || ($v > $l[($i + 2) % 4] &&\n            $v < $l[($i + 3) % 4]))\n\
    \            return false;\n    }\n    return true;\n}\n\n/**\n * Returns true\
    \ if the passed value is an integer.\n *\n * @param mixed $value Value to check\n\
    \ * @return bool\n */\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q3ic59x.php:34\n\
    Stack trace:\n#0 /tmp/tmp4q3ic59x.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4q3ic59x.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu78q87xi.php:21\n\
    Stack trace:\n#0 /tmp/tmpu78q87xi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpu78q87xi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $l[0]\
    \ > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40k6ss33.php:22\n\
    Stack trace:\n#0 /tmp/tmp40k6ss33.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp40k6ss33.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n    foreach ($l\
    \ as $item) {\n        if ($item < $last) {\n            return false;\n     \
    \   }\n        $last = $item;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4i3n8x0g.php:26\n\
    Stack trace:\n#0 /tmp/tmp4i3n8x0g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4i3n8x0g.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ return $l[0] > $l[1] ? $l[0] : $l[1] > $l[2] ? $l[1] : $l[2] > $l[3] ? $l[2]\
    \ : $l[3];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like your solution,\
    \ however it only works with arrays with 4 elements. I modified it a bit to work\
    \ with arrays with any number of elements. I posted my answer below.\n<|/ c |>\n\
    <| a tags=php,arrays |>\nI modified the code from to work with arrays with any\
    \ number of elements. I posted my answer below.\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2n7vetmx.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, array_fill(0, count($l),\
    \ 0));\n    $l[0] = 1;\n    $l[] = 0;\n    $l[] = 1;\n    $l[] = 0;\n    $l[]\
    \ = 1;\n    $l[] = 0;\n    return $l[0] < $l[count($l)-1];\n}\n</code>\n<|/ a\
    \ dscore=4 |>\n<| c |>\nThis solution is very elegant, but is very slow. On a\
    \ large array (>10000 elements) it takes about 2 seconds to complete.\n<|/ c |>\n\
    <| c |>\nI tested this on a large array (>10000 elements) and it took about 1.5\
    \ seconds to complete.\n<|/ c |>\n<| c |>\nI tested this on a large array (>10000\
    \ elements) and it took about 1.5 seconds to complete.\n<|/ c |>\n<| c |>\nI tested\
    \ this on a large array (>10000 elements) and it took about 1.5 seconds to complete.\n\
    <|/ c |>\n<| c |>\nI tested this on a large array (>10000 elements) and it took\
    \ about 1.5 seconds to complete.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkz8cu_r0.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = $l[4] =\
    \ $l[5] = $l[6] = $l[7] = $l[8] = $l[9] = $l[10] = $l[11] = $l[12] = $l[13] =\
    \ $l[14] = $l[15] = $l[16] = $l[17] = $l[18] = $l[19] = $l[20] = $l[21] = $l[22]\
    \ = $l[23] = $l[24] = $l[25] = $l[26] = $l[27] = $l[28] = $l[29] = $l[30] = $l[31]\
    \ = $l[32] = $l[33] = $l[34] = $l[35] = $l[36] = $l[37] = $l[38] = $l[39] = $l[40]\
    \ = $l[41] = $l[42] = $l[43] = $l[44] = $l[45] = $l[46] = $l[47] = $l[48] = $l[49]\
    \ = $l[50] = $l[51] = $l[52] = $l[53] = $l[54] = $l[55] = $l[56] = $l[57] = $l[58]\
    \ = $l[59] = $l[60] = $l[61] = $l[62] = $l[63] = $l[64] = $l[65] = $l[66] = $l[67]\
    \ = $l[68] = $l[69] = $l[70] = $l[71] = $l[72] = $l[73] = $l[74] = $l[75] = $l[76]\
    \ = $l[77] = $l[78] = $l[79] = $l[80] = $l[81] = $l[82] = $l[83] = $l[84] = $l[85]\
    \ = $l[86] = $l[87] = $l[88] = $l[89] = $l[90] = $l[91] = $l[92] = $l[93] = $l[94]\
    \ = $l[95] = $l[96] = $l[97] = $l[98] = $l[99] = $l[100] = $l[101] = $l[102] =\
    \ $l[103] = $l[104] = $l[105] = $l[106] = $l[107\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpif8vpzcu.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzz84b17.php:20\n\
    Stack trace:\n#0 /tmp/tmpgzz84b17.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgzz84b17.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($m == 0) {\n        return true;\n    }\n    $i = 0;\n    $j = 0;\n \
    \   while ($i < $n && $j < $m) {\n        if ($l[$i] <= $l[$j]) {\n          \
    \  $i++;\n        }\n        else {\n            $j++;\n        }\n    }\n   \
    \ if ($i == $n) {\n        return true;\n    }\n    if ($j == $m) {\n        return\
    \ false;\n    }\n    return $l[$i] > $l[$j];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6sawkru.php:42\n\
    Stack trace:\n#0 /tmp/tmph6sawkru.php(50): test()\n#1 {main}\n  thrown in /tmp/tmph6sawkru.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's easy to understand.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly and it's easy to understand.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ easy to understand.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's easy to understand.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's easy to understand.\n<|/ c\
    \ |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgogh74vk.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_unvlz6s.php:29\n\
    Stack trace:\n#0 /tmp/tmp_unvlz6s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_unvlz6s.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    foreach ($l as $i => $v) {\n        if ($v < $l[$m]) {\n            return\
    \ false;\n        }\n        if ($v > $l[$i]) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm62ef5dh.php:31\n\
    Stack trace:\n#0 /tmp/tmpm62ef5dh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm62ef5dh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_y4qmoco.php:20\n\
    Stack trace:\n#0 /tmp/tmp_y4qmoco.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_y4qmoco.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] < $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjsg4qml.php:23\n\
    Stack trace:\n#0 /tmp/tmpmjsg4qml.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmjsg4qml.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis doesn't\
    \ work if the array is `[4, 1, 0, -10]`\n<|/ c |>\n<| c |>\nIt doesn't work because\
    \ `array_reverse` reverses the array in place. `array_shift` returns the first\
    \ element of the array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array.\
    \ `array_reverse` returns the reversed array. `array_shift` returns the first\
    \ element of the reversed array. `array_reverse` returns the reversed array. `array_shift`\
    \ returns the first element of the reversed array. `array_reverse` returns the\
    \ reversed array. `array_shift` returns the first element of the reversed array\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpspbo79_f.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_values($l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57je20mo.php:22\n\
    Stack trace:\n#0 /tmp/tmp57je20mo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp57je20mo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n    $l[1] =\
    \ max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3], $l[0]);\n\
    \    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n</code>\n<|/\
    \ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = array(\n\
    \    array(\n        'id' => 1,\n        'name' => 'John',\n        'age' => 30\n\
    \    ),\n    array(\n        'id' => 2,\n        'name' => 'Jane',\n        'age'\
    \ => 20\n    ),\n    array(\n        'id' => 3,\n        'name' => 'Jack',\n \
    \       'age' => 40\n    ),\n    array(\n        'id' => 4,\n        'name' =>\
    \ 'Jill',\n        'age' => 50\n    ),\n    array(\n        'id' => 5,\n     \
    \   'name' => 'Jack',\n        'age' => 40\n    ),\n    array(\n        'id' =>\
    \ 6,\n        'name' => 'Jill',\n        'age' => 50\n    ),\n    array(\n   \
    \     'id' => 7,\n        'name' => 'Jane',\n        'age' => 20\n    ),\n   \
    \ array(\n        'id' => 8,\n        'name' => 'Jack',\n        'age' => 40\n\
    \    ),\n    array(\n        'id' => 9,\n        'name' => 'Jill',\n        'age'\
    \ => 50\n    ),\n    array(\n        'id' => 10,\n        'name' => 'Jack',\n\
    \        'age' => 40\n    ),\n    array(\n        'id' => 11,\n        'name'\
    \ => 'Jill',\n        'age' => 50\n    ),\n    array(\n        'id' => 12,\n \
    \       'name' => 'Jane',\n        'age' => 20\n    ),\n    array(\n        'id'\
    \ => 13,\n        'name' => 'Jack',\n        'age' => 40\n    ),\n    array(\n\
    \        'id' => 14,\n        'name' => 'Jill',\n        'age' => 50\n    ),\n\
    \    array(\n        'id' => 15,\n        'name' => 'Jack',\n        'age' =>\
    \ 40\n    ),\n    array(\n        'id' => 16,\n        'name' => 'Jill',\n   \
    \     'age' => 50\n    ),\n    array(\n        'id' => 17,\n        'name' =>\
    \ 'Jane',\n        'age' => 20\n    ),\n    array(\n        'id' => 18,\n    \
    \    'name' => 'Jack',\n        'age' => 40\n    ),\n    array(\n        'id'\
    \ => 19,\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd4xzgw5v.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $n) {\n        if ($s < $n) {\n            return false;\n        }\n      \
    \  $s = $n;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd61519eh.php:29\n\
    Stack trace:\n#0 /tmp/tmpd61519eh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd61519eh.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzmbs_qp.php:23\n\
    Stack trace:\n#0 /tmp/tmpyzmbs_qp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyzmbs_qp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceoohoq4.php:21\n\
    Stack trace:\n#0 /tmp/tmpceoohoq4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpceoohoq4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ < $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0eld23sl.php:20\n\
    Stack trace:\n#0 /tmp/tmp0eld23sl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0eld23sl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjp2yb0q.php:20\n\
    Stack trace:\n#0 /tmp/tmpbjp2yb0q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbjp2yb0q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[1];\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel, just use an existing solution.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel,\
    \ just use an existing solution.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel, just use an existing solution.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel,\
    \ just use an existing solution.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel, just use an existing solution.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxei6btvq.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4xjhhm_.php:22\n\
    Stack trace:\n#0 /tmp/tmpn4xjhhm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpn4xjhhm_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    $l = array_unique($l);\n\
    \    $l = array_reverse($l);\n    $l = array_slice($l, 0, -1);\n    $l = array_reverse($l);\n\
    \    return $l == $l;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI love this solution.\
    \ Very elegant. Thank you.\n<|/ c |>\n<| c |>\nI love this solution. Very elegant.\
    \ Thank you.\n<|/ c |>\n<| c |>\nI love this solution. Very elegant. Thank you.\n\
    <|/ c |>\n<| c |>\nI love this solution. Very elegant. Thank you.\n<|/ c |>\n\
    <| c |>\nI love this solution. Very elegant. Thank you.\n<|/ c |>\n<| a dscore=5\
    \ |>\nI wrote a function that does this in PHP:\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2jopucmo.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if the first\
    \ element in the array is negative.\n<|/ c |>\n<| c |>\nThis doesn't work if the\
    \ first element in the array is negative.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if the first element in the array is negative.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the first element in the array is negative.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if the first element in the array is negative.\n<|/ c |>\n<| a\
    \ dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdi3ks8u1.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3] = 0;\n   \
    \ foreach ($l as $i => $v) {\n        if ($v < $l[0]) {\n            $l[0] = $v;\n\
    \        } elseif ($v > $l[3]) {\n            $l[3] = $v;\n        }\n    }\n\
    \    return $l[0] > $l[3];\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ seem to work. `monotonic([1, 2, 4, 20])` returns `true` but `monotonic([1, 20,\
    \ 4, 10])` returns `false`\n<|/ c |>\n<| c |>\nIt works for me. `monotonic([1,\
    \ 2, 4, 20])` returns `true` but `monotonic([1, 20, 4, 10])` returns `false`\n\
    <|/ c |>\n<| c |>\nI tested it again and it works. I must have had a typo somewhere\
    \ in my code. Thanks for your help!\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphsd9nfbo.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($n <= 1) {\n        return true;\n    }\n    $i = 0;\n    $j = $m - 1;\n\
    \    while ($i < $n && $j < $n) {\n        if ($l[$i] <= $l[$j]) {\n         \
    \   $i++;\n        } elseif ($l[$i] > $l[$j]) {\n            $j--;\n        }\
    \ else {\n            return false;\n        }\n    }\n    if ($i == $j) {\n \
    \       return true;\n    }\n    if ($l[$i] > $l[$j]) {\n        return $l[$i]\
    \ < $l[$j];\n    }\n    return $l[$i] < $l[$j];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t9qp2sk.php:43\n\
    Stack trace:\n#0 /tmp/tmp6t9qp2sk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6t9qp2sk.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[0] : $l[1];\n\
    \    $l[1] = $l[0] > $l[1] ? $l[1] : $l[0];\n    return $l[0] > $l[1];\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `monotonic([4, 1, 0, -10])`\
    \ returns true.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself and see for\
    \ yourself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself and see for yourself.\n\
    <|/ c |>\n<| c |>\nI did. `monotonic([4, 1, 0, -10])` returns true.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it yourself and see for yourself.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_qw3ifgj.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_values($l);\n    $l = array_filter($l);\n\
    \    return count($l) === count(array_unique($l));\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work for me. `monotonic([1,4,2,20])` returns true,\
    \ but `monotonic([1,20,4,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,-10])` returns\
    \ true, but `monotonic([4,1,0,10])` returns false. `monotonic([4,1,0,\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph3bapr05.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wjlzjf8.php:20\n\
    Stack trace:\n#0 /tmp/tmp0wjlzjf8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0wjlzjf8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n    return $last\
    \ < $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wyhywu8.php:22\n\
    Stack trace:\n#0 /tmp/tmp_wyhywu8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_wyhywu8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work for me. `monotonic([1,2,4,20])` returns `true`, but `monotonic([1,20,4,10])`\
    \ returns `false`\n<|/ c |>\n<| c |>\nIt works on my machine. Try `monotonic([4,1,0,-10])`\n\
    <|/ c |>\n<| c |>\nYeah, it works. I must have had a typo somewhere in my code.\
    \ Thanks!\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp32i3ph80.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] < $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi85ptatq.php:23\n\
    Stack trace:\n#0 /tmp/tmpi85ptatq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpi85ptatq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhz3t2qv.php:22\n\
    Stack trace:\n#0 /tmp/tmprhz3t2qv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprhz3t2qv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n    return $l[0]\
    \ > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuq8x74vo.php:22\n\
    Stack trace:\n#0 /tmp/tmpuq8x74vo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuq8x74vo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work for me. `monotonic([1,4,2,20])`\
    \ returns `true` but `monotonic([1,20,4,10])` returns `false`\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.5.9 and PHP 5.6.17 and it works fine.\n<|/ c |>\n<|\
    \ c |>\nI tested it on PHP 5.5.9 and PHP 5.6.17 and it works fine.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.5.9 and PHP 5.6.17 and it works fine.\n<|/ c |>\n\
    <| c |>\nI tested it on PHP 5.5.9 and PHP 5.6.17 and it works fine.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp54j6ycvf.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigzrcqh6.php:20\n\
    Stack trace:\n#0 /tmp/tmpigzrcqh6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpigzrcqh6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m = count($l) - 1;\n\
    \    if ($n <= 1) return true;\n    for ($i = 0; $i < $m; $i++) {\n        if\
    \ ($l[$i] <= $l[$m]) return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbiq3p53b.php:25\n\
    Stack trace:\n#0 /tmp/tmpbiq3p53b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbiq3p53b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l[0] = $l[0]\
    \ - 1;\n    return $l[0] >= 0 && $l[0] <= count($l) - 1;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't seem to work. `monotonic([4, 1, 0, -10])` returns\
    \ `true` but `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c |>\n<| c |>\n:\
    \ I tested it and it works fine for me. `monotonic([4, 1, 0, -10])` returns `true`\
    \ while `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c |>\n<| c |>\nI tested\
    \ it again and it works fine for me. `monotonic([4, 1, 0, -10])` returns `true`\
    \ while `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c |>\n<| c |>\n: I tested\
    \ it again and it works fine for me. `monotonic([4, 1, 0, -10])` returns `true`\
    \ while `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c |>\n<| c |>\n: I tested\
    \ it again and it works fine for me. `monotonic([4, 1, 0, -10])` returns `true`\
    \ while `monotonic([4, 1, 0, 10])` returns `false`\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpua4yk5et.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nNice solution,\
    \ but this doesn't work for negative numbers. Try it with `[-1, 1, -10, -100,\
    \ -1000, -1000000000]`\n<|/ c |>\n<| c |>\n: I added a version that works for\
    \ negative numbers. I tested it on PHP 5.3.10 and PHP 5.4.4.\n<|/ c |>\n<| c |>\n\
    : I added a version that works for negative numbers. I tested it on PHP 5.3.10\
    \ and PHP 5.4.4.\n<|/ c |>\n<| c |>\n: I added a version that works for negative\
    \ numbers. I tested it on PHP 5.3.10 and PHP 5.4.4.\n<|/ c |>\n<| c |>\n: I added\
    \ a version that works for negative numbers. I tested it on PHP 5.3.10 and PHP\
    \ 5.4.4.\n<|/ c |>\n<| a tags=php,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2f6ccjnb.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `monotonic([-1, -10, -20, -30])` returns `true` instead of `false`.\n<|/ c |>\n\
    <| c |>\nI added a version that works with negative numbers. I tested it on PHP\
    \ 5.3.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers. `monotonic([-1,\
    \ -10, -20, -30])` returns `true` instead of `false`.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for negative numbers. `monotonic([-1, -10, -20, -30])` returns\
    \ `true` instead of `false`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `monotonic([-1, -10, -20, -30])` returns `true` instead of `false`.\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpscgxutr6.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiutrtl_2.php:21\n\
    Stack trace:\n#0 /tmp/tmpiutrtl_2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiutrtl_2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  $l[1] = end($l);\n  return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkjbhzbx1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n    foreach ($l as\
    \ $i => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work if there are duplicate elements in the array. For example, `monotonic([1,\
    \ 1, 1])` returns `true` instead of `false`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with duplicate elements.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with duplicate elements.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with duplicate elements.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with duplicate elements.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj9zytvp0.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1,\
    \ 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic($l)\
    \ {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3moq7twd.php:20\n\
    Stack trace:\n#0 /tmp/tmp3moq7twd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3moq7twd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception

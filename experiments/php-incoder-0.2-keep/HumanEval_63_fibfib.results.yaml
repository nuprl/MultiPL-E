name: HumanEval_63_fibfib
language: php
results:
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xk0r9eu.php:26\n\
    Stack trace:\n#0 /tmp/tmp2xk0r9eu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2xk0r9eu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppwh736z.php:24\n\
    Stack trace:\n#0 /tmp/tmpppwh736z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpppwh736z.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o7er4f4.php:24\n\
    Stack trace:\n#0 /tmp/tmp9o7er4f4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9o7er4f4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitznr_x2.php:25\n\
    Stack trace:\n#0 /tmp/tmpitznr_x2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpitznr_x2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyzlxtav.php:26\n\
    Stack trace:\n#0 /tmp/tmpqyzlxtav.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqyzlxtav.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpgt0zyp.php:26\n\
    Stack trace:\n#0 /tmp/tmptpgt0zyp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptpgt0zyp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86_5_27x.php:25\n\
    Stack trace:\n#0 /tmp/tmp86_5_27x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp86_5_27x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzostqva5.php:26\n\
    Stack trace:\n#0 /tmp/tmpzostqva5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzostqva5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9ajogue.php:25\n\
    Stack trace:\n#0 /tmp/tmpl9ajogue.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl9ajogue.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97gw50a6.php:26\n\
    Stack trace:\n#0 /tmp/tmp97gw50a6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp97gw50a6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxhh6quo.php:25\n\
    Stack trace:\n#0 /tmp/tmpdxhh6quo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdxhh6quo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw5o_39m.php:26\n\
    Stack trace:\n#0 /tmp/tmpfw5o_39m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfw5o_39m.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdumo8on.php:23\n\
    Stack trace:\n#0 /tmp/tmpzdumo8on.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzdumo8on.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00ut4smx.php:25\n\
    Stack trace:\n#0 /tmp/tmp00ut4smx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp00ut4smx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe3oqwf3.php:25\n\
    Stack trace:\n#0 /tmp/tmpxe3oqwf3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxe3oqwf3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw8wbhy6.php:26\n\
    Stack trace:\n#0 /tmp/tmpkw8wbhy6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkw8wbhy6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme_07zh7.php:26\n\
    Stack trace:\n#0 /tmp/tmpme_07zh7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpme_07zh7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykrr_9ry.php:26\n\
    Stack trace:\n#0 /tmp/tmpykrr_9ry.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykrr_9ry.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81wnujop.php:25\n\
    Stack trace:\n#0 /tmp/tmp81wnujop.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp81wnujop.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpopjqwb.php:26\n\
    Stack trace:\n#0 /tmp/tmpfpopjqwb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfpopjqwb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwjdntey.php:25\n\
    Stack trace:\n#0 /tmp/tmphwjdntey.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphwjdntey.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfxnwwx3.php:25\n\
    Stack trace:\n#0 /tmp/tmphfxnwwx3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphfxnwwx3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqbpqki3.php:26\n\
    Stack trace:\n#0 /tmp/tmpqqbpqki3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqqbpqki3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vp_7ehe.php:26\n\
    Stack trace:\n#0 /tmp/tmp0vp_7ehe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0vp_7ehe.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa6827tx.php:25\n\
    Stack trace:\n#0 /tmp/tmpaa6827tx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaa6827tx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqawdugm.php:25\n\
    Stack trace:\n#0 /tmp/tmplqawdugm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplqawdugm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp351ntmxg.php:25\n\
    Stack trace:\n#0 /tmp/tmp351ntmxg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp351ntmxg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywsrbdw1.php:25\n\
    Stack trace:\n#0 /tmp/tmpywsrbdw1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpywsrbdw1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_phzypf5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_phzypf5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_phzypf5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gpemtyb.php:25\n\
    Stack trace:\n#0 /tmp/tmp1gpemtyb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1gpemtyb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzj1k4dn7.php:25\n\
    Stack trace:\n#0 /tmp/tmpzj1k4dn7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzj1k4dn7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5m9k76n.php:26\n\
    Stack trace:\n#0 /tmp/tmpv5m9k76n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv5m9k76n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsrj1nlb.php:25\n\
    Stack trace:\n#0 /tmp/tmprsrj1nlb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprsrj1nlb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7cxvpo0.php:25\n\
    Stack trace:\n#0 /tmp/tmpc7cxvpo0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc7cxvpo0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n == 1) return\
    \ 0;\n    return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliq8ig0k.php:24\n\
    Stack trace:\n#0 /tmp/tmpliq8ig0k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpliq8ig0k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnjc3ga4.php:25\n\
    Stack trace:\n#0 /tmp/tmpvnjc3ga4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvnjc3ga4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr6gztmu.php:30\n\
    Stack trace:\n#0 /tmp/tmpwr6gztmu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwr6gztmu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4yglang.php:25\n\
    Stack trace:\n#0 /tmp/tmpn4yglang.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn4yglang.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mbxl4lg.php:26\n\
    Stack trace:\n#0 /tmp/tmp3mbxl4lg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3mbxl4lg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_z9qdihu.php:24\n\
    Stack trace:\n#0 /tmp/tmp_z9qdihu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_z9qdihu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jtnu7d4.php:25\n\
    Stack trace:\n#0 /tmp/tmp8jtnu7d4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8jtnu7d4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnnfy8rh.php:26\n\
    Stack trace:\n#0 /tmp/tmpbnnfy8rh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbnnfy8rh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ssncwep.php:26\n\
    Stack trace:\n#0 /tmp/tmp1ssncwep.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1ssncwep.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssh4iueh.php:25\n\
    Stack trace:\n#0 /tmp/tmpssh4iueh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpssh4iueh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5l5tawx.php:26\n\
    Stack trace:\n#0 /tmp/tmpk5l5tawx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk5l5tawx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiopuf2_4.php:26\n\
    Stack trace:\n#0 /tmp/tmpiopuf2_4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiopuf2_4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cr0ab0k.php:25\n\
    Stack trace:\n#0 /tmp/tmp9cr0ab0k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9cr0ab0k.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_13rwuu1.php:24\n\
    Stack trace:\n#0 /tmp/tmp_13rwuu1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_13rwuu1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml634s0b.php:26\n\
    Stack trace:\n#0 /tmp/tmpml634s0b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpml634s0b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg06v8luj.php:28\n\
    Stack trace:\n#0 /tmp/tmpg06v8luj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg06v8luj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb87jgadq.php:26\n\
    Stack trace:\n#0 /tmp/tmpb87jgadq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb87jgadq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbul_5f5v.php:26\n\
    Stack trace:\n#0 /tmp/tmpbul_5f5v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbul_5f5v.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cmgcbp6.php:24\n\
    Stack trace:\n#0 /tmp/tmp8cmgcbp6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8cmgcbp6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppytpbwh4.php:26\n\
    Stack trace:\n#0 /tmp/tmppytpbwh4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppytpbwh4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xr78n8v.php:25\n\
    Stack trace:\n#0 /tmp/tmp9xr78n8v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9xr78n8v.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwckgt9lv.php:25\n\
    Stack trace:\n#0 /tmp/tmpwckgt9lv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwckgt9lv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtigtam4.php:25\n\
    Stack trace:\n#0 /tmp/tmpwtigtam4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwtigtam4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0458y4mz.php:26\n\
    Stack trace:\n#0 /tmp/tmp0458y4mz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0458y4mz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7odrcj4x.php:26\n\
    Stack trace:\n#0 /tmp/tmp7odrcj4x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7odrcj4x.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagb8bnop.php:25\n\
    Stack trace:\n#0 /tmp/tmpagb8bnop.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpagb8bnop.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoz9910ka.php:28\n\
    Stack trace:\n#0 /tmp/tmpoz9910ka.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoz9910ka.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqd_i1u8.php:26\n\
    Stack trace:\n#0 /tmp/tmpeqd_i1u8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeqd_i1u8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc3j72pf.php:26\n\
    Stack trace:\n#0 /tmp/tmpgc3j72pf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgc3j72pf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01k_ap70.php:29\n\
    Stack trace:\n#0 /tmp/tmp01k_ap70.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp01k_ap70.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp18mc6zj.php:25\n\
    Stack trace:\n#0 /tmp/tmpp18mc6zj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp18mc6zj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk4j9xug.php:26\n\
    Stack trace:\n#0 /tmp/tmplk4j9xug.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplk4j9xug.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1dqp_p1.php:28\n\
    Stack trace:\n#0 /tmp/tmpj1dqp_p1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj1dqp_p1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ji9rips.php:24\n\
    Stack trace:\n#0 /tmp/tmp5ji9rips.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5ji9rips.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv58lj6it.php:26\n\
    Stack trace:\n#0 /tmp/tmpv58lj6it.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv58lj6it.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6n11jtm.php:25\n\
    Stack trace:\n#0 /tmp/tmpq6n11jtm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq6n11jtm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphc8rxrhl.php:26\n\
    Stack trace:\n#0 /tmp/tmphc8rxrhl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphc8rxrhl.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xim7pxw.php:26\n\
    Stack trace:\n#0 /tmp/tmp8xim7pxw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8xim7pxw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphudssqs9.php:25\n\
    Stack trace:\n#0 /tmp/tmphudssqs9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphudssqs9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzlgp17ms.php:25\n\
    Stack trace:\n#0 /tmp/tmpzlgp17ms.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzlgp17ms.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsou0brls.php:26\n\
    Stack trace:\n#0 /tmp/tmpsou0brls.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsou0brls.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy_gaosd.php:25\n\
    Stack trace:\n#0 /tmp/tmpxy_gaosd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxy_gaosd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzb82a2s.php:26\n\
    Stack trace:\n#0 /tmp/tmppzb82a2s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppzb82a2s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1r76atcq.php:26\n\
    Stack trace:\n#0 /tmp/tmp1r76atcq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1r76atcq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjmeemlt.php:25\n\
    Stack trace:\n#0 /tmp/tmpwjmeemlt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwjmeemlt.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8n592kx.php:25\n\
    Stack trace:\n#0 /tmp/tmpk8n592kx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk8n592kx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4kk0irdh.php:26\n\
    Stack trace:\n#0 /tmp/tmp4kk0irdh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4kk0irdh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy66o4tao.php:26\n\
    Stack trace:\n#0 /tmp/tmpy66o4tao.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy66o4tao.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekyrkecl.php:26\n\
    Stack trace:\n#0 /tmp/tmpekyrkecl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpekyrkecl.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn_bf6vf.php:26\n\
    Stack trace:\n#0 /tmp/tmpdn_bf6vf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdn_bf6vf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hp07vax.php:26\n\
    Stack trace:\n#0 /tmp/tmp1hp07vax.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1hp07vax.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0xpl0ul.php:26\n\
    Stack trace:\n#0 /tmp/tmpc0xpl0ul.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc0xpl0ul.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5y72y0v.php:29\n\
    Stack trace:\n#0 /tmp/tmpf5y72y0v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf5y72y0v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhfkwuxb.php:26\n\
    Stack trace:\n#0 /tmp/tmpbhfkwuxb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbhfkwuxb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lb_29is.php:26\n\
    Stack trace:\n#0 /tmp/tmp_lb_29is.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_lb_29is.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwgyprfn.php:26\n\
    Stack trace:\n#0 /tmp/tmpbwgyprfn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbwgyprfn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdymfjwa.php:26\n\
    Stack trace:\n#0 /tmp/tmpjdymfjwa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjdymfjwa.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8kdk9tm.php:26\n\
    Stack trace:\n#0 /tmp/tmpa8kdk9tm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa8kdk9tm.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82ku44n2.php:28\n\
    Stack trace:\n#0 /tmp/tmp82ku44n2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp82ku44n2.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzxeip6b.php:25\n\
    Stack trace:\n#0 /tmp/tmphzxeip6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphzxeip6b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuun3729.php:23\n\
    Stack trace:\n#0 /tmp/tmpuuun3729.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuuun3729.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptumafh9q.php:26\n\
    Stack trace:\n#0 /tmp/tmptumafh9q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptumafh9q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfkignd8.php:26\n\
    Stack trace:\n#0 /tmp/tmpxfkignd8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxfkignd8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcktot3k.php:23\n\
    Stack trace:\n#0 /tmp/tmpvcktot3k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvcktot3k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplojeyhs9.php:26\n\
    Stack trace:\n#0 /tmp/tmplojeyhs9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplojeyhs9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75krubjh.php:26\n\
    Stack trace:\n#0 /tmp/tmp75krubjh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp75krubjh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q9n33xo.php:25\n\
    Stack trace:\n#0 /tmp/tmp7q9n33xo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7q9n33xo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj70fw4as.php:28\n\
    Stack trace:\n#0 /tmp/tmpj70fw4as.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj70fw4as.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9njh5yql.php:25\n\
    Stack trace:\n#0 /tmp/tmp9njh5yql.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9njh5yql.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxdspsfs.php:26\n\
    Stack trace:\n#0 /tmp/tmpaxdspsfs.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaxdspsfs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6mu6klm.php:24\n\
    Stack trace:\n#0 /tmp/tmpu6mu6klm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu6mu6klm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhylmx8g.php:26\n\
    Stack trace:\n#0 /tmp/tmpuhylmx8g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpuhylmx8g.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ntu64e4.php:25\n\
    Stack trace:\n#0 /tmp/tmp2ntu64e4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2ntu64e4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvwoztnm.php:26\n\
    Stack trace:\n#0 /tmp/tmptvwoztnm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptvwoztnm.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfh73f8fd.php:25\n\
    Stack trace:\n#0 /tmp/tmpfh73f8fd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfh73f8fd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n == 1) return\
    \ 0;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirfborce.php:24\n\
    Stack trace:\n#0 /tmp/tmpirfborce.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpirfborce.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3dn5uyo.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3dn5uyo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv3dn5uyo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivkaw6xa.php:25\n\
    Stack trace:\n#0 /tmp/tmpivkaw6xa.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpivkaw6xa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx1l2p0s.php:26\n\
    Stack trace:\n#0 /tmp/tmppx1l2p0s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppx1l2p0s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23ff7tnu.php:30\n\
    Stack trace:\n#0 /tmp/tmp23ff7tnu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp23ff7tnu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnim21nc3.php:25\n\
    Stack trace:\n#0 /tmp/tmpnim21nc3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnim21nc3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4ainsfl.php:25\n\
    Stack trace:\n#0 /tmp/tmpz4ainsfl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz4ainsfl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf3n1w6t.php:29\n\
    Stack trace:\n#0 /tmp/tmpuf3n1w6t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuf3n1w6t.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyydzlg7.php:25\n\
    Stack trace:\n#0 /tmp/tmpxyydzlg7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxyydzlg7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9g_c4t9.php:25\n\
    Stack trace:\n#0 /tmp/tmpo9g_c4t9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpo9g_c4t9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9q5yye0.php:25\n\
    Stack trace:\n#0 /tmp/tmpl9q5yye0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl9q5yye0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c49fsug.php:26\n\
    Stack trace:\n#0 /tmp/tmp8c49fsug.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8c49fsug.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtta9wmh.php:26\n\
    Stack trace:\n#0 /tmp/tmpdtta9wmh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdtta9wmh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm15fndm1.php:26\n\
    Stack trace:\n#0 /tmp/tmpm15fndm1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm15fndm1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi61_vxo.php:25\n\
    Stack trace:\n#0 /tmp/tmpwi61_vxo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwi61_vxo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl36w5ir.php:26\n\
    Stack trace:\n#0 /tmp/tmpyl36w5ir.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyl36w5ir.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5vrxa2oy.php:25\n\
    Stack trace:\n#0 /tmp/tmp5vrxa2oy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5vrxa2oy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44r9dcjh.php:26\n\
    Stack trace:\n#0 /tmp/tmp44r9dcjh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp44r9dcjh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ofem_5n.php:26\n\
    Stack trace:\n#0 /tmp/tmp0ofem_5n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0ofem_5n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnxcoz40.php:25\n\
    Stack trace:\n#0 /tmp/tmptnxcoz40.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptnxcoz40.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptu08ilbu.php:26\n\
    Stack trace:\n#0 /tmp/tmptu08ilbu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptu08ilbu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkq8cgdy.php:26\n\
    Stack trace:\n#0 /tmp/tmplkq8cgdy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplkq8cgdy.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94vjkzoq.php:25\n\
    Stack trace:\n#0 /tmp/tmp94vjkzoq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp94vjkzoq.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2y1sd2lh.php:26\n\
    Stack trace:\n#0 /tmp/tmp2y1sd2lh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2y1sd2lh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8n3vb18.php:25\n\
    Stack trace:\n#0 /tmp/tmpu8n3vb18.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu8n3vb18.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2le5a61c.php:26\n\
    Stack trace:\n#0 /tmp/tmp2le5a61c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2le5a61c.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8fqpzyj.php:26\n\
    Stack trace:\n#0 /tmp/tmpo8fqpzyj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo8fqpzyj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tr_pqlu.php:26\n\
    Stack trace:\n#0 /tmp/tmp7tr_pqlu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7tr_pqlu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8vzoxz_.php:26\n\
    Stack trace:\n#0 /tmp/tmps8vzoxz_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps8vzoxz_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n}\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwaw9suhb.php:23\n\
    Stack trace:\n#0 /tmp/tmpwaw9suhb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwaw9suhb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bufo2sn.php:25\n\
    Stack trace:\n#0 /tmp/tmp4bufo2sn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4bufo2sn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mw0jmyo.php:30\n\
    Stack trace:\n#0 /tmp/tmp1mw0jmyo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1mw0jmyo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ba6hb_u.php:26\n\
    Stack trace:\n#0 /tmp/tmp5ba6hb_u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5ba6hb_u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yvfkgv9.php:26\n\
    Stack trace:\n#0 /tmp/tmp9yvfkgv9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9yvfkgv9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4brzepa.php:24\n\
    Stack trace:\n#0 /tmp/tmpp4brzepa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp4brzepa.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4wpg0ia.php:25\n\
    Stack trace:\n#0 /tmp/tmpn4wpg0ia.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn4wpg0ia.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02m9lsjz.php:26\n\
    Stack trace:\n#0 /tmp/tmp02m9lsjz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp02m9lsjz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87as3bf4.php:26\n\
    Stack trace:\n#0 /tmp/tmp87as3bf4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp87as3bf4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gpo_ucg.php:26\n\
    Stack trace:\n#0 /tmp/tmp5gpo_ucg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5gpo_ucg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwd1ev_a.php:25\n\
    Stack trace:\n#0 /tmp/tmpuwd1ev_a.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuwd1ev_a.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgurab1f9.php:25\n\
    Stack trace:\n#0 /tmp/tmpgurab1f9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgurab1f9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpblratqyx.php:26\n\
    Stack trace:\n#0 /tmp/tmpblratqyx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpblratqyx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptp4h4on0.php:25\n\
    Stack trace:\n#0 /tmp/tmptp4h4on0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptp4h4on0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps91_vwpp.php:29\n\
    Stack trace:\n#0 /tmp/tmps91_vwpp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps91_vwpp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7f7e8g0.php:26\n\
    Stack trace:\n#0 /tmp/tmpy7f7e8g0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy7f7e8g0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cciqv23.php:26\n\
    Stack trace:\n#0 /tmp/tmp5cciqv23.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5cciqv23.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_goa1tl.php:29\n\
    Stack trace:\n#0 /tmp/tmp0_goa1tl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0_goa1tl.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ntccbw1.php:25\n\
    Stack trace:\n#0 /tmp/tmp7ntccbw1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7ntccbw1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkkuojz4.php:30\n\
    Stack trace:\n#0 /tmp/tmpfkkuojz4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfkkuojz4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_x96fd3.php:25\n\
    Stack trace:\n#0 /tmp/tmpa_x96fd3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa_x96fd3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplga41t6o.php:25\n\
    Stack trace:\n#0 /tmp/tmplga41t6o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplga41t6o.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzkjqnos.php:26\n\
    Stack trace:\n#0 /tmp/tmpwzkjqnos.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwzkjqnos.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktl111j8.php:26\n\
    Stack trace:\n#0 /tmp/tmpktl111j8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpktl111j8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzsxkjmm.php:25\n\
    Stack trace:\n#0 /tmp/tmpbzsxkjmm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbzsxkjmm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9q3cvzu9.php:25\n\
    Stack trace:\n#0 /tmp/tmp9q3cvzu9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9q3cvzu9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpueni63ns.php:26\n\
    Stack trace:\n#0 /tmp/tmpueni63ns.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpueni63ns.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6hbeia1.php:26\n\
    Stack trace:\n#0 /tmp/tmpr6hbeia1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr6hbeia1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn17uaime.php:26\n\
    Stack trace:\n#0 /tmp/tmpn17uaime.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn17uaime.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7b_0nbd.php:26\n\
    Stack trace:\n#0 /tmp/tmph7b_0nbd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph7b_0nbd.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvaoetj9a.php:24\n\
    Stack trace:\n#0 /tmp/tmpvaoetj9a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvaoetj9a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp413eebea.php:25\n\
    Stack trace:\n#0 /tmp/tmp413eebea.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp413eebea.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvw12nyt.php:25\n\
    Stack trace:\n#0 /tmp/tmpkvw12nyt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkvw12nyt.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytknu_5m.php:25\n\
    Stack trace:\n#0 /tmp/tmpytknu_5m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpytknu_5m.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcv4y94to.php:26\n\
    Stack trace:\n#0 /tmp/tmpcv4y94to.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcv4y94to.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphn5odic7.php:25\n\
    Stack trace:\n#0 /tmp/tmphn5odic7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphn5odic7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_39_prime_fib
language: php
results:
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcc45nkfy.php:27\n\
    Stack trace:\n#0 /tmp/tmpcc45nkfy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcc45nkfy.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $fibs = array();\n    $fibs[0]\
    \ = $fibs[1] = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n        $fibs[$i] = $c;\n    }\n    return\
    \ $fibs[$n];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcr5ti_5.php:31\n\
    Stack trace:\n#0 /tmp/tmplcr5ti_5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplcr5ti_5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n + 2);\n    }\n\
    \    return prime_fib(3 * $n + 4) - prime_fib(3 * $n + 6);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4jpemyy.php:34\n\
    Stack trace:\n#0 /tmp/tmpz4jpemyy.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpz4jpemyy.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04gxjivh.php:25\n\
    Stack trace:\n#0 /tmp/tmp04gxjivh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp04gxjivh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n       \
    \ 2,\n        3,\n        5,\n        8,\n        13,\n        21,\n        34,\n\
    \        55,\n        89,\n        144,\n        233,\n        377,\n        610,\n\
    \        987,\n        1597,\n        2584,\n        4181,\n        6765,\n  \
    \      10946,\n        17711,\n        28657,\n        46625,\n        75025,\n\
    \        121393,\n        196418,\n        317811,\n        514229,\n        832040,\n\
    \        1346269,\n        2178309,\n        3524578,\n        5702887,\n    \
    \    9227465,\n        14930352,\n        24157817,\n        39088169,\n     \
    \   52608717,\n        102334155,\n        165580141,\n        267914296,\n  \
    \      433494437,\n        701408733,\n        1134903170,\n        1836311903,\n\
    \        3038652778,\n        4969012674,\n        785743362,\n        1259763135,\n\
    \        1984455299,\n        3172634881,\n        5331779729,\n        8626757431,\n\
    \        1210338859,\n        1949859831,\n        3177709942,\n        5358359684,\n\
    \        836211419,\n        12143982619,\n        19507674741,\n        3180808467,\n\
    \        5351079246,\n        836217739,\n        12144074939,\n        19508358741,\n\
    \        3181464602,\n        5352057866,\n        836225243,\n        12144262923,\n\
    \        19509009871,\n        3182466520,\n        5353033536,\n        836231549,\n\
    \        12144314593,\n        19510123867,\n        3183368742,\n        5353907684,\n\
    \        836239625,\n        12144495925,\n        19511140767,\n        3184377082,\n\
    \        5354009246,\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7o0c4p86.php on line 99\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 2) % $n;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm59rgf1k.php:28\n\
    Stack trace:\n#0 /tmp/tmpm59rgf1k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm59rgf1k.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5q8rhsz.php:30\n\
    Stack trace:\n#0 /tmp/tmpw5q8rhsz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw5q8rhsz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    while ($n < $c) {\n\
    \        $a *= $n;\n        $b += $a;\n        $c += $a;\n    }\n    return $b;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qg27hih.php:29\n\
    Stack trace:\n#0 /tmp/tmp1qg27hih.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1qg27hih.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5ugzeo9.php:28\n\
    Stack trace:\n#0 /tmp/tmpy5ugzeo9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy5ugzeo9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\tif ($n % 2\
    \ == 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\treturn prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudzwh9o6.php:28\n\
    Stack trace:\n#0 /tmp/tmpudzwh9o6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpudzwh9o6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyctc1as2.php:25\n\
    Stack trace:\n#0 /tmp/tmpyctc1as2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyctc1as2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime = false;\n\
    \    while ($n >= $c) {\n        $c = $a + $b;\n        $prime = true;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ikpxpr7.php:34\n\
    Stack trace:\n#0 /tmp/tmp0ikpxpr7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0ikpxpr7.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 2) % $n;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vme7ld6.php:28\n\
    Stack trace:\n#0 /tmp/tmp1vme7ld6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1vme7ld6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3) + 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6ndv_zp.php:23\n\
    Stack trace:\n#0 /tmp/tmpw6ndv_zp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw6ndv_zp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbiduzijg.php:33\n\
    Stack trace:\n#0 /tmp/tmpbiduzijg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbiduzijg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime = false;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n        if ($c % 2 == 0) {\n            $prime = true;\n  \
    \      }\n    }\n    return $prime ? $c : false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7r584zj.php:35\n\
    Stack trace:\n#0 /tmp/tmpe7r584zj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe7r584zj.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b =\
    \ $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhdbhhqp.php:33\n\
    Stack trace:\n#0 /tmp/tmpqhdbhhqp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqhdbhhqp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    $a = $b =\
    \ 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = $b;\n        $b = $c +\
    \ $a;\n        $c = $b;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wvsbak5.php:31\n\
    Stack trace:\n#0 /tmp/tmp_wvsbak5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_wvsbak5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja5_qze0.php:25\n\
    Stack trace:\n#0 /tmp/tmpja5_qze0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpja5_qze0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4h08oa_w.php:35\n\
    Stack trace:\n#0 /tmp/tmp4h08oa_w.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4h08oa_w.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n\
    \    $e = 1;\n    $f = 1;\n    $g = 1;\n    $h = 1;\n    $i = 1;\n    $j = 1;\n\
    \    $k = 1;\n    $l = 1;\n    $m = 1;\n    $n = $n - 1;\n    do {\n        $a\
    \ = $a + $b;\n        $b = $c + $d;\n        $c = $e + $f;\n        $d = $g +\
    \ $h;\n        $e = $i + $j;\n        $f = $k + $l;\n        $g = $m + $n;\n \
    \       $h = $n + $m;\n        $i = $m + $n;\n        $j = $n + $m;\n        $k\
    \ = $m + $n;\n        $l = $m + $n;\n        $m = $n + $m;\n        $n = $n -\
    \ 1;\n    } while ($n >= 0);\n    return $a;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8k8ptwm3.php:52\n\
    Stack trace:\n#0 /tmp/tmp8k8ptwm3.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp8k8ptwm3.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyg8ke_e.php:31\n\
    Stack trace:\n#0 /tmp/tmpcyg8ke_e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcyg8ke_e.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ihkteap.php:25\n\
    Stack trace:\n#0 /tmp/tmp1ihkteap.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1ihkteap.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7ypv4jj.php:25\n\
    Stack trace:\n#0 /tmp/tmpt7ypv4jj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt7ypv4jj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $n--;\n \
    \   while ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $c;\n}\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mag923s.php:34\n\
    Stack trace:\n#0 /tmp/tmp1mag923s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1mag923s.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxph6nxa.php:33\n\
    Stack trace:\n#0 /tmp/tmpoxph6nxa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpoxph6nxa.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgw0dvop.php:25\n\
    Stack trace:\n#0 /tmp/tmpvgw0dvop.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvgw0dvop.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i\
    \ - 2];\n    }\n    return $fibs[$n];\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekll1490.php:29\n\
    Stack trace:\n#0 /tmp/tmpekll1490.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpekll1490.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetbxi3dh.php:25\n\
    Stack trace:\n#0 /tmp/tmpetbxi3dh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpetbxi3dh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezc7yo6p.php:31\n\
    Stack trace:\n#0 /tmp/tmpezc7yo6p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpezc7yo6p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\tif ($n % 3 == 0) {\n\t\treturn\
    \ prime_fib(5 * $n) + 3;\n\t}\n\treturn prime_fib(3 * $n + 5) + 1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxm5_f2t.php:37\n\
    Stack trace:\n#0 /tmp/tmppxm5_f2t.php(49): test()\n#1 {main}\n  thrown in /tmp/tmppxm5_f2t.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3km4abuy.php:31\n\
    Stack trace:\n#0 /tmp/tmp3km4abuy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3km4abuy.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    \
    \    $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_k5_krbg.php:31\n\
    Stack trace:\n#0 /tmp/tmp_k5_krbg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_k5_krbg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(ceil($n/2))\
    \ + prime_fib(ceil($n/2));\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12wwgu5z.php:23\n\
    Stack trace:\n#0 /tmp/tmp12wwgu5z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp12wwgu5z.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj979l6t0.php:34\n\
    Stack trace:\n#0 /tmp/tmpj979l6t0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpj979l6t0.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfstgmz8o.php:31\n\
    Stack trace:\n#0 /tmp/tmpfstgmz8o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfstgmz8o.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp769p6wfy.php:25\n\
    Stack trace:\n#0 /tmp/tmp769p6wfy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp769p6wfy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzseepgyn.php:25\n\
    Stack trace:\n#0 /tmp/tmpzseepgyn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzseepgyn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 2);\n\t}\n\treturn prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e0k6e9t.php:37\n\
    Stack trace:\n#0 /tmp/tmp2e0k6e9t.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp2e0k6e9t.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn42hat43.php:34\n\
    Stack trace:\n#0 /tmp/tmpn42hat43.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpn42hat43.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamciwvyx.php:23\n\
    Stack trace:\n#0 /tmp/tmpamciwvyx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpamciwvyx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo1j5i2r.php:23\n\
    Stack trace:\n#0 /tmp/tmpvo1j5i2r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvo1j5i2r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 3) {\n        return 5;\n \
    \   }\n    if ($n == 6) {\n        return 13;\n    }\n    if ($n == 7) {\n   \
    \     return 89;\n    }\n    if ($n == 8) {\n        return 233;\n    }\n    if\
    \ ($n == 9) {\n        return 341;\n    }\n    if ($n == 10) {\n        return\
    \ 551;\n    }\n    if ($n == 11) {\n        return 891;\n    }\n    if ($n ==\
    \ 12) {\n        return 1357;\n    }\n    if ($n == 13) {\n        return 2333;\n\
    \    }\n    if ($n == 14) {\n        return 3417;\n    }\n    if ($n == 15) {\n\
    \        return 5517;\n    }\n    if ($n == 16) {\n        return 8917;\n    }\n\
    \    if ($n == 17) {\n        return 13579;\n    }\n    if ($n == 18) {\n    \
    \    return 23339;\n    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyd6d1d7e.php on line 158\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = 3;\n    $b = 1;\n    while ($a < $n) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkv5ht6s.php:38\n\
    Stack trace:\n#0 /tmp/tmppkv5ht6s.php(50): test()\n#1 {main}\n  thrown in /tmp/tmppkv5ht6s.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [0, 1];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc7vnuln.php:26\n\
    Stack trace:\n#0 /tmp/tmpgc7vnuln.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgc7vnuln.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5z_wna5u.php:25\n\
    Stack trace:\n#0 /tmp/tmp5z_wna5u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5z_wna5u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($n < $b) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n        $n++;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd6a7e7g.php:32\n\
    Stack trace:\n#0 /tmp/tmprd6a7e7g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprd6a7e7g.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6urnigfe.php:25\n\
    Stack trace:\n#0 /tmp/tmp6urnigfe.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6urnigfe.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1vlmxou.php:28\n\
    Stack trace:\n#0 /tmp/tmpk1vlmxou.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk1vlmxou.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1) return $n;\n\treturn prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3));\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nu79r47.php:23\n\
    Stack trace:\n#0 /tmp/tmp4nu79r47.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4nu79r47.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzznbg3nd.php:34\n\
    Stack trace:\n#0 /tmp/tmpzznbg3nd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzznbg3nd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 3) {\n        return 5;\n \
    \   }\n    if ($n == 6) {\n        return 13;\n    }\n    if ($n == 7) {\n   \
    \     return 89;\n    }\n    if ($n == 8) {\n        return 233;\n    }\n    if\
    \ ($n == 9) {\n        return 341;\n    }\n    if ($n == 10) {\n        return\
    \ 551;\n    }\n    if ($n == 11) {\n        return 891;\n    }\n    if ($n ==\
    \ 12) {\n        return 1357;\n    }\n    if ($n == 13) {\n        return 2333;\n\
    \    }\n    if ($n == 14) {\n        return 3417;\n    }\n    if ($n == 15) {\n\
    \        return 5517;\n    }\n    if ($n == 16) {\n        return 8917;\n    }\n\
    \    if ($n == 17) {\n        return 13579;\n    }\n    if ($n == 18) {\n    \
    \    return 23339;\n    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptmw2j0ck.php on line 158\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $n--;\n\
    \    while ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    if ($c < $d) {\n        return $c;\n    } else {\n\
    \        return $d;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tukfur7.php:36\n\
    Stack trace:\n#0 /tmp/tmp6tukfur7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6tukfur7.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 3) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 1) + prime_fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjpgmlwb.php:37\n\
    Stack trace:\n#0 /tmp/tmpfjpgmlwb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfjpgmlwb.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(2, 3, 5);\n    $fibs[$n] = $fibs[$n\
    \ - 2] + $fibs[$n - 1];\n    return $fibs[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxoqteftg.php:25\n\
    Stack trace:\n#0 /tmp/tmpxoqteftg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxoqteftg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9u601mx.php:25\n\
    Stack trace:\n#0 /tmp/tmpd9u601mx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd9u601mx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy367rw0v.php:28\n\
    Stack trace:\n#0 /tmp/tmpy367rw0v.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy367rw0v.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        }\n        else {\n \
    \           $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjztb197w.php:36\n\
    Stack trace:\n#0 /tmp/tmpjztb197w.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjztb197w.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $i =\
    \ 1;\n    while ($i <= $n) {\n        $c = $a + $b;\n        $a = $b;\n      \
    \  $b = $c;\n        $d = $c + $d;\n        $i++;\n    }\n    return $d;\n}\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8a07ggj.php:32\n\
    Stack trace:\n#0 /tmp/tmpy8a07ggj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpy8a07ggj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzud1bmo7.php:25\n\
    Stack trace:\n#0 /tmp/tmpzud1bmo7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzud1bmo7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib(3 * $n) + 1;\n    }\n    return prime_fib(3 * $n) - 1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3di06dj.php:31\n\
    Stack trace:\n#0 /tmp/tmpt3di06dj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpt3di06dj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxqh55qp.php:33\n\
    Stack trace:\n#0 /tmp/tmpwxqh55qp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwxqh55qp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu786_fu.php:35\n\
    Stack trace:\n#0 /tmp/tmpnu786_fu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnu786_fu.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkmmzztp.php:25\n\
    Stack trace:\n#0 /tmp/tmpbkmmzztp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbkmmzztp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) + prime_fib(3\
    \ * $n + 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj75hd55p.php:28\n\
    Stack trace:\n#0 /tmp/tmpj75hd55p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj75hd55p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vqdlhlh.php:34\n\
    Stack trace:\n#0 /tmp/tmp6vqdlhlh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6vqdlhlh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n == 5)\
    \ {\n\t\treturn 5;\n\t}\n\tif ($n == 7) {\n\t\treturn 7;\n\t}\n\tif ($n == 9)\
    \ {\n\t\treturn 9;\n\t}\n\tif ($n == 11) {\n\t\treturn 11;\n\t}\n\tif ($n == 12)\
    \ {\n\t\treturn 13;\n\t}\n\tif ($n == 13) {\n\t\treturn 13;\n\t}\n\tif ($n ==\
    \ 14) {\n\t\treturn 17;\n\t}\n\tif ($n == 15) {\n\t\treturn 19;\n\t}\n\tif ($n\
    \ == 16) {\n\t\treturn 23;\n\t}\n\tif ($n == 17) {\n\t\treturn 29;\n\t}\n\tif\
    \ ($n == 18) {\n\t\treturn 31;\n\t}\n\tif ($n == 19) {\n\t\treturn 37;\n\t}\n\t\
    if ($n == 20) {\n\t\treturn 43;\n\t}\n\tif ($n == 21) {\n\t\treturn 59;\n\t}\n\
    \tif ($n == 22) {\n\t\treturn 73;\n\t}\n\tif ($n == 23) {\n\t\treturn 89;\n\t\
    }\n\tif ($n == 24) {\n\t\treturn 107;\n\t}\n\tif ($n == 25) {\n\t\treturn 127;\n\
    \t}\n\tif ($n == 26) {\n\t\treturn 143;\n\t}\n\tif ($n == 27) {\n\t\treturn 159;\n\
    \t}\n\tif ($n == 28) {\n\t\treturn 177;\n\t}\n\tif ($n == 29) {\n\t\treturn 193;\n\
    \t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n == 6) {\n\t\treturn 6;\n\t\
    }\n\tif ($n == 8) {\n\t\treturn 8;\n\t}\n\tif ($n == 10) {\n\t\treturn 10;\n\t\
    }\n\tif ($n == 12) {\n\t\treturn 12;\n\t}\n\tif ($n == 14) {\n\t\treturn 14;\n\
    \t}\n\tif ($n == 16) {\n\t\treturn 16;\n\t}\n\tif ($n == 18) {\n\t\treturn 18;\n\
    \t}\n\tif ($n == 20) {\n\t\treturn 20;\n\t}\n\tif ($n == 22) {\n\t\treturn 22;\n\
    \t}\n\tif ($n == 24) {\n\t\treturn 24;\n\t}\n\tif ($n == 26) {\n\t\treturn 26;\n\
    \t}\n\tif ($n == 28) {\n\t\treturn 28;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\
    \t}\n\tif ($n == 6) {\n\t\treturn 6;\n\t}\n\tif ($n == 8) {\n\t\treturn 8;\n\t\
    }\n\tif ($n == 10) {\n\t\treturn 10;\n\t}\n\tif ($n == 12) {\n\t\treturn 12;\n\
    \t}\n\tif ($n == 14) {\n\t\treturn 14;\n\t}\n\tif ($n == 16) {\n\t\treturn 16;\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9bmqd7xu.php on line 165\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd56e541i.php:25\n\
    Stack trace:\n#0 /tmp/tmpd56e541i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd56e541i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkapmrsqy.php:25\n\
    Stack trace:\n#0 /tmp/tmpkapmrsqy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkapmrsqy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n\
    \t}\n\treturn prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vi68o6b.php:37\n\
    Stack trace:\n#0 /tmp/tmp0vi68o6b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0vi68o6b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46yoesi3.php:25\n\
    Stack trace:\n#0 /tmp/tmp46yoesi3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp46yoesi3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $a + $b;\n    while($n >=\
    \ $c) {\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n    }\n  \
    \  return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp77hduak.php:32\n\
    Stack trace:\n#0 /tmp/tmpp77hduak.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpp77hduak.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    $fibs = array(2, 3, 5);\n    $fibs[]\
    \ = fib($n - 2);\n    $fibs[] = fib($n - 3);\n    return $fibs[$n - 1];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb2yxh23.php:31\n\
    Stack trace:\n#0 /tmp/tmprb2yxh23.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprb2yxh23.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $fib = $fib2 = $fib3\
    \ = 1;\n    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a =\
    \ $b;\n        $b = $c;\n        $fib3 = $fib + $fib2;\n        $fib2 = $fib;\n\
    \        $fib = $fib3;\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_8oqzk.php:36\n\
    Stack trace:\n#0 /tmp/tmp02_8oqzk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp02_8oqzk.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = $b = 1;\n    $c = 1;\n    while ($c < $n) {\n        $a = $b;\n\
    \        $b = $a + $c;\n        $c++;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprluzsum6.php:38\n\
    Stack trace:\n#0 /tmp/tmprluzsum6.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprluzsum6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfownxtij.php:35\n\
    Stack trace:\n#0 /tmp/tmpfownxtij.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfownxtij.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n\n   \
    \ $fibs = array(2, 3, 5);\n    $fibs[] = fib($n);\n\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        $fibs[] = fib($i);\n    }\n\n    return $fibs[$n];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph__e32dj.php:33\n\
    Stack trace:\n#0 /tmp/tmph__e32dj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph__e32dj.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn5p2t4j.php:23\n\
    Stack trace:\n#0 /tmp/tmpfn5p2t4j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfn5p2t4j.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcdx916r.php:34\n\
    Stack trace:\n#0 /tmp/tmpzcdx916r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzcdx916r.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1) return $n;\n\treturn prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8sd_93r.php:23\n\
    Stack trace:\n#0 /tmp/tmpp8sd_93r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp8sd_93r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $fib_number = $n;\n\
    \    while($fib_number > 0){\n        $a = $b;\n        $b = $c;\n        $c =\
    \ $a + $b;\n        $fib_number--;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaifvw5n.php:34\n\
    Stack trace:\n#0 /tmp/tmpjaifvw5n.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjaifvw5n.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) + prime_fib(3\
    \ * $n + 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfasx6t8j.php:28\n\
    Stack trace:\n#0 /tmp/tmpfasx6t8j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfasx6t8j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(2 * $n) + prime_fib(3 * $n);\n\t}\n\t$a = prime_fib(2\
    \ * $n);\n\t$b = prime_fib(3 * $n);\n\treturn $a + $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvcv092u.php:36\n\
    Stack trace:\n#0 /tmp/tmptvcv092u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptvcv092u.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b < $n) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $b;\n}\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxtv712l.php:30\n\
    Stack trace:\n#0 /tmp/tmpxxtv712l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxxtv712l.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvko1k4ku.php:31\n\
    Stack trace:\n#0 /tmp/tmpvko1k4ku.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvko1k4ku.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fib_number\
    \ = $n;\n    while($prime_fib_number > 1) {\n        $c = $a + $b;\n        $a\
    \ = $b;\n        $b = $c;\n        $prime_fib_number = $c - 1;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6jjr08b.php:31\n\
    Stack trace:\n#0 /tmp/tmpv6jjr08b.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpv6jjr08b.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    $a = prime_fib($n -\
    \ 1);\n    $b = prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobk5kxru.php:36\n\
    Stack trace:\n#0 /tmp/tmpobk5kxru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpobk5kxru.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [0, 1];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3muzoid7.php:26\n\
    Stack trace:\n#0 /tmp/tmp3muzoid7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3muzoid7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9ukf9v7.php:23\n\
    Stack trace:\n#0 /tmp/tmpc9ukf9v7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc9ukf9v7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    for($i = 0; $i <\
    \ $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \ }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplw_o5keo.php:32\n\
    Stack trace:\n#0 /tmp/tmplw_o5keo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplw_o5keo.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b =\
    \ $c;\n        $d = $a + $c;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpli7d4_ue.php:31\n\
    Stack trace:\n#0 /tmp/tmpli7d4_ue.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpli7d4_ue.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $n;\n    while ($c > 1) {\n\
    \        $a = $b;\n        $b = $c;\n        $c = $a * $a + $b;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9fd_nwk.php:29\n\
    Stack trace:\n#0 /tmp/tmpq9fd_nwk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq9fd_nwk.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fqxgqri.php:31\n\
    Stack trace:\n#0 /tmp/tmp0fqxgqri.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0fqxgqri.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n) + prime_fib(2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ckjtefh.php:25\n\
    Stack trace:\n#0 /tmp/tmp3ckjtefh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3ckjtefh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    $a = prime_fib($n -\
    \ 1);\n    $b = prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh7g7m_p.php:36\n\
    Stack trace:\n#0 /tmp/tmpnh7g7m_p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnh7g7m_p.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n\
    \    $e = 1;\n    $f = 1;\n    $g = 1;\n    $h = 1;\n    $i = 1;\n    $j = 1;\n\
    \    $k = 1;\n    $l = 1;\n    $m = 1;\n    $n = $n - 1;\n    do {\n        $a\
    \ = $a + $b;\n        $b = $c + $d;\n        $c = $e + $f;\n        $d = $g +\
    \ $h;\n        $e = $i + $j;\n        $f = $k + $l;\n        $g = $m + $n;\n \
    \       $h = $n + $m;\n        $i = $m + $n;\n        $j = $n + $m;\n        $k\
    \ = $m + $n;\n        $l = $m + $n;\n        $m = $n + $m;\n        $n = $n -\
    \ 1;\n    } while ($n >= 0);\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wl1bty2.php:53\n\
    Stack trace:\n#0 /tmp/tmp1wl1bty2.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp1wl1bty2.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2pqil_z.php:25\n\
    Stack trace:\n#0 /tmp/tmpg2pqil_z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg2pqil_z.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 3)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd15ro36r.php:31\n\
    Stack trace:\n#0 /tmp/tmpd15ro36r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpd15ro36r.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime = true;\n\
    \    while ($n >= $c) {\n        $c = $a + $b;\n        $a = $b;\n        $b =\
    \ $c;\n        $prime = !$prime;\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpatk5hc10.php:34\n\
    Stack trace:\n#0 /tmp/tmpatk5hc10.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpatk5hc10.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprk1bus1o.php:25\n\
    Stack trace:\n#0 /tmp/tmprk1bus1o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprk1bus1o.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1353;\n\
    \    }\n    if ($n == 13) {\n        return 1771;\n    }\n    if ($n == 14) {\n\
    \        return 2863;\n    }\n    if ($n == 15) {\n        return 4181;\n    }\n\
    \    if ($n == 16) {\n        return 5747;\n    }\n    if ($n == 17) {\n     \
    \   return 7253;\n    }\n    if ($n == 18) {\n        return 9070;\n    }\n  \
    \  if ($n == 19) {\n        return 10468;\n    }\n    if ($n == 20) {\n      \
    \  return 12136;\n    }\n    if ($n == 21) {\n        return 14594;\n    }\n \
    \   if ($n == 22) {\n        return 17142;\n    }\n    if ($n == 23) {\n     \
    \   return 19743;\n    }\n    if ($n == 24) {\n        return 22260;\n    }\n\
    \    if ($n == 25) {\n        return 24592;\n    }\n    if ($n == 26) {\n    \
    \    return 27178;\n    }\n    if ($n == 27) {\n        return 29666;\n    }\n\
    \    if ($n == 28) {\n        return 32154;\n    }\n    if ($n == 29) {\n    \
    \    return 34692;\n    }\n    if ($n == 30) {\n        return 37258;\n    }\n\
    \    if ($n == 31) {\n        return 40766;\n    }\n    if ($n == 32) {\n    \
    \    return 44134;\n    }\n    if ($n == 33) {\n        return 46772;\n    }\n\
    \    if ($n == 34) {\n        return 49424;\n    }\n    if ($n == 35) {\n    \
    \    return 52928;\n    }\n    if ($n == 36) {\n        return 56578;\n    }\n\
    \    if ($n == 37) {\n        return 60314;\n    }\n    if ($n == 38) {\n    \
    \    return 64296;\n    }\n    if ($n == 39) {\n        return 68044;\n    }\n\
    \    if ($n == 40) {\n        return 72560;\n    }\n    if ($n == 41) {\n    \
    \    return 76776;\n    }\n    if ($n == 42\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdufd2o0a.php on line 135\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rsnbkqt.php:31\n\
    Stack trace:\n#0 /tmp/tmp4rsnbkqt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4rsnbkqt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll5rphfh.php:32\n\
    Stack trace:\n#0 /tmp/tmpll5rphfh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpll5rphfh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_ufinqi.php:28\n\
    Stack trace:\n#0 /tmp/tmpo_ufinqi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo_ufinqi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33__hhoi.php:31\n\
    Stack trace:\n#0 /tmp/tmp33__hhoi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp33__hhoi.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgs7gjtu.php:28\n\
    Stack trace:\n#0 /tmp/tmprgs7gjtu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprgs7gjtu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkxxvon5.php:25\n\
    Stack trace:\n#0 /tmp/tmptkxxvon5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptkxxvon5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlzjx73d.php:35\n\
    Stack trace:\n#0 /tmp/tmpnlzjx73d.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnlzjx73d.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzaiy62s.php:25\n\
    Stack trace:\n#0 /tmp/tmplzaiy62s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplzaiy62s.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1353;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2321;\n    }\n    if ($n == 15) {\n        return 3403;\n    }\n\
    \    if ($n == 16) {\n        return 5475;\n    }\n    if ($n == 17) {\n     \
    \   return 7926;\n    }\n    if ($n == 18) {\n        return 11407;\n    }\n \
    \   if ($n == 19) {\n        return 17210;\n    }\n    if ($n == 20) {\n     \
    \   return 29693;\n    }\n    if ($n == 21) {\n        return 51417;\n    }\n\
    \    if ($n == 22) {\n        return 73779;\n    }\n    if ($n == 23) {\n    \
    \    return 106776;\n    }\n    if ($n == 24) {\n        return 145923;\n    }\n\
    \    if ($n == 25) {\n        return 182749;\n    }\n    if ($n == 26) {\n   \
    \     return 220081;\n    }\n    if ($n == 27) {\n        return 261665;\n   \
    \ }\n    if ($n == 28) {\n        return 329569;\n    }\n    if ($n == 29) {\n\
    \        return 430342;\n    }\n    if ($n == 30) {\n        return 560108;\n\
    \    }\n    if ($n == 31) {\n        return 685557;\n    }\n    if ($n == 32)\
    \ {\n        return 909154;\n    }\n    if ($n == 33) {\n        return 1136543;\n\
    \    }\n    if ($n == 34) {\n        return 1372109;\n    }\n    if ($n == 35)\
    \ {\n        return 1585477;\n    }\n    if ($n == 36) {\n        return 1913417;\n\
    \    }\n    if ($n == 37) {\n        return 2233577;\n    }\n    if ($n == 38)\
    \ {\n        return 2544523;\n    }\n    if ($n == 39) {\n        return 2855570;\n\
    \    }\n    if ($n == 40) {\n        return 3267437;\n    }\n    if (\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgxbmh2ds.php on line 132\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n < $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n        $n++;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnj5f_4n.php:33\n\
    Stack trace:\n#0 /tmp/tmpgnj5f_4n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgnj5f_4n.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8ezzx8k.php:25\n\
    Stack trace:\n#0 /tmp/tmpl8ezzx8k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl8ezzx8k.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    $fibs[2] = 1;\n    $fibs[3] = 1;\n    $fibs[4] = 1;\n    $fibs[5] = 1;\n\
    \    $fibs[6] = 1;\n    $fibs[7] = 1;\n    $fibs[8] = 1;\n    $fibs[9] = 1;\n\
    \    $fibs[10] = 1;\n    $fibs[11] = 1;\n    $fibs[12] = 1;\n    $fibs[13] = 1;\n\
    \    $fibs[14] = 1;\n    $fibs[15] = 1;\n    $fibs[16] = 1;\n    $fibs[17] = 1;\n\
    \    $fibs[18] = 1;\n    $fibs[19] = 1;\n    $fibs[20] = 1;\n    $fibs[21] = 1;\n\
    \    $fibs[22] = 1;\n    $fibs[23] = 1;\n    $fibs[24] = 1;\n    $fibs[25] = 1;\n\
    \    $fibs[26] = 1;\n    $fibs[27] = 1;\n    $fibs[28] = 1;\n    $fibs[29] = 1;\n\
    \    $fibs[30] = 1;\n    $fibs[31] = 1;\n    $fibs[32] = 1;\n    $fibs[33] = 1;\n\
    \    $fibs[34] = 1;\n    $fibs[35] = 1;\n    $fibs[36] = 1;\n    $fibs[37] = 1;\n\
    \    $fibs[38] = 1;\n    $fibs[39] = 1;\n    $fibs[40] = 1;\n    $fibs[41] = 1;\n\
    \    $fibs[42] = 1;\n    $fibs[43] = 1;\n    $fibs[44] = 1;\n    $fibs[45] = 1;\n\
    \    $fibs[46] = 1;\n    $fibs[47] = 1;\n    $fibs[48] = 1;\n    $fibs[49] = 1;\n\
    \    $fibs[50] = 1;\n    $fibs[51] = 1;\n    $fibs[52] = 1;\n    $fibs[53] = 1;\n\
    \    $fibs[54] = 1;\n    $fibs[55] = 1;\n    $fibs[56] = 1;\n    $fibs[57] = 1;\n\
    \    $fibs[58] = 1;\n    $fibs[59] = 1;\n    $fibs[60] = 1;\n    $fibs[61] = 1;\n\
    \    $fibs[62] = 1;\n    $fibs[63] = 1;\n    $fibs[64] = 1;\n    $fibs[65] = 1;\n\
    \    $fibs[66] = 1;\n    $fibs[67] = 1;\n    $fibs[68] = 1;\n    $fibs[69] = 1;\n\
    \    $fibs[70] = 1;\n    $fibs[71] = 1;\n    $fibs[72] = 1;\n    $fibs[73] = 1;\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbh5op9yi.php on line 107\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6q9wb92p.php:28\n\
    Stack trace:\n#0 /tmp/tmp6q9wb92p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6q9wb92p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1344;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2100;\n    }\n    if ($n == 15) {\n        return 2584;\n    }\n\
    \    if ($n == 16) {\n        return 3415;\n    }\n    if ($n == 17) {\n     \
    \   return 4104;\n    }\n    if ($n == 18) {\n        return 4677;\n    }\n  \
    \  if ($n == 19) {\n        return 5261;\n    }\n    if ($n == 20) {\n       \
    \ return 5907;\n    }\n    if ($n == 21) {\n        return 6658;\n    }\n    if\
    \ ($n == 22) {\n        return 7413;\n    }\n    if ($n == 23) {\n        return\
    \ 8102;\n    }\n    if ($n == 24) {\n        return 9649;\n    }\n    if ($n ==\
    \ 25) {\n        return 11265;\n    }\n    if ($n == 26) {\n        return 12997;\n\
    \    }\n    if ($n == 27) {\n        return 14674;\n    }\n    if ($n == 28) {\n\
    \        return 16342;\n    }\n    if ($n == 29) {\n        return 18001;\n  \
    \  }\n    if ($n == 30) {\n        return 19647;\n    }\n    if ($n == 31) {\n\
    \        return 21441;\n    }\n    if ($n == 32) {\n        return 22917;\n  \
    \  }\n    if ($n == 33) {\n        return 24590;\n    }\n    if ($n == 34) {\n\
    \        return 26124;\n    }\n    if ($n == 35) {\n        return 27793;\n  \
    \  }\n    if ($n == 36) {\n        return 29314;\n    }\n    if ($n == 37) {\n\
    \        return 31005;\n    }\n    if ($n == 38) {\n        return 32777;\n  \
    \  }\n    if ($n == 39) {\n        return 34545;\n    }\n    if ($n == 40) {\n\
    \        return 36290;\n    }\n    if ($n == 41) {\n        return 38085;\n  \
    \  }\n    if ($n == 42) {\n        return 40729;\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxfmza6ez.php on line 154\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    $fibs = array();\n    $fibs[0] =\
    \ 1;\n    $fibs[1] = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $fibs[$i]\
    \ = $fibs[$i - 1] + $fibs[$i - 2];\n    }\n    return $fibs[$n];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp647x1ml2.php:34\n\
    Stack trace:\n#0 /tmp/tmp647x1ml2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp647x1ml2.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 135797;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34197173;\n    }\n    if ($n == 35)\
    \ {\n        return 55197173;\n    }\n    if ($n == 36) {\n        return 89197173;\n\
    \    }\n    if ($n == 37) {\n        return 135793;\n    }\n    if ($n == 38)\
    \ {\n        return 2333893;\n    }\n    if ($n == 39) {\n        return 34197179;\n\
    \    }\n    if ($n == 40) {\n        return 55197179;\n    }\n    if ($n == 41)\
    \ {\n        return 89197179;\n    }\n    if ($n == 42) {\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqkeobbw0.php on line 153\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\tif ($n % 3 == 0) {\n\t\treturn\
    \ prime_fib(3 * $n) + 3;\n\t}\n\treturn prime_fib(3 * $n) + 5;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67aycwnw.php:37\n\
    Stack trace:\n#0 /tmp/tmp67aycwnw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp67aycwnw.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wxx58u8.php:34\n\
    Stack trace:\n#0 /tmp/tmp4wxx58u8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4wxx58u8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1) return $n;\n\treturn prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3) + 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn6co2g9.php:23\n\
    Stack trace:\n#0 /tmp/tmpwn6co2g9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwn6co2g9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(max($n - 2, 1)) + prime_fib(max($n - 2, 2));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv67uxsz2.php:25\n\
    Stack trace:\n#0 /tmp/tmpv67uxsz2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv67uxsz2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n       \
    \ 2,\n        3,\n        5,\n        8,\n        13,\n        21,\n        34,\n\
    \        55,\n        89,\n        144,\n        233,\n        377,\n        610,\n\
    \        987,\n        1597,\n        2584,\n        4181,\n        6765,\n  \
    \      10946,\n        17711,\n        28657,\n        46625,\n        75025,\n\
    \        121393,\n        196418,\n        317811,\n        514229,\n        832040,\n\
    \        1346269,\n        2178309,\n        3524578,\n        5702887,\n    \
    \    9227465,\n        14930352,\n        24157817,\n        39088169,\n     \
    \   52608717,\n        102334155,\n        165580141,\n        267914296,\n  \
    \      433494437,\n        701408733,\n        1134903170,\n        1836311903,\n\
    \        3012329806,\n        4669396367,\n        725766765,\n        1249835811,\n\
    \        1960938193,\n        3171226808,\n        514229163,\n        836547721,\n\
    \        1351079886,\n        2178309285,\n        3524577881,\n        570288663,\n\
    \        92274657,\n        1493035206,\n        2415781747,\n        3908816879,\n\
    \        526087169,\n        1023341521,\n        1655801429,\n        2679142974,\n\
    \        4334944361,\n        701408733,\n        1134903170,\n        1836311903,\n\
    \        3012329806,\n        4669396367,\n        725766765,\n        1249835811,\n\
    \        1960938193,\n        3171226808,\n        514229163,\n        836547721,\n\
    \        1351079886,\n        2178309285,\n        3524577881,\n        570288663,\n\
    \        92274657,\n        1493035206,\n        2415781747,\n        3908816879,\n\
    \        \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg84tg_cl.php on line 102\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fib = $n;\n\
    \    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n \
    \       $b = $c;\n        if($b % 2 == 0) {\n            $prime_fib = $b;\n  \
    \      }\n    }\n    return $prime_fib;\n}\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfo8xw0gk.php:33\n\
    Stack trace:\n#0 /tmp/tmpfo8xw0gk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfo8xw0gk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [0, 1];\n    for ($i = 2; $i <= $n; $i++)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wh02m7t.php:26\n\
    Stack trace:\n#0 /tmp/tmp1wh02m7t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1wh02m7t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b < $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk6tfnor.php:34\n\
    Stack trace:\n#0 /tmp/tmpyk6tfnor.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyk6tfnor.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtve_6ry.php:25\n\
    Stack trace:\n#0 /tmp/tmpgtve_6ry.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgtve_6ry.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    while\
    \ ($n >= $d) {\n        $a = $b;\n        $b = $c;\n        $c = $d;\n       \
    \ $d = $a + $b;\n        $n--;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpka2c4f.php:33\n\
    Stack trace:\n#0 /tmp/tmpmpka2c4f.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmpka2c4f.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpf23pys.php:24\n\
    Stack trace:\n#0 /tmp/tmpbpf23pys.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbpf23pys.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib(3 * $n) + 1;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphff_bye2.php:30\n\
    Stack trace:\n#0 /tmp/tmphff_bye2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphff_bye2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb348hxw.php:25\n\
    Stack trace:\n#0 /tmp/tmpqb348hxw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqb348hxw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdtzpn0p.php:32\n\
    Stack trace:\n#0 /tmp/tmpbdtzpn0p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbdtzpn0p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 1843;\n    }\n    if ($n == 14) {\n\
    \        return 2321;\n    }\n    if ($n == 15) {\n        return 3417;\n    }\n\
    \    if ($n == 16) {\n        return 5463;\n    }\n    if ($n == 17) {\n     \
    \   return 8931;\n    }\n    if ($n == 18) {\n        return 13593;\n    }\n \
    \   if ($n == 19) {\n        return 18451;\n    }\n    if ($n == 20) {\n     \
    \   return 23215;\n    }\n    if ($n == 21) {\n        return 34197;\n    }\n\
    \    if ($n == 22) {\n        return 54799;\n    }\n    if ($n == 23) {\n    \
    \    return 89377;\n    }\n    if ($n == 24) {\n        return 135995;\n    }\n\
    \    if ($n == 25) {\n        return 184799;\n    }\n    if ($n == 26) {\n   \
    \     return 232175;\n    }\n    if ($n == 27) {\n        return 341993;\n   \
    \ }\n    if ($n == 28) {\n        return 548013;\n    }\n    if ($n == 29) {\n\
    \        return 893931;\n    }\n    if ($n == 30) {\n        return 1360139;\n\
    \    }\n    if ($n == 31) {\n        return 1841199;\n    }\n    if ($n == 32)\
    \ {\n        return 2321997;\n    }\n    if ($n == 33) {\n        return 342013;\n\
    \    }\n    if ($n == 34) {\n        return 548029;\n    }\n    if ($n == 35)\
    \ {\n        return 894079;\n    }\n    if ($n == 36) {\n        return 1360405;\n\
    \    }\n    if ($n == 37) {\n        return 1841313;\n    }\n    if ($n == 38)\
    \ {\n        return 2322171;\n    }\n    if ($n == 39) {\n        return 342031;\n\
    \    }\n    if ($n == 40) {\n        return 548057;\n    }\n    if ($n == 41)\
    \ {\n        return 894093;\n    }\n    if (\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvipy4sjd.php on line 135\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1)\n\t\treturn $n;\n\treturn prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_6envkd.php:24\n\
    Stack trace:\n#0 /tmp/tmpm_6envkd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm_6envkd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [0, 1];\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib[$n\
    \ - 1];\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps56djzvc.php:25\n\
    Stack trace:\n#0 /tmp/tmps56djzvc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps56djzvc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n\
    \    $e = 1;\n    $f = 1;\n    $prime_fib = $n;\n    \n    while($prime_fib <\
    \ $n) {\n        $a = $a + $b;\n        $b = $c + $d;\n        $c = $a + $b;\n\
    \        $d = $c + $d;\n        $e = $e + $f;\n        $f = $e + $f;\n       \
    \ $prime_fib = $f + $prime_fib;\n    }\n    \n    return $prime_fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbatni98.php:40\n\
    Stack trace:\n#0 /tmp/tmpjbatni98.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjbatni98.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprusebyhn.php:25\n\
    Stack trace:\n#0 /tmp/tmprusebyhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprusebyhn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput4jjklk.php:35\n\
    Stack trace:\n#0 /tmp/tmput4jjklk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmput4jjklk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 1) + prime_fib($n - 3);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeoydq3e.php:34\n\
    Stack trace:\n#0 /tmp/tmpqeoydq3e.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqeoydq3e.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\tif ($n % 3 == 0) {\n\t\treturn\
    \ prime_fib(3 * $n) + 3;\n\t}\n\treturn prime_fib(3 * $n) + 5;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q7v5eje.php:37\n\
    Stack trace:\n#0 /tmp/tmp2q7v5eje.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp2q7v5eje.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1)\n\t\treturn $n;\n\telse\n\t\treturn prime_fib(prime_fib($n\
    \ - 1) + 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynwgddt3.php:25\n\
    Stack trace:\n#0 /tmp/tmpynwgddt3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpynwgddt3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ac61v69.php:32\n\
    Stack trace:\n#0 /tmp/tmp0ac61v69.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0ac61v69.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmr8tftv.php:34\n\
    Stack trace:\n#0 /tmp/tmpwmr8tftv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwmr8tftv.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($n < $a) {\n        $c = $b;\n        $b = $a + $c;\n\
    \        $a = $c;\n        $n = $b;\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp332f9pxc.php:32\n\
    Stack trace:\n#0 /tmp/tmp332f9pxc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp332f9pxc.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbbz4dap.php:35\n\
    Stack trace:\n#0 /tmp/tmpcbbz4dap.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcbbz4dap.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohdgxl1q.php:33\n\
    Stack trace:\n#0 /tmp/tmpohdgxl1q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpohdgxl1q.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudmq85om.php:35\n\
    Stack trace:\n#0 /tmp/tmpudmq85om.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpudmq85om.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 3)\
    \ + prime_fib($n - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7hy8z2p.php:31\n\
    Stack trace:\n#0 /tmp/tmpf7hy8z2p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf7hy8z2p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(ceil($n\
    \ / 2)) + prime_fib(ceil($n / 3));\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnz5h2or.php:23\n\
    Stack trace:\n#0 /tmp/tmptnz5h2or.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptnz5h2or.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8ey04oe.php:24\n\
    Stack trace:\n#0 /tmp/tmpo8ey04oe.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo8ey04oe.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_br_hi7.php:34\n\
    Stack trace:\n#0 /tmp/tmp3_br_hi7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3_br_hi7.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1344;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2100;\n    }\n    if ($n == 15) {\n        return 2584;\n    }\n\
    \    if ($n == 16) {\n        return 3415;\n    }\n    if ($n == 17) {\n     \
    \   return 4181;\n    }\n    if ($n == 18) {\n        return 5574;\n    }\n  \
    \  if ($n == 19) {\n        return 6765;\n    }\n    if ($n == 20) {\n       \
    \ return 8144;\n    }\n    if ($n == 21) {\n        return 9293;\n    }\n    if\
    \ ($n == 22) {\n        return 11592;\n    }\n    if ($n == 23) {\n        return\
    \ 13844;\n    }\n    if ($n == 24) {\n        return 16703;\n    }\n    if ($n\
    \ == 25) {\n        return 19582;\n    }\n    if ($n == 26) {\n        return\
    \ 22007;\n    }\n    if ($n == 27) {\n        return 24593;\n    }\n    if ($n\
    \ == 28) {\n        return 27406;\n    }\n    if ($n == 29) {\n        return\
    \ 30845;\n    }\n    if ($n == 30) {\n        return 34644;\n    }\n    if ($n\
    \ == 31) {\n        return 38603;\n    }\n    if ($n == 32) {\n        return\
    \ 41865;\n    }\n    if ($n == 33) {\n        return 45000;\n    }\n    if ($n\
    \ == 34) {\n        return 48653;\n    }\n    if ($n == 35) {\n        return\
    \ 53056;\n    }\n    if ($n == 36) {\n        return 57373;\n    }\n    if ($n\
    \ == 37) {\n        return 61722;\n    }\n    if ($n == 38) {\n        return\
    \ 66730;\n    }\n    if ($n == 39) {\n        return 71459;\n    }\n    if ($n\
    \ == 40) {\n        return 75456;\n    }\n    if ($n == 41) {\n        return\
    \ 79632;\n    }\n    if ($n == 42\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzneeojd1.php on line 135\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9bblqkr.php:27\n\
    Stack trace:\n#0 /tmp/tmpo9bblqkr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpo9bblqkr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplh3dqt3h.php:27\n\
    Stack trace:\n#0 /tmp/tmplh3dqt3h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplh3dqt3h.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 4);\n\t}\n\treturn prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbw3v0hnp.php:37\n\
    Stack trace:\n#0 /tmp/tmpbw3v0hnp.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpbw3v0hnp.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0a3xzn3.php:24\n\
    Stack trace:\n#0 /tmp/tmph0a3xzn3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph0a3xzn3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctbrq_0o.php:34\n\
    Stack trace:\n#0 /tmp/tmpctbrq_0o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpctbrq_0o.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryjsakcw.php:34\n\
    Stack trace:\n#0 /tmp/tmpryjsakcw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpryjsakcw.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i\
    \ - 2];\n    }\n    return $fibs[$n];\n}\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6knwoblf.php:28\n\
    Stack trace:\n#0 /tmp/tmp6knwoblf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6knwoblf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(2 * $n) + prime_fib(3 * $n);\n\t}\n\treturn prime_fib(3\
    \ * $n) + prime_fib(2 * $n);\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlvykhx8.php:34\n\
    Stack trace:\n#0 /tmp/tmpmlvykhx8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmlvykhx8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl28xtq9.php:24\n\
    Stack trace:\n#0 /tmp/tmpzl28xtq9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzl28xtq9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41bs6bhx.php:31\n\
    Stack trace:\n#0 /tmp/tmp41bs6bhx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp41bs6bhx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0247cgl.php:34\n\
    Stack trace:\n#0 /tmp/tmpf0247cgl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf0247cgl.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib(2);\n    $b = prime_fib(3);\n    while ($a < $n) {\n\
    \        $a = $a + $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth9y_ue_.php:37\n\
    Stack trace:\n#0 /tmp/tmpth9y_ue_.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpth9y_ue_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6ota6rk.php:33\n\
    Stack trace:\n#0 /tmp/tmp_6ota6rk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_6ota6rk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqbxz_d5.php:31\n\
    Stack trace:\n#0 /tmp/tmpjqbxz_d5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjqbxz_d5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 251;\n    }\n    if ($n == 9) {\n        return\
    \ 413;\n    }\n    if ($n == 10) {\n        return 671;\n    }\n    if ($n ==\
    \ 11) {\n        return 987;\n    }\n    if ($n == 12) {\n        return 1569;\n\
    \    }\n    if ($n == 13) {\n        return 2584;\n    }\n    if ($n == 14) {\n\
    \        return 4181;\n    }\n    if ($n == 15) {\n        return 6765;\n    }\n\
    \    if ($n == 16) {\n        return 10923;\n    }\n    if ($n == 17) {\n    \
    \    return 17711;\n    }\n    if ($n == 18) {\n        return 28657;\n    }\n\
    \    if ($n == 19) {\n        return 51453;\n    }\n    if ($n == 20) {\n    \
    \    return 80527;\n    }\n    if ($n == 21) {\n        return 126799;\n    }\n\
    \    if ($n == 22) {\n        return 177993;\n    }\n    if ($n == 23) {\n   \
    \     return 286147;\n    }\n    if ($n == 24) {\n        return 514229;\n   \
    \ }\n    if ($n == 25) {\n        return 801787;\n    }\n    if ($n == 26) {\n\
    \        return 1264990;\n    }\n    if ($n == 27) {\n        return 1770797;\n\
    \    }\n    if ($n == 28) {\n        return 2865753;\n    }\n    if ($n == 29)\
    \ {\n        return 5141823;\n    }\n    if ($n == 30) {\n        return 8015693;\n\
    \    }\n    if ($n == 31) {\n        return 12677489;\n    }\n    if ($n == 32)\
    \ {\n        return 17705879;\n    }\n    if ($n == 33) {\n        return 28614677;\n\
    \    }\n    if ($n == 34) {\n        return 51413579;\n    }\n    if ($n == 35)\
    \ {\n        return 80131799;\n    }\n    if ($n == 36) {\n        return 126732990;\n\
    \    }\n    if ($n == 37) {\n        return 177033579;\n    }\n    if ($n == 38)\
    \ {\n        return 286133577;\n    }\n    if ($n == 39) {\n        return 514073799;\n\
    \    }\n    if ($n == 40) {\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiy2ty_jk.php on line 147\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ja93o6g.php:34\n\
    Stack trace:\n#0 /tmp/tmp3ja93o6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3ja93o6g.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoouevc4j.php:23\n\
    Stack trace:\n#0 /tmp/tmpoouevc4j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoouevc4j.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(max($n\
    \ - 2, 1)) + prime_fib(max($n - 1, 1));\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw3d52vv.php:25\n\
    Stack trace:\n#0 /tmp/tmpqw3d52vv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqw3d52vv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bi2eid8.php:28\n\
    Stack trace:\n#0 /tmp/tmp_bi2eid8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_bi2eid8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1) return $n;\n\tif ($n == 2) return 1;\n\
    \treturn prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46elgsaq.php:24\n\
    Stack trace:\n#0 /tmp/tmp46elgsaq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp46elgsaq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o5mxcne.php:31\n\
    Stack trace:\n#0 /tmp/tmp4o5mxcne.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4o5mxcne.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 135797;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34197173;\n    }\n    if ($n == 35)\
    \ {\n        return 55197173;\n    }\n    if ($n == 36) {\n        return 89197173;\n\
    \    }\n    if ($n == 37) {\n        return 135797;\n    }\n    if ($n == 38)\
    \ {\n        return 233389877;\n    }\n    if ($n == 39) {\n        return 341971737;\n\
    \    }\n    if ($n == 40) {\n        return 551971737;\n    }\n    if ($n == 41)\
    \ {\n        return 891971737;\n    }\n    if (\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0gnd37qb.php on line 135\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    if\
    \ ($n == 3) {\n        return 5;\n    }\n    if ($n == 5 || $n == 7) {\n     \
    \   return 13;\n    }\n    if ($n == 11) {\n        return 47;\n    }\n    if\
    \ ($n == 13) {\n        return 91;\n    }\n    if ($n == 17) {\n        return\
    \ 109;\n    }\n    if ($n == 19) {\n        return 121;\n    }\n    if ($n ==\
    \ 23) {\n        return 143;\n    }\n    if ($n == 29) {\n        return 177;\n\
    \    }\n    if ($n == 33) {\n        return 193;\n    }\n    if ($n == 31) {\n\
    \        return 229;\n    }\n    if ($n == 37) {\n        return 253;\n    }\n\
    \    if ($n == 43) {\n        return 289;\n    }\n    if ($n == 91) {\n      \
    \  return 341;\n    }\n    if ($n == 97) {\n        return 373;\n    }\n    if\
    \ ($n == 109) {\n        return 425;\n    }\n    if ($n == 121) {\n        return\
    \ 487;\n    }\n    if ($n == 131) {\n        return 529;\n    }\n    if ($n ==\
    \ 153) {\n        return 591;\n    }\n    if ($n == 173) {\n        return 697;\n\
    \    }\n    if ($n == 193) {\n        return 811;\n    }\n    if ($n == 213) {\n\
    \        return 963;\n    }\n    if ($n == 233) {\n        return 1131;\n    }\n\
    \    if ($n == 247) {\n        return 1279;\n    }\n    if ($n == 273) {\n   \
    \     return 1423;\n    }\n    if ($n == 319) {\n        return 1569;\n    }\n\
    \    if ($n == 373) {\n        return 1723;\n    }\n    if ($n == 427) {\n   \
    \     return 1869;\n    }\n    if ($n == 487) {\n        return 1913;\n    }\n\
    \    if ($n == 529) {\n        return 1997;\n    }\n    if ($n == 591) {\n   \
    \     return 2057;\n    }\n    if ($n == 647) {\n        return 2213;\n    }\n\
    \    if ($n == 711) {\n        return 2287;\n    }\n    if ($n == 767) {\n   \
    \     return 2393;\n    }\n    if ($n == 831) {\n        return 2459;\n    }\n\
    \    if ($n == 893) {\n        return 2511;\n    }\n    if ($n == 927) {\n   \
    \     return 2567;\n    }\n    if ($n == 1023) {\n        return 2691;\n    }\n\
    \    if ($n == 1059) {\n        return 2749;\n    }\n    if ($n == 1143) {\n \
    \       return 2811;\n    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxnmu9qr5.php on line 151\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2) + prime_fib($n - 3);\n    }\n    return prime_fib($n - 1) + prime_fib($n\
    \ - 3) + prime_fib($n - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgo5u5t9l.php:37\n\
    Stack trace:\n#0 /tmp/tmpgo5u5t9l.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpgo5u5t9l.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9gxh2om.php:34\n\
    Stack trace:\n#0 /tmp/tmpc9gxh2om.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc9gxh2om.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ml1ksyx.php:25\n\
    Stack trace:\n#0 /tmp/tmp7ml1ksyx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7ml1ksyx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $sum = 0;\n    for($i = 0; $i\
    \ < $n; $i++) {\n        $b = $a + $b;\n        $sum = $a + $b;\n        $a =\
    \ $b;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjojz7ptg.php:29\n\
    Stack trace:\n#0 /tmp/tmpjojz7ptg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjojz7ptg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = 1;\n    $b = 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = ($a + $b)\
    \ % $n;\n        $b = ($a + $b) % $n;\n        $c = ($a + $b) % $n;\n    }\n \
    \   return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtya2s1_.php:33\n\
    Stack trace:\n#0 /tmp/tmpmtya2s1_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmtya2s1_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jktivru.php:28\n\
    Stack trace:\n#0 /tmp/tmp4jktivru.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4jktivru.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6t6pe_v.php:31\n\
    Stack trace:\n#0 /tmp/tmpk6t6pe_v.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk6t6pe_v.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsel7jdb4.php:24\n\
    Stack trace:\n#0 /tmp/tmpsel7jdb4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsel7jdb4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xq_byfw.php:23\n\
    Stack trace:\n#0 /tmp/tmp8xq_byfw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8xq_byfw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zz1147x.php:25\n\
    Stack trace:\n#0 /tmp/tmp5zz1147x.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5zz1147x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygdtlvnd.php:25\n\
    Stack trace:\n#0 /tmp/tmpygdtlvnd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpygdtlvnd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array(\n        1,\n        1,\n    );\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $fib[] = $fib[$i - 1] + $fib[$i -\
    \ 2];\n    }\n    return $fib[$n];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpcja8u2.php:29\n\
    Stack trace:\n#0 /tmp/tmpvpcja8u2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvpcja8u2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplit9zdhk.php:34\n\
    Stack trace:\n#0 /tmp/tmplit9zdhk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplit9zdhk.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0yzothl.php:31\n\
    Stack trace:\n#0 /tmp/tmpq0yzothl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq0yzothl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 4);\n\t}\n\treturn prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeet8mgv3.php:37\n\
    Stack trace:\n#0 /tmp/tmpeet8mgv3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpeet8mgv3.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegesql4v.php:24\n\
    Stack trace:\n#0 /tmp/tmpegesql4v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpegesql4v.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 3)\
    \ + prime_fib($n - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v6plydu.php:31\n\
    Stack trace:\n#0 /tmp/tmp8v6plydu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8v6plydu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    while\
    \ ($n >= $d) {\n        $a = $b;\n        $b = $c;\n        $c = $d;\n       \
    \ $d = $a + $b;\n        $n--;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb99kh059.php:33\n\
    Stack trace:\n#0 /tmp/tmpb99kh059.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpb99kh059.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $b;\n}\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb3vx2_i.php:30\n\
    Stack trace:\n#0 /tmp/tmpqb3vx2_i.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqb3vx2_i.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $fib_number = $n;\n\
    \    while($fib_number >= 2) {\n        $c = $a + $b;\n        $a = $b;\n    \
    \    $b = $c;\n        $fib_number--;\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjggp735.php:30\n\
    Stack trace:\n#0 /tmp/tmpfjggp735.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfjggp735.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(ceil($n\
    \ / 2)) + prime_fib(ceil($n / 3));\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudd_vzez.php:23\n\
    Stack trace:\n#0 /tmp/tmpudd_vzez.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpudd_vzez.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $fib_number = $n;\n\
    \    while($fib_number > 0){\n        $a = $b;\n        $b = $c;\n        $c =\
    \ $a + $b;\n        $fib_number--;\n    }\n    return $c;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24jzb741.php:33\n\
    Stack trace:\n#0 /tmp/tmp24jzb741.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp24jzb741.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n\n  \
    \  $a = $b = 1;\n    $c = 1;\n    $d = 1;\n\n    while ($n > 0) {\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n        $d = $a + $b;\n        $n--;\n\
    \    }\n\n    if ($d === 1) {\n        return $c;\n    }\n\n    return $d;\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpach1cl2y.php:42\n\
    Stack trace:\n#0 /tmp/tmpach1cl2y.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpach1cl2y.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(floor($n / 2)) + prime_fib(floor($n / 3)) + ($n % 2 === 1 ? $n % 3\
    \ : 0);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu1qwhuw.php:24\n\
    Stack trace:\n#0 /tmp/tmppu1qwhuw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppu1qwhuw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n + 1) + prime_fib(3\
    \ * $n + 2);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfj5uakdn.php:27\n\
    Stack trace:\n#0 /tmp/tmpfj5uakdn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfj5uakdn.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1353;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2100;\n    }\n    if ($n == 15) {\n        return 2584;\n    }\n\
    \    if ($n == 16) {\n        return 3415;\n    }\n    if ($n == 17) {\n     \
    \   return 4103;\n    }\n    if ($n == 18) {\n        return 4677;\n    }\n  \
    \  if ($n == 19) {\n        return 5261;\n    }\n    if ($n == 20) {\n       \
    \ return 5907;\n    }\n    if ($n == 21) {\n        return 7136;\n    }\n    if\
    \ ($n == 22) {\n        return 7965;\n    }\n    if ($n == 23) {\n        return\
    \ 9721;\n    }\n    if ($n == 24) {\n        return 10930;\n    }\n    if ($n\
    \ == 25) {\n        return 12366;\n    }\n    if ($n == 26) {\n        return\
    \ 13842;\n    }\n    if ($n == 27) {\n        return 15293;\n    }\n    if ($n\
    \ == 28) {\n        return 16705;\n    }\n    if ($n == 29) {\n        return\
    \ 18262;\n    }\n    if ($n == 30) {\n        return 19697;\n    }\n    if ($n\
    \ == 31) {\n        return 21441;\n    }\n    if ($n == 32) {\n        return\
    \ 22007;\n    }\n    if ($n == 33) {\n        return 22527;\n    }\n    if ($n\
    \ == 34) {\n        return 23142;\n    }\n    if ($n == 35) {\n        return\
    \ 23965;\n    }\n    if ($n == 36) {\n        return 24608;\n    }\n    if ($n\
    \ == 37) {\n        return 25261;\n    }\n    if ($n == 38) {\n        return\
    \ 25823;\n    }\n    if ($n == 39) {\n        return 26377;\n    }\n    if ($n\
    \ == 40) {\n        return 26971;\n    }\n    if ($n == 41) {\n        return\
    \ 27595;\n    }\n    if ($n == 42) {\n        return 282\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvps3696p.php on line 136\n"
  stderr: ''
  exit_code: 255
  status: Exception

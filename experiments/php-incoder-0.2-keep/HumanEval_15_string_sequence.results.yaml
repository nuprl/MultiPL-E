name: HumanEval_15_string_sequence
language: php
results:
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%u', $i);\n  }, range($n)));\n}\n</code>\n<|/ a\
    \ tags=php,string |>\n<| c |>\nI like your solution, however it only works with\
    \ PHP 5.6+. I'm currently using 5.3.10\n<|/ c |>\n<| c |>\nI added a PHP 5.3 compatible\
    \ version\n<|/ c |>\n<| c |>\nI added a PHP 5.3 compatible version\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8k5rfsq_.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return str_pad($i, 3, '0', STR_PAD_LEFT);\n  }, range($n)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpsbkk778u.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpsbkk778u.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpsbkk778u.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsbkk778u.php:18\nStack trace:\n#0 /tmp/tmpsbkk778u.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsbkk778u.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tzr6ct5.php:19\n\
    Stack trace:\n#0 /tmp/tmp4tzr6ct5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4tzr6ct5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uvpfqyt.php:19\n\
    Stack trace:\n#0 /tmp/tmp3uvpfqyt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3uvpfqyt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrstuvwxyz';\n\
    $string = 'abcdefghijklmnopqrstuvwxyz';\n$string = 'abcdefghijklmnopqrst\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz332heif.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo89q6oti.php:19\n\
    Stack trace:\n#0 /tmp/tmpo89q6oti.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo89q6oti.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' '.$i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3a4ditb.php:20\n\
    Stack trace:\n#0 /tmp/tmpw3a4ditb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw3a4ditb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%010d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp0yhk2t22.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp0yhk2t22.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp0yhk2t22.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0yhk2t22.php:18\nStack trace:\n#0 /tmp/tmp0yhk2t22.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0yhk2t22.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ftczoex.php:19\n\
    Stack trace:\n#0 /tmp/tmp1ftczoex.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1ftczoex.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkghq3jg_.php:19\n\
    Stack trace:\n#0 /tmp/tmpkghq3jg_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkghq3jg_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpz7fomq.php:20\n\
    Stack trace:\n#0 /tmp/tmptpz7fomq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptpz7fomq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pupqtse.php:20\n\
    Stack trace:\n#0 /tmp/tmp8pupqtse.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8pupqtse.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4u9gcskm.php:20\n\
    Stack trace:\n#0 /tmp/tmp4u9gcskm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4u9gcskm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef';\n\
    $string = 'abcdef';\n$string = 'abcdef';\n$string = 'abcdef\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptjbg9f16.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtdn4vdu.php:19\n\
    Stack trace:\n#0 /tmp/tmpwtdn4vdu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwtdn4vdu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . intval($i);\n  }\n  return $s;\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gl30bou.php:20\n\
    Stack trace:\n#0 /tmp/tmp5gl30bou.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5gl30bou.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyh28zfk.php:20\n\
    Stack trace:\n#0 /tmp/tmpiyh28zfk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpiyh28zfk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fzoh13i.php:20\n\
    Stack trace:\n#0 /tmp/tmp_fzoh13i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_fzoh13i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekz_4lcb.php:19\n\
    Stack trace:\n#0 /tmp/tmpekz_4lcb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpekz_4lcb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mhvhu2g.php:20\n\
    Stack trace:\n#0 /tmp/tmp7mhvhu2g.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7mhvhu2g.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqqb74hu.php:20\n\
    Stack trace:\n#0 /tmp/tmpjqqb74hu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjqqb74hu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdlvce0tg.php:19\n\
    Stack trace:\n#0 /tmp/tmpdlvce0tg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdlvce0tg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n\
    $array = array_reverse($array);\n$string = implode($array);\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n\
    $array = array_reverse($array);\n$string = implode($array);\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a tags=php,string,arrays |>\n<code>\n$string = '0123456789';\n$array\
    \ = str_split($string);\n$array = array_reverse($array);\n$string = implode($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=php,string,arrays |>\n<code>\n$string =\
    \ '0123456789';\n$array = str_split($string);\n$array = array_reverse($array);\n\
    $string = implode($array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    $string = '0123456789';\n$array = str_split($string);\n$array = array_reverse($array);\n\
    $string = implode($array);\n</code>\n<|/ a tags=php,string,arrays |>\n<| a tags=php,string,arrays\
    \ |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n$array =\
    \ array_reverse($array);\n$string = implode($array);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n\
    $array = array_reverse($array);\n$string = implode($array);\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a tags=php,string,arrays |>\n<code>\n$string = '0123456789';\n$array\
    \ = str_split($string);\n$array = array_reverse($array);\n$string = implode($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = '0123456789';\n\
    $array = str_split($string);\n$array = array_reverse($array);\n$string = implode($array);\n\
    </code>\n<|/ a tag\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsz92lyq5.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5frjq2g4.php:20\n\
    Stack trace:\n#0 /tmp/tmp5frjq2g4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5frjq2g4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = '012345';\n$string2 =\
    \ $string;\n$string2[] = '0';\n$string2[] = '1';\n$string2[] = '2';\n$string2[]\
    \ = '3';\n$string2[] = '4';\n$string2[] = '5';\n$string2[] = '6';\n$string2[]\
    \ = '7';\n$string2[] = '8';\n$string2[] = '9';\n$string2[] = '0';\n$string2[]\
    \ = '1';\n$string2[] = '2';\n$string2[] = '3';\n$string2[] = '4';\n$string2[]\
    \ = '5';\n$string2[] = '6';\n$string2[] = '7';\n$string2[] = '8';\n$string2[]\
    \ = '9';\n$string2[] = '0';\n$string2[] = '1';\n$string2[] = '2';\n$string2[]\
    \ = '3';\n$string2[] = '4';\n$string2[] = '5';\n$string2[] = '6';\n$string2[]\
    \ = '7';\n$string2[] = '8';\n$string2[] = '9';\n$string2[] = '0';\n$string2[]\
    \ = '1';\n$string2[] = '2';\n$string2[] = '3';\n$string2[] = '4';\n$string2[]\
    \ = '5';\n$string2[] = '6';\n$string2[] = '7';\n$string2[] = '8';\n$string2[]\
    \ = '9';\n$string2[] = '0';\n$string2[] = '1';\n$string2[] = '2';\n$string2[]\
    \ = '3';\n$string2[] = '4';\n$string2[] = '5';\n$string2[] = '6';\n$string2[]\
    \ = '7';\n$string2[] = '8';\n$string2[] = '9';\n$string2[] = '0';\n$string2[]\
    \ = '1';\n$string2[] = '2';\n$string2[] = '3';\n$string2[] = '4';\n$string2[]\
    \ = '\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo9_kixzq.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mymytgk.php:20\n\
    Stack trace:\n#0 /tmp/tmp7mymytgk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7mymytgk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1f2m35c.php:20\n\
    Stack trace:\n#0 /tmp/tmpz1f2m35c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz1f2m35c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2w8elue.php:20\n\
    Stack trace:\n#0 /tmp/tmpz2w8elue.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz2w8elue.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpfltlz2wl.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpfltlz2wl.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpfltlz2wl.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfltlz2wl.php:18\nStack trace:\n#0 /tmp/tmpfltlz2wl.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfltlz2wl.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwp8v64x1.php:19\n\
    Stack trace:\n#0 /tmp/tmpwp8v64x1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwp8v64x1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4y640o2.php:20\n\
    Stack trace:\n#0 /tmp/tmpx4y640o2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx4y640o2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv4kb_ov.php:19\n\
    Stack trace:\n#0 /tmp/tmpvv4kb_ov.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvv4kb_ov.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gzkg_jj.php:20\n\
    Stack trace:\n#0 /tmp/tmp_gzkg_jj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_gzkg_jj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1ow6uqy.php:20\n\
    Stack trace:\n#0 /tmp/tmph1ow6uqy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph1ow6uqy.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38z16w1t.php:20\n\
    Stack trace:\n#0 /tmp/tmp38z16w1t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp38z16w1t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return $i;\n  }, range($n)));\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1tr8wy7u.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3m0mnc66.php:20\n\
    Stack trace:\n#0 /tmp/tmp3m0mnc66.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3m0mnc66.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhvl9ddf.php:19\n\
    Stack trace:\n#0 /tmp/tmpjhvl9ddf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjhvl9ddf.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_om_1yt2.php:20\n\
    Stack trace:\n#0 /tmp/tmp_om_1yt2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_om_1yt2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,string,arrays,numbers,sequence\
    \ |>\n<| a tags=php,string,arrays,numbers,sequence |>\n<code>\n<?php\n$string\
    \ = '0123456789';\n$array = str_split($string);\n$result = '';\nforeach ($array\
    \ as $key => $value) {\n    $result .= $value;\n    if ($key < count($array) -\
    \ 1) {\n        $result .= ' ';\n    }\n}\necho $result;\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n\
    $result = '';\nforeach ($array as $key => $value) {\n    $result .= $value;\n\
    \    if ($key < count($array) - 1) {\n        $result .= ' ';\n    }\n}\necho\
    \ $result;\n</code>\n<|/ a tags=php,string,arrays,numbers,sequence |>\n<| a dscore=2\
    \ |>\n<code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n$result\
    \ = '';\nforeach ($array as $key => $value) {\n    $result .= $value;\n    if\
    \ ($key < count($array) - 1) {\n        $result .= ' ';\n    }\n}\necho $result;\n\
    </code>\n<|/ a tags=php,string,arrays,numbers,sequence |>\n<| a dscore=1 |>\n\
    <code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n$result\
    \ = '';\nforeach ($array as $key => $value) {\n    $result .= $value;\n    if\
    \ ($key < count($array) - 1) {\n        $result .= ' ';\n    }\n}\necho $result;\n\
    </code>\n<|/ a tags=php,string,arrays,numbers,sequence |>\n<| a tags=php,string,arrays,numbers,sequence\
    \ |>\n<code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n$result\
    \ = '';\nforeach ($array as $key => $value) {\n    $result .= $value;\n    if\
    \ ($key < count($array) - 1) {\n        $result .= ' ';\n    }\n}\necho $result;\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,string,arrays,numbers,sequence |>\n\
    <code>\n<?php\n$string = '0123456789';\n$array = str_split($string\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpezqps0zl.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqulizofm.php:20\n\
    Stack trace:\n#0 /tmp/tmpqulizofm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqulizofm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return $i;\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nI like this solution, however it only works if you know the number\
    \ of items in the array ahead of time. Is there a way to do this without knowing\
    \ the number of items in the array?\n<|/ c |>\n<| c |>\n: Yes, you can use a loop\
    \ to do that. I've updated my answer to show how.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array,\
    \ 2);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\"\
    , \"c\", \"d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$array = array_chunk($array, 2);\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array,\
    \ 2);\n</code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array,\
    \ 2);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\"\
    , \"b\", \"c\", \"d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"a\", \"b\", \"c\"\
    , \"d\", \"e\");\n$array = array_chunk($array, 2);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbhwo9oe1.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl26jl4o_.php:20\n\
    Stack trace:\n#0 /tmp/tmpl26jl4o_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl26jl4o_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvziwezlw.php:20\n\
    Stack trace:\n#0 /tmp/tmpvziwezlw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvziwezlw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3k63l03.php:19\n\
    Stack trace:\n#0 /tmp/tmpv3k63l03.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv3k63l03.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjk_6p2hw.php:19\n\
    Stack trace:\n#0 /tmp/tmpjk_6p2hw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjk_6p2hw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . str_pad($i, 3, '0', STR_PAD_LEFT);\n  }\n  return\
    \ $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0i0iiu1.php:20\n\
    Stack trace:\n#0 /tmp/tmpn0i0iiu1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn0i0iiu1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppose7zz8.php:19\n\
    Stack trace:\n#0 /tmp/tmppose7zz8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppose7zz8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz0j79a4z.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprovvwcvt.php:19\n\
    Stack trace:\n#0 /tmp/tmprovvwcvt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprovvwcvt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12rn967a.php:20\n\
    Stack trace:\n#0 /tmp/tmp12rn967a.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp12rn967a.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return str_pad($i, 3, '0', STR_PAD_LEFT);\n  }, range($n)));\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd70n00qj.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjab8yrl8.php:19\n\
    Stack trace:\n#0 /tmp/tmpjab8yrl8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjab8yrl8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprch8_c9t.php:20\n\
    Stack trace:\n#0 /tmp/tmprch8_c9t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprch8_c9t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq27kn1_.php:19\n\
    Stack trace:\n#0 /tmp/tmphq27kn1_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphq27kn1_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq2dbzt_.php:19\n\
    Stack trace:\n#0 /tmp/tmpkq2dbzt_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkq2dbzt_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5sa4686.php:20\n\
    Stack trace:\n#0 /tmp/tmpn5sa4686.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn5sa4686.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6xbw0m0.php:19\n\
    Stack trace:\n#0 /tmp/tmps6xbw0m0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmps6xbw0m0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return str_pad($i, 2, '0', STR_PAD_LEFT);\n  }, range($n)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpb0pjmi3w.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpb0pjmi3w.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpb0pjmi3w.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpb0pjmi3w.php:18\nStack trace:\n#0 /tmp/tmpb0pjmi3w.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb0pjmi3w.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8i16wgn.php:20\n\
    Stack trace:\n#0 /tmp/tmpw8i16wgn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw8i16wgn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz51gsfcf.php:20\n\
    Stack trace:\n#0 /tmp/tmpz51gsfcf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz51gsfcf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nywlue8.php:20\n\
    Stack trace:\n#0 /tmp/tmp2nywlue8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2nywlue8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt38ofo_.php:20\n\
    Stack trace:\n#0 /tmp/tmpyt38ofo_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyt38ofo_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ykjnib0.php:20\n\
    Stack trace:\n#0 /tmp/tmp_ykjnib0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_ykjnib0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppldn2dz1.php:20\n\
    Stack trace:\n#0 /tmp/tmppldn2dz1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppldn2dz1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1efdol8.php:20\n\
    Stack trace:\n#0 /tmp/tmpt1efdol8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt1efdol8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxxehdes.php:20\n\
    Stack trace:\n#0 /tmp/tmplxxehdes.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplxxehdes.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqcenzer.php:20\n\
    Stack trace:\n#0 /tmp/tmppqcenzer.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppqcenzer.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_br97v3_.php:20\n\
    Stack trace:\n#0 /tmp/tmp_br97v3_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_br97v3_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpechu2p95.php:19\n\
    Stack trace:\n#0 /tmp/tmpechu2p95.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpechu2p95.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=php,string |>\n<code>\n$string = '012345';\n$result\
    \ = implode(array_map(function($v){return sprintf('%03d', $v);}, str_split($string)));\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n<code>\n$string = '012345';\n\
    $result = implode(array_map(function($v){return sprintf('%03d', $v);}, str_split($string)));\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n<code>\n$string = '012345';\n\
    $result = implode(array_map(function($v){return sprintf('%03d', $v);}, str_split($string)));\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n$string = '012345';\n$result\
    \ = implode(array_map(function($v){return sprintf('%03d', $v);}, str_split($string)));\n\
    </code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n$string =\
    \ '012345';\n$result = implode(array_map(function($v){return sprintf('%03d', $v);},\
    \ str_split($string)));\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $string = '012345';\n$result = implode(array_map(function($v){return sprintf('%03d',\
    \ $v);}, str_split($string)));\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string\
    \ |>\n<code>\n$string = '012345';\n$result = implode(array_map(function($v){return\
    \ sprintf('%03d', $v);}, str_split($string)));\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a tags=php,string |>\n<code>\n$string = '012345';\n$result = implode(array_map(function($v){return\
    \ sprintf('%03d', $v);}, str_split($string)));\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n$string = '012345\nfunction candidate(...$args) {\n \
    \   return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqd2lesfr.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4hd088o.php:20\n\
    Stack trace:\n#0 /tmp/tmpx4hd088o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx4hd088o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxj43w4ow.php:20\n\
    Stack trace:\n#0 /tmp/tmpxj43w4ow.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxj43w4ow.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gyerwdm.php:19\n\
    Stack trace:\n#0 /tmp/tmp9gyerwdm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9gyerwdm.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s8h0quz.php:19\n\
    Stack trace:\n#0 /tmp/tmp9s8h0quz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9s8h0quz.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqu5c_qah.php:19\n\
    Stack trace:\n#0 /tmp/tmpqu5c_qah.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqu5c_qah.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| c |>\nI like this solution, however it seems to have some issues with\
    \ large numbers. I tested it with a number like `1000000000000` and it gave me\
    \ a number like `1000000000000` instead of `1000000000000 00`\n<|/ c |>\n<| c\
    \ |>\nI tested it with a number like `1000000000000` and it gave me a number like\
    \ `1000000000000` instead of `1000000000000 00`\n<|/ c |>\n<| c |>\nI tested it\
    \ with a number like `1000000000000` and it gave me a number like `1000000000000`\
    \ instead of `1000000000000 00`\n<|/ c |>\n<| c |>\nI tested it with a number\
    \ like `1000000000000` and it gave me a number like `1000000000000` instead of\
    \ `1000000000000 00`\n<|/ c |>\n<| c |>\nI tested it with a number like `1000000000000`\
    \ and it gave me a number like `1000000000000` instead of `1000000000000 00`\n\
    <|/ c |>\n<| a tags=php,string,arrays |>\n<code>\n$numbers = array();\n$numbers[]\
    \ = 1;\n$numbers[] = 2;\n$numbers[] = 3;\n$numbers[] = 4;\n$numbers[] = 5;\n$numbers[]\
    \ = 6;\n$numbers[] = 7;\n$numbers[] = 8;\n$numbers[] = 9;\n$numbers[] = 10;\n\
    $numbers[] = 11;\n$numbers[] = 12;\n$numbers[] = 13;\n$numbers[] = 14;\n$numbers[]\
    \ = 15;\n$numbers[] = 16;\n$numbers[] = 17;\n$numbers[] = 18;\n$numbers[] = 19;\n\
    $numbers[] = 20;\n$numbers[] = 21;\n$numbers[] = 22;\n$numbers[] = 23;\n$numbers[]\
    \ = 24;\n$numbers[] = 25;\n$numbers[] = 26;\n$numbers[] = 27;\n$numbers[] = 28;\n\
    $numbers[] = 29;\n$numbers[] = 30;\n$numbers[] = 31;\n$numbers[] = 32;\n$numbers[]\
    \ = 33;\n$numbers[] = 34;\n$numbers[] = 35;\n$numbers[]\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyoxkx4md.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsmt79ycb.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%u', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpfuwicxhq.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpfuwicxhq.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpfuwicxhq.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfuwicxhq.php:18\nStack trace:\n#0 /tmp/tmpfuwicxhq.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfuwicxhq.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsn4kw5xc.php:20\n\
    Stack trace:\n#0 /tmp/tmpsn4kw5xc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsn4kw5xc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkiek9ii.php:19\n\
    Stack trace:\n#0 /tmp/tmpxkiek9ii.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxkiek9ii.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfeo4kw6.php:19\n\
    Stack trace:\n#0 /tmp/tmpnfeo4kw6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnfeo4kw6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_9e70x_.php:20\n\
    Stack trace:\n#0 /tmp/tmph_9e70x_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph_9e70x_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhckytmk.php:19\n\
    Stack trace:\n#0 /tmp/tmpdhckytmk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdhckytmk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l9lsx1b.php:19\n\
    Stack trace:\n#0 /tmp/tmp_l9lsx1b.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_l9lsx1b.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp9dbvzj.php:20\n\
    Stack trace:\n#0 /tmp/tmplp9dbvzj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplp9dbvzj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97ij5utz.php:20\n\
    Stack trace:\n#0 /tmp/tmp97ij5utz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp97ij5utz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%010d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp3no5m7xx.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp3no5m7xx.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp3no5m7xx.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3no5m7xx.php:18\nStack trace:\n#0 /tmp/tmp3no5m7xx.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3no5m7xx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1b_s1ct.php:20\n\
    Stack trace:\n#0 /tmp/tmpp1b_s1ct.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp1b_s1ct.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnt28s04.php:20\n\
    Stack trace:\n#0 /tmp/tmpnnt28s04.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnnt28s04.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvbiu4g0.php:20\n\
    Stack trace:\n#0 /tmp/tmpgvbiu4g0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgvbiu4g0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return $i;\n  }, range($n)));\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=2 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoe3o33zu.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%010d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpgvtxc45q.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpgvtxc45q.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpgvtxc45q.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgvtxc45q.php:18\nStack trace:\n#0 /tmp/tmpgvtxc45q.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgvtxc45q.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyuf3c3_i.php:19\n\
    Stack trace:\n#0 /tmp/tmpyuf3c3_i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyuf3c3_i.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5ksow0_.php:20\n\
    Stack trace:\n#0 /tmp/tmpj5ksow0_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj5ksow0_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp231c6q3i.php:19\n\
    Stack trace:\n#0 /tmp/tmp231c6q3i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp231c6q3i.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp946tw86.php:20\n\
    Stack trace:\n#0 /tmp/tmpp946tw86.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp946tw86.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiuxocjxe.php:19\n\
    Stack trace:\n#0 /tmp/tmpiuxocjxe.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpiuxocjxe.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvy22ph6.php:19\n\
    Stack trace:\n#0 /tmp/tmpkvy22ph6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkvy22ph6.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp0lztf706.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp0lztf706.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp0lztf706.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0lztf706.php:18\nStack trace:\n#0 /tmp/tmp0lztf706.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0lztf706.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85y5j23j.php:20\n\
    Stack trace:\n#0 /tmp/tmp85y5j23j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp85y5j23j.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv39o33yk.php:19\n\
    Stack trace:\n#0 /tmp/tmpv39o33yk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv39o33yk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps829r01q.php:20\n\
    Stack trace:\n#0 /tmp/tmps829r01q.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps829r01q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8e1shr3.php:20\n\
    Stack trace:\n#0 /tmp/tmps8e1shr3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps8e1shr3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3yag7ys.php:20\n\
    Stack trace:\n#0 /tmp/tmp_3yag7ys.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3yag7ys.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk57t8eop.php:20\n\
    Stack trace:\n#0 /tmp/tmpk57t8eop.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk57t8eop.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5shzmpov.php:19\n\
    Stack trace:\n#0 /tmp/tmp5shzmpov.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5shzmpov.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work if $n is greater than the length of the string.\
    \ For example, string_sequence(100) returns '100' instead of '0 1 2 3 4 5 6 7\
    \ 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\
    \ 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59\
    \ 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85\
    \ 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'.\n<|/ c |>\n<| c |>\n: I fixed\
    \ the bug and added a test case to my answer.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if $n is greater than the length of the string. For example, string_sequence(100)\
    \ returns '100' instead of '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\
    \ 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\
    \ 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\
    \ 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\
    \ 98 99 100'.\n<|/ c |>\n<| c |>\n: I fixed the bug and added a test case to my\
    \ answer.\n<|/ c |>\n<| c |>\nThis doesn't work if $n is greater than the length\
    \ of the string. For example, string_sequence(100) returns '100' instead of '0\
    \ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeua_oupe.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return $i . ' ';\n  }, range($n)));\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsrh2pr0u.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' '.$i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauuxhzq9.php:20\n\
    Stack trace:\n#0 /tmp/tmpauuxhzq9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpauuxhzq9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6zjux1u.php:20\n\
    Stack trace:\n#0 /tmp/tmps6zjux1u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps6zjux1u.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfck28vtb.php:20\n\
    Stack trace:\n#0 /tmp/tmpfck28vtb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfck28vtb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return $i . ' ';\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| c |>\nThis doesn't seem to work. `array_map` doesn't seem to like `range`\
    \ as its first argument. `array_map('range', range($n))` works though.\n<|/ c\
    \ |>\n<| c |>\n: I tested it before posting it, and it works. What PHP version\
    \ are you using?\n<|/ c |>\n<| c |>\n: It works in PHP 5.3.6 and 5.4.0, and PHP\
    \ 5.2.17 and 5.3.6. Are you sure you tested it correctly?\n<|/ c |>\n<| c |>\n\
    : I tested it on PHP 5.3.6 and 5.4.0, and it works. Are you sure you tested it\
    \ correctly?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.2.17 and 5.3.6, and it\
    \ works. Are you sure you tested it correctly?\n<|/ c |>\n<| a tags=php,string,arrays\
    \ |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n$array =\
    \ array_map(function($a){return $a+1;}, $array);\n$string = implode('', $array);\n\
    </code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't seem to work. `array_map` doesn't\
    \ seem to like `range` as its first argument. `array_map('range', range($n))`\
    \ works though.\n<|/ c |>\n<| c |>\n: I tested it before posting it, and it works.\
    \ What PHP version are you using?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.6\
    \ and 5.4.0, and it works. Are you sure you tested it correctly?\n<|/ c |>\n<|\
    \ c |>\n: I tested it on PHP 5.2.17 and 5.3.6, and it works. Are you sure you\
    \ tested it correctly?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.6 and 5.4.0,\
    \ and it works. Are you sure you tested it correctly?\n<|/ c |>\n<| a tags=php,string,arrays\
    \ |>\n<code>\n$string = '0123456789';\n$array = str_split($string);\n$array =\
    \ array_map(function($a){return $a+1;}, $array);\n$string = implode('', $array\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpps72y1cx.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,string |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk1_sqyz3.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwh81f4m.php:20\n\
    Stack trace:\n#0 /tmp/tmpjwh81f4m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjwh81f4m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk_99isa.php:19\n\
    Stack trace:\n#0 /tmp/tmpuk_99isa.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuk_99isa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk4ivs66.php:20\n\
    Stack trace:\n#0 /tmp/tmppk4ivs66.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppk4ivs66.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5k883leu.php:19\n\
    Stack trace:\n#0 /tmp/tmp5k883leu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5k883leu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4x52pil.php:19\n\
    Stack trace:\n#0 /tmp/tmpi4x52pil.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpi4x52pil.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75leblyd.php:20\n\
    Stack trace:\n#0 /tmp/tmp75leblyd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp75leblyd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrdlxik3.php:20\n\
    Stack trace:\n#0 /tmp/tmpcrdlxik3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcrdlxik3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rbyahwp.php:20\n\
    Stack trace:\n#0 /tmp/tmp0rbyahwp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0rbyahwp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6q6f3g2.php:20\n\
    Stack trace:\n#0 /tmp/tmpi6q6f3g2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi6q6f3g2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxk5m05ny.php:20\n\
    Stack trace:\n#0 /tmp/tmpxk5m05ny.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxk5m05ny.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return $i;\n  }, range($n)));\n}\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmpgt8gdfeh.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmpgt8gdfeh.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmpgt8gdfeh.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgt8gdfeh.php:18\nStack trace:\n#0 /tmp/tmpgt8gdfeh.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgt8gdfeh.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return $i;\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$string = '01234';\n$array = str_split($string);\n\
    $result = '';\nforeach ($array as $key => $value) {\n    $result .= $value . '\
    \ ';\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,string |>\n<code>\n\
    $string = '01234';\n$array = str_split($string);\n$result = '';\nforeach ($array\
    \ as $key => $value) {\n    $result .= $value . ' ';\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = '01234';\n$array = str_split($string);\n\
    $result = '';\nforeach ($array as $key => $value) {\n    $result .= $value . '\
    \ ';\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=1 |>\n<code>\n\
    $string = '01234';\n$array = str_split($string);\n$result = '';\nforeach ($array\
    \ as $key => $value) {\n    $result .= $value . ' ';\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = '01234';\n$array = str_split($string);\n\
    $result = '';\nforeach ($array as $key => $value) {\n    $result .= $value . '\
    \ ';\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = '01234';\n$array = str_split($string);\n$result = '';\n\
    foreach ($array as $key => $value) {\n    $result .= $value . ' ';\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = '01234';\n$array = str_split($string);\n\
    $result = '';\nforeach ($array as $key => $value) {\n    $result .= $value . '\
    \ ';\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=1 |>\n<code>\n\
    $string = '01234';\n$array = str_split($string);\n$\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph_ooghh_.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dhagkgx.php:19\n\
    Stack trace:\n#0 /tmp/tmp0dhagkgx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0dhagkgx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94us_nj8.php:20\n\
    Stack trace:\n#0 /tmp/tmp94us_nj8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp94us_nj8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf7uhjwo.php:20\n\
    Stack trace:\n#0 /tmp/tmppf7uhjwo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppf7uhjwo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuen52a2m.php:19\n\
    Stack trace:\n#0 /tmp/tmpuen52a2m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuen52a2m.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr8zxclw.php:20\n\
    Stack trace:\n#0 /tmp/tmpdr8zxclw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdr8zxclw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a |>\n\
    <| a tags=php,string,arrays,numbers |>\n<code>\n$numbers = array();\n$numbers[]\
    \ = 1;\n$numbers[] = 2;\n$numbers[] = 3;\n$numbers[] = 4;\n$numbers[] = 5;\n$numbers[]\
    \ = 6;\n$numbers[] = 7;\n$numbers[] = 8;\n$numbers[] = 9;\n$numbers[] = 10;\n\
    $numbers[] = 11;\n$numbers[] = 12;\n$numbers[] = 13;\n$numbers[] = 14;\n$numbers[]\
    \ = 15;\n$numbers[] = 16;\n$numbers[] = 17;\n$numbers[] = 18;\n$numbers[] = 19;\n\
    $numbers[] = 20;\n$numbers[] = 21;\n$numbers[] = 22;\n$numbers[] = 23;\n$numbers[]\
    \ = 24;\n$numbers[] = 25;\n$numbers[] = 26;\n$numbers[] = 27;\n$numbers[] = 28;\n\
    $numbers[] = 29;\n$numbers[] = 30;\n$numbers[] = 31;\n$numbers[] = 32;\n$numbers[]\
    \ = 33;\n$numbers[] = 34;\n$numbers[] = 35;\n$numbers[] = 36;\n$numbers[] = 37;\n\
    $numbers[] = 38;\n$numbers[] = 39;\n$numbers[] = 40;\n$numbers[] = 41;\n$numbers[]\
    \ = 42;\n$numbers[] = 43;\n$numbers[] = 44;\n$numbers[] = 45;\n$numbers[] = 46;\n\
    $numbers[] = 47;\n$numbers[] = 48;\n$numbers[] = 49;\n$numbers[] = 50;\n$numbers[]\
    \ = 51;\n$numbers[] = 52;\n$numbers[] = 53;\n$numbers[] = 54;\n$numbers[] = 55;\n\
    $numbers[] = 56;\n$numbers[] = 57;\n$numbers[] = 58;\n$numbers[] = 59;\n$numbers[]\
    \ = 60;\n$numbers[] = 61;\n$numbers[] = 62;\n$numbers[] = 63;\n$numbers[] = 64;\n\
    $numbers[] = 65;\n$numbers[] = 66;\n$numbers[] = 67;\n$numbers[] = \nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg9horobx.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo10nx6we.php:20\n\
    Stack trace:\n#0 /tmp/tmpo10nx6we.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo10nx6we.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/\
    \ a tags=php,string |>\n<| c |>\nI like your solution, however it only works with\
    \ integers. I need a solution that works with any type of number. For example,\
    \ `string_sequence(1.5)` should return `'001 002 003 004 005'`.\n<|/ c |>\n<|\
    \ c |>\nI updated my answer to include a solution that works with floats.\n<|/\
    \ c |>\n<| c |>\nThanks, I appreciate it!\n<|/ c |>\n<| a tags=php,string |>\n\
    <code>\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt6qmlqfs.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl92hrgvs.php:20\n\
    Stack trace:\n#0 /tmp/tmpl92hrgvs.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl92hrgvs.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_zwyd8r.php:20\n\
    Stack trace:\n#0 /tmp/tmpn_zwyd8r.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpn_zwyd8r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw__owps4.php:20\n\
    Stack trace:\n#0 /tmp/tmpw__owps4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw__owps4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8969y5uy.php:20\n\
    Stack trace:\n#0 /tmp/tmp8969y5uy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8969y5uy.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperx05smx.php:19\n\
    Stack trace:\n#0 /tmp/tmperx05smx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmperx05smx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpongad7ss.php:20\n\
    Stack trace:\n#0 /tmp/tmpongad7ss.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpongad7ss.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp7qb5jba4.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp7qb5jba4.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp7qb5jba4.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7qb5jba4.php:18\nStack trace:\n#0 /tmp/tmp7qb5jba4.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7qb5jba4.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp847caffb.php:20\n\
    Stack trace:\n#0 /tmp/tmp847caffb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp847caffb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4br8x3f.php:20\n\
    Stack trace:\n#0 /tmp/tmpu4br8x3f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu4br8x3f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz_24avb.php:19\n\
    Stack trace:\n#0 /tmp/tmpmz_24avb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmz_24avb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtn1kfc6.php:20\n\
    Stack trace:\n#0 /tmp/tmpmtn1kfc6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmtn1kfc6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf5msg29.php:20\n\
    Stack trace:\n#0 /tmp/tmpgf5msg29.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgf5msg29.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvsp1ae4g.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg85eynw1.php:20\n\
    Stack trace:\n#0 /tmp/tmpg85eynw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpg85eynw1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0t_4b3x.php:20\n\
    Stack trace:\n#0 /tmp/tmpr0t_4b3x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr0t_4b3x.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wsxqjkh.php:20\n\
    Stack trace:\n#0 /tmp/tmp0wsxqjkh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0wsxqjkh.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_4r2air.php:19\n\
    Stack trace:\n#0 /tmp/tmph_4r2air.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph_4r2air.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjki13870.php:19\n\
    Stack trace:\n#0 /tmp/tmpjki13870.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjki13870.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw64ajlkn.php:19\n\
    Stack trace:\n#0 /tmp/tmpw64ajlkn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw64ajlkn.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fekf0bn.php:20\n\
    Stack trace:\n#0 /tmp/tmp6fekf0bn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6fekf0bn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' '.$i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgafyygn.php:19\n\
    Stack trace:\n#0 /tmp/tmpxgafyygn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxgafyygn.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa99_8399.php:19\n\
    Stack trace:\n#0 /tmp/tmpa99_8399.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa99_8399.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylwql1rr.php:20\n\
    Stack trace:\n#0 /tmp/tmpylwql1rr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpylwql1rr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu279qm1f.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hny1ii3.php:20\n\
    Stack trace:\n#0 /tmp/tmp6hny1ii3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6hny1ii3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n\
    $array = array_map('intval', $array);\n$array = array_map('strval', $array);\n\
    $string = implode('', $array);\necho $string;\n</code>\n<|/ a tags=php,string,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = '0123456789';\n$array = str_split($string);\n\
    $array = array_map('intval', $array);\n$array = array_map('strval', $array);\n\
    $string = implode('', $array);\necho $string;\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj_falx35.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdw8_32hm.php:20\n\
    Stack trace:\n#0 /tmp/tmpdw8_32hm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdw8_32hm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisizqxpa.php:20\n\
    Stack trace:\n#0 /tmp/tmpisizqxpa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpisizqxpa.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72m6w6r3.php:19\n\
    Stack trace:\n#0 /tmp/tmp72m6w6r3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp72m6w6r3.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9wlmst8.php:20\n\
    Stack trace:\n#0 /tmp/tmpo9wlmst8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo9wlmst8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wv4cq_s.php:20\n\
    Stack trace:\n#0 /tmp/tmp3wv4cq_s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3wv4cq_s.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbytegmrr.php:19\n\
    Stack trace:\n#0 /tmp/tmpbytegmrr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbytegmrr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return sprintf('%010d', $i);\n  }, range($n)));\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = \"123456789\"\
    ;\n$string2 = \"\";\n$string3 = \"\";\n$string4 = \"\";\n$string5 = \"\";\n$string6\
    \ = \"\";\n$string7 = \"\";\n$string8 = \"\";\n$string9 = \"\";\n$string10 = \"\
    \";\n$string11 = \"\";\n$string12 = \"\";\n$string13 = \"\";\n$string14 = \"\"\
    ;\n$string15 = \"\";\n$string16 = \"\";\n$string17 = \"\";\n$string18 = \"\";\n\
    $string19 = \"\";\n$string20 = \"\";\n$string21 = \"\";\n$string22 = \"\";\n$string23\
    \ = \"\";\n$string24 = \"\";\n$string25 = \"\";\n$string26 = \"\";\n$string27\
    \ = \"\";\n$string28 = \"\";\n$string29 = \"\";\n$string30 = \"\";\n$string31\
    \ = \"\";\n$string32 = \"\";\n$string33 = \"\";\n$string34 = \"\";\n$string35\
    \ = \"\";\n$string36 = \"\";\n$string37 = \"\";\n$string38 = \"\";\n$string39\
    \ = \"\";\n$string40 = \"\";\n$string41 = \"\";\n$string42 = \"\";\n$string43\
    \ = \"\";\n$string44 = \"\";\n$string45 = \"\";\n$string46 = \"\";\n$string47\
    \ = \"\";\n$string48 = \"\";\n$string49 = \"\";\n$string50 = \"\";\n$string51\
    \ = \"\";\n$string52 = \"\";\n$string53 = \"\";\n$string54 = \"\";\n$string55\
    \ = \"\";\n$string56 = \"\";\n$string57 = \"\";\n$string58 = \"\";\n$string59\
    \ = \"\";\n$string60 = \"\";\n$string61 = \"\";\n$string62 = \"\";\n$string63\
    \ = \"\";\n$string64 = \"\";\n$string65 = \"\";\n$string66 = \"\";\n$string67\
    \ = \"\";\n$string68 = \"\";\n$string69 = \"\";\n$string70 = \"\";\n$string71\
    \ = \"\";\n$string72 = \"\";\n$string73 = \"\";\n$string74 = \"\";\n$string75\
    \ = \"\";\n$string76 = \"\";\n$string77 = \"\";\n$string78 = \"\";\n$string79\
    \ = \"\";\n$string80 = \"\";\n$string81 = \"\";\n$string82 = \"\";\n$string83\
    \ = \"\";\n$string84 = \"\";\n$string85 = \"\";\n$string86 = \"\";\n$string87\
    \ = \"\";\n$\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptipi758w.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5g6u4aoj.php:20\n\
    Stack trace:\n#0 /tmp/tmp5g6u4aoj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5g6u4aoj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8v95v6d.php:20\n\
    Stack trace:\n#0 /tmp/tmpm8v95v6d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpm8v95v6d.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstpqtdp1.php:19\n\
    Stack trace:\n#0 /tmp/tmpstpqtdp1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpstpqtdp1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return $i;\n  }, range($n)));\n}\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp3r2dyaf3.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp3r2dyaf3.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp3r2dyaf3.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3r2dyaf3.php:18\nStack trace:\n#0 /tmp/tmp3r2dyaf3.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3r2dyaf3.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work if you pass it a negative number.\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting it. The function returns `0\
    \ 1 2 3 4 5` for `string_sequence(5)`.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting it. The function returns `0 1 2 3 4 5` for `string_sequence(5)`.\n\
    <|/ c |>\n<| c |>\nI tested it before posting it. The function returns `0 1 2\
    \ 3 4 5` for `string_sequence(5)`.\n<|/ c |>\n<| c |>\nI tested it before posting\
    \ it. The function returns `0 1 2 3 4 5` for `string_sequence(5)`.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd0ok9ks7.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxrr46na.php:19\n\
    Stack trace:\n#0 /tmp/tmpjxrr46na.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjxrr46na.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoa0perae.php:19\n\
    Stack trace:\n#0 /tmp/tmpoa0perae.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpoa0perae.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf21tak6.php:20\n\
    Stack trace:\n#0 /tmp/tmpgf21tak6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgf21tak6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vpwor3f.php:20\n\
    Stack trace:\n#0 /tmp/tmp2vpwor3f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2vpwor3f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' '.$i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp975wif.php:20\n\
    Stack trace:\n#0 /tmp/tmpfp975wif.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfp975wif.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9vxn8en.php:20\n\
    Stack trace:\n#0 /tmp/tmpj9vxn8en.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj9vxn8en.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdef9djc.php:20\n\
    Stack trace:\n#0 /tmp/tmpjdef9djc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjdef9djc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return $i . ' ';\n  }, range($n)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: range() expects at least 2 parameters, 1 given in /tmp/tmp5m5qmbyn.php\
    \ on line 10\n\nWarning: array_map(): Expected parameter 2 to be an array, bool\
    \ given in /tmp/tmp5m5qmbyn.php on line 10\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp5m5qmbyn.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5m5qmbyn.php:18\nStack trace:\n#0 /tmp/tmp5m5qmbyn.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5m5qmbyn.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidoiyan1.php:20\n\
    Stack trace:\n#0 /tmp/tmpidoiyan1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpidoiyan1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflbvnt4d.php:20\n\
    Stack trace:\n#0 /tmp/tmpflbvnt4d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpflbvnt4d.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oggjfi0.php:19\n\
    Stack trace:\n#0 /tmp/tmp7oggjfi0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7oggjfi0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7m67her.php:20\n\
    Stack trace:\n#0 /tmp/tmpi7m67her.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi7m67her.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp6njj3k.php:20\n\
    Stack trace:\n#0 /tmp/tmpnp6njj3k.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnp6njj3k.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cwsvjd0.php:19\n\
    Stack trace:\n#0 /tmp/tmp5cwsvjd0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5cwsvjd0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return str_pad($i, 2, '0', STR_PAD_LEFT);\n  }, range($n)));\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7c3kky_n.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9avfjsb0.php:20\n\
    Stack trace:\n#0 /tmp/tmp9avfjsb0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9avfjsb0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lickgtm.php:20\n\
    Stack trace:\n#0 /tmp/tmp_lickgtm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_lickgtm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepd3rxsh.php:19\n\
    Stack trace:\n#0 /tmp/tmpepd3rxsh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpepd3rxsh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppnxx7hc6.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkd7ye3qc.php:19\n\
    Stack trace:\n#0 /tmp/tmpkd7ye3qc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkd7ye3qc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5zle9kw.php:19\n\
    Stack trace:\n#0 /tmp/tmpy5zle9kw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy5zle9kw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jg8m3qv.php:20\n\
    Stack trace:\n#0 /tmp/tmp1jg8m3qv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1jg8m3qv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $str = '';\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsewrbs28.php:20\n\
    Stack trace:\n#0 /tmp/tmpsewrbs28.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsewrbs28.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function($i)\
    \ {\n    return sprintf('%03d', $i);\n  }, range($n)));\n}\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$string = \"0123456789\";\n$array\
    \ = str_split($string);\n$string2 = implode(\" \", $array);\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n\
    $string2 = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n$string2\
    \ = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n\
    $string2 = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a dscore=1 |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n\
    $string2 = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string |>\n\
    <| a tags=php,arrays,string |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n\
    $string2 = implode(\" \", $array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n$string2\
    \ = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=1\
    \ |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n$string2\
    \ = implode(\" \", $array);\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = \"0123456789\";\n$array = str_split($string);\n$string2\
    \ = implode(\" \", $array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$string = \"0123456789\";\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw8y43g2k.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyngoeivy.php:20\n\
    Stack trace:\n#0 /tmp/tmpyngoeivy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyngoeivy.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9au0w1j.php:20\n\
    Stack trace:\n#0 /tmp/tmpt9au0w1j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt9au0w1j.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= ' ' . $i;\n  }\n  return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsax8wds.php:19\n\
    Stack trace:\n#0 /tmp/tmpwsax8wds.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwsax8wds.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n\
    // '0 1 2 3 4 5'\nfunction string_sequence($n) {\n  return implode(' ', array_map(function\
    \ ($i) {\n    return $i;\n  }, range($n)));\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\nI like using array_map for these situations. \n<code>\n$string\
    \ = 'abcdefg';\n$array = str_split($string);\n$array = array_map(function($a){return\
    \ $a+1;}, $array);\n$string = implode('', $array);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'abcdefg';\n$array = str_split($string);\n\
    $array = array_map(function($a){return $a+1;}, $array);\n$string = implode('',\
    \ $array);\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$string = 'abcdefg';\n\
    $array = str_split($string);\n$array = array_map(function($a){return $a+1;}, $array);\n\
    $string = implode('', $array);\n</code>\n<|/ a tags=php,string dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\n$string = 'abcdefg';\n$array = str_split($string);\n\
    $array = array_map(function($a){return $a+1;}, $array);\n$string = implode('',\
    \ $array);\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n\
    $string = 'abcdefg';\n$array = str_split($string);\n$array = array_map(function($a){return\
    \ $a+1;}, $array);\n$string = implode('', $array);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'abcdefg';\n$array = str_split($string);\n\
    $array = array_map(function($a){return $a+1;}, $array);\n$string = implode('',\
    \ $array);\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n\
    $string = 'abcdefg';\n$array = str_split($string);\n$array = array_map(function($a){return\
    \ $a+1;}, $array);\n$string = implode('', $array);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'abcdefg';\n$array = str_split($string);\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpruyzq2i9.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns a tuple (a, b), where 'a' is\n//\
  \ the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in a list.\n// If there is no negative or positive integers, return them as None.\n\
  // Examples:\n// largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n//\
  \ largest_smallest_integers([]) == (None, None)\n// largest_smallest_integers([0])\
  \ == (None, None)\nfunction largest_smallest_integers($lst) {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($largest === null || $item < $smallest) {\n      $largest = $item;\n\
    \    } else if ($item > $largest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $num) {\n    if ($largest === null || $num < $smallest) {\n      $largest\
    \ = $num;\n    }\n    if ($smallest === null || $num > $smallest) {\n      $smallest\
    \ = $num;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest === null\
    \ || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($value > $largest) {\n      $largest = $value;\n \
    \   }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest =\
    \ PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest) {\n\
    \      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item < $smallest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item > $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $num) {\n    if ($largest === null || $num < $smallest) {\n      $largest\
    \ = $num;\n    }\n    if ($smallest === null || $num > $smallest) {\n      $smallest\
    \ = $num;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $value) {\n    if ($smallest === null\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === null || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item < $smallest) {\n     \
    \ $largest = $item;\n    }\n    if ($smallest === null || $item > $smallest) {\n\
    \      $smallest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($value\
    \ < $smallest) {\n      $smallest = $value;\n    } else if ($value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest_integer = null;\n  $smallest_integer = null;\n  foreach ($lst as $integer)\
    \ {\n    if ($integer < 0) {\n      if ($largest_integer === null) {\n       \
    \ $largest_integer = $integer;\n      } else if ($integer > $largest_integer)\
    \ {\n        $largest_integer = $integer;\n      }\n    } else if ($integer >\
    \ 0) {\n      if ($smallest_integer === null) {\n        $smallest_integer = $integer;\n\
    \      } else if ($integer < $smallest_integer) {\n        $smallest_integer =\
    \ $integer;\n      }\n    }\n  }\n  return array($largest_integer, $smallest_integer);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item < $smallest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item > $largest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $negative =\
    \ array();\n  $positive = array();\n  foreach ($lst as $num) {\n    if ($num <\
    \ 0) {\n      $negative[] = $num;\n    } else {\n      $positive[] = $num;\n \
    \   }\n  }\n  if (count($negative) == 0 && count($positive) == 0) {\n    return\
    \ array();\n  }\n  if (count($negative) == 0) {\n    return array('None', min($positive));\n\
    \  }\n  if (count($positive) == 0) {\n    return array('None', max($negative));\n\
    \  }\n  return array('None', max($negative), min($positive));\n}\n", "  $max_negative\
    \ = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n  foreach ($lst as $value) {\n\
    \    if ($value < 0) {\n      if ($value > $max_negative) {\n        $max_negative\
    \ = $value;\n      }\n    } else {\n      if ($value < $min_positive) {\n    \
    \    $min_positive = $value;\n      }\n    }\n  }\n  return array($max_negative,\
    \ $min_positive);\n}\n", "  $largest_negative = null;\n  $smallest_positive =\
    \ null;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($largest_negative\
    \ === null) {\n        $largest_negative = $item;\n      } else {\n        $largest_negative\
    \ = max($largest_negative, $item);\n      }\n    }\n    if ($item > 0) {\n   \
    \   if ($smallest_positive === null) {\n        $smallest_positive = $item;\n\
    \      } else {\n        $smallest_positive = min($smallest_positive, $item);\n\
    \      }\n    }\n  }\n  return array($largest_negative, $smallest_positive);\n\
    }\n", "  $max_negative = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative\
    \ < $min_positive) ? array('negative' => $max_negative, 'positive' => $min_positive)\
    \ : array('negative' => null, 'positive' => null);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item < $smallest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item > $largest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $max_negative\
    \ = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative > $min_positive)\
    \ ? array('negative' => $max_negative, 'positive' => $min_positive) : array('negative'\
    \ => null, 'positive' => null);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest === null ||\
    \ $item > $largest) {\n        $largest = $item;\n      }\n      if ($smallest\
    \ === null || $item < $smallest) {\n        $smallest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $value) {\n    if ($smallest === null || $value\
    \ < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest === null\
    \ || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($largest === null || $value < $largest) {\n      $largest\
    \ = $value;\n    }\n    if ($smallest === null || $value > $smallest) {\n    \
    \  $smallest = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item < $smallest) {\n     \
    \ $smallest = $item;\n    }\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($largest, $smallest);\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $num) {\n    if ($largest\
    \ === null || $num < $smallest) {\n      $largest = $num;\n    }\n    if ($smallest\
    \ === null || $num > $smallest) {\n      $smallest = $num;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  foreach ($lst as $x) {\n    if ($x < 0) {\n\
    \      $min = $x;\n      $min_index = 0;\n    } else {\n      $min = $x;\n   \
    \   $min_index = 1;\n    }\n    if ($min > $lst[$min_index]) {\n      $min = $lst[$min_index];\n\
    \      $min_index = $x;\n    }\n  }\n  return array($min, $min_index);\n}\n",
  "  $negative_integers = array_filter($lst, function($num) {\n    return $num < 0;\n\
    \  });\n  $positive_integers = array_filter($lst, function($num) {\n    return\
    \ $num > 0;\n  });\n\n  if (count($negative_integers) > 0) {\n    return ($negative_integers[0],\
    \ $positive_integers[0]);\n  }\n  if (count($positive_integers) > 0) {\n    return\
    \ ($positive_integers[0], $negative_integers[0]);\n  }\n  return ($negative_integers[0],\
    \ $positive_integers[0]);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($value > $largest) {\n      $largest = $value;\n    }\n  }\n \
    \ return [$smallest, $largest];\n}\n", "  $negative_integers = array_filter($lst,\
    \ 'is_int');\n  $positive_integers = array_filter($lst, '!is_int');\n  if (count($negative_integers)\
    \ > 0) {\n    $largest_negative_integer = max($negative_integers);\n  } else {\n\
    \    $largest_negative_integer = null;\n  }\n  if (count($positive_integers) >\
    \ 0) {\n    $largest_positive_integer = min($positive_integers);\n  } else {\n\
    \    $largest_positive_integer = null;\n  }\n  return array($largest_negative_integer,\
    \ $largest_positive_integer);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value)\
    \ {\n    if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as\
    \ $int) {\n    if ($max_int === null || $int > $max_int) {\n      $max_int = $int;\n\
    \    }\n    if ($min_int === null || $int < $min_int) {\n      $min_int = $int;\n\
    \    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return [$smallest,\
    \ $largest];\n}\n", "  $negs = [];\n  $pos = [];\n  foreach ($lst as $n) {\n \
    \   if ($n < 0) $negs[] = $n;\n    else $pos[] = $n;\n  }\n  if (count($negs)\
    \ == 0) return (None, None)\n  else if (count($negs) == count($pos)) return ($negs[0],\
    \ None)\n  else return (max($negs), min($pos));\n}", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $val) {\n    if ($val < $smallest)\
    \ {\n      $smallest = $val;\n    }\n    if ($val > $largest) {\n      $largest\
    \ = $val;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $max_negative\
    \ = min($lst);\n  $min_positive = max($lst);\n  if ($max_negative == $min_positive)\
    \ {\n    return array();\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n  foreach\
    \ ($lst as $value) {\n    if ($value < 0) {\n      if ($max_negative > $value)\
    \ {\n        $max_negative = $value;\n      }\n    } else {\n      if ($min_positive\
    \ < $value) {\n        $min_positive = $value;\n      }\n    }\n  }\n  return\
    \ array($max_negative, $min_positive);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest\
    \ === null || $item > $largest) {\n        $largest = $item;\n      }\n      if\
    \ ($smallest === null || $item < $smallest) {\n        $smallest = $item;\n  \
    \    }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest =\
    \ PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n   \
    \ if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $smallest =\
    \ null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest ===\
    \ null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max_int = PHP_INT_MAX;\n  $min_int =\
    \ PHP_INT_MIN;\n  $max_int = null;\n  $min_int = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < $min_int) {\n      $min_int = $item;\n    }\n    if ($item\
    \ > $max_int) {\n      $max_int = $item;\n    }\n  }\n  return array($max_int,\
    \ $min_int);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest =\
    \ null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive\
    \ = PHP_INT_MIN;\n  $max_positive = PHP_INT_MAX;\n  foreach ($lst as $item) {\n\
    \    if ($item < 0) {\n      if ($item > $max_negative) {\n        $max_negative\
    \ = $item;\n      }\n    } else if ($item > 0) {\n      if ($item < $min_positive)\
    \ {\n        $min_positive = $item;\n      }\n    } else {\n      return null;\n\
    \    }\n  }\n  return array($max_negative, $min_positive);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  foreach ($lst as $item) {\n    if ($item <\
    \ 0) {\n      $a = $item;\n      $b = null;\n      break;\n    }\n    if ($item\
    \ > 0) {\n      $a = null;\n      $b = $item;\n      break;\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else\
    \ {\n      $smallest[] = $item;\n    }\n  }\n  if (count($largest) > count($smallest))\
    \ {\n    return $largest;\n  } else {\n    return $smallest;\n  }\n}\n", "  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $largest = $item;\n    } else\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return [$smallest, $largest];\n}\n", "  $max_negative = PHP_INT_MAX;\n\
    \  $min_positive = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value\
    \ < 0) {\n      if ($max_negative < $value) {\n        $max_negative = $value;\n\
    \      }\n    } else {\n      if ($min_positive > $value) {\n        $min_positive\
    \ = $value;\n      }\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $largest = array();\n  $smallest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else {\n      $smallest[]\
    \ = $item;\n    }\n  }\n  if (count($largest) == 0) {\n    return array('None',\
    \ 'None');\n  }\n  if (count($smallest) == 0) {\n    return array('None', 'None');\n\
    \  }\n  return array(min($largest), max($smallest));\n}\n", "  $largest_negative\
    \ = -1;\n  $largest_positive = PHP_INT_MAX;\n  $smallest_negative = PHP_INT_MIN;\n\
    \  $smallest_positive = PHP_INT_MAX;\n  foreach ($lst as $value) {\n    if ($value\
    \ < $smallest_negative) {\n      $smallest_negative = $value;\n    }\n    if ($value\
    \ > $largest_positive) {\n      $largest_positive = $value;\n    }\n    if ($value\
    \ < $smallest_positive) {\n      $smallest_positive = $value;\n    }\n    if ($value\
    \ > $largest_negative) {\n      $largest_negative = $value;\n    }\n  }\n  return\
    \ array($largest_negative, $largest_positive, $smallest_negative, $smallest_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if (is_int($item)) {\n      if ($largest === null || $item > $largest) {\n\
    \        $largest = $item;\n      }\n      if ($smallest === null || $item < $smallest)\
    \ {\n        $smallest = $item;\n      }\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  foreach ($lst as $item) {\n    if ($item < 0) {\n     \
    \ return array(None, $item);\n    }\n  }\n  foreach ($lst as $item) {\n    if\
    \ ($item > 0) {\n      return array($item, None);\n    }\n  }\n  return array(None,\
    \ None);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach ($lst\
    \ as $item) {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else {\n\
    \      $smallest[] = $item;\n    }\n  }\n  if (count($largest) > count($smallest))\
    \ {\n    return $largest;\n  } else {\n    return $smallest;\n  }\n}\n", "  $max_negative\
    \ = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n  foreach ($lst as $value) {\n\
    \    if ($value < 0) {\n      if ($max_negative > $value) {\n        $max_negative\
    \ = $value;\n      }\n    } else {\n      if ($min_positive < $value) {\n    \
    \    $min_positive = $value;\n      }\n    }\n  }\n  return array($max_negative,\
    \ $min_positive);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest =\
    \ null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach\
    \ ($lst as $num) {\n    if ($smallest === null || $num < $smallest) {\n      $smallest\
    \ = $num;\n    }\n    if ($largest === null || $num > $largest) {\n      $largest\
    \ = $num;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $max_int = null;\n\
    \  $min_int = null;\n  foreach ($lst as $int) {\n    if ($max_int == null || $int\
    \ > $max_int) {\n      $max_int = $int;\n    }\n    if ($min_int == null || $int\
    \ < $min_int) {\n      $min_int = $int;\n    }\n  }\n  return array($max_int,\
    \ $min_int);\n}\n", "  foreach ($lst as $item) {\n    if ($item < 0) {\n     \
    \ $min = $item;\n      $min_index = 0;\n    } else if ($item > 0) {\n      $max\
    \ = $item;\n      $max_index = 0;\n    } else {\n      return null;\n    }\n \
    \ }\n  return array($min, $max);\n}\n", "  $max_negative = array();\n  $min_positive\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[]\
    \ = $item;\n    } else {\n      $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $max_int = PHP_INT_MAX;\n\
    \  $min_int = PHP_INT_MIN;\n  $max = null;\n  $min = null;\n  foreach ($lst as\
    \ $item) {\n    if ($item < $min_int) {\n      $min = $item;\n    } elseif ($item\
    \ > $max_int) {\n      $max = $item;\n    } else {\n      return array($item,\
    \ $item);\n    }\n  }\n  return array($max, $min);\n}\n", "  $max_negative = min($lst);\n\
    \  $min_positive = max($lst);\n  return ($max_negative > $min_positive) ? array('negative'\
    \ => $max_negative, 'positive' => $min_positive) : array('negative' => null, 'positive'\
    \ => null);\n}", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as\
    \ $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest =\
    \ null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $val) {\n    if ($val < $smallest) {\n      $smallest = $val;\n\
    \    }\n    if ($val > $largest) {\n      $largest = $val;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $negative = array();\n  $positive = array();\n\
    \  foreach ($lst as $num) {\n    if ($num < 0) {\n      $negative[] = $num;\n\
    \    } else {\n      $positive[] = $num;\n    }\n  }\n  if (count($negative) ==\
    \ 0 && count($positive) == 0) {\n    return array();\n  }\n  $largest = max($negative)\
    \ + 1;\n  $smallest = min($positive);\n  return array($largest, $smallest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($largest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $max_negative[] = $item;\n    } else {\n    \
    \  $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n",
  "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as $int) {\n    if ($max_int\
    \ === null || $int > $max_int) {\n      $max_int = $int;\n    }\n    if ($min_int\
    \ === null || $int < $min_int) {\n      $min_int = $int;\n    }\n  }\n  return\
    \ array($max_int, $min_int);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($largest === null || $value < $largest)\
    \ {\n      $largest = $value;\n    }\n    if ($smallest === null || $value > $smallest)\
    \ {\n      $smallest = $value;\n    }\n  }\n  return [$smallest, $largest];\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      if ($largest < $item) {\n        $largest = $item;\n      }\n    } else\
    \ if ($item > 0) {\n      if ($smallest > $item) {\n        $smallest = $item;\n\
    \      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n \
    \ foreach ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest =\
    \ $value;\n    }\n    if ($value > $largest) {\n      $largest = $value;\n   \
    \ }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $value) {\n    if ($largest === null || $value <\
    \ $largest) {\n      $largest = $value;\n    }\n    if ($smallest === null ||\
    \ $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n  return [$smallest,\
    \ $largest];\n}\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n\
    \  $max_positive = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item <\
    \ 0) {\n      if ($item > $max_negative) {\n        $max_negative = $item;\n \
    \     }\n    } else if ($item > 0) {\n      if ($item < $min_positive) {\n   \
    \     $min_positive = $item;\n      }\n    } else {\n      return null;\n    }\n\
    \  }\n  return array($max_negative, $min_positive);\n}\n", "  $largest_negative\
    \ = PHP_INT_MAX;\n  $smallest_positive = PHP_INT_MIN;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($largest_negative > $item) {\n        $largest_negative\
    \ = $item;\n      }\n    } else if ($item > 0) {\n      if ($smallest_positive\
    \ < $item) {\n        $smallest_positive = $item;\n      }\n    }\n  }\n  return\
    \ array($largest_negative, $smallest_positive);\n}\n", "  $largest = null;\n \
    \ $smallest = null;\n  foreach ($lst as $num) {\n    if ($largest === null ||\
    \ $num < $smallest) {\n      $largest = $num;\n    }\n    if ($smallest === null\
    \ || $num > $smallest) {\n      $smallest = $num;\n    }\n  }\n  return [$largest,\
    \ $smallest];\n}\n", "  $max_negative = min($lst);\n  $min_positive = max($lst);\n\
    \  return ($max_negative > $min_positive) ? array('negative' => $max_negative,\
    \ 'positive' => $min_positive) : array('negative' => null, 'positive' => null);\n\
    }", "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as $int) {\n    if\
    \ ($max_int === null || $int > $max_int) {\n      $max_int = $int;\n    }\n  \
    \  if ($min_int === null || $int < $min_int) {\n      $min_int = $int;\n    }\n\
    \  }\n  return array($max_int, $min_int);\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === null || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $num) {\n    if ($largest === null || $num < $smallest)\
    \ {\n      $largest = $num;\n    }\n    if ($smallest === null || $num > $smallest)\
    \ {\n      $smallest = $num;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $max_int = PHP_INT_MAX;\n  $min_int = PHP_INT_MIN;\n  $max = null;\n  $min =\
    \ null;\n  foreach ($lst as $item) {\n    if ($item < $min_int) {\n      $min\
    \ = $item;\n    } else if ($item > $max_int) {\n      $max = $item;\n    }\n \
    \ }\n  return array($max, $min);\n}\n", "  $largest_negative = PHP_INT_MAX;\n\
    \  $largest_positive = PHP_INT_MIN;\n  $smallest_negative = PHP_INT_MIN;\n  $smallest_positive\
    \ = PHP_INT_MAX;\n  foreach ($lst as $value) {\n    if ($value < $smallest_negative)\
    \ {\n      $smallest_negative = $value;\n    }\n    if ($value > $largest_positive)\
    \ {\n      $largest_positive = $value;\n    }\n    if ($value < $smallest_positive)\
    \ {\n      $smallest_positive = $value;\n    }\n    if ($value > $largest_negative)\
    \ {\n      $largest_negative = $value;\n    }\n  }\n  return array($largest_negative,\
    \ $largest_positive, $smallest_negative, $smallest_positive);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $item) {\n  \
    \  if ($item < 0) {\n      if ($largest < $item) {\n        $largest = $item;\n\
    \      }\n    } else if ($item > 0) {\n      if ($smallest > $item) {\n      \
    \  $smallest = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $item) {\n    if ($item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative\
    \ = PHP_INT_MAX;\n  $largest_positive = PHP_INT_MIN;\n  $smallest_negative = PHP_INT_MIN;\n\
    \  $smallest_positive = PHP_INT_MAX;\n\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($item > $largest_negative) {\n        $largest_negative =\
    \ $item;\n      }\n    }\n    elseif ($item > 0) {\n      if ($item < $largest_positive)\
    \ {\n        $largest_positive = $item;\n      }\n    }\n    else {\n      if\
    \ ($item < $smallest_negative) {\n        $smallest_negative = $item;\n      }\n\
    \      if ($item > $smallest_positive) {\n        $smallest_positive = $item;\n\
    \      }\n    }\n  }\n\n  return array($largest_negative, $largest_positive, $smallest_negative,\
    \ $smallest_positive);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $value) {\n    if ($largest === null || $value < $smallest) {\n   \
    \   $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest =\
    \ null;\n  foreach ($lst as $num) {\n    if ($smallest === null || $num < $smallest)\
    \ {\n      $smallest = $num;\n    }\n    if ($largest === null || $num > $largest)\
    \ {\n      $largest = $num;\n    }\n  }\n  return [$smallest, $largest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $min_int\
    \ = PHP_INT_MAX;\n  $max_int = -PHP_INT_MAX;\n  foreach ($lst as $val) {\n   \
    \ if ($val < $min_int) {\n      $min_int = $val;\n    }\n    if ($val > $max_int)\
    \ {\n      $max_int = $val;\n    }\n  }\n  return array($min_int, $max_int);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($smallest === null\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === null || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest === null\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === null || $value > $smallest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest === null ||\
    \ $item > $largest) {\n        $largest = $item;\n      }\n      if ($smallest\
    \ === null || $item < $smallest) {\n        $smallest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item < $smallest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item > $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $max_negative[] = $item;\n    } else {\n    \
    \  $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  }\n  return $min_positive;\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($largest === null || $value < $largest) {\n      $largest\
    \ = $value;\n    }\n    if ($smallest === null || $value > $smallest) {\n    \
    \  $smallest = $value;\n    }\n  }\n  return [$smallest, $largest];\n}\n", " \
    \ $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  $negative = array();\n  $positive = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $negative[] = $item;\n\
    \    } else {\n      $positive[] = $item;\n    }\n  }\n  if (count($negative)\
    \ == 0 && count($positive) == 0) {\n    return array();\n  }\n  if (count($negative)\
    \ == 0) {\n    return array('None', min($positive));\n  }\n  if (count($positive)\
    \ == 0) {\n    return array('None', max($negative));\n  }\n  return array('None',\
    \ min($positive), max($negative));\n}\n", "  $negs = array_filter($lst, 'is_int');\n\
    \  $pos = array_filter($lst, '!is_int');\n  if (count($negs) == 0 && count($pos)\
    \ == 0) {\n    return array();\n  }\n  if (count($negs) == 0) {\n    return array('None',\
    \ min($pos));\n  }\n  if (count($pos) == 0) {\n    return array('None', max($negs));\n\
    \  }\n  $negs = array_map('intval', $negs);\n  $pos = array_map('intval', $pos);\n\
    \  return array('None', min($negs), max($pos));\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [\n    0 => [\n        'id' => 1,\n   \
    \     'name' => 'John',\n        'age' => 25,\n    ],\n    1 => [\n        'id'\
    \ => 2,\n        'name' => 'Jane',\n        'age' => 30,\n    ],\n    2 => [\n\
    \        'id' => 3,\n        'name' => 'Jack',\n        'age' => 25,\n    ],\n\
    \    3 => [\n        'id' => 4,\n        'name' => 'Jill',\n        'age' => 30,\n\
    \    ],\n    4 => [\n        'id' => 5,\n        'name' => 'Jack',\n        'age'\
    \ => 25,\n    ],\n    5 => [\n        'id' => 6,\n        'name' => 'Jill',\n\
    \        'age' => 30,\n    ],\n];\n\n$result = array();\n$max = 0;\n$min = 0;\n\
    foreach ($arr as $key => $value) {\n    if ($value['age'] > $max) {\n        $max\
    \ = $value['age'];\n    }\n    if ($value['age'] < $min) {\n        $min = $value['age'];\n\
    \    }\n    $result[$key] = $value;\n}\n$result[$max]['age'] = $max;\n$result[$min]['age']\
    \ = $min;\n$result = array_values($result);\nprint_r($result);\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n$arr = [\n    0 => [\n\
    \        'id' => 1,\n        'name' => 'John',\n        'age' => 25,\n    ],\n\
    \    1 => [\n        'id' => 2,\n        'name' => 'Jane',\n        'age' => 30,\n\
    \    ],\n    2 => [\n        'id' => 3,\n        'name' => 'Jack',\n        'age'\
    \ => 25,\n    ],\n    3 => [\n        'id' => 4,\n        'name' => 'J", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($smallest\
    \ === null || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === null || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return [$largest, $smallest];\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $value) {\n    if ($smallest === null || $value\
    \ < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest === null\
    \ || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return [$largest,\
    \ $smallest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item < $smallest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item > $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $negs\
    \ = array_filter($lst, 'is_int');\n  $pos = array_filter($lst, '!is_int');\n \
    \ if (count($negs) > count($pos)) {\n    return $negs;\n  }\n  else {\n    return\
    \ $pos;\n  }\n}\n", "  $max_negative = min($lst);\n  $min_positive = max($lst);\n\
    \  return ($max_negative > $min_positive) ? array('negative' => $max_negative,\
    \ 'positive' => $min_positive) : array('negative' => null, 'positive' => null);\n\
    }", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n  \
    \  if ($largest === null || $item > $largest) {\n      $largest = $item;\n   \
    \ }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $num) {\n    if ($largest\
    \ === null || $num < $smallest) {\n      $largest = $num;\n    }\n    if ($smallest\
    \ === null || $num > $smallest) {\n      $smallest = $num;\n    }\n  }\n  return\
    \ [$largest, $smallest];\n}\n", "  $max_int = null;\n  $min_int = null;\n  foreach\
    \ ($lst as $int) {\n    if ($max_int === null || $int > $max_int) {\n      $max_int\
    \ = $int;\n    }\n    if ($min_int === null || $int < $min_int) {\n      $min_int\
    \ = $int;\n    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $largest_negative_integer\
    \ = null;\n  $largest_positive_integer = null;\n  foreach ($lst as $value) {\n\
    \    if ($value < 0 && $largest_negative_integer === null) {\n      $largest_negative_integer\
    \ = $value;\n    } else if ($value > 0 && $largest_positive_integer === null)\
    \ {\n      $largest_positive_integer = $value;\n    }\n  }\n  return array($largest_negative_integer,\
    \ $largest_positive_integer);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  foreach ($lst as $item) {\n    if ($item < 0) {\n      $largest = $item;\n  \
    \  } else {\n      $smallest = $item;\n    }\n  }\n  return array($largest, $smallest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return [$smallest, $largest];\n}\n", "  $max_negative = min($lst);\n\
    \  $min_positive = max($lst);\n  return ($max_negative > $min_positive) ? array('max_negative'\
    \ => $max_negative, 'min_positive' => $min_positive) : array();\n}\n", "  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $smallest = null;\n      $smallest_index\
    \ = null;\n      foreach ($lst as $i => $item) {\n        if ($item < 0) {\n \
    \         if ($smallest === null) {\n            $smallest = $item;\n        \
    \    $smallest_index = $i;\n          } else if ($item < $smallest) {\n      \
    \      $smallest = $item;\n            $smallest_index = $i;\n          }\n  \
    \      }\n      }\n      return array($smallest, $smallest_index);\n    }\n  }\n\
    \  return array(null, null);\n}\n", "  $largest_negative_integer = null;\n  $smallest_positive_integer\
    \ = null;\n  foreach ($lst as $value) {\n    if ($value < 0 && $largest_negative_integer\
    \ === null) {\n      $largest_negative_integer = $value;\n    } else if ($value\
    \ > 0 && $smallest_positive_integer === null) {\n      $smallest_positive_integer\
    \ = $value;\n    }\n  }\n  return array($largest_negative_integer, $smallest_positive_integer);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($largest === null || $value < $smallest) {\n      $largest = $value;\n\
    \    }\n    if ($smallest === null || $value > $smallest) {\n      $smallest =\
    \ $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($largest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest_negative_integer\
    \ = null;\n  $smallest_positive_integer = null;\n  foreach ($lst as $value) {\n\
    \    if ($value < 0 && $largest_negative_integer === null) {\n      $largest_negative_integer\
    \ = $value;\n    }\n    if ($value >= 0 && $smallest_positive_integer === null)\
    \ {\n      $smallest_positive_integer = $value;\n    }\n  }\n  return array($largest_negative_integer,\
    \ $smallest_positive_integer);\n}\n", "  $largest_integer = null;\n  $smallest_integer\
    \ = null;\n  foreach ($lst as $integer) {\n    if ($integer < 0) {\n      if ($largest_integer\
    \ === null) {\n        $largest_integer = $integer;\n      } else {\n        $largest_integer\
    \ = $largest_integer;\n      }\n    } else if ($integer > 0) {\n      if ($smallest_integer\
    \ === null) {\n        $smallest_integer = $integer;\n      } else {\n       \
    \ $smallest_integer = $smallest_integer;\n      }\n    }\n  }\n  return array($largest_integer,\
    \ $smallest_integer);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($value > $largest) {\n      $largest = $value;\n \
    \   }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative =\
    \ array();\n  $largest_positive = array();\n  $smallest_negative = array();\n\
    \  $smallest_positive = array();\n  foreach ($lst as $item) {\n    if ($item <\
    \ 0) {\n      $largest_negative[] = $item;\n    } else if ($item > 0) {\n    \
    \  $largest_positive[] = $item;\n    } else {\n      $smallest_negative[] = $item;\n\
    \      $smallest_positive[] = $item;\n    }\n  }\n  if (count($largest_negative)\
    \ > count($largest_positive)) {\n    return $largest_negative;\n  } else if (count($largest_negative)\
    \ < count($largest_positive)) {\n    return $largest_positive;\n  } else {\n \
    \   return $smallest_negative;\n  }\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThanks for your answer. Your code works perfectly for me. Thanks again\n\
    <|/ c |>\n<| a |>\n<code>\n<?php\n$arr = [1, 2, 3, -4, -5, -6, -7, -8, -9, -10];\n\
    $arr2 = array_filter($arr, function ($value) {\n    return $value >= 0;\n});\n\
    $arr3 = array_filter($arr2, function ($value) {\n    return $value <= 0;\n});\n\
    $arr4 = array_filter($arr3, function ($value) {\n    return $value !== 0;\n});\n\
    $arr5 = array_filter($arr4, function ($value) {\n    return $value !== 0;\n});\n\
    $arr6 = array_filter($arr5, function ($value) {\n    return $value !== 0;\n});\n\
    $arr7 = array_filter($arr6, function ($value) {\n    return $value !== 0;\n});\n\
    $arr8 = array_filter($arr7, function ($value) {\n    return $value !== 0;\n});\n\
    $arr9 = array_filter($arr8, function ($value) {\n    return $value !== 0;\n});\n\
    $arr10 = array_filter($arr9, function ($value) {\n    return $value !== 0;\n});\n\
    $arr11 = array_filter($arr10, function ($value) {\n    return $value !== 0;\n\
    });\n$arr12 = array_filter($arr11, function ($value) {\n    return $value !==\
    \ 0;\n});\n$arr13 = array_filter($arr12, function ($value) {\n    return $value\
    \ !== 0;\n});\n$arr14 = array_filter($arr13, function ($value) {\n    return $value\
    \ !== 0;\n});\n$arr15 = array_filter($arr14, function ($value) {\n    return $value\
    \ !== 0;\n});\n$arr16 = array_filter($arr15, function ($value) {\n    return $value\
    \ !== ", "  $max_negative = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n  $max_positive\
    \ = PHP_INT_MAX;\n  foreach ($lst as $value) {\n    if ($value < $min_positive)\
    \ {\n      $min_positive = $value;\n    }\n    if ($value > $max_positive) {\n\
    \      $max_positive = $value;\n    }\n    if ($value < $max_negative) {\n   \
    \   $max_negative = $value;\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($largest === null || $value < $largest) {\n      $largest = $value;\n\
    \    }\n    if ($smallest === null || $value > $smallest) {\n      $smallest =\
    \ $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", " \
    \ $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $largest = $item;\n\
    \    } else if ($item > 0) {\n      $smallest = $item;\n    }\n  }\n  return array($largest,\
    \ $smallest);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($largest < $item)\
    \ {\n        $largest = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($smallest > $item) {\n        $smallest = $item;\n      }\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max_negative = -1;\n  $min_positive =\
    \ PHP_INT_MAX;\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      if\
    \ ($max_negative < $value) {\n        $max_negative = $value;\n      }\n    }\
    \ else {\n      if ($min_positive > $value) {\n        $min_positive = $value;\n\
    \      }\n    }\n  }\n  return array($max_negative, $min_positive);\n}\n", " \
    \ $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $largest = $item;\n    }\n    if ($item > 0)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst\
    \ as $value) {\n    if ($value < $smallest) {\n      $smallest = $value;\n   \
    \ }\n    if ($value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($smallest ===\
    \ null || $item < $smallest) {\n        $smallest = $item;\n      }\n      if\
    \ ($largest === null || $item > $largest) {\n        $largest = $item;\n     \
    \ }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $max_int = PHP_INT_MAX;\n\
    \  $min_int = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $min_int)\
    \ {\n      $min_int = $value;\n    }\n    if ($value > $max_int) {\n      $max_int\
    \ = $value;\n    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n \
    \ foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($largest < $item)\
    \ {\n        $largest = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($smallest > $item) {\n        $smallest = $item;\n      }\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $num) {\n    if ($largest === null || $num < $smallest) {\n\
    \      $largest = $num;\n    }\n    if ($smallest === null || $num > $smallest)\
    \ {\n      $smallest = $num;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($largest < $item)\
    \ {\n        $largest = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($smallest > $item) {\n        $smallest = $item;\n      }\n    }\n  }\n  return\
    \ array($largest, $smallest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($smallest\
    \ === null || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === null || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $min_int = PHP_INT_MAX;\n\
    \  $max_int = PHP_INT_MIN;\n  foreach ($lst as $val) {\n    if ($val < $min_int)\
    \ {\n      $min_int = $val;\n    }\n    if ($val > $max_int) {\n      $max_int\
    \ = $val;\n    }\n  }\n  return array($min_int, $max_int);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item < $smallest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item > $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $value) {\n    if ($smallest === null || $value < $smallest) {\n  \
    \    $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $max_negative = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative\
    \ > $min_positive) ? array('max' => $max_negative, 'min' => $min_positive) : array('max'\
    \ => null, 'min' => null);\n}\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive\
    \ = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $min_positive)\
    \ {\n      $min_positive = $value;\n    }\n    if ($value > $max_negative) {\n\
    \      $max_negative = $value;\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive = PHP_INT_MIN;\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      if ($item > $max_negative) {\n\
    \        $max_negative = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($item < $min_positive) {\n        $min_positive = $item;\n      }\n    }\n\
    \  }\n  return array($max_negative, $min_positive);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return [$smallest,\
    \ $largest];\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $smallest =\
    \ PHP_INT_MAX;\n  $largest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if\
    \ ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n\
    \    if ($largest === null || $value < $largest) {\n      $largest = $value;\n\
    \    }\n    if ($smallest === null || $value > $smallest) {\n      $smallest =\
    \ $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n \
    \   if ($value < $smallest) {\n      $smallest = $value;\n    }\n    if ($value\
    \ > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($largest, $smallest);\n}\n", "  $largest_negative\
    \ = null;\n  $smallest_positive = null;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($largest_negative === null) {\n        $largest_negative =\
    \ $item;\n      } else {\n        $largest_negative = min($largest_negative, $item);\n\
    \      }\n    }\n    if ($item > 0) {\n      if ($smallest_positive === null)\
    \ {\n        $smallest_positive = $item;\n      } else {\n        $smallest_positive\
    \ = max($smallest_positive, $item);\n      }\n    }\n  }\n  return array($largest_negative,\
    \ $smallest_positive);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($largest < $item)\
    \ {\n        $largest = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($smallest > $item) {\n        $smallest = $item;\n      }\n    } else {\n \
    \     return null;\n    }\n  }\n  return [$largest, $smallest];\n}\n", "  $largest_negative\
    \ = array();\n  $largest_positive = array();\n  foreach ($lst as $item) {\n  \
    \  if ($item < 0) {\n      $largest_negative[] = $item;\n    } else {\n      $largest_positive[]\
    \ = $item;\n    }\n  }\n  if (count($largest_negative) > count($largest_positive))\
    \ {\n    return $largest_negative;\n  } else {\n    return $largest_positive;\n\
    \  }\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest =\
    \ $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = PHP_INT_MAX;\n\
    \  $smallest = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ [$smallest, $largest];\n}\n", "  $max_negative = PHP_INT_MAX;\n  $min_positive\
    \ = PHP_INT_MIN;\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      if\
    \ ($max_negative < $value) {\n        $max_negative = $value;\n      }\n    }\
    \ else if ($value > 0) {\n      if ($min_positive > $value) {\n        $min_positive\
    \ = $value;\n      }\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return [$smallest, $largest];\n}\n", "  $largest = array();\n \
    \ $smallest = array();\n  foreach ($lst as $value) {\n    if ($value < 0) {\n\
    \      $largest[] = $value;\n    } else {\n      $smallest[] = $value;\n    }\n\
    \  }\n  if (count($largest) > count($smallest)) {\n    return $largest;\n  } else\
    \ {\n    return $smallest;\n  }\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return [$smallest, $largest];\n}\n",
  "  $max_negative = min($lst);\n  $min_positive = max($lst);\n  if ($max_negative\
    \ == $min_positive) {\n    return ($max_negative, null);\n  }\n  return ($max_negative,\
    \ $min_positive);\n}\n", "  $max_int = PHP_INT_MAX;\n  $min_int = PHP_INT_MIN;\n\
    \  $min_int2 = PHP_INT_MIN;\n  $max_int2 = PHP_INT_MAX;\n  foreach ($lst as $item)\
    \ {\n    if ($item < $min_int) {\n      $min_int = $item;\n    } else if ($item\
    \ > $max_int) {\n      $max_int = $item;\n    }\n    if ($item < $min_int2) {\n\
    \      $min_int2 = $item;\n    } else if ($item > $max_int2) {\n      $max_int2\
    \ = $item;\n    }\n  }\n  return array($max_int, $min_int2);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($value <\
    \ 0 && $largest === null) {\n      $largest = $value;\n    } else if ($value >\
    \ 0 && $smallest === null) {\n      $smallest = $value;\n    } else if ($largest\
    \ < $value) {\n      $largest = $value;\n    } else if ($smallest > $value) {\n\
    \      $smallest = $value;\n    }\n  }\n  return array($largest, $smallest);\n\
    }\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n  foreach ($lst\
    \ as $value) {\n    if ($value < $smallest) {\n      $smallest = $value;\n   \
    \ }\n    if ($value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest ===\
    \ null || $item > $largest) {\n        $largest = $item;\n      }\n      if ($smallest\
    \ === null || $item < $smallest) {\n        $smallest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative = array();\n\
    \  $largest_positive = array();\n  foreach ($lst as $value) {\n    if ($value\
    \ < 0)\n      $largest_negative[] = $value;\n    else\n      $largest_positive[]\
    \ = $value;\n  }\n  if (count($largest_negative) > count($largest_positive)) {\n\
    \    return array('negative' => $largest_negative, 'positive' => $largest_positive);\n\
    \  }\n  elseif (count($largest_negative) < count($largest_positive)) {\n    return\
    \ array('positive' => $largest_positive, 'negative' => $largest_negative);\n \
    \ }\n  else {\n    return array('positive' => $largest_positive, 'negative' =>\
    \ $largest_negative);\n  }\n}\n", "  $largest = null;\n  $smallest = null;\n \
    \ foreach ($lst as $item) {\n    if ($largest === null || $item < $smallest) {\n\
    \      $largest = $item;\n    } else if ($smallest === null || $item > $largest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return [$largest, $smallest];\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $smallest) {\n      $smallest = $value;\n    }\n    if\
    \ ($largest === null || $value > $largest) {\n      $largest = $value;\n    }\n\
    \  }\n  return [$largest, $smallest];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"
